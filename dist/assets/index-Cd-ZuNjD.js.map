{"version":3,"file":"index-Cd-ZuNjD.js","sources":["../../src/state/store.js","../../src/ui/components/progress.js","../../src/localization/messages.js","../../src/localization/i18n.js","../../src/ui/screens/triage1.js","../../src/ui/screens/triage2.js","../../src/config.js","../../src/ui/screens/coma.js","../../src/ui/screens/limited.js","../../src/ui/screens/full.js","../../src/ui/components/alerts.js","../../src/logic/shap.js","../../src/ui/components/drivers.js","../../src/data/stroke-centers.js","../../src/ui/components/stroke-center-map.js","../../src/logic/formatters.js","../../src/ui/screens/results.js","../../src/logic/validate.js","../../src/api/client.js","../../src/logic/handlers.js","../../src/ui/a11y.js","../../src/ui/components/fastEdModal.js","../../src/ui/render.js","../../src/main.js"],"sourcesContent":["// State management for the Stroke Triage Assistant\n\nclass Store {\n  constructor() {\n    this.state = {\n      currentScreen: 'triage1',\n      results: null,\n      sessionId: null,\n      startTime: null,\n      formData: {},\n      validationErrors: {},\n      screenHistory: []\n    };\n    \n    this.listeners = new Set();\n    this.initialize();\n  }\n  \n  initialize() {\n    this.state.sessionId = this.generateSessionId();\n    this.state.startTime = Date.now();\n    console.log('Store initialized with session:', this.state.sessionId);\n  }\n  \n  generateSessionId() {\n    return 'session_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n  }\n  \n  // Subscribe to state changes\n  subscribe(listener) {\n    this.listeners.add(listener);\n    return () => this.listeners.delete(listener);\n  }\n  \n  // Notify all listeners of state changes\n  notify() {\n    this.listeners.forEach(listener => listener(this.state));\n  }\n  \n  // Get current state (read-only)\n  getState() {\n    return { ...this.state };\n  }\n  \n  // Update state and notify listeners\n  setState(updates) {\n    this.state = { ...this.state, ...updates };\n    this.notify();\n  }\n  \n  // Navigate to a new screen\n  navigate(screen) {\n    console.log(`Navigating from ${this.state.currentScreen} to ${screen}`);\n    const history = [...this.state.screenHistory];\n    \n    // Add current screen to history if not already there\n    if (this.state.currentScreen !== screen && !history.includes(this.state.currentScreen)) {\n      history.push(this.state.currentScreen);\n    }\n    \n    this.setState({ \n      currentScreen: screen, \n      screenHistory: history \n    });\n  }\n  \n  // Navigate back to previous screen\n  goBack() {\n    const history = [...this.state.screenHistory];\n    console.log('goBack() - current history:', history);\n    console.log('goBack() - current screen:', this.state.currentScreen);\n    if (history.length > 0) {\n      const previousScreen = history.pop();\n      console.log('goBack() - navigating to:', previousScreen);\n      this.setState({ \n        currentScreen: previousScreen, \n        screenHistory: history \n      });\n      return true;\n    }\n    console.log('goBack() - no history available');\n    return false;\n  }\n  \n  // Navigate to home screen\n  goHome() {\n    this.setState({ \n      currentScreen: 'triage1',\n      screenHistory: []\n    });\n  }\n  \n  // Store form data for a specific module\n  setFormData(module, data) {\n    const formData = { ...this.state.formData };\n    formData[module] = { ...data };\n    this.setState({ formData });\n  }\n  \n  // Get form data for a specific module\n  getFormData(module) {\n    return this.state.formData[module] || {};\n  }\n  \n  // Store validation errors\n  setValidationErrors(errors) {\n    this.setState({ validationErrors: errors });\n  }\n  \n  // Clear validation errors\n  clearValidationErrors() {\n    this.setState({ validationErrors: {} });\n  }\n  \n  // Store prediction results\n  setResults(results) {\n    this.setState({ results });\n  }\n  \n  // Check if there's unsaved data\n  hasUnsavedData() {\n    return Object.keys(this.state.formData).length > 0 && !this.state.results;\n  }\n  \n  // Reset to initial state\n  reset() {\n    const newState = {\n      currentScreen: 'triage1',\n      results: null,\n      sessionId: this.generateSessionId(),\n      startTime: Date.now(),\n      formData: {},\n      validationErrors: {},\n      screenHistory: []\n    };\n    this.setState(newState);\n    console.log('Store reset with new session:', newState.sessionId);\n  }\n  \n  // Log events for audit trail\n  logEvent(eventName, data = {}) {\n    const event = {\n      timestamp: Date.now(),\n      session: this.state.sessionId,\n      event: eventName,\n      data: data\n    };\n    console.log('Event:', event);\n    // In production, send to analytics service\n    // this.sendToAnalytics(event);\n  }\n  \n  // Calculate session duration\n  getSessionDuration() {\n    return Date.now() - this.state.startTime;\n  }\n}\n\n// Create and export a singleton instance\nexport const store = new Store();\n\n// Export the Store class for testing purposes\nexport { Store };","export function renderProgressIndicator(currentStep) {\n  const steps = [\n    { id: 1, label: 'Triage' },\n    { id: 2, label: 'Assessment' },\n    { id: 3, label: 'Results' }\n  ];\n  \n  let html = `<div class=\"progress-indicator\">`;\n  steps.forEach((step, index) => {\n    const isActive = step.id === currentStep;\n    const isCompleted = step.id < currentStep;\n    html += `\n      <div class=\"progress-step ${isActive ? 'active' : ''} ${isCompleted ? 'completed' : ''}\">\n        ${isCompleted ? '' : step.id}\n      </div>\n    `;\n    if (index < steps.length - 1) {\n      html += `<div class=\"progress-line ${isCompleted ? 'completed' : ''}\"></div>`;\n    }\n  });\n  html += `</div>`;\n  return html;\n}","// Localization messages for the Stroke Triage Assistant\n\nexport const messages = {\n  en: {\n    // Header\n    appTitle: 'Stroke Triage Assistant',\n    emergencyBadge: 'Emergency Tool',\n    helpButton: 'Help and Instructions',\n    darkModeButton: 'Toggle dark mode',\n    languageToggle: 'Language',\n\n    // Progress\n    step1: 'Initial Assessment',\n    step2: 'Data Collection', \n    step3: 'Results',\n    \n    // Module titles\n    comaModuleTitle: 'Coma Module',\n    limitedDataModuleTitle: 'Limited Data Module',\n    fullStrokeModuleTitle: 'Full Stroke Module',\n\n    // Triage 1\n    triage1Title: 'Patient Assessment',\n    triage1Question: 'Is the patient comatose?',\n    triage1Help: 'Glasgow Coma Scale < 8',\n    triage1Yes: 'YES - Comatose',\n    triage1No: 'NO - Conscious',\n\n    // Triage 2\n    triage2Title: 'Examination Capability',\n    triage2Question: 'Can the patient be reliably examined?',\n    triage2Help: 'Patient is not aphasic, confused, or uncooperative',\n    triage2Yes: 'YES - Full Exam Possible',\n    triage2No: 'NO - Limited Exam Only',\n\n    // Forms\n    ageLabel: 'Age (years)',\n    ageHelp: 'Patient age in years',\n    systolicLabel: 'Systolic BP (mmHg)',\n    systolicHelp: 'Systolic blood pressure',\n    diastolicLabel: 'Diastolic BP (mmHg)', \n    diastolicHelp: 'Diastolic blood pressure',\n    gfapLabel: 'GFAP Value (pg/mL)',\n    gfapHelp: 'GFAP biomarker level',\n    fastEdLabel: 'FAST-ED Score',\n    fastEdHelp: 'FAST-ED assessment score (0-9)',\n\n    // Checkboxes\n    headacheLabel: 'Headache',\n    vigilanzLabel: 'Reduced consciousness',\n    armPareseLabel: 'Arm weakness',\n    beinPareseLabel: 'Leg weakness', \n    eyeDeviationLabel: 'Eye deviation',\n    atrialFibLabel: 'Atrial fibrillation',\n    anticoagLabel: 'Anticoagulated (NOAK)',\n    antiplateletsLabel: 'Antiplatelets',\n\n    // Buttons\n    analyzeButton: 'Analyze',\n    analyzing: 'Analyzing...',\n    printResults: 'Print Results',\n    newAssessment: 'Start New Assessment',\n    startOver: 'Start Over',\n    goBack: 'Go Back',\n    goHome: 'Go Home',\n    \n    // Form sections\n    basicInformation: 'Basic Information',\n    biomarkersScores: 'Biomarkers & Scores',\n    clinicalSymptoms: 'Clinical Symptoms',\n    medicalHistory: 'Medical History',\n    \n    // Form labels with units\n    ageYearsLabel: 'Age (years)',\n    systolicBpLabel: 'Systolic BP (mmHg)',\n    diastolicBpLabel: 'Diastolic BP (mmHg)',\n    gfapValueLabel: 'GFAP Value (pg/mL)',\n    fastEdScoreLabel: 'FAST-ED Score',\n    \n    // Help text\n    ageYearsHelp: \"Patient's age in years\",\n    systolicBpHelp: 'Normal: 90-140 mmHg',\n    diastolicBpHelp: 'Normal: 60-90 mmHg',\n    gfapTooltip: 'Brain injury biomarker',\n    gfapTooltipLong: 'Glial Fibrillary Acidic Protein - Brain injury biomarker',\n    gfapRange: 'Range: {min} - {max} pg/mL',\n    fastEdTooltip: '0-9 scale for LVO screening',\n    \n    // Module buttons\n    analyzeIchRisk: 'Analyze ICH Risk',\n    analyzeStrokeRisk: 'Analyze Stroke Risk',\n    \n    // Alert messages\n    criticalPatient: 'Critical Patient',\n    comaAlert: 'Patient is comatose (GCS < 8). Rapid assessment required.',\n    vigilanceReduction: 'Vigilance Reduction (Decreased alertness)',\n    \n    // Additional symptom labels\n    armParesis: 'Arm Paresis',\n    legParesis: 'Leg Paresis',\n    eyeDeviation: 'Eye Deviation',\n    atrialFibrillation: 'Atrial Fibrillation',\n    onNoacDoac: 'On NOAC/DOAC',\n    onAntiplatelets: 'On Antiplatelets',\n\n    // Results\n    resultsTitle: 'Assessment Results',\n    ichProbability: 'ICH Probability',\n    lvoProbability: 'LVO Probability',\n    riskLevel: 'Risk Level',\n    lowRisk: 'Low Risk',\n    moderateRisk: 'Moderate Risk', \n    highRisk: 'High Risk',\n    criticalRisk: 'Critical Risk',\n\n    // Risk levels\n    riskLow: 'Low',\n    riskModerate: 'Moderate',\n    riskHigh: 'High', \n    riskCritical: 'Critical',\n\n    // Drivers\n    driversTitle: 'Model Drivers',\n    driversSubtitle: 'Factors contributing to the prediction',\n    ichDrivers: 'ICH Risk Factors',\n    lvoDrivers: 'LVO Risk Factors',\n\n    // Critical Alert\n    criticalAlertTitle: 'CRITICAL RISK DETECTED',\n    criticalAlertMessage: 'High probability of intracerebral hemorrhage detected. Immediate medical attention required.',\n\n    // Help Modal\n    helpTitle: 'Quick Reference Guide',\n    gcsTitle: 'Glasgow Coma Scale (GCS)',\n    gcsLow: 'GCS < 8: Comatose patient - use Coma Module',\n    gcsMod: 'GCS 8-12: Moderate impairment',\n    gcsHigh: 'GCS 13-15: Mild impairment',\n    fastEdTitle: 'FAST-ED Score Components',\n    fastEdFacial: 'Facial Palsy: 0-1 points',\n    fastEdArm: 'Arm Weakness: 0-2 points',\n    fastEdSpeech: 'Speech Changes: 0-2 points',\n    fastEdTime: 'Time: Critical factor',\n    fastEdEye: 'Eye Deviation: 0-2 points',\n    fastEdDenial: 'Denial/Neglect: 0-2 points',\n    criticalValuesTitle: 'Critical Values',\n    criticalBp: 'Systolic BP > 180: Increased ICH risk',\n    criticalGfap: 'GFAP > 500 pg/mL: Significant marker',\n    criticalFastEd: 'FAST-ED ≥ 4: Consider LVO',\n\n    // FAST-ED Calculator Modal\n    fastEdCalculatorTitle: 'FAST-ED Score Calculator',\n    fastEdCalculatorSubtitle: 'Click to calculate FAST-ED score components',\n    facialPalsyTitle: 'Facial Palsy',\n    facialPalsyNormal: 'Normal (0)',\n    facialPalsyMild: 'Mild drooping (1)',\n    armWeaknessTitle: 'Arm Weakness',\n    armWeaknessNormal: 'Normal (0)',\n    armWeaknessMild: 'Mild drift (1)',\n    armWeaknessSevere: 'Falls immediately (2)',\n    speechChangesTitle: 'Speech Changes', \n    speechChangesNormal: 'Normal (0)',\n    speechChangesMild: 'Slurred speech (1)',\n    speechChangesSevere: 'Severe aphasia (2)',\n    eyeDeviationTitle: 'Eye Deviation',\n    eyeDeviationNormal: 'Normal (0)',\n    eyeDeviationPartial: 'Partial gaze palsy (1)',\n    eyeDeviationForced: 'Forced deviation (2)',\n    denialNeglectTitle: 'Denial/Neglect',\n    denialNeglectNormal: 'Normal (0)',\n    denialNeglectPartial: 'Partial neglect (1)',\n    denialNeglectComplete: 'Complete neglect (2)',\n    totalScoreTitle: 'Total FAST-ED Score',\n    riskLevel: 'Risk Level',\n    riskLevelLow: 'LOW (Score <4)',\n    riskLevelHigh: 'HIGH (Score ≥4 - Consider LVO)',\n    applyScore: 'Apply Score',\n    cancel: 'Cancel',\n    \n    // Results Screen Enhancements\n    modelDrivers: 'Model Drivers',\n    modelDriversSubtitle: 'Factors contributing to the prediction',\n    contributingFactors: 'Contributing factors',\n    factorsShown: 'shown',\n    positiveFactors: 'Positive factors',\n    negativeFactors: 'Negative factors',\n    clinicalInformation: 'Clinical Information',\n    clinicalRecommendations: 'Clinical Recommendations',\n    clinicalRec1: 'Consider immediate imaging if ICH risk is high',\n    clinicalRec2: 'Activate stroke team for LVO scores ≥ 50%',\n    clinicalRec3: 'Monitor blood pressure closely',\n    clinicalRec4: 'Document all findings thoroughly',\n    noDriverData: 'No driver data available',\n    driverAnalysisUnavailable: 'Driver analysis unavailable',\n    driverInfoNotAvailable: 'Driver information not available from this prediction model',\n    driverAnalysisNotAvailable: 'Driver analysis not available for this prediction',\n    lvoNotPossible: 'LVO assessment not possible with limited data',\n    fullExamRequired: 'Full neurological examination required for LVO screening',\n    limitedAssessment: 'Limited Assessment',\n\n    // Disclaimer\n    disclaimer: 'Clinical Disclaimer',\n    disclaimerText: 'This tool is for clinical decision support only. Always use clinical judgment and follow local protocols. Not a replacement for physician assessment.',\n    importantNote: 'Important',\n    importantText: 'These results are for clinical decision support only. Always use clinical judgment and follow institutional protocols.',\n    \n    // Input Summary\n    inputSummaryTitle: 'Input Summary',\n    inputSummarySubtitle: 'Values used for this analysis',\n\n    // Footer\n    privacyLink: 'Privacy Policy',\n    disclaimerLink: 'Medical Disclaimer', \n    versionLink: 'Version 2.0.1',\n\n    // Privacy and disclaimers\n    privacyPolicy: 'Privacy Policy: This tool processes data locally. No patient data is stored or transmitted.',\n    medicalDisclaimer: 'Medical Disclaimer: This tool is for clinical decision support only. Always use clinical judgment and follow local protocols.',\n\n    // Error messages\n    networkError: 'Network error - please check your connection and try again',\n    requestTimeout: 'Request timeout - please try again',\n    apiError: 'Failed to get results',\n    validationError: 'Please check your input values',\n\n    // Session\n    sessionTimeout: 'Your session has been idle for 30 minutes. Would you like to continue?',\n    unsavedData: 'You have unsaved data. Are you sure you want to leave?',\n\n    // Stroke Centers\n    nearestCentersTitle: 'Nearest Stroke Centers',\n    useCurrentLocation: 'Use Current Location',\n    enterLocationPlaceholder: 'Enter city or address...',\n    enterManually: 'Enter Location Manually',\n    search: 'Search',\n    yourLocation: 'Your Location',\n    recommendedCenters: 'Recommended Centers',\n    alternativeCenters: 'Alternative Centers',\n    noCentersFound: 'No stroke centers found in this area',\n    gettingLocation: 'Getting your location',\n    searchingLocation: 'Searching location',\n    locationError: 'Unable to get your location',\n    locationPermissionDenied: 'Location access denied. Please allow location access and try again.',\n    locationUnavailable: 'Location information is unavailable',\n    locationTimeout: 'Location request timed out',\n    geolocationNotSupported: 'Geolocation is not supported by this browser',\n    geocodingNotImplemented: 'Location search not available. Please use GPS or enter coordinates manually.',\n    tryManualEntry: 'Try entering your location manually or use GPS.',\n    distanceNote: 'Distances are calculated as straight-line distances. Actual travel times may vary.',\n    travelTimeNote: 'Travel times calculated for emergency vehicles with sirens and priority routing.',\n    calculatingTravelTimes: 'Calculating travel times',\n    minutes: 'min',\n    poweredByOrs: 'Travel times powered by OpenRoute Service',\n    \n    // Center Types and Services\n    comprehensiveCenter: 'Comprehensive Stroke Center',\n    primaryCenter: 'Primary Stroke Center',\n    telemetryCenter: 'Telemedicine Center',\n    thrombectomy: 'Thrombectomy',\n    neurosurgery: 'Neurosurgery',\n    icu: 'Intensive Care',\n    telemedicine: 'Telemedicine',\n    stroke_unit: 'Stroke Unit',\n    \n    // Actions\n    call: 'Call',\n    directions: 'Directions',\n    emergency: 'Emergency',\n    certified: 'Certified'\n  },\n\n  de: {\n    // Header\n    appTitle: 'Schlaganfall-Triage-Assistent',\n    emergencyBadge: 'Notfall-Tool',\n    helpButton: 'Hilfe und Anweisungen',\n    darkModeButton: 'Dunklen Modus umschalten',\n    languageToggle: 'Sprache',\n\n    // Progress\n    step1: 'Erstbeurteilung',\n    step2: 'Datenerhebung',\n    step3: 'Ergebnisse',\n    \n    // Module titles\n    comaModuleTitle: 'Koma-Modul',\n    limitedDataModuleTitle: 'Begrenzte Daten Modul',\n    fullStrokeModuleTitle: 'Vollständiges Schlaganfall-Modul',\n\n    // Triage 1\n    triage1Title: 'Patientenbeurteilung',\n    triage1Question: 'Ist der Patient komatös?',\n    triage1Help: 'Glasgow Coma Scale < 8',\n    triage1Yes: 'JA - Komatös',\n    triage1No: 'NEIN - Bei Bewusstsein',\n\n    // Triage 2\n    triage2Title: 'Untersuchungsfähigkeit',\n    triage2Question: 'Kann der Patient zuverlässig untersucht werden?',\n    triage2Help: 'Patient ist nicht aphasisch, verwirrt oder unkooperativ',\n    triage2Yes: 'JA - Vollständige Untersuchung möglich',\n    triage2No: 'NEIN - Nur begrenzte Untersuchung',\n\n    // Forms\n    ageLabel: 'Alter (Jahre)',\n    ageHelp: 'Patientenalter in Jahren',\n    systolicLabel: 'Systolischer RR (mmHg)',\n    systolicHelp: 'Systolischer Blutdruck',\n    diastolicLabel: 'Diastolischer RR (mmHg)',\n    diastolicHelp: 'Diastolischer Blutdruck',\n    gfapLabel: 'GFAP-Wert (pg/mL)',\n    gfapHelp: 'GFAP-Biomarker-Wert',\n    fastEdLabel: 'FAST-ED-Score',\n    fastEdHelp: 'FAST-ED-Bewertungsscore (0-9)',\n\n    // Checkboxes\n    headacheLabel: 'Kopfschmerzen',\n    vigilanzLabel: 'Bewusstseinstrübung',\n    armPareseLabel: 'Armschwäche',\n    beinPareseLabel: 'Beinschwäche',\n    eyeDeviationLabel: 'Blickdeviation',\n    atrialFibLabel: 'Vorhofflimmern',\n    anticoagLabel: 'Antikoaguliert (NOAK)',\n    antiplateletsLabel: 'Thrombozytenaggregationshemmer',\n\n    // Buttons\n    analyzeButton: 'Analysieren',\n    analyzing: 'Analysiere...',\n    printResults: 'Ergebnisse drucken',\n    newAssessment: 'Neue Bewertung starten',\n    startOver: 'Von vorn beginnen',\n    goBack: 'Zurück',\n    goHome: 'Zur Startseite',\n    \n    // Form sections\n    basicInformation: 'Grundinformationen',\n    biomarkersScores: 'Biomarker & Scores',\n    clinicalSymptoms: 'Klinische Symptome',\n    medicalHistory: 'Anamnese',\n    \n    // Form labels with units\n    ageYearsLabel: 'Alter (Jahre)',\n    systolicBpLabel: 'Systolischer RR (mmHg)',\n    diastolicBpLabel: 'Diastolischer RR (mmHg)',\n    gfapValueLabel: 'GFAP-Wert (pg/mL)',\n    fastEdScoreLabel: 'FAST-ED-Score',\n    \n    // Help text\n    ageYearsHelp: 'Patientenalter in Jahren',\n    systolicBpHelp: 'Normal: 90-140 mmHg',\n    diastolicBpHelp: 'Normal: 60-90 mmHg',\n    gfapTooltip: 'Hirnverletzungs-Biomarker',\n    gfapTooltipLong: 'Glial Fibrillary Acidic Protein - Hirnverletzungs-Biomarker',\n    gfapRange: 'Bereich: {min} - {max} pg/mL',\n    fastEdTooltip: '0-9 Skala für LVO-Screening',\n    \n    // Module buttons\n    analyzeIchRisk: 'ICB-Risiko analysieren',\n    analyzeStrokeRisk: 'Schlaganfall-Risiko analysieren',\n    \n    // Alert messages\n    criticalPatient: 'Kritischer Patient',\n    comaAlert: 'Patient ist komatös (GCS < 8). Schnelle Beurteilung erforderlich.',\n    vigilanceReduction: 'Vigilanzminderung (Verminderte Wachheit)',\n    \n    // Additional symptom labels\n    armParesis: 'Armparese',\n    legParesis: 'Beinparese',\n    eyeDeviation: 'Blickdeviation',\n    atrialFibrillation: 'Vorhofflimmern',\n    onNoacDoac: 'NOAK/DOAK-Therapie',\n    onAntiplatelets: 'Thrombozytenaggregationshemmer',\n\n    // Results\n    resultsTitle: 'Bewertungsergebnisse',\n    ichProbability: 'ICB-Wahrscheinlichkeit',\n    lvoProbability: 'LVO-Wahrscheinlichkeit',\n    riskLevel: 'Risikostufe',\n\n    // Risk levels\n    riskLow: 'Niedrig',\n    riskModerate: 'Mäßig',\n    riskHigh: 'Hoch',\n    riskCritical: 'Kritisch',\n\n    // Drivers\n    driversTitle: 'Modelltreiber',\n    driversSubtitle: 'Faktoren, die zur Vorhersage beitragen',\n    ichDrivers: 'ICB-Risikofaktoren',\n    lvoDrivers: 'LVO-Risikofaktoren',\n\n    // Critical Alert\n    criticalAlertTitle: 'KRITISCHES RISIKO ERKANNT',\n    criticalAlertMessage: 'Hohe Wahrscheinlichkeit einer intrazerebralen Blutung erkannt. Sofortige medizinische Behandlung erforderlich.',\n\n    // Help Modal\n    helpTitle: 'Kurzreferenzleitfaden',\n    gcsTitle: 'Glasgow Coma Scale (GCS)',\n    gcsLow: 'GCS < 8: Komatöser Patient - Koma-Modul verwenden',\n    gcsMod: 'GCS 8-12: Mäßige Beeinträchtigung',\n    gcsHigh: 'GCS 13-15: Leichte Beeinträchtigung',\n    fastEdTitle: 'FAST-ED-Score-Komponenten',\n    fastEdFacial: 'Faziale Parese: 0-1 Punkte',\n    fastEdArm: 'Armschwäche: 0-2 Punkte',\n    fastEdSpeech: 'Sprachveränderungen: 0-2 Punkte',\n    fastEdTime: 'Zeit: Kritischer Faktor',\n    fastEdEye: 'Blickdeviation: 0-2 Punkte',\n    fastEdDenial: 'Verneinung/Neglect: 0-2 Punkte',\n    criticalValuesTitle: 'Kritische Werte',\n    criticalBp: 'Systolischer RR > 180: Erhöhtes ICB-Risiko',\n    criticalGfap: 'GFAP > 500 pg/mL: Signifikanter Marker',\n    criticalFastEd: 'FAST-ED ≥ 4: LVO in Betracht ziehen',\n\n    // FAST-ED Calculator Modal\n    fastEdCalculatorTitle: 'FAST-ED-Score-Rechner',\n    fastEdCalculatorSubtitle: 'Klicken Sie, um FAST-ED-Score-Komponenten zu berechnen',\n    facialPalsyTitle: 'Faziale Parese',\n    facialPalsyNormal: 'Normal (0)',\n    facialPalsyMild: 'Leichte Mundwinkelasymmetrie (1)',\n    armWeaknessTitle: 'Armschwäche',\n    armWeaknessNormal: 'Normal (0)',\n    armWeaknessMild: 'Leichter Armabfall (1)',\n    armWeaknessSevere: 'Arm fällt sofort ab (2)',\n    speechChangesTitle: 'Sprachveränderungen',\n    speechChangesNormal: 'Normal (0)',\n    speechChangesMild: 'Verwaschene Sprache (1)',\n    speechChangesSevere: 'Schwere Aphasie (2)',\n    eyeDeviationTitle: 'Blickdeviation',\n    eyeDeviationNormal: 'Normal (0)',\n    eyeDeviationPartial: 'Partielle Blickparese (1)',\n    eyeDeviationForced: 'Forcierte Blickdeviation (2)',\n    denialNeglectTitle: 'Verneinung/Neglect',\n    denialNeglectNormal: 'Normal (0)',\n    denialNeglectPartial: 'Partieller Neglect (1)',\n    denialNeglectComplete: 'Kompletter Neglect (2)',\n    totalScoreTitle: 'Gesamt-FAST-ED-Score',\n    riskLevel: 'Risikostufe',\n    riskLevelLow: 'NIEDRIG (Score <4)',\n    riskLevelHigh: 'HOCH (Score ≥4 - LVO erwägen)',\n    applyScore: 'Score Anwenden',\n    cancel: 'Abbrechen',\n    \n    // Results Screen Enhancements\n    modelDrivers: 'Modelltreiber',\n    modelDriversSubtitle: 'Faktoren, die zur Vorhersage beitragen',\n    contributingFactors: 'Beitragende Faktoren',\n    factorsShown: 'angezeigt',\n    positiveFactors: 'Positive Faktoren',\n    negativeFactors: 'Negative Faktoren',\n    clinicalInformation: 'Klinische Informationen',\n    clinicalRecommendations: 'Klinische Empfehlungen',\n    clinicalRec1: 'Sofortige Bildgebung erwägen bei hohem ICB-Risiko',\n    clinicalRec2: 'Stroke-Team aktivieren bei LVO-Score ≥ 50%',\n    clinicalRec3: 'Blutdruck engmaschig überwachen',\n    clinicalRec4: 'Alle Befunde gründlich dokumentieren',\n    noDriverData: 'Keine Treiberdaten verfügbar',\n    driverAnalysisUnavailable: 'Treiberanalyse nicht verfügbar',\n    driverInfoNotAvailable: 'Treiberinformationen von diesem Vorhersagemodell nicht verfügbar',\n    driverAnalysisNotAvailable: 'Treiberanalyse für diese Vorhersage nicht verfügbar',\n    lvoNotPossible: 'LVO-Bewertung mit begrenzten Daten nicht möglich',\n    fullExamRequired: 'Vollständige neurologische Untersuchung für LVO-Screening erforderlich',\n    limitedAssessment: 'Begrenzte Bewertung',\n\n    // Disclaimer\n    disclaimer: 'Klinischer Haftungsausschluss',\n    disclaimerText: 'Dieses Tool dient nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie lokale Protokolle. Kein Ersatz für ärztliche Beurteilung.',\n    importantNote: 'Wichtig',\n    importantText: 'Diese Ergebnisse dienen nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie institutionelle Protokolle.',\n    \n    // Input Summary\n    inputSummaryTitle: 'Eingabezusammenfassung',\n    inputSummarySubtitle: 'Für diese Analyse verwendete Werte',\n\n    // Footer\n    privacyLink: 'Datenschutzrichtlinie',\n    disclaimerLink: 'Medizinischer Haftungsausschluss',\n    versionLink: 'Version 2.0.1',\n\n    // Privacy and disclaimers\n    privacyPolicy: 'Datenschutzrichtlinie: Dieses Tool verarbeitet Daten lokal. Keine Patientendaten werden gespeichert oder übertragen.',\n    medicalDisclaimer: 'Medizinischer Haftungsausschluss: Dieses Tool dient nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie lokale Protokolle.',\n\n    // Error messages\n    networkError: 'Netzwerkfehler - bitte überprüfen Sie Ihre Verbindung und versuchen Sie es erneut',\n    requestTimeout: 'Anfrage-Timeout - bitte versuchen Sie es erneut',\n    apiError: 'Ergebnisse konnten nicht abgerufen werden',\n    validationError: 'Bitte überprüfen Sie Ihre Eingabewerte',\n\n    // Session\n    sessionTimeout: 'Ihre Sitzung war 30 Minuten lang inaktiv. Möchten Sie fortfahren?',\n    unsavedData: 'Sie haben ungespeicherte Daten. Sind Sie sicher, dass Sie verlassen möchten?',\n\n    // Stroke Centers\n    nearestCentersTitle: 'Nächstgelegene Schlaganfall-Zentren',\n    useCurrentLocation: 'Aktuellen Standort verwenden',\n    enterLocationPlaceholder: 'Stadt oder Adresse eingeben...',\n    enterManually: 'Standort manuell eingeben',\n    search: 'Suchen',\n    yourLocation: 'Ihr Standort',\n    recommendedCenters: 'Empfohlene Zentren',\n    alternativeCenters: 'Alternative Zentren',\n    noCentersFound: 'Keine Schlaganfall-Zentren in diesem Bereich gefunden',\n    gettingLocation: 'Standort wird ermittelt',\n    searchingLocation: 'Standort wird gesucht',\n    locationError: 'Standort konnte nicht ermittelt werden',\n    locationPermissionDenied: 'Standortzugriff verweigert. Bitte erlauben Sie Standortzugriff und versuchen Sie es erneut.',\n    locationUnavailable: 'Standortinformationen sind nicht verfügbar',\n    locationTimeout: 'Standortanfrage ist abgelaufen',\n    geolocationNotSupported: 'Geolokalisierung wird von diesem Browser nicht unterstützt',\n    geocodingNotImplemented: 'Standortsuche nicht verfügbar. Bitte verwenden Sie GPS oder geben Sie Koordinaten manuell ein.',\n    tryManualEntry: 'Versuchen Sie, Ihren Standort manuell einzugeben oder GPS zu verwenden.',\n    distanceNote: 'Entfernungen werden als Luftlinie berechnet. Tatsächliche Fahrzeiten können variieren.',\n    travelTimeNote: 'Fahrzeiten berechnet für Rettungsfahrzeuge mit Sondersignalen und Vorfahrtsberechtigung.',\n    calculatingTravelTimes: 'Fahrzeiten werden berechnet',\n    minutes: 'Min',\n    poweredByOrs: 'Fahrzeiten bereitgestellt von OpenRoute Service',\n    \n    // Center Types and Services\n    comprehensiveCenter: 'Überregionales Schlaganfall-Zentrum',\n    primaryCenter: 'Regionales Schlaganfall-Zentrum',\n    telemetryCenter: 'Telemedizin-Zentrum',\n    thrombectomy: 'Thrombektomie',\n    neurosurgery: 'Neurochirurgie',\n    icu: 'Intensivstation',\n    telemedicine: 'Telemedizin',\n    stroke_unit: 'Stroke Unit',\n    \n    // Actions\n    call: 'Anrufen',\n    directions: 'Wegbeschreibung',\n    emergency: 'Notfall',\n    certified: 'Zertifiziert'\n  }\n};","// Internationalization utilities for the Stroke Triage Assistant\n\nimport { messages } from './messages.js';\n\nclass I18n {\n  constructor() {\n    this.supportedLanguages = ['en', 'de'];\n    this.currentLanguage = this.detectLanguage();\n  }\n\n  // Detect browser language and default to appropriate language\n  detectLanguage() {\n    // Check if language is already set in localStorage\n    const savedLanguage = localStorage.getItem('language');\n    if (savedLanguage && this.supportedLanguages.includes(savedLanguage)) {\n      return savedLanguage;\n    }\n\n    // Detect browser language\n    const browserLang = navigator.language || navigator.userLanguage;\n    const langCode = browserLang.substring(0, 2).toLowerCase();\n    \n    // Default to German if browser language is German, otherwise English\n    return langCode === 'de' ? 'de' : 'en';\n  }\n\n  // Get current language\n  getCurrentLanguage() {\n    return this.currentLanguage;\n  }\n\n  // Set language and save to localStorage\n  setLanguage(language) {\n    if (this.supportedLanguages.includes(language)) {\n      this.currentLanguage = language;\n      localStorage.setItem('language', language);\n      \n      // Dispatch custom event for language change\n      window.dispatchEvent(new CustomEvent('languageChanged', { \n        detail: { language } \n      }));\n      \n      return true;\n    }\n    return false;\n  }\n\n  // Get supported languages\n  getSupportedLanguages() {\n    return [...this.supportedLanguages];\n  }\n\n  // Translate a message key\n  t(key) {\n    const currentMessages = messages[this.currentLanguage] || messages.en;\n    return currentMessages[key] || key;\n  }\n\n  // Toggle between English and German\n  toggleLanguage() {\n    const newLanguage = this.currentLanguage === 'en' ? 'de' : 'en';\n    return this.setLanguage(newLanguage);\n  }\n\n  // Get language display name\n  getLanguageDisplayName(lang = null) {\n    const language = lang || this.currentLanguage;\n    const displayNames = {\n      'en': 'English',\n      'de': 'Deutsch'\n    };\n    return displayNames[language] || language;\n  }\n\n  // Format date/time according to current locale\n  formatDateTime(date) {\n    const locale = this.currentLanguage === 'de' ? 'de-DE' : 'en-US';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: '2-digit', \n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    }).format(date);\n  }\n\n  // Format time only according to current locale\n  formatTime(date) {\n    const locale = this.currentLanguage === 'de' ? 'de-DE' : 'en-US';\n    return new Intl.DateTimeFormat(locale, {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    }).format(date);\n  }\n}\n\n// Create singleton instance\nconst i18n = new I18n();\n\n// Export both the instance and the class\nexport { i18n, I18n };\n\n// Export convenience function for translation\nexport const t = (key) => i18n.t(key);","import { renderProgressIndicator } from '../components/progress.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderTriage1() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(1)}\n      <h2>${t('triage1Title')}</h2>\n      <div class=\"triage-question\">\n        ${t('triage1Question')}\n        <small>${t('triage1Help')}</small>\n      </div>\n      <div class=\"triage-buttons\">\n        <button class=\"yes-btn\" data-action=\"triage1\" data-value=\"true\">${t('triage1Yes')}</button>\n        <button class=\"no-btn\" data-action=\"triage1\" data-value=\"false\">${t('triage1No')}</button>\n      </div>\n    </div>\n  `;\n}","import { renderProgressIndicator } from '../components/progress.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderTriage2() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(1)}\n      <h2>${t('triage2Title')}</h2>\n      <div class=\"triage-question\">\n        ${t('triage2Question')}\n        <small>${t('triage2Help')}</small>\n      </div>\n      <div class=\"triage-buttons\">\n        <button class=\"yes-btn\" data-action=\"triage2\" data-value=\"true\">${t('triage2Yes')}</button>\n        <button class=\"no-btn\" data-action=\"triage2\" data-value=\"false\">${t('triage2No')}</button>\n      </div>\n    </div>\n  `;\n}","// Configuration for the Stroke Triage Assistant\n\nexport const API_URLS = {\n  COMA_ICH: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_coma_ich',\n  LDM_ICH: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_limited_data_ich',\n  FULL_STROKE: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_full_stroke'\n};\n\nexport const CRITICAL_THRESHOLDS = {\n  ich: { \n    high: 60, \n    critical: 80 \n  },\n  lvo: { \n    high: 50, \n    critical: 70 \n  }\n};\n\nexport const GFAP_RANGES = {\n  min: 29,\n  max: 10001,\n  normal: 100,\n  elevated: 500,\n  critical: 1000\n};\n\nexport const APP_CONFIG = {\n  autoSaveInterval: 30000, // Increased from 5s to 30s to reduce blinking\n  sessionTimeout: 30 * 60 * 1000, // 30 minutes\n  requestTimeout: 10000 // 10 seconds\n};\n\nexport const VALIDATION_RULES = {\n  age_years: { required: true, min: 0, max: 120 },\n  systolic_bp: { required: true, min: 60, max: 300 },\n  diastolic_bp: { required: true, min: 30, max: 200 },\n  gfap_value: { required: true, min: GFAP_RANGES.min, max: GFAP_RANGES.max },\n  fast_ed_score: { required: true, min: 0, max: 9 }\n};","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderComa() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>${t('comaModuleTitle') || 'Coma Module'}</h2>\n      <div class=\"critical-alert\">\n        <h4><span class=\"alert-icon\">🚨</span> ${t('criticalPatient')}</h4>\n        <p>${t('comaAlert')}</p>\n      </div>\n      <form data-module=\"coma\">\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              ${t('gfapValueLabel')}\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('gfapTooltipLong')}</span>\n              </span>\n            </label>\n            <input type=\"number\" id=\"gfap_value\" name=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required aria-describedby=\"gfap-help\">\n            <div id=\"gfap-help\" class=\"input-help\">\n              ${t('gfapRange').replace('{min}', GFAP_RANGES.min).replace('{max}', GFAP_RANGES.max)}\n            </div>\n          </div>\n        </div>\n        <button type=\"submit\" class=\"primary\">${t('analyzeIchRisk')}</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">${t('startOver')}</button>\n      </form>\n    </div>\n  `;\n}","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderLimited() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>${t('limitedDataModuleTitle') || 'Limited Data Module'}</h2>\n      <form data-module=\"limited\">\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"age_years\">${t('ageYearsLabel')}</label>\n            <input type=\"number\" name=\"age_years\" id=\"age_years\" min=\"0\" max=\"120\" required aria-describedby=\"age-help\">\n            <div id=\"age-help\" class=\"input-help\">${t('ageYearsHelp')}</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"systolic_bp\">${t('systolicBpLabel')}</label>\n            <input type=\"number\" name=\"systolic_bp\" id=\"systolic_bp\" min=\"60\" max=\"300\" required aria-describedby=\"sbp-help\">\n            <div id=\"sbp-help\" class=\"input-help\">${t('systolicBpHelp')}</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"diastolic_bp\">${t('diastolicBpLabel')}</label>\n            <input type=\"number\" name=\"diastolic_bp\" id=\"diastolic_bp\" min=\"30\" max=\"200\" required aria-describedby=\"dbp-help\">\n            <div id=\"dbp-help\" class=\"input-help\">${t('diastolicBpHelp')}</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              ${t('gfapValueLabel')}\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('gfapTooltipLong')}</span>\n              </span>\n            </label>\n            <input type=\"number\" name=\"gfap_value\" id=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required>\n          </div>\n        </div>\n        <div class=\"checkbox-group\">\n          <label class=\"checkbox-wrapper\">\n            <input type=\"checkbox\" name=\"vigilanzminderung\" id=\"vigilanzminderung\">\n            <span class=\"checkbox-label\">${t('vigilanceReduction')}</span>\n          </label>\n        </div>\n        <button type=\"submit\" class=\"primary\">${t('analyzeIchRisk')}</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">${t('startOver')}</button>\n      </form>\n    </div>\n  `;\n}","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderFull() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>${t('fullStrokeModuleTitle') || 'Full Stroke Module'}</h2>\n      <form data-module=\"full\">\n        <h3>${t('basicInformation')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"age_years\">${t('ageYearsLabel')}</label>\n            <input type=\"number\" name=\"age_years\" id=\"age_years\" min=\"0\" max=\"120\" required>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"systolic_bp\">${t('systolicBpLabel')}</label>\n            <input type=\"number\" name=\"systolic_bp\" id=\"systolic_bp\" min=\"60\" max=\"300\" required>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"diastolic_bp\">${t('diastolicBpLabel')}</label>\n            <input type=\"number\" name=\"diastolic_bp\" id=\"diastolic_bp\" min=\"30\" max=\"200\" required>\n          </div>\n        </div>\n\n        <h3>${t('biomarkersScores')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              ${t('gfapValueLabel')}\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('gfapTooltip')}</span>\n              </span>\n            </label>\n            <input type=\"number\" name=\"gfap_value\" id=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"fast_ed_score\">\n              ${t('fastEdScoreLabel')}\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('fastEdCalculatorSubtitle')}</span>\n              </span>\n            </label>\n            <input type=\"number\" name=\"fast_ed_score\" id=\"fast_ed_score\" min=\"0\" max=\"9\" required readonly placeholder=\"${t('fastEdCalculatorSubtitle')}\" style=\"cursor: pointer;\">\n            <input type=\"hidden\" name=\"armparese\" id=\"armparese_hidden\" value=\"false\">\n          </div>\n        </div>\n\n        <h3>${t('clinicalSymptoms')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"headache\" id=\"headache\">\n              <span class=\"checkbox-label\">${t('headacheLabel')}</span>\n            </label>\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"vigilanzminderung\" id=\"vigilanzminderung\">\n              <span class=\"checkbox-label\">${t('vigilanzLabel')}</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"beinparese\" id=\"beinparese\">\n              <span class=\"checkbox-label\">${t('legParesis')}</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"eye_deviation\" id=\"eye_deviation\">\n              <span class=\"checkbox-label\">${t('eyeDeviation')}</span>\n            </label>\n          </div>\n        </div>\n\n        <h3>${t('medicalHistory')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"atrial_fibrillation\" id=\"atrial_fibrillation\">\n              <span class=\"checkbox-label\">${t('atrialFibrillation')}</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"anticoagulated_noak\" id=\"anticoagulated_noak\">\n              <span class=\"checkbox-label\">${t('onNoacDoac')}</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"antiplatelets\" id=\"antiplatelets\">\n              <span class=\"checkbox-label\">${t('onAntiplatelets')}</span>\n            </label>\n          </div>\n        </div>\n\n        <button type=\"submit\" class=\"primary\">${t('analyzeStrokeRisk')}</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">${t('startOver')}</button>\n      </form>\n    </div>\n  `;\n}","export function renderCriticalAlert() {\n  return `\n    <div class=\"critical-alert\">\n      <h4><span class=\"alert-icon\">🚨</span> CRITICAL FINDING</h4>\n      <p>High probability of intracerebral hemorrhage detected.</p>\n      <p><strong>Immediate actions required:</strong></p>\n      <ul style=\"margin: 10px 0; padding-left: 20px;\">\n        <li>Initiate stroke protocol immediately</li>\n        <li>Urgent CT imaging required</li>\n        <li>Consider blood pressure management</li>\n        <li>Prepare for potential neurosurgical consultation</li>\n      </ul>\n    </div>\n  `;\n}","/**\n * Normalize drivers from API responses into a unified format for visualization\n * @param {Object} drivers - Raw drivers data from API\n * @returns {Object} Normalized drivers view model\n */\nexport function normalizeDrivers(drivers) {\n  if (!drivers || typeof drivers !== 'object') {\n    return {\n      kind: 'unavailable',\n      units: null,\n      positive: [],\n      negative: [],\n      meta: {}\n    };\n  }\n\n  // Check if it's already in the expected format with kind property\n  if (drivers.kind) {\n    return drivers;\n  }\n\n  // Check if it's SHAP values format\n  if (drivers.shap_values || (drivers.kind && drivers.kind === 'shap_values')) {\n    return normalizeShapValues(drivers);\n  }\n\n  // Check if it's logistic contributions format\n  if (drivers.logistic_contributions || (drivers.kind && drivers.kind === 'logistic_contributions')) {\n    return normalizeLogisticContributions(drivers);\n  }\n\n  // Try to infer format from raw object\n  if (isRawDriversObject(drivers)) {\n    return normalizeRawDrivers(drivers);\n  }\n\n  return {\n    kind: 'unavailable',\n    units: null,\n    positive: [],\n    negative: [],\n    meta: {}\n  };\n}\n\nfunction normalizeShapValues(drivers) {\n  const shapData = drivers.shap_values || drivers;\n  const features = [];\n\n  if (Array.isArray(shapData)) {\n    // Handle array format\n    shapData.forEach((item, index) => {\n      if (typeof item === 'object' && item.feature && item.value !== undefined) {\n        features.push({\n          label: item.feature,\n          weight: item.value\n        });\n      } else if (typeof item === 'number') {\n        features.push({\n          label: `Feature ${index}`,\n          weight: item\n        });\n      }\n    });\n  } else if (typeof shapData === 'object') {\n    // Handle object format\n    Object.entries(shapData).forEach(([feature, value]) => {\n      if (typeof value === 'number') {\n        features.push({\n          label: feature,\n          weight: value\n        });\n      }\n    });\n  }\n\n  // Sort by absolute weight value\n  features.sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight));\n\n  const positive = features.filter(f => f.weight > 0);\n  const negative = features.filter(f => f.weight < 0);\n\n  const meta = {};\n  if (drivers.base_value !== undefined) meta.base_value = drivers.base_value;\n  if (drivers.contrib_sum !== undefined) meta.contrib_sum = drivers.contrib_sum;\n  if (drivers.logit_total !== undefined) meta.logit_total = drivers.logit_total;\n\n  return {\n    kind: 'shap_values',\n    units: 'logit',\n    positive,\n    negative,\n    meta\n  };\n}\n\nfunction normalizeLogisticContributions(drivers) {\n  const logitData = drivers.logistic_contributions || drivers;\n  const features = [];\n\n  if (typeof logitData === 'object') {\n    Object.entries(logitData).forEach(([feature, value]) => {\n      if (typeof value === 'number' && !['intercept', 'contrib_sum', 'logit_total'].includes(feature)) {\n        features.push({\n          label: feature,\n          weight: value\n        });\n      }\n    });\n  }\n\n  // Sort by absolute weight value\n  features.sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight));\n\n  const positive = features.filter(f => f.weight > 0);\n  const negative = features.filter(f => f.weight < 0);\n\n  const meta = {};\n  if (logitData.intercept !== undefined) meta.base_value = logitData.intercept;\n  if (logitData.contrib_sum !== undefined) meta.contrib_sum = logitData.contrib_sum;\n  if (logitData.logit_total !== undefined) meta.logit_total = logitData.logit_total;\n  if (drivers.contrib_sum !== undefined) meta.contrib_sum = drivers.contrib_sum;\n\n  return {\n    kind: 'logistic_contributions',\n    units: 'logit',\n    positive,\n    negative,\n    meta\n  };\n}\n\nfunction normalizeRawDrivers(drivers) {\n  const features = [];\n\n  Object.entries(drivers).forEach(([feature, value]) => {\n    if (typeof value === 'number') {\n      features.push({\n        label: feature,\n        weight: value\n      });\n    }\n  });\n\n  // Sort by absolute weight value\n  features.sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight));\n\n  const positive = features.filter(f => f.weight > 0);\n  const negative = features.filter(f => f.weight < 0);\n\n  return {\n    kind: 'raw_weights',\n    units: null,\n    positive,\n    negative,\n    meta: {}\n  };\n}\n\nfunction isRawDriversObject(obj) {\n  return Object.values(obj).every(value => typeof value === 'number');\n}","import { normalizeDrivers } from '../../logic/shap.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderDriversSection(ich, lvo) {\n  if (!ich?.drivers && !lvo?.drivers) return '';\n  \n  let html = `\n    <div class=\"drivers-section\">\n      <div class=\"drivers-header\">\n        <h3><span class=\"driver-header-icon\">🎯</span> ${t('modelDrivers')}</h3>\n        <p class=\"drivers-subtitle\">${t('modelDriversSubtitle')}</p>\n      </div>\n      <div class=\"enhanced-drivers-grid\">\n  `;\n  \n  if (ich?.drivers) {\n    html += renderEnhancedDriversPanel(ich.drivers, 'ICH', 'ich', ich.probability);\n  }\n  \n  if (lvo?.drivers && !lvo.notPossible) {\n    html += renderEnhancedDriversPanel(lvo.drivers, 'LVO', 'lvo', lvo.probability);\n  }\n  \n  html += `\n      </div>\n    </div>\n  `;\n  return html;\n}\n\nexport function renderDriversPanel(drivers, title, type) {\n  if (!drivers || Object.keys(drivers).length === 0) {\n    return `\n      <div class=\"drivers-panel\">\n        <h4>\n          <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\n          ${title} Risk Factors\n        </h4>\n        <p style=\"color: var(--text-secondary); font-style: italic;\">\n          Driver information not available from this prediction model.\n        </p>\n      </div>\n    `;\n  }\n\n  const driversViewModel = normalizeDrivers(drivers);\n  \n  if (driversViewModel.kind === 'unavailable') {\n    return `\n      <div class=\"drivers-panel\">\n        <h4>\n          <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\n          ${title} Risk Factors\n        </h4>\n        <p style=\"color: var(--text-secondary); font-style: italic;\">\n          Driver analysis not available for this prediction.\n        </p>\n      </div>\n    `;\n  }\n\n  let html = `\n    <div class=\"drivers-panel\">\n      <h4>\n        <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\n        ${title} Risk Factors\n      </h4>\n  `;\n\n  // Show positive drivers (increase risk)\n  if (driversViewModel.positive.length > 0) {\n    driversViewModel.positive.forEach(driver => {\n      const percentage = Math.abs(driver.weight * 100);\n      const width = Math.min(percentage * 2, 100); // Scale for visualization\n      html += `\n        <div class=\"driver-item\">\n          <span class=\"driver-label\">${driver.label}</span>\n          <div class=\"driver-bar-container\">\n            <div class=\"driver-bar positive\" style=\"width: ${width}%\">\n              <span class=\"driver-value\">+${percentage.toFixed(0)}%</span>\n            </div>\n          </div>\n        </div>\n      `;\n    });\n  }\n\n  // Show negative drivers (decrease risk)\n  if (driversViewModel.negative.length > 0) {\n    driversViewModel.negative.forEach(driver => {\n      const percentage = Math.abs(driver.weight * 100);\n      const width = Math.min(percentage * 2, 100); // Scale for visualization\n      html += `\n        <div class=\"driver-item\">\n          <span class=\"driver-label\">${driver.label}</span>\n          <div class=\"driver-bar-container\">\n            <div class=\"driver-bar negative\" style=\"width: ${width}%\">\n              <span class=\"driver-value\">-${percentage.toFixed(0)}%</span>\n            </div>\n          </div>\n        </div>\n      `;\n    });\n  }\n\n  // Show metadata if available\n  if (driversViewModel.meta && Object.keys(driversViewModel.meta).length > 0) {\n    html += `\n      <div style=\"margin-top: 15px; padding-top: 10px; border-top: 1px solid var(--border-color);\">\n        <small style=\"color: var(--text-secondary);\">\n    `;\n    \n    if (driversViewModel.meta.base_value !== undefined) {\n      html += `Base value: ${driversViewModel.meta.base_value.toFixed(2)} `;\n    }\n    if (driversViewModel.meta.contrib_sum !== undefined) {\n      html += `Contrib sum: ${driversViewModel.meta.contrib_sum.toFixed(2)} `;\n    }\n    if (driversViewModel.meta.logit_total !== undefined) {\n      html += `Logit total: ${driversViewModel.meta.logit_total.toFixed(2)}`;\n    }\n    \n    html += `\n        </small>\n      </div>\n    `;\n  }\n\n  html += `</div>`;\n  return html;\n}\n\nexport function renderEnhancedDriversPanel(drivers, title, type, probability) {\n  if (!drivers || Object.keys(drivers).length === 0) {\n    return `\n      <div class=\"enhanced-drivers-panel ${type}\">\n        <div class=\"panel-header\">\n          <div class=\"panel-icon ${type}\">${type === 'ich' ? '🧠' : '🩸'}</div>\n          <div class=\"panel-title\">\n            <h4>${title} Risk Factors</h4>\n            <span class=\"panel-subtitle\">${t('noDriverData')}</span>\n          </div>\n        </div>\n        <p class=\"no-drivers-message\">\n          ${t('driverInfoNotAvailable')}\n        </p>\n      </div>\n    `;\n  }\n\n  const driversViewModel = normalizeDrivers(drivers);\n  \n  if (driversViewModel.kind === 'unavailable') {\n    return `\n      <div class=\"enhanced-drivers-panel ${type}\">\n        <div class=\"panel-header\">\n          <div class=\"panel-icon ${type}\">${type === 'ich' ? '🧠' : '🩸'}</div>\n          <div class=\"panel-title\">\n            <h4>${title} Risk Factors</h4>\n            <span class=\"panel-subtitle\">${t('driverAnalysisUnavailable')}</span>\n          </div>\n        </div>\n        <p class=\"no-drivers-message\">\n          ${t('driverAnalysisNotAvailable')}\n        </p>\n      </div>\n    `;\n  }\n\n  const allDrivers = [...driversViewModel.positive, ...driversViewModel.negative]\n    .sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight))\n    .slice(0, 8); // Show top 8 most important factors\n\n  let html = `\n    <div class=\"enhanced-drivers-panel ${type}\">\n      <div class=\"panel-header\">\n        <div class=\"panel-icon ${type}\">${type === 'ich' ? '🧠' : '🩸'}</div>\n        <div class=\"panel-title\">\n          <h4>${title} Risk Factors</h4>\n          <span class=\"panel-subtitle\">${t('contributingFactors')} (${allDrivers.length} ${t('factorsShown')})</span>\n        </div>\n      </div>\n      \n      <div class=\"drivers-chart\">\n  `;\n\n  if (allDrivers.length > 0) {\n    const maxWeight = Math.max(...allDrivers.map(d => Math.abs(d.weight)));\n    \n    allDrivers.forEach((driver, index) => {\n      const weight = driver.weight;\n      const isPositive = weight > 0;\n      const percentage = Math.abs(weight * 100);\n      const barWidth = (Math.abs(weight) / maxWeight) * 100;\n      const cleanLabel = driver.label.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n      \n      html += `\n        <div class=\"enhanced-driver-item\">\n          <div class=\"driver-info\">\n            <span class=\"driver-label\">${cleanLabel}</span>\n            <div class=\"driver-impact ${isPositive ? 'positive' : 'negative'}\">\n              ${isPositive ? '↑' : '↓'} ${percentage.toFixed(1)}%\n            </div>\n          </div>\n          <div class=\"driver-bar-wrapper\">\n            <div class=\"driver-bar-track\">\n              <div class=\"driver-bar ${isPositive ? 'positive' : 'negative'}\" \n                   style=\"width: ${barWidth}%\"\n                   data-weight=\"${weight.toFixed(3)}\">\n                <div class=\"bar-glow\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      `;\n    });\n  }\n  \n  html += `\n      </div>\n      \n      <div class=\"drivers-summary\">\n        <div class=\"summary-stats\">\n          <span class=\"stat-item\">\n            <span class=\"stat-label\">${t('positiveFactors')}:</span>\n            <span class=\"stat-value positive\">${driversViewModel.positive.length}</span>\n          </span>\n          <span class=\"stat-item\">\n            <span class=\"stat-label\">${t('negativeFactors')}:</span>\n            <span class=\"stat-value negative\">${driversViewModel.negative.length}</span>\n          </span>\n        </div>\n      </div>\n    </div>\n  `;\n  \n  return html;\n}","// Stroke centers in Baden-Württemberg, Germany\n// Data includes comprehensive stroke centers and stroke units\n\nexport const strokeCenters = [\n  {\n    id: 'uniklinik-freiburg',\n    name: 'Universitätsklinikum Freiburg',\n    type: 'comprehensive', // comprehensive, primary, telemedicine\n    address: 'Hugstetter Str. 55, 79106 Freiburg im Breisgau',\n    coordinates: {\n      lat: 48.0025,\n      lng: 7.8347\n    },\n    phone: '+49 761 270-0',\n    emergency: '+49 761 270-34010',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'uniklinik-heidelberg',\n    name: 'Universitätsklinikum Heidelberg',\n    type: 'comprehensive',\n    address: 'Im Neuenheimer Feld 400, 69120 Heidelberg',\n    coordinates: {\n      lat: 49.4178,\n      lng: 8.6706\n    },\n    phone: '+49 6221 56-0',\n    emergency: '+49 6221 56-36643',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'uniklinik-tuebingen',\n    name: 'Universitätsklinikum Tübingen',\n    type: 'comprehensive',\n    address: 'Geissweg 3, 72076 Tübingen',\n    coordinates: {\n      lat: 48.5378,\n      lng: 9.0538\n    },\n    phone: '+49 7071 29-0',\n    emergency: '+49 7071 29-82211',\n    services: ['thrombectory', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'uniklinik-ulm',\n    name: 'Universitätsklinikum Ulm',\n    type: 'comprehensive',\n    address: 'Albert-Einstein-Allee 23, 89081 Ulm',\n    coordinates: {\n      lat: 48.4196,\n      lng: 9.9592\n    },\n    phone: '+49 731 500-0',\n    emergency: '+49 731 500-63001',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'klinikum-stuttgart',\n    name: 'Klinikum Stuttgart - Katharinenhospital',\n    type: 'comprehensive',\n    address: 'Kriegsbergstraße 60, 70174 Stuttgart',\n    coordinates: {\n      lat: 48.7784,\n      lng: 9.1682\n    },\n    phone: '+49 711 278-0',\n    emergency: '+49 711 278-32001',\n    services: ['thrombectomy', 'neurosurgery', 'icu'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'robert-bosch-stuttgart',\n    name: 'Robert-Bosch-Krankenhaus Stuttgart',\n    type: 'primary',\n    address: 'Auerbachstraße 110, 70376 Stuttgart',\n    coordinates: {\n      lat: 48.7447,\n      lng: 9.2294\n    },\n    phone: '+49 711 8101-0',\n    emergency: '+49 711 8101-3456',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'diakonie-stuttgart',\n    name: 'Diakonie-Klinikum Stuttgart',\n    type: 'primary',\n    address: 'Rosenbergstraße 38, 70176 Stuttgart',\n    coordinates: {\n      lat: 48.7861,\n      lng: 9.1736\n    },\n    phone: '+49 711 991-0',\n    emergency: '+49 711 991-2201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'rkh-ludwigsburg',\n    name: 'RKH Klinikum Ludwigsburg',\n    type: 'primary',\n    address: 'Posilipostraße 4, 71640 Ludwigsburg',\n    coordinates: {\n      lat: 48.8901,\n      lng: 9.1953\n    },\n    phone: '+49 7141 99-0',\n    emergency: '+49 7141 99-67201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'klinikum-karlsruhe',\n    name: 'Städtisches Klinikum Karlsruhe',\n    type: 'comprehensive',\n    address: 'Moltkestraße 90, 76133 Karlsruhe',\n    coordinates: {\n      lat: 49.0047,\n      lng: 8.3858\n    },\n    phone: '+49 721 974-0',\n    emergency: '+49 721 974-2301',\n    services: ['thrombectomy', 'neurosurgery', 'icu'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'vincentius-karlsruhe',\n    name: 'ViDia Kliniken Karlsruhe - St. Vincentius',\n    type: 'primary',\n    address: 'Südendstraße 32, 76135 Karlsruhe',\n    coordinates: {\n      lat: 48.9903,\n      lng: 8.3711\n    },\n    phone: '+49 721 8108-0',\n    emergency: '+49 721 8108-9201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'klinikum-mannheim',\n    name: 'Universitätsmedizin Mannheim',\n    type: 'comprehensive',\n    address: 'Theodor-Kutzer-Ufer 1-3, 68167 Mannheim',\n    coordinates: {\n      lat: 49.4828,\n      lng: 8.4664\n    },\n    phone: '+49 621 383-0',\n    emergency: '+49 621 383-2251',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'theresienkrankenhaus-mannheim',\n    name: 'Theresienkrankenhaus Mannheim',\n    type: 'primary',\n    address: 'Bassermannstraße 1, 68165 Mannheim',\n    coordinates: {\n      lat: 49.4904,\n      lng: 8.4594\n    },\n    phone: '+49 621 424-0',\n    emergency: '+49 621 424-2101',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'klinikum-pforzheim',\n    name: 'Helios Klinikum Pforzheim',\n    type: 'primary',\n    address: 'Kanzlerstraße 2-6, 75175 Pforzheim',\n    coordinates: {\n      lat: 48.8833,\n      lng: 8.6936\n    },\n    phone: '+49 7231 969-0',\n    emergency: '+49 7231 969-2301',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'zollernalb-klinikum',\n    name: 'Zollernalb Klinikum Albstadt',\n    type: 'primary',\n    address: 'Zollernring 10-14, 72488 Sigmaringen',\n    coordinates: {\n      lat: 48.0878,\n      lng: 9.2233\n    },\n    phone: '+49 7571 100-0',\n    emergency: '+49 7571 100-1501',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'klinikum-konstanz',\n    name: 'Gesundheitsverbund Landkreis Konstanz',\n    type: 'primary',\n    address: 'Mainaustraße 14, 78464 Konstanz',\n    coordinates: {\n      lat: 47.6779,\n      lng: 9.1732\n    },\n    phone: '+49 7531 801-0',\n    emergency: '+49 7531 801-2301',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'klinikum-friedrichshafen',\n    name: 'Klinikum Friedrichshafen',\n    type: 'primary',\n    address: 'Röntgenstraße 2, 88048 Friedrichshafen',\n    coordinates: {\n      lat: 47.6587,\n      lng: 9.4685\n    },\n    phone: '+49 7541 96-0',\n    emergency: '+49 7541 96-2401',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'oberschwabenklinik-ravensburg',\n    name: 'Oberschwabenklinik Ravensburg',\n    type: 'primary',\n    address: 'Elisabethenstraße 17, 88212 Ravensburg',\n    coordinates: {\n      lat: 47.7815,\n      lng: 9.6078\n    },\n    phone: '+49 751 87-0',\n    emergency: '+49 751 87-2201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'alb-donau-klinikum',\n    name: 'Alb Donau Klinikum Ehingen',\n    type: 'primary',\n    address: 'Schwörhausgasse 7, 89584 Ehingen',\n    coordinates: {\n      lat: 48.2833,\n      lng: 9.7262\n    },\n    phone: '+49 7391 789-0',\n    emergency: '+49 7391 789-1801',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'ortenau-klinikum-offenburg',\n    name: 'Ortenau Klinikum Offenburg',\n    type: 'primary',\n    address: 'Ebertplatz 12, 77654 Offenburg',\n    coordinates: {\n      lat: 48.4706,\n      lng: 7.9444\n    },\n    phone: '+49 781 472-0',\n    emergency: '+49 781 472-2001',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'klinikum-baden-baden',\n    name: 'Klinikum Mittelbaden Baden-Baden',\n    type: 'primary',\n    address: 'Balger Str. 50, 76532 Baden-Baden',\n    coordinates: {\n      lat: 48.7606,\n      lng: 8.2275\n    },\n    phone: '+49 7221 91-0',\n    emergency: '+49 7221 91-1701',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  }\n];\n\n// Helper functions for stroke center data\nexport function getStrokeCentersByType(type) {\n  return strokeCenters.filter(center => center.type === type);\n}\n\nexport function getComprehensiveStrokeCenters() {\n  return getStrokeCentersByType('comprehensive');\n}\n\nexport function getPrimaryStrokeCenters() {\n  return getStrokeCentersByType('primary');\n}\n\nexport function getStrokeCenterById(id) {\n  return strokeCenters.find(center => center.id === id);\n}\n\n// Calculate distance between two coordinates using Haversine formula (fallback)\nexport function calculateDistance(lat1, lng1, lat2, lng2) {\n  const R = 6371; // Earth's radius in kilometers\n  const dLat = toRadians(lat2 - lat1);\n  const dLng = toRadians(lng2 - lng1);\n  const a = \n    Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) * \n    Math.sin(dLng/2) * Math.sin(dLng/2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  return R * c;\n}\n\nfunction toRadians(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\n// Calculate travel time using OpenRoute Service API\nexport async function calculateTravelTime(fromLat, fromLng, toLat, toLng, profile = 'driving-car') {\n  try {\n    // Using OpenRoute Service (free tier)\n    const url = `https://api.openrouteservice.org/v2/directions/${profile}`;\n    const body = {\n      coordinates: [[fromLng, fromLat], [toLng, toLat]],\n      radiuses: [1000, 1000], // Allow 1km radius for routing\n      format: 'json'\n    };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8',\n        'Authorization': '5b3ce3597851110001cf624868c4c27b63ae476c9c26c8bffbc35688', // Free tier key\n        'Content-Type': 'application/json; charset=utf-8'\n      },\n      body: JSON.stringify(body)\n    });\n\n    if (!response.ok) {\n      throw new Error(`Routing API error: ${response.status}`);\n    }\n\n    const data = await response.json();\n    \n    if (data.routes && data.routes.length > 0) {\n      const route = data.routes[0];\n      return {\n        duration: Math.round(route.summary.duration / 60), // Convert to minutes\n        distance: Math.round(route.summary.distance / 1000), // Convert to km\n        source: 'routing'\n      };\n    } else {\n      throw new Error('No route found');\n    }\n  } catch (error) {\n    console.warn('Travel time calculation failed, using distance estimate:', error);\n    \n    // Fallback to distance-based time estimation\n    const distance = calculateDistance(fromLat, fromLng, toLat, toLng);\n    const estimatedTime = Math.round(distance / 0.8); // Assume 48 km/h average (urban + highway)\n    \n    return {\n      duration: estimatedTime,\n      distance: Math.round(distance),\n      source: 'estimated'\n    };\n  }\n}\n\n// Enhanced travel time calculation for emergency vehicles\nexport async function calculateEmergencyTravelTime(fromLat, fromLng, toLat, toLng) {\n  try {\n    // For emergency vehicles, we can use a faster profile and adjust\n    const result = await calculateTravelTime(fromLat, fromLng, toLat, toLng, 'driving-car');\n    \n    // Reduce time by 25% for emergency vehicle (sirens, priority routing)\n    const emergencyDuration = Math.round(result.duration * 0.75);\n    \n    return {\n      duration: emergencyDuration,\n      distance: result.distance,\n      source: result.source === 'routing' ? 'emergency-routing' : 'emergency-estimated'\n    };\n  } catch (error) {\n    // Fallback calculation\n    const distance = calculateDistance(fromLat, fromLng, toLat, toLng);\n    const emergencyTime = Math.round(distance / 1.2); // Assume 72 km/h for emergency vehicles\n    \n    return {\n      duration: emergencyTime,\n      distance: Math.round(distance), \n      source: 'emergency-estimated'\n    };\n  }\n}\n\n// Find nearest stroke centers with travel time calculation\nexport async function findNearestStrokeCentersWithTravelTime(lat, lng, maxResults = 5, maxTime = 120, useEmergencyRouting = true) {\n  console.log('Calculating travel times to stroke centers...');\n  \n  const centersWithTravelTime = await Promise.all(\n    strokeCenters.map(async (center) => {\n      try {\n        const travelInfo = useEmergencyRouting \n          ? await calculateEmergencyTravelTime(lat, lng, center.coordinates.lat, center.coordinates.lng)\n          : await calculateTravelTime(lat, lng, center.coordinates.lat, center.coordinates.lng);\n        \n        return {\n          ...center,\n          travelTime: travelInfo.duration,\n          distance: travelInfo.distance,\n          travelSource: travelInfo.source\n        };\n      } catch (error) {\n        console.warn(`Failed to calculate travel time to ${center.name}:`, error);\n        // Fallback to distance calculation\n        const distance = calculateDistance(lat, lng, center.coordinates.lat, center.coordinates.lng);\n        return {\n          ...center,\n          travelTime: Math.round(distance / 0.8), // Estimate: 48 km/h average\n          distance: Math.round(distance),\n          travelSource: 'fallback'\n        };\n      }\n    })\n  );\n\n  return centersWithTravelTime\n    .filter(center => center.travelTime <= maxTime)\n    .sort((a, b) => a.travelTime - b.travelTime)\n    .slice(0, maxResults);\n}\n\n// Find nearest stroke centers using distance (fallback/fast method)\nexport function findNearestStrokeCenters(lat, lng, maxResults = 5, maxDistance = 100) {\n  const centersWithDistance = strokeCenters.map(center => ({\n    ...center,\n    distance: calculateDistance(lat, lng, center.coordinates.lat, center.coordinates.lng)\n  }));\n\n  return centersWithDistance\n    .filter(center => center.distance <= maxDistance)\n    .sort((a, b) => a.distance - b.distance)\n    .slice(0, maxResults);\n}\n\n// Get stroke center recommendations with travel time (async)\nexport async function getRecommendedStrokeCentersWithTravelTime(lat, lng, conditionType = 'stroke') {\n  const nearestCenters = await findNearestStrokeCentersWithTravelTime(lat, lng, 10, 120, true);\n  \n  if (conditionType === 'lvo' || conditionType === 'thrombectomy') {\n    // For LVO cases, prioritize comprehensive stroke centers within 60 minutes\n    const comprehensive = nearestCenters.filter(center => \n      center.type === 'comprehensive' && \n      center.services.includes('thrombectomy') &&\n      center.travelTime <= 60\n    );\n    \n    const primary = nearestCenters.filter(center => center.type === 'primary');\n    \n    return {\n      recommended: comprehensive.slice(0, 3),\n      alternative: primary.slice(0, 2)\n    };\n  }\n  \n  // For ICH cases, prioritize neurosurgical capabilities\n  if (conditionType === 'ich') {\n    const neurosurgical = nearestCenters.filter(center =>\n      center.services.includes('neurosurgery') &&\n      center.travelTime <= 45\n    );\n    \n    return {\n      recommended: neurosurgical.slice(0, 3),\n      alternative: nearestCenters.filter(c => !neurosurgical.includes(c)).slice(0, 2)\n    };\n  }\n  \n  // For general stroke cases, return nearest centers regardless of type\n  return {\n    recommended: nearestCenters.slice(0, 5),\n    alternative: []\n  };\n}\n\n// Get stroke center recommendations based on patient condition (fallback - distance only)\nexport function getRecommendedStrokeCenters(lat, lng, conditionType = 'stroke') {\n  const nearestCenters = findNearestStrokeCenters(lat, lng, 10);\n  \n  if (conditionType === 'lvo' || conditionType === 'thrombectomy') {\n    // For LVO cases, prioritize comprehensive stroke centers\n    const comprehensive = nearestCenters.filter(center => \n      center.type === 'comprehensive' && \n      center.services.includes('thrombectomy')\n    );\n    \n    const primary = nearestCenters.filter(center => center.type === 'primary');\n    \n    return {\n      recommended: comprehensive.slice(0, 3),\n      alternative: primary.slice(0, 2)\n    };\n  }\n  \n  // For general stroke cases, return nearest centers regardless of type\n  return {\n    recommended: nearestCenters.slice(0, 5),\n    alternative: []\n  };\n}","// GPS-based stroke center map component\nimport { findNearestStrokeCenters, getRecommendedStrokeCenters, findNearestStrokeCentersWithTravelTime, getRecommendedStrokeCentersWithTravelTime } from '../../data/stroke-centers.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderStrokeCenterMap(results) {\n  return `\n    <div class=\"stroke-center-section\">\n      <h3>🏥 ${t('nearestCentersTitle')}</h3>\n      <div id=\"locationContainer\">\n        <div class=\"location-controls\">\n          <button type=\"button\" id=\"useGpsButton\" class=\"secondary\">\n            📍 ${t('useCurrentLocation')}\n          </button>\n          <div class=\"location-manual\" style=\"display: none;\">\n            <input type=\"text\" id=\"locationInput\" placeholder=\"${t('enterLocationPlaceholder')}\" />\n            <button type=\"button\" id=\"searchLocationButton\" class=\"secondary\">${t('search')}</button>\n          </div>\n          <button type=\"button\" id=\"manualLocationButton\" class=\"secondary\">\n            ✏️ ${t('enterManually')}\n          </button>\n        </div>\n        <div id=\"strokeCenterResults\" class=\"stroke-center-results\"></div>\n      </div>\n    </div>\n  `;\n}\n\nexport function initializeStrokeCenterMap(results) {\n  const useGpsButton = document.getElementById('useGpsButton');\n  const manualLocationButton = document.getElementById('manualLocationButton');\n  const locationManual = document.querySelector('.location-manual');\n  const locationInput = document.getElementById('locationInput');\n  const searchLocationButton = document.getElementById('searchLocationButton');\n  const resultsContainer = document.getElementById('strokeCenterResults');\n\n  if (useGpsButton) {\n    useGpsButton.addEventListener('click', () => {\n      requestUserLocation(results, resultsContainer);\n    });\n  }\n\n  if (manualLocationButton) {\n    manualLocationButton.addEventListener('click', () => {\n      locationManual.style.display = locationManual.style.display === 'none' ? 'block' : 'none';\n    });\n  }\n\n  if (searchLocationButton) {\n    searchLocationButton.addEventListener('click', () => {\n      const location = locationInput.value.trim();\n      if (location) {\n        geocodeLocation(location, results, resultsContainer);\n      }\n    });\n  }\n\n  if (locationInput) {\n    locationInput.addEventListener('keypress', (e) => {\n      if (e.key === 'Enter') {\n        const location = locationInput.value.trim();\n        if (location) {\n          geocodeLocation(location, results, resultsContainer);\n        }\n      }\n    });\n  }\n}\n\nfunction requestUserLocation(results, resultsContainer) {\n  if (!navigator.geolocation) {\n    showLocationError(t('geolocationNotSupported'), resultsContainer);\n    return;\n  }\n\n  resultsContainer.innerHTML = `<div class=\"loading\">${t('gettingLocation')}...</div>`;\n\n  navigator.geolocation.getCurrentPosition(\n    (position) => {\n      const { latitude, longitude } = position.coords;\n      showNearestCenters(latitude, longitude, results, resultsContainer);\n    },\n    (error) => {\n      let errorMessage = t('locationError');\n      switch (error.code) {\n        case error.PERMISSION_DENIED:\n          errorMessage = t('locationPermissionDenied');\n          break;\n        case error.POSITION_UNAVAILABLE:\n          errorMessage = t('locationUnavailable');\n          break;\n        case error.TIMEOUT:\n          errorMessage = t('locationTimeout');\n          break;\n      }\n      showLocationError(errorMessage, resultsContainer);\n    },\n    {\n      enableHighAccuracy: true,\n      timeout: 10000,\n      maximumAge: 300000 // 5 minutes\n    }\n  );\n}\n\nasync function geocodeLocation(locationString, results, resultsContainer) {\n  resultsContainer.innerHTML = `<div class=\"loading\">${t('searchingLocation')}...</div>`;\n  \n  // Simple geocoding using a free service (in a real app, you'd use a proper geocoding service)\n  // For now, we'll show a placeholder and allow manual coordinate entry\n  showLocationError(t('geocodingNotImplemented'), resultsContainer);\n}\n\nasync function showNearestCenters(lat, lng, results, resultsContainer) {\n  const conditionType = determineConditionType(results);\n  \n  // Show loading state\n  resultsContainer.innerHTML = `\n    <div class=\"location-info\">\n      <p><strong>${t('yourLocation')}:</strong> ${lat.toFixed(4)}, ${lng.toFixed(4)}</p>\n    </div>\n    <div class=\"loading\">${t('calculatingTravelTimes')}...</div>\n  `;\n  \n  try {\n    // Try to get travel time recommendations\n    const recommendations = await getRecommendedStrokeCentersWithTravelTime(lat, lng, conditionType);\n    \n    const html = `\n      <div class=\"location-info\">\n        <p><strong>${t('yourLocation')}:</strong> ${lat.toFixed(4)}, ${lng.toFixed(4)}</p>\n      </div>\n      \n      <div class=\"recommended-centers\">\n        <h4>${t('recommendedCenters')}</h4>\n        ${renderStrokeCenterList(recommendations.recommended, true)}\n      </div>\n      \n      ${recommendations.alternative.length > 0 ? `\n        <div class=\"alternative-centers\">\n          <h4>${t('alternativeCenters')}</h4>\n          ${renderStrokeCenterList(recommendations.alternative, false)}\n        </div>\n      ` : ''}\n      \n      <div class=\"travel-time-note\">\n        <small>${t('travelTimeNote')}</small>\n        <br><small class=\"powered-by\">${t('poweredByOrs')}</small>\n      </div>\n    `;\n    \n    resultsContainer.innerHTML = html;\n    \n  } catch (error) {\n    console.warn('Travel time calculation failed, falling back to distance:', error);\n    \n    // Fallback to distance-based recommendations\n    const recommendations = getRecommendedStrokeCenters(lat, lng, conditionType);\n    \n    const html = `\n      <div class=\"location-info\">\n        <p><strong>${t('yourLocation')}:</strong> ${lat.toFixed(4)}, ${lng.toFixed(4)}</p>\n      </div>\n      \n      <div class=\"recommended-centers\">\n        <h4>${t('recommendedCenters')}</h4>\n        ${renderStrokeCenterList(recommendations.recommended, true)}\n      </div>\n      \n      ${recommendations.alternative.length > 0 ? `\n        <div class=\"alternative-centers\">\n          <h4>${t('alternativeCenters')}</h4>\n          ${renderStrokeCenterList(recommendations.alternative, false)}\n        </div>\n      ` : ''}\n      \n      <div class=\"distance-note\">\n        <small>${t('distanceNote')}</small>\n      </div>\n    `;\n    \n    resultsContainer.innerHTML = html;\n  }\n}\n\nfunction renderStrokeCenterList(centers, isRecommended = false) {\n  if (!centers || centers.length === 0) {\n    return `<p>${t('noCentersFound')}</p>`;\n  }\n\n  return centers.map(center => `\n    <div class=\"stroke-center-card ${isRecommended ? 'recommended' : 'alternative'}\">\n      <div class=\"center-header\">\n        <h5>${center.name}</h5>\n        <span class=\"center-type ${center.type}\">${t(center.type + 'Center')}</span>\n        ${center.travelTime ? `\n          <span class=\"travel-time\">\n            <span class=\"time\">${center.travelTime} ${t('minutes')}</span>\n            <span class=\"distance\">(${center.distance} km)</span>\n          </span>\n        ` : `\n          <span class=\"distance\">${center.distance.toFixed(1)} km</span>\n        `}\n      </div>\n      \n      <div class=\"center-details\">\n        <p class=\"address\">📍 ${center.address}</p>\n        <p class=\"phone\">📞 ${t('emergency')}: ${center.emergency}</p>\n        \n        <div class=\"services\">\n          ${center.services.map(service => `\n            <span class=\"service-badge\">${t(service)}</span>\n          `).join('')}\n        </div>\n        \n        ${center.certified ? `\n          <div class=\"certification\">\n            ✅ ${t('certified')}: ${center.certification}\n          </div>\n        ` : ''}\n      </div>\n      \n      <div class=\"center-actions\">\n        <button class=\"call-button\" onclick=\"window.open('tel:${center.emergency}')\">\n          📞 ${t('call')}\n        </button>\n        <button class=\"directions-button\" onclick=\"window.open('https://maps.google.com/maps?daddr=${center.coordinates.lat},${center.coordinates.lng}', '_blank')\">\n          🧭 ${t('directions')}\n        </button>\n      </div>\n    </div>\n  `).join('');\n}\n\nfunction determineConditionType(results) {\n  if (!results) return 'stroke';\n  \n  // If LVO probability is high, recommend comprehensive centers with thrombectomy\n  if (results.lvo && results.lvo.probability > 0.5) {\n    return 'lvo';\n  }\n  \n  // If ICH probability is high, recommend comprehensive centers with neurosurgery\n  if (results.ich && results.ich.probability > 0.6) {\n    return 'ich';\n  }\n  \n  return 'stroke';\n}\n\nfunction showLocationError(message, container) {\n  container.innerHTML = `\n    <div class=\"location-error\">\n      <p>⚠️ ${message}</p>\n      <p><small>${t('tryManualEntry')}</small></p>\n    </div>\n  `;\n}","import { CRITICAL_THRESHOLDS } from '../config.js';\n\nexport function getRiskLevel(probabilityPercent, type) {\n  const p = Number(probabilityPercent);\n  const thresholds = CRITICAL_THRESHOLDS[type];\n  \n  if (p >= thresholds.critical) {\n    return '🔴 CRITICAL RISK';\n  } else if (p >= thresholds.high) {\n    return '🟠 HIGH RISK';\n  } else if (p >= 30) {\n    return '🟡 MODERATE RISK';\n  } else {\n    return '🟢 LOW RISK';\n  }\n}\n\nexport function formatTime(milliseconds) {\n  const seconds = Math.floor(milliseconds / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n}","import { renderProgressIndicator } from '../components/progress.js';\nimport { renderCriticalAlert } from '../components/alerts.js';\nimport { renderDriversSection } from '../components/drivers.js';\nimport { renderStrokeCenterMap } from '../components/stroke-center-map.js';\nimport { getRiskLevel, formatTime } from '../../logic/formatters.js';\nimport { CRITICAL_THRESHOLDS } from '../../config.js';\nimport { t } from '../../localization/i18n.js';\nimport { store } from '../../state/store.js';\n\nfunction renderInputSummary() {\n  const state = store.getState();\n  const formData = state.formData;\n  \n  if (!formData || Object.keys(formData).length === 0) {\n    return '';\n  }\n  \n  let summaryHtml = '';\n  \n  // Iterate through each module's form data\n  Object.entries(formData).forEach(([module, data]) => {\n    if (data && Object.keys(data).length > 0) {\n      const moduleTitle = t(`${module}ModuleTitle`) || module.charAt(0).toUpperCase() + module.slice(1);\n      let itemsHtml = '';\n      \n      Object.entries(data).forEach(([key, value]) => {\n        // Skip empty values\n        if (value === '' || value === null || value === undefined) return;\n        \n        // Get friendly label name\n        let label = key;\n        if (t(`${key}Label`)) {\n          label = t(`${key}Label`);\n        } else {\n          // Fallback: convert snake_case to Title Case\n          label = key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n        }\n        \n        // Format value\n        let displayValue = value;\n        if (typeof value === 'boolean') {\n          displayValue = value ? '✓' : '✗';\n        }\n        \n        itemsHtml += `\n          <div class=\"summary-item\">\n            <span class=\"summary-label\">${label}:</span>\n            <span class=\"summary-value\">${displayValue}</span>\n          </div>\n        `;\n      });\n      \n      if (itemsHtml) {\n        summaryHtml += `\n          <div class=\"summary-module\">\n            <h4>${moduleTitle}</h4>\n            <div class=\"summary-items\">\n              ${itemsHtml}\n            </div>\n          </div>\n        `;\n      }\n    }\n  });\n  \n  if (!summaryHtml) return '';\n  \n  return `\n    <div class=\"input-summary\">\n      <h3>📋 ${t('inputSummaryTitle')}</h3>\n      <p class=\"summary-subtitle\">${t('inputSummarySubtitle')}</p>\n      <div class=\"summary-content\">\n        ${summaryHtml}\n      </div>\n    </div>\n  `;\n}\n\nfunction renderRiskCard(type, data, results) {\n  if (!data) return '';\n  \n  const percent = Math.round((data.probability || 0) * 100);\n  const riskLevel = getRiskLevel(percent, type);\n  const isCritical = percent > CRITICAL_THRESHOLDS[type].critical;\n  const isHigh = percent > CRITICAL_THRESHOLDS[type].high;\n  \n  const icons = { ich: '🧠', lvo: '🩸' };\n  const titles = { ich: t('ichProbability'), lvo: t('lvoProbability') };\n  \n  return `\n    <div class=\"enhanced-risk-card ${type} ${isCritical ? 'critical' : isHigh ? 'high' : 'normal'}\">\n      <div class=\"risk-header\">\n        <div class=\"risk-icon\">${icons[type]}</div>\n        <div class=\"risk-title\">\n          <h3>${titles[type]}</h3>\n          <span class=\"risk-module\">${data.module} Module</span>\n        </div>\n      </div>\n      \n      <div class=\"risk-probability\">\n        <div class=\"probability-circle\" data-percent=\"${percent}\">\n          <div class=\"probability-number\">${percent}<span>%</span></div>\n          <svg class=\"probability-ring\" width=\"120\" height=\"120\">\n            <circle cx=\"60\" cy=\"60\" r=\"54\" fill=\"none\" stroke=\"var(--border-color)\" stroke-width=\"8\"/>\n            <circle cx=\"60\" cy=\"60\" r=\"54\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"8\" \n                    stroke-dasharray=\"${2 * Math.PI * 54}\" \n                    stroke-dashoffset=\"${2 * Math.PI * 54 * (1 - percent / 100)}\"\n                    stroke-linecap=\"round\" \n                    transform=\"rotate(-90 60 60)\"\n                    class=\"probability-progress\"/>\n          </svg>\n        </div>\n        \n        <div class=\"risk-assessment\">\n          <div class=\"risk-level ${isCritical ? 'critical' : isHigh ? 'high' : 'normal'}\">\n            ${riskLevel}\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\nfunction renderLVONotPossible() {\n  return `\n    <div class=\"enhanced-risk-card lvo not-possible\">\n      <div class=\"risk-header\">\n        <div class=\"risk-icon\">🔍</div>\n        <div class=\"risk-title\">\n          <h3>${t('lvoProbability')}</h3>\n          <span class=\"risk-module\">${t('limitedAssessment')}</span>\n        </div>\n      </div>\n      \n      <div class=\"not-possible-content\">\n        <p>${t('lvoNotPossible')}</p>\n        <p>${t('fullExamRequired')}</p>\n      </div>\n    </div>\n  `;\n}\n\nexport function renderResults(results, startTime) {\n  const { ich, lvo } = results;\n  \n  const ichHtml = renderRiskCard('ich', ich, results);\n  const lvoHtml = lvo?.notPossible ? renderLVONotPossible() : renderRiskCard('lvo', lvo, results);\n  \n  const criticalAlert = ich && ich.probability > 0.6 ? renderCriticalAlert() : '';\n  const driversHtml = renderDriversSection(ich, lvo);\n  const strokeCenterHtml = renderStrokeCenterMap(results);\n  const inputSummaryHtml = renderInputSummary();\n\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(3)}\n      <h2>${t('resultsTitle')}</h2>\n      ${criticalAlert}\n      \n      <!-- Primary Risk Results -->\n      <div class=\"risk-results-grid\">\n        ${ichHtml}\n        ${lvoHtml}\n      </div>\n      \n      <!-- Model Drivers - Prominent Display -->\n      <div class=\"enhanced-drivers-section\">\n        ${driversHtml}\n      </div>\n      \n      <!-- Collapsible Additional Information -->\n      <div class=\"additional-info-section\">\n        <button class=\"info-toggle\" data-target=\"input-summary\">\n          <span class=\"toggle-icon\">📋</span>\n          <span class=\"toggle-text\">${t('inputSummaryTitle')}</span>\n          <span class=\"toggle-arrow\">▼</span>\n        </button>\n        <div class=\"collapsible-content\" id=\"input-summary\" style=\"display: none;\">\n          ${inputSummaryHtml}\n        </div>\n        \n        <button class=\"info-toggle\" data-target=\"stroke-centers\">\n          <span class=\"toggle-icon\">🏥</span>\n          <span class=\"toggle-text\">${t('nearestCentersTitle')}</span>\n          <span class=\"toggle-arrow\">▼</span>\n        </button>\n        <div class=\"collapsible-content\" id=\"stroke-centers\" style=\"display: none;\">\n          ${strokeCenterHtml}\n        </div>\n        \n        <button class=\"info-toggle\" data-target=\"clinical-info\">\n          <span class=\"toggle-icon\">ℹ️</span>\n          <span class=\"toggle-text\">${t('clinicalInformation')}</span>\n          <span class=\"toggle-arrow\">▼</span>\n        </button>\n        <div class=\"collapsible-content\" id=\"clinical-info\" style=\"display: none;\">\n          <div class=\"clinical-recommendations\">\n            <h4>${t('clinicalRecommendations')}</h4>\n            <ul>\n              <li>${t('clinicalRec1')}</li>\n              <li>${t('clinicalRec2')}</li>\n              <li>${t('clinicalRec3')}</li>\n              <li>${t('clinicalRec4')}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"results-actions\">\n        <div class=\"primary-actions\">\n          <button type=\"button\" class=\"primary\" id=\"printResults\"> 📄 ${t('printResults')} </button>\n          <button type=\"button\" class=\"secondary\" data-action=\"reset\"> ${t('newAssessment')} </button>\n        </div>\n        <div class=\"navigation-actions\">\n          <button type=\"button\" class=\"tertiary\" data-action=\"goBack\"> ← ${t('goBack')} </button>\n          <button type=\"button\" class=\"tertiary\" data-action=\"goHome\"> 🏠 ${t('goHome')} </button>\n        </div>\n      </div>\n      \n      <div class=\"disclaimer\">\n        <strong>⚠️ ${t('importantNote')}:</strong> ${t('importantText')} Results generated at ${new Date().toLocaleTimeString()}.\n      </div>\n    </div>\n  `;\n}","import { VALIDATION_RULES } from '../config.js';\n\nexport function validateInput(name, value, rules) {\n  const errors = [];\n  \n  if (rules.required && !value && value !== 0) {\n    errors.push('This field is required');\n  }\n  \n  if (rules.min !== undefined && value !== '' && !isNaN(value) && parseFloat(value) < rules.min) {\n    errors.push(`Value must be at least ${rules.min}`);\n  }\n  \n  if (rules.max !== undefined && value !== '' && !isNaN(value) && parseFloat(value) > rules.max) {\n    errors.push(`Value must be at most ${rules.max}`);\n  }\n  \n  if (rules.pattern && !rules.pattern.test(value)) {\n    errors.push('Invalid format');\n  }\n  \n  return errors;\n}\n\nexport function validateForm(form) {\n  let isValid = true;\n  const validationErrors = {};\n\n  Object.entries(VALIDATION_RULES).forEach(([name, rules]) => {\n    const input = form.elements[name];\n    if (input) {\n      const errors = validateInput(name, input.value, rules);\n      if (errors.length > 0) {\n        validationErrors[name] = errors;\n        isValid = false;\n      }\n    }\n  });\n  \n  return { isValid, validationErrors };\n}\n\nexport function showValidationErrors(container, validationErrors) {\n  Object.entries(validationErrors).forEach(([name, errors]) => {\n    const input = container.querySelector(`[name=\"${name}\"]`);\n    if (input) {\n      const group = input.closest('.input-group');\n      if (group) {\n        group.classList.add('error');\n        // Remove existing error messages\n        group.querySelectorAll('.error-message').forEach(el => el.remove());\n        // Add new error message\n        const errorDiv = document.createElement('div');\n        errorDiv.className = 'error-message';\n        errorDiv.innerHTML = `<span class=\"error-icon\">⚠️</span> ${errors[0]}`;\n        group.appendChild(errorDiv);\n      }\n    }\n  });\n}\n\nexport function clearValidationErrors(container) {\n  container.querySelectorAll('.input-group.error').forEach(group => {\n    group.classList.remove('error');\n    group.querySelectorAll('.error-message').forEach(el => el.remove());\n  });\n}","import { API_URLS, APP_CONFIG } from '../config.js';\n\nclass APIError extends Error {\n  constructor(message, status, url) {\n    super(message);\n    this.name = 'APIError';\n    this.status = status;\n    this.url = url;\n  }\n}\n\nfunction normalizeBooleans(payload) {\n  const normalized = { ...payload };\n  \n  Object.keys(normalized).forEach(key => {\n    const value = normalized[key];\n    if (typeof value === 'boolean' || value === 'on' || value === 'true' || value === 'false') {\n      normalized[key] = value === true || value === 'on' || value === 'true' ? 1 : 0;\n    }\n  });\n  \n  return normalized;\n}\n\nfunction safeParseFloat(value, defaultValue = 0) {\n  const parsed = parseFloat(value);\n  return isNaN(parsed) ? defaultValue : parsed;\n}\n\nasync function fetchJSON(url, payload) {\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), APP_CONFIG.requestTimeout);\n  \n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify(payload),\n      signal: controller.signal,\n      mode: 'cors'\n    });\n    \n    clearTimeout(timeoutId);\n    \n    if (!response.ok) {\n      let errorMessage = `HTTP ${response.status}`;\n      try {\n        const errorData = await response.json();\n        errorMessage = errorData.error || errorData.message || errorMessage;\n      } catch {\n        errorMessage = `${errorMessage}: ${response.statusText}`;\n      }\n      throw new APIError(errorMessage, response.status, url);\n    }\n    \n    const data = await response.json();\n    return data;\n    \n  } catch (error) {\n    clearTimeout(timeoutId);\n    \n    if (error.name === 'AbortError') {\n      throw new APIError('Request timeout - please try again', 408, url);\n    }\n    \n    if (error instanceof APIError) {\n      throw error;\n    }\n    \n    // Network or other errors\n    throw new APIError(\n      'Network error - please check your connection and try again',\n      0,\n      url\n    );\n  }\n}\n\nexport async function predictComaIch(payload) {\n  const normalizedPayload = normalizeBooleans(payload);\n  \n  // Debug log the payload being sent\n  console.log('Coma ICH API Payload:', normalizedPayload);\n  \n  try {\n    const response = await fetchJSON(API_URLS.COMA_ICH, normalizedPayload);\n    \n    // Debug log the API response\n    console.log('Coma ICH API Response:', response);\n    \n    // Normalize response format for consistency\n    return {\n      probability: safeParseFloat(response.probability || response.ich_probability, 0),\n      drivers: response.drivers || null,\n      confidence: safeParseFloat(response.confidence, 0.75),\n      module: 'Coma'\n    };\n  } catch (error) {\n    console.error('Coma ICH prediction failed:', error);\n    throw new APIError(\n      `Failed to get ICH prediction: ${error.message}`,\n      error.status,\n      API_URLS.COMA_ICH\n    );\n  }\n}\n\nexport async function predictLimitedIch(payload) {\n  // Ensure all required fields are present for the Limited Data API\n  const fullPayload = {\n    age_years: payload.age_years,\n    systolic_bp: payload.systolic_bp,\n    diastolic_bp: payload.diastolic_bp,\n    gfap_value: payload.gfap_value,\n    // Ensure checkbox fields are present (default to 0 if missing/unchecked)\n    vigilanzminderung: payload.vigilanzminderung || 0\n  };\n  \n  const normalizedPayload = normalizeBooleans(fullPayload);\n  \n  // Debug log the payload being sent\n  console.log('Limited Data ICH API Payload:', normalizedPayload);\n  \n  try {\n    const response = await fetchJSON(API_URLS.LDM_ICH, normalizedPayload);\n    \n    // Debug log the API response\n    console.log('Limited Data ICH API Response:', response);\n    \n    // Normalize response format for consistency\n    return {\n      probability: safeParseFloat(response.probability || response.ich_probability, 0),\n      drivers: response.drivers || null,\n      confidence: safeParseFloat(response.confidence, 0.65),\n      module: 'Limited Data'\n    };\n  } catch (error) {\n    console.error('Limited Data ICH prediction failed:', error);\n    throw new APIError(\n      `Failed to get ICH prediction: ${error.message}`,\n      error.status,\n      API_URLS.LDM_ICH\n    );\n  }\n}\n\nexport async function predictFullStroke(payload) {\n  // Ensure all required fields are present for the Full Stroke API\n  const fullPayload = {\n    age_years: payload.age_years,\n    systolic_bp: payload.systolic_bp,\n    diastolic_bp: payload.diastolic_bp,\n    gfap_value: payload.gfap_value,\n    fast_ed_score: payload.fast_ed_score,\n    // Ensure all checkbox fields are present (default to 0 if missing)\n    headache: payload.headache || 0,\n    vigilanzminderung: payload.vigilanzminderung || 0,\n    armparese: payload.armparese || 0,\n    beinparese: payload.beinparese || 0,\n    eye_deviation: payload.eye_deviation || 0,\n    atrial_fibrillation: payload.atrial_fibrillation || 0,\n    anticoagulated_noak: payload.anticoagulated_noak || 0,\n    antiplatelets: payload.antiplatelets || 0\n  };\n  \n  const normalizedPayload = normalizeBooleans(fullPayload);\n  \n  // Debug log the payload being sent\n  console.log('Full Stroke API Payload:', normalizedPayload);\n  \n  try {\n    const response = await fetchJSON(API_URLS.FULL_STROKE, normalizedPayload);\n    \n    // Debug log the API response\n    console.log('Full Stroke API Response:', response);\n    console.log('Available keys in response:', Object.keys(response));\n    console.log('Response type:', typeof response);\n    \n    // Try to identify probability values\n    Object.keys(response).forEach(key => {\n      const value = response[key];\n      if (typeof value === 'number' && value >= 0 && value <= 1) {\n        console.log(`Potential probability field: ${key} = ${value}`);\n      }\n    });\n    \n    // Extract ICH and LVO predictions based on actual API response structure\n    const ichProbability = safeParseFloat(\n      response.ich_prediction?.probability || \n      response.ich_probability || \n      response.ich?.probability || \n      response.ICH_probability || \n      response.ich_prob || \n      response.probability?.ich ||\n      response.results?.ich_probability, 0);\n    \n    const lvoProbability = safeParseFloat(\n      response.lvo_prediction?.probability || \n      response.lvo_probability || \n      response.lvo?.probability || \n      response.LVO_probability || \n      response.lvo_prob ||\n      response.probability?.lvo ||\n      response.results?.lvo_probability, 0);\n      \n    console.log('Extracted probabilities:', { ich: ichProbability, lvo: lvoProbability });\n\n    const ichResult = {\n      probability: ichProbability,\n      drivers: response.ich_prediction?.drivers || response.ich_drivers || response.ich?.drivers || response.drivers?.ich || null,\n      confidence: safeParseFloat(response.ich_prediction?.confidence || response.ich_confidence || response.ich?.confidence, 0.85),\n      module: 'Full Stroke'\n    };\n    \n    const lvoResult = {\n      probability: lvoProbability,\n      drivers: response.lvo_prediction?.drivers || response.lvo_drivers || response.lvo?.drivers || response.drivers?.lvo || null,\n      confidence: safeParseFloat(response.lvo_prediction?.confidence || response.lvo_confidence || response.lvo?.confidence, 0.85),\n      module: 'Full Stroke'\n    };\n    \n    return {\n      ich: ichResult,\n      lvo: lvoResult\n    };\n  } catch (error) {\n    console.error('Full Stroke prediction failed:', error);\n    throw new APIError(\n      `Failed to get stroke predictions: ${error.message}`,\n      error.status,\n      API_URLS.FULL_STROKE\n    );\n  }\n}\n\n// Export the error class for use in other modules\nexport { APIError };","import { store } from '../state/store.js';\nimport { validateForm, showValidationErrors } from './validate.js';\nimport { predictComaIch, predictLimitedIch, predictFullStroke, APIError } from '../api/client.js';\nimport { t } from '../localization/i18n.js';\n\nexport function handleTriage1(isComatose) {\n  store.logEvent('triage1_answer', { comatose: isComatose });\n  const nextScreen = isComatose ? 'coma' : 'triage2';\n  navigate(nextScreen);\n}\n\nexport function handleTriage2(isExaminable) {\n  store.logEvent('triage2_answer', { examinable: isExaminable });\n  const nextScreen = isExaminable ? 'full' : 'limited';\n  navigate(nextScreen);\n}\n\nexport function navigate(screen) {\n  store.logEvent('navigate', { \n    from: store.getState().currentScreen, \n    to: screen \n  });\n  store.navigate(screen);\n  window.scrollTo(0, 0);\n}\n\nexport function reset() {\n  if (store.hasUnsavedData()) {\n    if (!confirm('Are you sure you want to start over? All entered data will be lost.')) {\n      return;\n    }\n  }\n  store.logEvent('reset');\n  store.reset();\n}\n\nexport function goBack() {\n  console.log('goBack() called');\n  const success = store.goBack();\n  console.log('goBack() success:', success);\n  if (success) {\n    store.logEvent('navigate_back');\n    window.scrollTo(0, 0);\n  } else {\n    console.log('No history available, going home instead');\n    goHome();\n  }\n}\n\nexport function goHome() {\n  console.log('goHome() called');\n  store.logEvent('navigate_home');\n  store.goHome();\n  window.scrollTo(0, 0);\n}\n\nexport async function handleSubmit(e, container) {\n  e.preventDefault();\n  const form = e.target;\n  const module = form.dataset.module;\n\n  // Validate form\n  const validation = validateForm(form);\n  if (!validation.isValid) {\n    showValidationErrors(container, validation.validationErrors);\n    return;\n  }\n\n  // Collect inputs - handle all form elements including unchecked checkboxes\n  const inputs = {};\n  \n  // Process all form elements to ensure checkboxes are included\n  Array.from(form.elements).forEach(element => {\n    if (element.name) {\n      if (element.type === 'checkbox') {\n        inputs[element.name] = element.checked;\n      } else if (element.type === 'number') {\n        const n = parseFloat(element.value);\n        inputs[element.name] = isNaN(n) ? 0 : n;\n      } else if (element.type === 'hidden') {\n        // Handle hidden fields (like armparese from FAST-ED)\n        if (element.name === 'armparese') {\n          inputs[element.name] = element.value === 'true';\n        } else {\n          inputs[element.name] = element.value;\n        }\n      } else {\n        inputs[element.name] = element.value;\n      }\n    }\n  });\n  \n  console.log('Collected form inputs:', inputs);\n\n  // Store form data\n  store.setFormData(module, inputs);\n\n  // Show loading state\n  const button = form.querySelector('button[type=submit]');\n  const originalContent = button ? button.innerHTML : '';\n  if (button) {\n    button.disabled = true;\n    button.innerHTML = `<span class=\"loading-spinner\"></span> ${t('analyzing')}`;\n  }\n\n  try {\n    // Run models based on module\n    let results;\n    \n    switch (module) {\n      case 'coma':\n        const comaResult = await predictComaIch(inputs);\n        results = {\n          ich: comaResult,\n          lvo: null\n        };\n        break;\n        \n      case 'limited':\n        const limitedResult = await predictLimitedIch(inputs);\n        results = {\n          ich: limitedResult,\n          lvo: { notPossible: true }\n        };\n        break;\n        \n      case 'full':\n        results = await predictFullStroke(inputs);\n        break;\n        \n      default:\n        throw new Error('Unknown module: ' + module);\n    }\n\n    store.setResults(results);\n    store.logEvent('models_complete', { module, results });\n    navigate('results');\n    \n  } catch (error) {\n    console.error('Error running models:', error);\n    \n    let errorMessage = 'An error occurred during analysis. Please try again.';\n    if (error instanceof APIError) {\n      errorMessage = error.message;\n    }\n    \n    showError(container, errorMessage);\n    \n    if (button) {\n      button.disabled = false;\n      button.innerHTML = originalContent;\n    }\n  }\n}\n\nfunction showError(container, message) {\n  // Remove existing error alerts\n  container.querySelectorAll('.critical-alert').forEach(alert => {\n    if (alert.querySelector('h4')?.textContent?.includes('Error')) {\n      alert.remove();\n    }\n  });\n\n  const alert = document.createElement('div');\n  alert.className = 'critical-alert';\n  alert.innerHTML = `<h4><span class=\"alert-icon\">⚠️</span> Error</h4><p>${message}</p>`;\n  \n  const containerDiv = container.querySelector('.container');\n  if (containerDiv) {\n    containerDiv.prepend(alert);\n  } else {\n    container.prepend(alert);\n  }\n  \n  setTimeout(() => alert.remove(), 10000);\n}","/**\n * Accessibility utilities for the Stroke Triage Assistant\n */\n\nexport function announceScreenChange(screen) {\n  const announcement = document.createElement('div');\n  announcement.className = 'sr-only';\n  announcement.setAttribute('role', 'status');\n  announcement.setAttribute('aria-live', 'polite');\n  \n  const screenNames = {\n    'triage1': 'Coma assessment',\n    'triage2': 'Examination capability assessment',\n    'coma': 'Coma module',\n    'limited': 'Limited data module',\n    'full': 'Full stroke assessment',\n    'results': 'Assessment results'\n  };\n  \n  announcement.textContent = `Navigated to ${screenNames[screen] || screen}`;\n  document.body.appendChild(announcement);\n  \n  setTimeout(() => announcement.remove(), 1000);\n}\n\nexport function setPageTitle(screen) {\n  const titles = {\n    'triage1': 'Initial Assessment - Stroke Triage Assistant',\n    'triage2': 'Examination Capability - Stroke Triage Assistant',\n    'coma': 'Coma Module - Stroke Triage Assistant',\n    'limited': 'Limited Data Module - Stroke Triage Assistant',\n    'full': 'Full Stroke Module - Stroke Triage Assistant',\n    'results': 'Assessment Results - Stroke Triage Assistant'\n  };\n  \n  document.title = titles[screen] || 'Stroke Triage Assistant';\n}\n\nexport function focusMainHeading() {\n  // Focus on the main heading for screen readers\n  setTimeout(() => {\n    const heading = document.querySelector('h2');\n    if (heading) {\n      heading.setAttribute('tabindex', '-1');\n      heading.focus();\n      // Remove tabindex after focus for proper tab order\n      setTimeout(() => heading.removeAttribute('tabindex'), 100);\n    }\n  }, 100);\n}","import { t } from '../../localization/i18n.js';\n\nexport class FastEdCalculator {\n  constructor() {\n    this.scores = {\n      facial_palsy: 0,\n      arm_weakness: 0,\n      speech_changes: 0,\n      eye_deviation: 0,\n      denial_neglect: 0\n    };\n    this.onApply = null;\n    this.modal = null;\n  }\n\n  getTotal() {\n    return Object.values(this.scores).reduce((sum, score) => sum + score, 0);\n  }\n\n  getRiskLevel() {\n    const total = this.getTotal();\n    return total >= 4 ? 'high' : 'low';\n  }\n\n  render() {\n    const total = this.getTotal();\n    const riskLevel = this.getRiskLevel();\n    \n    return `\n      <div id=\"fastEdModal\" class=\"modal\" role=\"dialog\" aria-labelledby=\"fastEdModalTitle\" aria-hidden=\"true\" style=\"display: none;\">\n        <div class=\"modal-content fast-ed-modal\">\n          <div class=\"modal-header\">\n            <h2 id=\"fastEdModalTitle\">${t('fastEdCalculatorTitle')}</h2>\n            <button class=\"modal-close\" aria-label=\"Close\">&times;</button>\n          </div>\n          <div class=\"modal-body\">\n            \n            <!-- Facial Palsy -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('facialPalsyTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"facial_palsy\" value=\"0\" ${this.scores.facial_palsy === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('facialPalsyNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"facial_palsy\" value=\"1\" ${this.scores.facial_palsy === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('facialPalsyMild')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Arm Weakness -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('armWeaknessTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"arm_weakness\" value=\"0\" ${this.scores.arm_weakness === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('armWeaknessNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"arm_weakness\" value=\"1\" ${this.scores.arm_weakness === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('armWeaknessMild')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"arm_weakness\" value=\"2\" ${this.scores.arm_weakness === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('armWeaknessSevere')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Speech Changes -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('speechChangesTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"speech_changes\" value=\"0\" ${this.scores.speech_changes === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('speechChangesNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"speech_changes\" value=\"1\" ${this.scores.speech_changes === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('speechChangesMild')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"speech_changes\" value=\"2\" ${this.scores.speech_changes === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('speechChangesSevere')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Eye Deviation -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('eyeDeviationTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"eye_deviation\" value=\"0\" ${this.scores.eye_deviation === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('eyeDeviationNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"eye_deviation\" value=\"1\" ${this.scores.eye_deviation === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('eyeDeviationPartial')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"eye_deviation\" value=\"2\" ${this.scores.eye_deviation === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('eyeDeviationForced')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Denial/Neglect -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('denialNeglectTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"denial_neglect\" value=\"0\" ${this.scores.denial_neglect === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('denialNeglectNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"denial_neglect\" value=\"1\" ${this.scores.denial_neglect === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('denialNeglectPartial')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"denial_neglect\" value=\"2\" ${this.scores.denial_neglect === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('denialNeglectComplete')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Total Score Display -->\n            <div class=\"fast-ed-total\">\n              <div class=\"score-display\">\n                <h3>${t('totalScoreTitle')}: <span class=\"total-score\">${total}/9</span></h3>\n                <div class=\"risk-indicator ${riskLevel}\">\n                  ${t('riskLevel')}: ${riskLevel === 'high' ? t('riskLevelHigh') : t('riskLevelLow')}\n                </div>\n              </div>\n            </div>\n\n          </div>\n          <div class=\"modal-footer\">\n            <button class=\"secondary\" data-action=\"cancel-fast-ed\">${t('cancel')}</button>\n            <button class=\"primary\" data-action=\"apply-fast-ed\">${t('applyScore')}</button>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  setupEventListeners() {\n    this.modal = document.getElementById('fastEdModal');\n    if (!this.modal) return;\n\n    // Radio button changes\n    this.modal.addEventListener('change', (e) => {\n      if (e.target.type === 'radio') {\n        const component = e.target.name;\n        const value = parseInt(e.target.value);\n        this.scores[component] = value;\n        this.updateDisplay();\n      }\n    });\n\n    // Close button\n    const closeBtn = this.modal.querySelector('.modal-close');\n    closeBtn?.addEventListener('click', () => this.close());\n\n    // Cancel button\n    const cancelBtn = this.modal.querySelector('[data-action=\"cancel-fast-ed\"]');\n    cancelBtn?.addEventListener('click', () => this.close());\n\n    // Apply button\n    const applyBtn = this.modal.querySelector('[data-action=\"apply-fast-ed\"]');\n    applyBtn?.addEventListener('click', () => this.apply());\n\n    // Click outside to close\n    this.modal.addEventListener('click', (e) => {\n      if (e.target === this.modal) {\n        this.close();\n      }\n    });\n\n    // Keyboard navigation\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape' && this.modal?.classList.contains('show')) {\n        this.close();\n      }\n    });\n  }\n\n  updateDisplay() {\n    const totalElement = this.modal?.querySelector('.total-score');\n    const riskElement = this.modal?.querySelector('.risk-indicator');\n    \n    if (totalElement) {\n      totalElement.textContent = `${this.getTotal()}/9`;\n    }\n    \n    if (riskElement) {\n      const riskLevel = this.getRiskLevel();\n      riskElement.className = `risk-indicator ${riskLevel}`;\n      riskElement.textContent = `${t('riskLevel')}: ${riskLevel === 'high' ? t('riskLevelHigh') : t('riskLevelLow')}`;\n    }\n  }\n\n  show(currentScore = 0, onApplyCallback = null) {\n    this.onApply = onApplyCallback;\n    \n    // If we have a current score, try to reverse engineer it (basic approximation)\n    if (currentScore > 0 && currentScore <= 9) {\n      this.approximateFromTotal(currentScore);\n    }\n    \n    // Inject modal HTML if not already present\n    if (!document.getElementById('fastEdModal')) {\n      document.body.insertAdjacentHTML('beforeend', this.render());\n    } else {\n      // Re-render the modal with current state\n      this.modal.remove();\n      document.body.insertAdjacentHTML('beforeend', this.render());\n      this.modal = document.getElementById('fastEdModal');\n    }\n    \n    this.setupEventListeners();\n    \n    this.modal.style.display = 'flex';\n    this.modal.classList.add('show');\n    this.modal.setAttribute('aria-hidden', 'false');\n    \n    // Focus first radio button\n    const firstRadio = this.modal.querySelector('input[type=\"radio\"]');\n    firstRadio?.focus();\n  }\n\n  close() {\n    if (this.modal) {\n      this.modal.classList.remove('show');\n      this.modal.style.display = 'none';\n      this.modal.setAttribute('aria-hidden', 'true');\n    }\n  }\n\n  apply() {\n    const total = this.getTotal();\n    const armWeaknessBoolean = this.scores.arm_weakness > 0;\n    const eyeDeviationBoolean = this.scores.eye_deviation > 0;\n    \n    if (this.onApply) {\n      this.onApply({\n        total,\n        components: { ...this.scores },\n        armWeaknessBoolean,\n        eyeDeviationBoolean\n      });\n    }\n    \n    this.close();\n  }\n\n  approximateFromTotal(total) {\n    // Simple approximation - distribute points across components\n    // This is basic but gives users a starting point\n    this.scores = {\n      facial_palsy: 0,\n      arm_weakness: 0,\n      speech_changes: 0,\n      eye_deviation: 0,\n      denial_neglect: 0\n    };\n    \n    let remaining = total;\n    const components = Object.keys(this.scores);\n    \n    for (const component of components) {\n      if (remaining <= 0) break;\n      \n      const maxForComponent = (component === 'facial_palsy') ? 1 : 2;\n      const assignToThis = Math.min(remaining, maxForComponent);\n      this.scores[component] = assignToThis;\n      remaining -= assignToThis;\n    }\n  }\n}\n\n// Create singleton instance\nexport const fastEdCalculator = new FastEdCalculator();","import { store } from '../state/store.js';\nimport { renderTriage1 } from './screens/triage1.js';\nimport { renderTriage2 } from './screens/triage2.js';\nimport { renderComa } from './screens/coma.js';\nimport { renderLimited } from './screens/limited.js';\nimport { renderFull } from './screens/full.js';\nimport { renderResults } from './screens/results.js';\nimport { handleTriage1, handleTriage2, handleSubmit, reset, goBack, goHome } from '../logic/handlers.js';\nimport { clearValidationErrors } from '../logic/validate.js';\nimport { announceScreenChange, setPageTitle, focusMainHeading } from './a11y.js';\nimport { initializeStrokeCenterMap } from './components/stroke-center-map.js';\nimport { fastEdCalculator } from './components/fastEdModal.js';\n\nexport function render(container) {\n  const state = store.getState();\n  const { currentScreen, results, startTime } = state;\n\n  // Clear container\n  container.innerHTML = '';\n\n  // Render the appropriate screen\n  let html = '';\n  switch (currentScreen) {\n    case 'triage1':\n      html = renderTriage1();\n      break;\n    case 'triage2':\n      html = renderTriage2();\n      break;\n    case 'coma':\n      html = renderComa();\n      break;\n    case 'limited':\n      html = renderLimited();\n      break;\n    case 'full':\n      html = renderFull();\n      break;\n    case 'results':\n      html = renderResults(results, startTime);\n      break;\n    default:\n      html = renderTriage1();\n  }\n\n  container.innerHTML = html;\n\n  // Restore form data if available\n  const form = container.querySelector('form[data-module]');\n  if (form) {\n    const module = form.dataset.module;\n    restoreFormData(form, module);\n  }\n\n  // Attach event listeners\n  attachEvents(container);\n\n  // Initialize stroke center map if on results screen\n  if (currentScreen === 'results' && results) {\n    setTimeout(() => {\n      initializeStrokeCenterMap(results);\n    }, 100);\n  }\n\n  // Accessibility updates\n  announceScreenChange(currentScreen);\n  setPageTitle(currentScreen);\n  focusMainHeading();\n}\n\nfunction restoreFormData(form, module) {\n  const formData = store.getFormData(module);\n  if (!formData || Object.keys(formData).length === 0) return;\n\n  Object.entries(formData).forEach(([key, value]) => {\n    const input = form.elements[key];\n    if (input) {\n      if (input.type === 'checkbox') {\n        input.checked = value === true || value === 'on' || value === 'true';\n      } else {\n        input.value = value;\n      }\n    }\n  });\n}\n\nfunction attachEvents(container) {\n  // Clear any existing validation errors when inputs change\n  container.querySelectorAll('input[type=\"number\"]').forEach(input => {\n    input.addEventListener('blur', () => {\n      clearValidationErrors(container);\n    });\n  });\n\n  // Triage button handlers\n  container.querySelectorAll('[data-action]').forEach(button => {\n    button.addEventListener('click', (e) => {\n      const { action, value } = e.currentTarget.dataset;\n      const boolVal = value === 'true';\n      \n      switch (action) {\n        case 'triage1':\n          handleTriage1(boolVal);\n          break;\n        case 'triage2':\n          handleTriage2(boolVal);\n          break;\n        case 'reset':\n          reset();\n          break;\n        case 'goBack':\n          goBack();\n          break;\n        case 'goHome':\n          goHome();\n          break;\n      }\n    });\n  });\n\n  // Form submission handlers\n  container.querySelectorAll('form[data-module]').forEach(form => {\n    form.addEventListener('submit', (e) => {\n      handleSubmit(e, container);\n    });\n  });\n\n  // Print button handler\n  const printButton = container.querySelector('#printResults');\n  if (printButton) {\n    printButton.addEventListener('click', () => window.print());\n  }\n\n  // FAST-ED calculator handler\n  const fastEdInput = container.querySelector('#fast_ed_score');\n  if (fastEdInput) {\n    fastEdInput.addEventListener('click', (e) => {\n      e.preventDefault();\n      const currentValue = parseInt(fastEdInput.value) || 0;\n      \n      fastEdCalculator.show(currentValue, (result) => {\n        // Update FAST-ED score\n        fastEdInput.value = result.total;\n        \n        // Update hidden arm weakness field\n        const armPareseField = container.querySelector('#armparese_hidden');\n        if (armPareseField) {\n          armPareseField.value = result.armWeaknessBoolean ? 'true' : 'false';\n        }\n        \n        // Update eye deviation checkbox if exists\n        const eyeDeviationCheckbox = container.querySelector('#eye_deviation');\n        if (eyeDeviationCheckbox) {\n          eyeDeviationCheckbox.checked = result.eyeDeviationBoolean;\n        }\n        \n        // Trigger change event to save form data\n        fastEdInput.dispatchEvent(new Event('change', { bubbles: true }));\n      });\n    });\n    \n    // Prevent manual typing\n    fastEdInput.addEventListener('keydown', (e) => {\n      e.preventDefault();\n    });\n  }\n\n  // Collapsible info toggles handler\n  const infoToggles = container.querySelectorAll('.info-toggle');\n  infoToggles.forEach(toggle => {\n    toggle.addEventListener('click', (e) => {\n      const targetId = toggle.dataset.target;\n      const targetContent = container.querySelector(`#${targetId}`);\n      const arrow = toggle.querySelector('.toggle-arrow');\n      \n      if (targetContent) {\n        const isVisible = targetContent.style.display !== 'none';\n        \n        if (isVisible) {\n          // Hide content\n          targetContent.style.display = 'none';\n          targetContent.classList.remove('show');\n          toggle.classList.remove('active');\n          arrow.style.transform = 'rotate(0deg)';\n        } else {\n          // Show content\n          targetContent.style.display = 'block';\n          targetContent.classList.add('show');\n          toggle.classList.add('active');\n          arrow.style.transform = 'rotate(180deg)';\n        }\n      }\n    });\n  });\n}","import { store } from './state/store.js';\nimport { render } from './ui/render.js';\nimport { APP_CONFIG } from './config.js';\nimport { i18n, t } from './localization/i18n.js';\n\nclass App {\n  constructor() {\n    this.container = null;\n    this.unsubscribe = null;\n  }\n\n  async init() {\n    // Wait for DOM to be ready\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', () => this.init());\n      return;\n    }\n\n    this.container = document.getElementById('appContainer');\n    if (!this.container) {\n      console.error('App container not found');\n      return;\n    }\n\n    // Subscribe to store changes\n    this.unsubscribe = store.subscribe(() => {\n      render(this.container);\n    });\n\n    // Subscribe to language changes\n    window.addEventListener('languageChanged', () => {\n      this.updateUILanguage();\n      render(this.container);\n    });\n\n    // Setup global event listeners\n    this.setupGlobalEventListeners();\n\n    // Initialize theme\n    this.initializeTheme();\n    \n    // Initialize language\n    this.updateUILanguage();\n\n    // Start auto-save\n    this.startAutoSave();\n\n    // Setup session timeout\n    this.setupSessionTimeout();\n\n    // Set current year in footer\n    this.setCurrentYear();\n\n    // Register PWA Service Worker\n    this.registerServiceWorker();\n\n    // Initial render\n    render(this.container);\n\n    console.log('Stroke Triage Assistant initialized');\n  }\n\n  setupGlobalEventListeners() {\n    // Language toggle\n    const languageToggle = document.getElementById('languageToggle');\n    if (languageToggle) {\n      languageToggle.addEventListener('click', () => this.toggleLanguage());\n    }\n\n    // Dark mode toggle\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    if (darkModeToggle) {\n      darkModeToggle.addEventListener('click', () => this.toggleDarkMode());\n    }\n\n    // Help modal\n    this.setupHelpModal();\n\n    // Footer links\n    this.setupFooterLinks();\n\n    // Keyboard navigation\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        const helpModal = document.getElementById('helpModal');\n        if (helpModal && helpModal.classList.contains('show')) {\n          helpModal.classList.remove('show');\n          helpModal.style.display = 'none';\n          helpModal.setAttribute('aria-hidden', 'true');\n        }\n      }\n    });\n\n    // Before unload warning\n    window.addEventListener('beforeunload', (e) => {\n      if (store.hasUnsavedData()) {\n        e.preventDefault();\n        e.returnValue = 'You have unsaved data. Are you sure you want to leave?';\n      }\n    });\n  }\n\n  setupHelpModal() {\n    const helpButton = document.getElementById('helpButton');\n    const helpModal = document.getElementById('helpModal');\n    const modalClose = helpModal?.querySelector('.modal-close');\n\n    if (helpButton && helpModal) {\n      // Ensure modal starts hidden\n      helpModal.classList.remove('show');\n      helpModal.style.display = 'none';\n      helpModal.setAttribute('aria-hidden', 'true');\n\n      helpButton.addEventListener('click', () => {\n        helpModal.style.display = 'flex';\n        helpModal.classList.add('show');\n        helpModal.setAttribute('aria-hidden', 'false');\n      });\n      \n      const closeModal = () => {\n        helpModal.classList.remove('show');\n        helpModal.style.display = 'none';\n        helpModal.setAttribute('aria-hidden', 'true');\n      };\n      \n      modalClose?.addEventListener('click', closeModal);\n      \n      helpModal.addEventListener('click', (e) => {\n        if (e.target === helpModal) {\n          closeModal();\n        }\n      });\n    }\n  }\n\n  setupFooterLinks() {\n    document.getElementById('privacyLink')?.addEventListener('click', (e) => {\n      e.preventDefault();\n      this.showPrivacyPolicy();\n    });\n    \n    document.getElementById('disclaimerLink')?.addEventListener('click', (e) => {\n      e.preventDefault();\n      this.showDisclaimer();\n    });\n  }\n\n  initializeTheme() {\n    const savedTheme = localStorage.getItem('theme');\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    \n    if (savedTheme === 'dark' || (!savedTheme && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n      document.body.classList.add('dark-mode');\n      if (darkModeToggle) darkModeToggle.textContent = '☀️';\n    }\n  }\n\n  toggleLanguage() {\n    i18n.toggleLanguage();\n    this.updateUILanguage();\n  }\n\n  updateUILanguage() {\n    // Update HTML lang attribute\n    document.documentElement.lang = i18n.getCurrentLanguage();\n    \n    // Update header text\n    const headerTitle = document.querySelector('.app-header h1');\n    if (headerTitle) {\n      headerTitle.textContent = t('appTitle');\n    }\n    \n    const emergencyBadge = document.querySelector('.emergency-badge');\n    if (emergencyBadge) {\n      emergencyBadge.textContent = t('emergencyBadge');\n    }\n    \n    // Update button tooltips\n    const languageToggle = document.getElementById('languageToggle');\n    if (languageToggle) {\n      languageToggle.title = t('languageToggle');\n      languageToggle.setAttribute('aria-label', t('languageToggle'));\n    }\n    \n    const helpButton = document.getElementById('helpButton');\n    if (helpButton) {\n      helpButton.title = t('helpButton');\n      helpButton.setAttribute('aria-label', t('helpButton'));\n    }\n    \n    const darkModeToggle = document.getElementById('darkModeToggle');\n    if (darkModeToggle) {\n      darkModeToggle.title = t('darkModeButton');\n      darkModeToggle.setAttribute('aria-label', t('darkModeButton'));\n    }\n    \n    // Update help modal\n    const modalTitle = document.getElementById('modalTitle');\n    if (modalTitle) {\n      modalTitle.textContent = t('helpTitle');\n    }\n    \n    // Note: Stroke center map initialization is handled in render.js\n  }\n\n  toggleDarkMode() {\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    document.body.classList.toggle('dark-mode');\n    const isDark = document.body.classList.contains('dark-mode');\n    \n    if (darkModeToggle) {\n      darkModeToggle.textContent = isDark ? '☀️' : '🌙';\n    }\n    \n    localStorage.setItem('theme', isDark ? 'dark' : 'light');\n  }\n\n  startAutoSave() {\n    setInterval(() => {\n      this.saveCurrentFormData();\n    }, APP_CONFIG.autoSaveInterval);\n  }\n\n  saveCurrentFormData() {\n    const forms = this.container.querySelectorAll('form[data-module]');\n    forms.forEach(form => {\n      const formData = new FormData(form);\n      const module = form.dataset.module;\n      if (module) {\n        const data = {};\n        formData.forEach((value, key) => {\n          const element = form.elements[key];\n          if (element && element.type === 'checkbox') {\n            data[key] = element.checked;\n          } else {\n            data[key] = value;\n          }\n        });\n        \n        // Only save if data has actually changed to prevent unnecessary re-renders\n        const currentData = store.getFormData(module);\n        const hasChanges = JSON.stringify(currentData) !== JSON.stringify(data);\n        if (hasChanges) {\n          store.setFormData(module, data);\n        }\n      }\n    });\n  }\n\n  setupSessionTimeout() {\n    setTimeout(() => {\n      if (confirm('Your session has been idle for 30 minutes. Would you like to continue?')) {\n        this.setupSessionTimeout();\n      } else {\n        store.reset();\n      }\n    }, APP_CONFIG.sessionTimeout);\n  }\n\n  setCurrentYear() {\n    const yearElement = document.getElementById('currentYear');\n    if (yearElement) {\n      yearElement.textContent = new Date().getFullYear();\n    }\n  }\n\n  showPrivacyPolicy() {\n    alert('Privacy Policy: This tool processes data locally. No patient data is stored or transmitted.');\n  }\n\n  showDisclaimer() {\n    alert('Medical Disclaimer: This tool is for clinical decision support only. Always use clinical judgment and follow local protocols.');\n  }\n\n  async registerServiceWorker() {\n    // Check if service workers are supported\n    if (!('serviceWorker' in navigator)) {\n      console.log('Service Workers not supported');\n      return;\n    }\n\n    try {\n      const registration = await navigator.serviceWorker.register('/0825/sw.js', {\n        scope: '/0825/'\n      });\n\n      console.log('Service Worker registered successfully:', registration);\n\n      // Handle service worker updates\n      registration.addEventListener('updatefound', () => {\n        const newWorker = registration.installing;\n        console.log('New service worker found');\n\n        newWorker.addEventListener('statechange', () => {\n          if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n            console.log('New service worker installed, update available');\n            // Could show update notification here\n            this.showUpdateNotification();\n          }\n        });\n      });\n\n      // Listen for service worker messages\n      navigator.serviceWorker.addEventListener('message', (event) => {\n        console.log('Message from service worker:', event.data);\n      });\n\n    } catch (error) {\n      console.error('Service Worker registration failed:', error);\n    }\n  }\n\n  showUpdateNotification() {\n    // Show a subtle notification that an update is available\n    const notification = document.createElement('div');\n    notification.style.cssText = `\n      position: fixed;\n      top: 70px;\n      right: 20px;\n      background: var(--primary-color);\n      color: white;\n      padding: 12px 16px;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      z-index: 1001;\n      font-size: 0.9rem;\n      max-width: 300px;\n      cursor: pointer;\n      transition: all 0.3s ease;\n    `;\n    notification.textContent = 'App update available - Tap to refresh';\n    \n    notification.addEventListener('click', () => {\n      window.location.reload();\n    });\n    \n    document.body.appendChild(notification);\n    \n    // Auto-remove after 10 seconds\n    setTimeout(() => {\n      if (notification.parentNode) {\n        notification.remove();\n      }\n    }, 10000);\n  }\n\n  destroy() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n}\n\n// Initialize the application\nconst app = new App();\napp.init();\n\n// Export for potential testing or debugging\nexport default app;"],"names":["Store","listener","updates","screen","history","previousScreen","module","data","formData","errors","results","newState","eventName","event","store","renderProgressIndicator","currentStep","steps","html","step","index","isActive","isCompleted","messages","I18n","savedLanguage","language","key","newLanguage","lang","date","locale","i18n","t","renderTriage1","renderTriage2","API_URLS","CRITICAL_THRESHOLDS","GFAP_RANGES","APP_CONFIG","VALIDATION_RULES","renderComa","renderLimited","renderFull","renderCriticalAlert","normalizeDrivers","drivers","normalizeShapValues","normalizeLogisticContributions","isRawDriversObject","normalizeRawDrivers","shapData","features","item","feature","value","a","b","positive","f","negative","meta","logitData","obj","renderDriversSection","ich","lvo","renderEnhancedDriversPanel","title","type","probability","driversViewModel","allDrivers","maxWeight","d","driver","weight","isPositive","percentage","barWidth","cleanLabel","l","strokeCenters","calculateDistance","lat1","lng1","lat2","lng2","dLat","toRadians","dLng","degrees","calculateTravelTime","fromLat","fromLng","toLat","toLng","profile","url","response","route","error","distance","calculateEmergencyTravelTime","result","findNearestStrokeCentersWithTravelTime","lat","lng","maxResults","maxTime","useEmergencyRouting","center","travelInfo","findNearestStrokeCenters","maxDistance","getRecommendedStrokeCentersWithTravelTime","conditionType","nearestCenters","comprehensive","primary","neurosurgical","c","getRecommendedStrokeCenters","renderStrokeCenterMap","initializeStrokeCenterMap","useGpsButton","manualLocationButton","locationManual","locationInput","searchLocationButton","resultsContainer","requestUserLocation","location","geocodeLocation","e","showLocationError","position","latitude","longitude","showNearestCenters","errorMessage","locationString","determineConditionType","recommendations","renderStrokeCenterList","centers","isRecommended","service","message","container","getRiskLevel","probabilityPercent","p","thresholds","renderInputSummary","summaryHtml","moduleTitle","itemsHtml","label","displayValue","renderRiskCard","percent","riskLevel","isCritical","isHigh","icons","titles","renderLVONotPossible","renderResults","startTime","ichHtml","lvoHtml","criticalAlert","driversHtml","strokeCenterHtml","inputSummaryHtml","validateInput","name","rules","validateForm","form","isValid","validationErrors","input","showValidationErrors","group","el","errorDiv","clearValidationErrors","APIError","status","normalizeBooleans","payload","normalized","safeParseFloat","defaultValue","parsed","fetchJSON","controller","timeoutId","errorData","predictComaIch","normalizedPayload","predictLimitedIch","fullPayload","predictFullStroke","ichProbability","_a","_b","_c","_d","lvoProbability","_e","_f","_g","_h","ichResult","_i","_j","_k","_l","_m","lvoResult","_n","_o","_p","_q","_r","handleTriage1","isComatose","navigate","handleTriage2","isExaminable","reset","goBack","success","goHome","handleSubmit","validation","inputs","element","n","button","originalContent","showError","alert","containerDiv","announceScreenChange","announcement","screenNames","setPageTitle","focusMainHeading","heading","FastEdCalculator","sum","score","total","component","closeBtn","cancelBtn","applyBtn","totalElement","riskElement","currentScore","onApplyCallback","firstRadio","armWeaknessBoolean","eyeDeviationBoolean","remaining","components","assignToThis","fastEdCalculator","render","state","currentScreen","restoreFormData","attachEvents","action","boolVal","printButton","fastEdInput","currentValue","armPareseField","eyeDeviationCheckbox","toggle","targetId","targetContent","arrow","App","languageToggle","darkModeToggle","helpModal","helpButton","modalClose","closeModal","savedTheme","headerTitle","emergencyBadge","modalTitle","isDark","currentData","yearElement","registration","newWorker","notification","app"],"mappings":"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"}