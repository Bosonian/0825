{"version":3,"file":"index-CpAZgQBM.js","sources":["../../src/state/store.js","../../src/ui/components/progress.js","../../src/ui/screens/triage1.js","../../src/ui/screens/triage2.js","../../src/config.js","../../src/ui/screens/coma.js","../../src/ui/screens/limited.js","../../src/ui/screens/full.js","../../src/ui/components/alerts.js","../../src/logic/shap.js","../../src/ui/components/drivers.js","../../src/logic/formatters.js","../../src/ui/components/recommendations.js","../../src/ui/screens/results.js","../../src/logic/validate.js","../../src/api/client.js","../../src/logic/handlers.js","../../src/ui/a11y.js","../../src/ui/render.js","../../src/main.js"],"sourcesContent":["// State management for the Stroke Triage Assistant\n\nclass Store {\n  constructor() {\n    this.state = {\n      currentScreen: 'triage1',\n      results: null,\n      sessionId: null,\n      startTime: null,\n      formData: {},\n      validationErrors: {}\n    };\n    \n    this.listeners = new Set();\n    this.initialize();\n  }\n  \n  initialize() {\n    this.state.sessionId = this.generateSessionId();\n    this.state.startTime = Date.now();\n    console.log('Store initialized with session:', this.state.sessionId);\n  }\n  \n  generateSessionId() {\n    return 'session_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n  }\n  \n  // Subscribe to state changes\n  subscribe(listener) {\n    this.listeners.add(listener);\n    return () => this.listeners.delete(listener);\n  }\n  \n  // Notify all listeners of state changes\n  notify() {\n    this.listeners.forEach(listener => listener(this.state));\n  }\n  \n  // Get current state (read-only)\n  getState() {\n    return { ...this.state };\n  }\n  \n  // Update state and notify listeners\n  setState(updates) {\n    this.state = { ...this.state, ...updates };\n    this.notify();\n  }\n  \n  // Navigate to a new screen\n  navigate(screen) {\n    console.log(`Navigating from ${this.state.currentScreen} to ${screen}`);\n    this.setState({ currentScreen: screen });\n  }\n  \n  // Store form data for a specific module\n  setFormData(module, data) {\n    const formData = { ...this.state.formData };\n    formData[module] = { ...data };\n    this.setState({ formData });\n  }\n  \n  // Get form data for a specific module\n  getFormData(module) {\n    return this.state.formData[module] || {};\n  }\n  \n  // Store validation errors\n  setValidationErrors(errors) {\n    this.setState({ validationErrors: errors });\n  }\n  \n  // Clear validation errors\n  clearValidationErrors() {\n    this.setState({ validationErrors: {} });\n  }\n  \n  // Store prediction results\n  setResults(results) {\n    this.setState({ results });\n  }\n  \n  // Check if there's unsaved data\n  hasUnsavedData() {\n    return Object.keys(this.state.formData).length > 0 && !this.state.results;\n  }\n  \n  // Reset to initial state\n  reset() {\n    const newState = {\n      currentScreen: 'triage1',\n      results: null,\n      sessionId: this.generateSessionId(),\n      startTime: Date.now(),\n      formData: {},\n      validationErrors: {}\n    };\n    this.setState(newState);\n    console.log('Store reset with new session:', newState.sessionId);\n  }\n  \n  // Log events for audit trail\n  logEvent(eventName, data = {}) {\n    const event = {\n      timestamp: Date.now(),\n      session: this.state.sessionId,\n      event: eventName,\n      data: data\n    };\n    console.log('Event:', event);\n    // In production, send to analytics service\n    // this.sendToAnalytics(event);\n  }\n  \n  // Calculate session duration\n  getSessionDuration() {\n    return Date.now() - this.state.startTime;\n  }\n}\n\n// Create and export a singleton instance\nexport const store = new Store();\n\n// Export the Store class for testing purposes\nexport { Store };","export function renderProgressIndicator(currentStep) {\n  const steps = [\n    { id: 1, label: 'Triage' },\n    { id: 2, label: 'Assessment' },\n    { id: 3, label: 'Results' }\n  ];\n  \n  let html = `<div class=\"progress-indicator\">`;\n  steps.forEach((step, index) => {\n    const isActive = step.id === currentStep;\n    const isCompleted = step.id < currentStep;\n    html += `\n      <div class=\"progress-step ${isActive ? 'active' : ''} ${isCompleted ? 'completed' : ''}\">\n        ${isCompleted ? '' : step.id}\n      </div>\n    `;\n    if (index < steps.length - 1) {\n      html += `<div class=\"progress-line ${isCompleted ? 'completed' : ''}\"></div>`;\n    }\n  });\n  html += `</div>`;\n  return html;\n}","import { renderProgressIndicator } from '../components/progress.js';\n\nexport function renderTriage1() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(1)}\n      <h2>Initial Assessment</h2>\n      <p class=\"subtitle\">Emergency Stroke Triage Protocol</p>\n      <div class=\"triage-question\">\n        Is the patient comatose?\n        <small>Glasgow Coma Scale &lt; 8</small>\n      </div>\n      <div class=\"disclaimer\">\n        <strong>‚ö†Ô∏è Time-Critical Assessment</strong>\n        Every minute counts in stroke care. Complete assessment rapidly while maintaining accuracy.\n      </div>\n      <div class=\"triage-buttons\">\n        <button class=\"yes-btn\" data-action=\"triage1\" data-value=\"true\">YES - Comatose</button>\n        <button class=\"no-btn\" data-action=\"triage1\" data-value=\"false\">NO - Conscious</button>\n      </div>\n    </div>\n  `;\n}","import { renderProgressIndicator } from '../components/progress.js';\n\nexport function renderTriage2() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(1)}\n      <h2>Examination Capability</h2>\n      <p class=\"subtitle\">Determine Assessment Module</p>\n      <div class=\"triage-question\">\n        Can the patient be reliably examined?\n        <small>Patient is not aphasic, confused, or uncooperative</small>\n      </div>\n      <div class=\"triage-buttons\">\n        <button class=\"yes-btn\" data-action=\"triage2\" data-value=\"true\">YES - Full Exam Possible</button>\n        <button class=\"no-btn\" data-action=\"triage2\" data-value=\"false\">NO - Limited Exam Only</button>\n      </div>\n    </div>\n  `;\n}","// Configuration for the Stroke Triage Assistant\n\nexport const API_URLS = {\n  COMA_ICH: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_coma_ich',\n  LDM_ICH: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_limited_data_ich',\n  FULL_STROKE: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_full_stroke'\n};\n\nexport const CRITICAL_THRESHOLDS = {\n  ich: { \n    high: 60, \n    critical: 80 \n  },\n  lvo: { \n    high: 50, \n    critical: 70 \n  }\n};\n\nexport const GFAP_RANGES = {\n  min: 29,\n  max: 10001,\n  normal: 100,\n  elevated: 500,\n  critical: 1000\n};\n\nexport const APP_CONFIG = {\n  autoSaveInterval: 30000, // Increased from 5s to 30s to reduce blinking\n  sessionTimeout: 30 * 60 * 1000, // 30 minutes\n  requestTimeout: 10000 // 10 seconds\n};\n\nexport const VALIDATION_RULES = {\n  age_years: { required: true, min: 0, max: 120 },\n  systolic_bp: { required: true, min: 60, max: 300 },\n  diastolic_bp: { required: true, min: 30, max: 200 },\n  gfap_value: { required: true, min: GFAP_RANGES.min, max: GFAP_RANGES.max },\n  fast_ed_score: { required: true, min: 0, max: 9 }\n};","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\n\nexport function renderComa() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>Coma Module</h2>\n      <p class=\"subtitle\">ICH Risk Assessment for Comatose Patients</p>\n      <div class=\"critical-alert\">\n        <h4><span class=\"alert-icon\">üö®</span> Critical Patient</h4>\n        <p>Patient is comatose (GCS &lt; 8). Rapid assessment required.</p>\n      </div>\n      <form data-module=\"coma\">\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              GFAP Value (pg/mL)\n              <span class=\"tooltip\">‚ÑπÔ∏è\n                <span class=\"tooltiptext\">Glial Fibrillary Acidic Protein - Brain injury biomarker</span>\n              </span>\n            </label>\n            <input type=\"number\" id=\"gfap_value\" name=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required aria-describedby=\"gfap-help\">\n            <div id=\"gfap-help\" class=\"input-help\">\n              Range: ${GFAP_RANGES.min} - ${GFAP_RANGES.max} pg/mL\n            </div>\n          </div>\n        </div>\n        <button type=\"submit\" class=\"primary\">Analyze ICH Risk</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">Start Over</button>\n      </form>\n    </div>\n  `;\n}","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\n\nexport function renderLimited() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>Limited Data Module</h2>\n      <p class=\"subtitle\">ICH Risk Assessment with Limited Examination</p>\n      <form data-module=\"limited\">\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"age_years\">Age (years)</label>\n            <input type=\"number\" name=\"age_years\" id=\"age_years\" min=\"0\" max=\"120\" required aria-describedby=\"age-help\">\n            <div id=\"age-help\" class=\"input-help\">Patient's age in years</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"systolic_bp\">Systolic BP (mmHg)</label>\n            <input type=\"number\" name=\"systolic_bp\" id=\"systolic_bp\" min=\"60\" max=\"300\" required aria-describedby=\"sbp-help\">\n            <div id=\"sbp-help\" class=\"input-help\">Normal: 90-140 mmHg</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"diastolic_bp\">Diastolic BP (mmHg)</label>\n            <input type=\"number\" name=\"diastolic_bp\" id=\"diastolic_bp\" min=\"30\" max=\"200\" required aria-describedby=\"dbp-help\">\n            <div id=\"dbp-help\" class=\"input-help\">Normal: 60-90 mmHg</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              GFAP Value (pg/mL)\n              <span class=\"tooltip\">‚ÑπÔ∏è\n                <span class=\"tooltiptext\">Glial Fibrillary Acidic Protein</span>\n              </span>\n            </label>\n            <input type=\"number\" name=\"gfap_value\" id=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required>\n          </div>\n        </div>\n        <div class=\"checkbox-group\">\n          <label class=\"checkbox-wrapper\">\n            <input type=\"checkbox\" name=\"vigilanzminderung\" id=\"vigilanzminderung\">\n            <span class=\"checkbox-label\">Vigilance Reduction (Decreased alertness)</span>\n          </label>\n        </div>\n        <button type=\"submit\" class=\"primary\">Analyze ICH Risk</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">Start Over</button>\n      </form>\n    </div>\n  `;\n}","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\n\nexport function renderFull() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>Full Stroke Module</h2>\n      <p class=\"subtitle\">Complete ICH and LVO Risk Assessment</p>\n      <form data-module=\"full\">\n        <h3>Basic Information</h3>\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"age_years\">Age (years)</label>\n            <input type=\"number\" name=\"age_years\" id=\"age_years\" min=\"0\" max=\"120\" required>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"systolic_bp\">Systolic BP (mmHg)</label>\n            <input type=\"number\" name=\"systolic_bp\" id=\"systolic_bp\" min=\"60\" max=\"300\" required>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"diastolic_bp\">Diastolic BP (mmHg)</label>\n            <input type=\"number\" name=\"diastolic_bp\" id=\"diastolic_bp\" min=\"30\" max=\"200\" required>\n          </div>\n        </div>\n\n        <h3>Biomarkers & Scores</h3>\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              GFAP Value (pg/mL)\n              <span class=\"tooltip\">‚ÑπÔ∏è\n                <span class=\"tooltiptext\">Brain injury biomarker</span>\n              </span>\n            </label>\n            <input type=\"number\" name=\"gfap_value\" id=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"fast_ed_score\">\n              FAST-ED Score\n              <span class=\"tooltip\">‚ÑπÔ∏è\n                <span class=\"tooltiptext\">0-9 scale for LVO screening</span>\n              </span>\n            </label>\n            <input type=\"number\" name=\"fast_ed_score\" id=\"fast_ed_score\" min=\"0\" max=\"9\" required>\n          </div>\n        </div>\n\n        <h3>Clinical Symptoms</h3>\n        <div class=\"input-grid\">\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"headache\" id=\"headache\">\n              <span class=\"checkbox-label\">Headache</span>\n            </label>\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"vigilanzminderung\" id=\"vigilanzminderung\">\n              <span class=\"checkbox-label\">Vigilance Reduction</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"armparese\" id=\"armparese\">\n              <span class=\"checkbox-label\">Arm Paresis</span>\n            </label>\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"beinparese\" id=\"beinparese\">\n              <span class=\"checkbox-label\">Leg Paresis</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"eye_deviation\" id=\"eye_deviation\">\n              <span class=\"checkbox-label\">Eye Deviation</span>\n            </label>\n          </div>\n        </div>\n\n        <h3>Medical History</h3>\n        <div class=\"input-grid\">\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"atrial_fibrillation\" id=\"atrial_fibrillation\">\n              <span class=\"checkbox-label\">Atrial Fibrillation</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"anticoagulated_noak\" id=\"anticoagulated_noak\">\n              <span class=\"checkbox-label\">On NOAC/DOAC</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"antiplatelets\" id=\"antiplatelets\">\n              <span class=\"checkbox-label\">On Antiplatelets</span>\n            </label>\n          </div>\n        </div>\n\n        <button type=\"submit\" class=\"primary\">Analyze Stroke Risk</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">Start Over</button>\n      </form>\n    </div>\n  `;\n}","export function renderCriticalAlert() {\n  return `\n    <div class=\"critical-alert\">\n      <h4><span class=\"alert-icon\">üö®</span> CRITICAL FINDING</h4>\n      <p>High probability of intracerebral hemorrhage detected.</p>\n      <p><strong>Immediate actions required:</strong></p>\n      <ul style=\"margin: 10px 0; padding-left: 20px;\">\n        <li>Initiate stroke protocol immediately</li>\n        <li>Urgent CT imaging required</li>\n        <li>Consider blood pressure management</li>\n        <li>Prepare for potential neurosurgical consultation</li>\n      </ul>\n    </div>\n  `;\n}","/**\n * Normalize drivers from API responses into a unified format for visualization\n * @param {Object} drivers - Raw drivers data from API\n * @returns {Object} Normalized drivers view model\n */\nexport function normalizeDrivers(drivers) {\n  if (!drivers || typeof drivers !== 'object') {\n    return {\n      kind: 'unavailable',\n      units: null,\n      positive: [],\n      negative: [],\n      meta: {}\n    };\n  }\n\n  // Check if it's already in the expected format with kind property\n  if (drivers.kind) {\n    return drivers;\n  }\n\n  // Check if it's SHAP values format\n  if (drivers.shap_values || (drivers.kind && drivers.kind === 'shap_values')) {\n    return normalizeShapValues(drivers);\n  }\n\n  // Check if it's logistic contributions format\n  if (drivers.logistic_contributions || (drivers.kind && drivers.kind === 'logistic_contributions')) {\n    return normalizeLogisticContributions(drivers);\n  }\n\n  // Try to infer format from raw object\n  if (isRawDriversObject(drivers)) {\n    return normalizeRawDrivers(drivers);\n  }\n\n  return {\n    kind: 'unavailable',\n    units: null,\n    positive: [],\n    negative: [],\n    meta: {}\n  };\n}\n\nfunction normalizeShapValues(drivers) {\n  const shapData = drivers.shap_values || drivers;\n  const features = [];\n\n  if (Array.isArray(shapData)) {\n    // Handle array format\n    shapData.forEach((item, index) => {\n      if (typeof item === 'object' && item.feature && item.value !== undefined) {\n        features.push({\n          label: item.feature,\n          weight: item.value\n        });\n      } else if (typeof item === 'number') {\n        features.push({\n          label: `Feature ${index}`,\n          weight: item\n        });\n      }\n    });\n  } else if (typeof shapData === 'object') {\n    // Handle object format\n    Object.entries(shapData).forEach(([feature, value]) => {\n      if (typeof value === 'number') {\n        features.push({\n          label: feature,\n          weight: value\n        });\n      }\n    });\n  }\n\n  // Sort by absolute weight value\n  features.sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight));\n\n  const positive = features.filter(f => f.weight > 0);\n  const negative = features.filter(f => f.weight < 0);\n\n  const meta = {};\n  if (drivers.base_value !== undefined) meta.base_value = drivers.base_value;\n  if (drivers.contrib_sum !== undefined) meta.contrib_sum = drivers.contrib_sum;\n  if (drivers.logit_total !== undefined) meta.logit_total = drivers.logit_total;\n\n  return {\n    kind: 'shap_values',\n    units: 'logit',\n    positive,\n    negative,\n    meta\n  };\n}\n\nfunction normalizeLogisticContributions(drivers) {\n  const logitData = drivers.logistic_contributions || drivers;\n  const features = [];\n\n  if (typeof logitData === 'object') {\n    Object.entries(logitData).forEach(([feature, value]) => {\n      if (typeof value === 'number' && !['intercept', 'contrib_sum', 'logit_total'].includes(feature)) {\n        features.push({\n          label: feature,\n          weight: value\n        });\n      }\n    });\n  }\n\n  // Sort by absolute weight value\n  features.sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight));\n\n  const positive = features.filter(f => f.weight > 0);\n  const negative = features.filter(f => f.weight < 0);\n\n  const meta = {};\n  if (logitData.intercept !== undefined) meta.base_value = logitData.intercept;\n  if (logitData.contrib_sum !== undefined) meta.contrib_sum = logitData.contrib_sum;\n  if (logitData.logit_total !== undefined) meta.logit_total = logitData.logit_total;\n  if (drivers.contrib_sum !== undefined) meta.contrib_sum = drivers.contrib_sum;\n\n  return {\n    kind: 'logistic_contributions',\n    units: 'logit',\n    positive,\n    negative,\n    meta\n  };\n}\n\nfunction normalizeRawDrivers(drivers) {\n  const features = [];\n\n  Object.entries(drivers).forEach(([feature, value]) => {\n    if (typeof value === 'number') {\n      features.push({\n        label: feature,\n        weight: value\n      });\n    }\n  });\n\n  // Sort by absolute weight value\n  features.sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight));\n\n  const positive = features.filter(f => f.weight > 0);\n  const negative = features.filter(f => f.weight < 0);\n\n  return {\n    kind: 'raw_weights',\n    units: null,\n    positive,\n    negative,\n    meta: {}\n  };\n}\n\nfunction isRawDriversObject(obj) {\n  return Object.values(obj).every(value => typeof value === 'number');\n}","import { normalizeDrivers } from '../../logic/shap.js';\n\nexport function renderDriversSection(ich, lvo) {\n  if (!ich?.drivers && !lvo?.drivers) return '';\n  \n  let html = `\n    <div class=\"drivers-section\">\n      <h3>Prediction Drivers</h3>\n      <div class=\"drivers-grid\">\n  `;\n  \n  if (ich?.drivers) {\n    html += renderDriversPanel(ich.drivers, 'ICH', 'ich');\n  }\n  \n  if (lvo?.drivers && !lvo.notPossible) {\n    html += renderDriversPanel(lvo.drivers, 'LVO', 'lvo');\n  }\n  \n  html += `\n      </div>\n    </div>\n  `;\n  return html;\n}\n\nexport function renderDriversPanel(drivers, title, type) {\n  if (!drivers || Object.keys(drivers).length === 0) {\n    return `\n      <div class=\"drivers-panel\">\n        <h4>\n          <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\n          ${title} Risk Factors\n        </h4>\n        <p style=\"color: var(--text-secondary); font-style: italic;\">\n          Driver information not available from this prediction model.\n        </p>\n      </div>\n    `;\n  }\n\n  const driversViewModel = normalizeDrivers(drivers);\n  \n  if (driversViewModel.kind === 'unavailable') {\n    return `\n      <div class=\"drivers-panel\">\n        <h4>\n          <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\n          ${title} Risk Factors\n        </h4>\n        <p style=\"color: var(--text-secondary); font-style: italic;\">\n          Driver analysis not available for this prediction.\n        </p>\n      </div>\n    `;\n  }\n\n  let html = `\n    <div class=\"drivers-panel\">\n      <h4>\n        <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\n        ${title} Risk Factors\n      </h4>\n  `;\n\n  // Show positive drivers (increase risk)\n  if (driversViewModel.positive.length > 0) {\n    driversViewModel.positive.forEach(driver => {\n      const percentage = Math.abs(driver.weight * 100);\n      const width = Math.min(percentage * 2, 100); // Scale for visualization\n      html += `\n        <div class=\"driver-item\">\n          <span class=\"driver-label\">${driver.label}</span>\n          <div class=\"driver-bar-container\">\n            <div class=\"driver-bar positive\" style=\"width: ${width}%\">\n              <span class=\"driver-value\">+${percentage.toFixed(0)}%</span>\n            </div>\n          </div>\n        </div>\n      `;\n    });\n  }\n\n  // Show negative drivers (decrease risk)\n  if (driversViewModel.negative.length > 0) {\n    driversViewModel.negative.forEach(driver => {\n      const percentage = Math.abs(driver.weight * 100);\n      const width = Math.min(percentage * 2, 100); // Scale for visualization\n      html += `\n        <div class=\"driver-item\">\n          <span class=\"driver-label\">${driver.label}</span>\n          <div class=\"driver-bar-container\">\n            <div class=\"driver-bar negative\" style=\"width: ${width}%\">\n              <span class=\"driver-value\">-${percentage.toFixed(0)}%</span>\n            </div>\n          </div>\n        </div>\n      `;\n    });\n  }\n\n  // Show metadata if available\n  if (driversViewModel.meta && Object.keys(driversViewModel.meta).length > 0) {\n    html += `\n      <div style=\"margin-top: 15px; padding-top: 10px; border-top: 1px solid var(--border-color);\">\n        <small style=\"color: var(--text-secondary);\">\n    `;\n    \n    if (driversViewModel.meta.base_value !== undefined) {\n      html += `Base value: ${driversViewModel.meta.base_value.toFixed(2)} `;\n    }\n    if (driversViewModel.meta.contrib_sum !== undefined) {\n      html += `Contrib sum: ${driversViewModel.meta.contrib_sum.toFixed(2)} `;\n    }\n    if (driversViewModel.meta.logit_total !== undefined) {\n      html += `Logit total: ${driversViewModel.meta.logit_total.toFixed(2)}`;\n    }\n    \n    html += `\n        </small>\n      </div>\n    `;\n  }\n\n  html += `</div>`;\n  return html;\n}","import { CRITICAL_THRESHOLDS } from '../config.js';\n\nexport function getRiskLevel(probabilityPercent, type) {\n  const p = Number(probabilityPercent);\n  const thresholds = CRITICAL_THRESHOLDS[type];\n  \n  if (p >= thresholds.critical) {\n    return 'üî¥ CRITICAL RISK';\n  } else if (p >= thresholds.high) {\n    return 'üü† HIGH RISK';\n  } else if (p >= 30) {\n    return 'üü° MODERATE RISK';\n  } else {\n    return 'üü¢ LOW RISK';\n  }\n}\n\nexport function formatTime(milliseconds) {\n  const seconds = Math.floor(milliseconds / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n}","import { formatTime } from '../../logic/formatters.js';\n\nexport function renderRecommendations(ich, lvo, startTime) {\n  const recommendations = generateRecommendations(ich, lvo);\n  \n  return `\n    <div class=\"result-card info\">\n      <h3>üìã Clinical Recommendations</h3>\n      <ul style=\"text-align: left; margin: 10px 0;\">\n        ${recommendations.map(rec => `<li>${rec}</li>`).join('')}\n      </ul>\n      <p style=\"margin-top: 15px;\">\n        <strong>Time since assessment started:</strong> ${formatTime(Date.now() - startTime)}\n      </p>\n    </div>\n  `;\n}\n\nfunction generateRecommendations(ich, lvo) {\n  const recommendations = [];\n  \n  if (ich) {\n    const ichPercent = ich.probability * 100;\n    if (ichPercent > 80) {\n      recommendations.push('üö® IMMEDIATE: Urgent CT imaging required');\n      recommendations.push('üö® Consider immediate BP management if SBP > 150');\n      recommendations.push('üö® Prepare for potential neurosurgical consultation');\n    } else if (ichPercent > 60) {\n      recommendations.push('‚ö†Ô∏è HIGH PRIORITY: Expedite CT imaging');\n      recommendations.push('‚ö†Ô∏è Monitor blood pressure closely');\n      recommendations.push('‚ö†Ô∏è Consider withholding anticoagulation');\n    } else if (ichPercent > 30) {\n      recommendations.push('üìç Standard stroke protocol with close monitoring');\n      recommendations.push('üìç Obtain CT imaging as per protocol');\n    } else {\n      recommendations.push('‚úì Low ICH risk - proceed with standard evaluation');\n    }\n  }\n  \n  if (lvo && !lvo.notPossible) {\n    const lvoPercent = lvo.probability * 100;\n    if (lvoPercent > 70) {\n      recommendations.push('üöÅ Consider direct transport to comprehensive stroke center');\n      recommendations.push('üöÅ Alert interventional team for potential thrombectomy');\n    } else if (lvoPercent > 50) {\n      recommendations.push('üè• Transport to stroke-capable facility');\n      recommendations.push('üè• Consider CTA for LVO confirmation');\n    } else if (lvoPercent > 30) {\n      recommendations.push('üìä Moderate LVO risk - standard stroke evaluation');\n    }\n  }\n  \n  // Time-based recommendations\n  recommendations.push('‚è±Ô∏è Document symptom onset time accurately');\n  recommendations.push('üìû Notify receiving facility early for resource preparation');\n  \n  return recommendations;\n}","import { renderProgressIndicator } from '../components/progress.js';\nimport { renderCriticalAlert } from '../components/alerts.js';\nimport { renderDriversSection } from '../components/drivers.js';\nimport { renderRecommendations } from '../components/recommendations.js';\nimport { getRiskLevel, formatTime } from '../../logic/formatters.js';\nimport { CRITICAL_THRESHOLDS } from '../../config.js';\n\nexport function renderResults(results, startTime) {\n  const { ich, lvo } = results;\n  let ichHtml = '', lvoHtml = '';\n\n  if (ich) {\n    const ichPercent = Math.round(ich.probability * 100);\n    const isCritical = ichPercent > CRITICAL_THRESHOLDS.ich.critical;\n\n    ichHtml = `\n      <div class=\"result-card ${isCritical ? 'critical' : 'ich'}\">\n        <h3> üß† ICH Probability <small>(${ich.module} Module)</small> </h3>\n        <div class=\"probability-display\">${ichPercent}%</div>\n        <div class=\"probability-meter\">\n          <div class=\"probability-fill\" style=\"width: ${ichPercent}%\"></div>\n          <div class=\"probability-marker\" style=\"left: ${ichPercent}%\">${ichPercent}%</div>\n        </div>\n        <p><strong>Risk Level:</strong> ${getRiskLevel(ichPercent, 'ich')}</p>\n        <p><strong>Confidence:</strong> ${(ich.confidence * 100).toFixed(0)}%</p>\n      </div>\n    `;\n  }\n\n  if (lvo) {\n    if (lvo.notPossible) {\n      lvoHtml = `\n        <div class=\"result-card info\">\n          <h3>üîç LVO Prediction</h3>\n          <p>LVO assessment not possible with limited data.</p>\n          <p>A full neurological examination is required for LVO screening.</p>\n        </div>\n      `;\n    } else {\n      const lvoPercent = Math.round(lvo.probability * 100);\n      const isCritical = lvoPercent > CRITICAL_THRESHOLDS.lvo.critical;\n\n      lvoHtml = `\n        <div class=\"result-card ${isCritical ? 'critical' : 'lvo'}\">\n          <h3> ü©∏ LVO Probability <small>(${lvo.module} Module)</small> </h3>\n          <div class=\"probability-display\">${lvoPercent}%</div>\n          <div class=\"probability-meter\">\n            <div class=\"probability-fill\" style=\"width: ${lvoPercent}%\"></div>\n            <div class=\"probability-marker\" style=\"left: ${lvoPercent}%\">${lvoPercent}%</div>\n          </div>\n          <p><strong>Risk Level:</strong> ${getRiskLevel(lvoPercent, 'lvo')}</p>\n          <p><strong>Confidence:</strong> ${(lvo.confidence * 100).toFixed(0)}%</p>\n        </div>\n      `;\n    }\n  }\n\n  const criticalAlert = ich && ich.probability > 0.6 ? renderCriticalAlert() : '';\n  const recommendationsHtml = renderRecommendations(ich, lvo, startTime);\n  const driversHtml = renderDriversSection(ich, lvo);\n\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(3)}\n      <h2>Assessment Results</h2>\n      <p class=\"subtitle\">Clinical Decision Support Analysis</p>\n      ${criticalAlert}\n      <div style=\"display: flex; flex-direction: column; gap: 20px;\">\n        ${ichHtml}\n        ${lvoHtml}\n        ${recommendationsHtml}\n      </div>\n      ${driversHtml}\n      <button type=\"button\" class=\"primary\" id=\"printResults\"> üìÑ Print Results </button>\n      <button type=\"button\" class=\"secondary\" data-action=\"reset\"> Start New Assessment </button>\n      <div class=\"disclaimer\">\n        <strong>‚ö†Ô∏è Important:</strong> These results are for clinical decision support only. Always use clinical judgment and follow institutional protocols. Results generated at ${new Date().toLocaleTimeString()}.\n      </div>\n    </div>\n  `;\n}","import { VALIDATION_RULES } from '../config.js';\n\nexport function validateInput(name, value, rules) {\n  const errors = [];\n  \n  if (rules.required && !value && value !== 0) {\n    errors.push('This field is required');\n  }\n  \n  if (rules.min !== undefined && value !== '' && !isNaN(value) && parseFloat(value) < rules.min) {\n    errors.push(`Value must be at least ${rules.min}`);\n  }\n  \n  if (rules.max !== undefined && value !== '' && !isNaN(value) && parseFloat(value) > rules.max) {\n    errors.push(`Value must be at most ${rules.max}`);\n  }\n  \n  if (rules.pattern && !rules.pattern.test(value)) {\n    errors.push('Invalid format');\n  }\n  \n  return errors;\n}\n\nexport function validateForm(form) {\n  let isValid = true;\n  const validationErrors = {};\n\n  Object.entries(VALIDATION_RULES).forEach(([name, rules]) => {\n    const input = form.elements[name];\n    if (input) {\n      const errors = validateInput(name, input.value, rules);\n      if (errors.length > 0) {\n        validationErrors[name] = errors;\n        isValid = false;\n      }\n    }\n  });\n  \n  return { isValid, validationErrors };\n}\n\nexport function showValidationErrors(container, validationErrors) {\n  Object.entries(validationErrors).forEach(([name, errors]) => {\n    const input = container.querySelector(`[name=\"${name}\"]`);\n    if (input) {\n      const group = input.closest('.input-group');\n      if (group) {\n        group.classList.add('error');\n        // Remove existing error messages\n        group.querySelectorAll('.error-message').forEach(el => el.remove());\n        // Add new error message\n        const errorDiv = document.createElement('div');\n        errorDiv.className = 'error-message';\n        errorDiv.innerHTML = `<span class=\"error-icon\">‚ö†Ô∏è</span> ${errors[0]}`;\n        group.appendChild(errorDiv);\n      }\n    }\n  });\n}\n\nexport function clearValidationErrors(container) {\n  container.querySelectorAll('.input-group.error').forEach(group => {\n    group.classList.remove('error');\n    group.querySelectorAll('.error-message').forEach(el => el.remove());\n  });\n}","import { API_URLS, APP_CONFIG } from '../config.js';\n\nclass APIError extends Error {\n  constructor(message, status, url) {\n    super(message);\n    this.name = 'APIError';\n    this.status = status;\n    this.url = url;\n  }\n}\n\nfunction normalizeBooleans(payload) {\n  const normalized = { ...payload };\n  \n  Object.keys(normalized).forEach(key => {\n    const value = normalized[key];\n    if (typeof value === 'boolean' || value === 'on' || value === 'true' || value === 'false') {\n      normalized[key] = value === true || value === 'on' || value === 'true' ? 1 : 0;\n    }\n  });\n  \n  return normalized;\n}\n\nasync function fetchJSON(url, payload) {\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), APP_CONFIG.requestTimeout);\n  \n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify(payload),\n      signal: controller.signal,\n      mode: 'cors'\n    });\n    \n    clearTimeout(timeoutId);\n    \n    if (!response.ok) {\n      let errorMessage = `HTTP ${response.status}`;\n      try {\n        const errorData = await response.json();\n        errorMessage = errorData.error || errorData.message || errorMessage;\n      } catch {\n        errorMessage = `${errorMessage}: ${response.statusText}`;\n      }\n      throw new APIError(errorMessage, response.status, url);\n    }\n    \n    const data = await response.json();\n    return data;\n    \n  } catch (error) {\n    clearTimeout(timeoutId);\n    \n    if (error.name === 'AbortError') {\n      throw new APIError('Request timeout - please try again', 408, url);\n    }\n    \n    if (error instanceof APIError) {\n      throw error;\n    }\n    \n    // Network or other errors\n    throw new APIError(\n      'Network error - please check your connection and try again',\n      0,\n      url\n    );\n  }\n}\n\nexport async function predictComaIch(payload) {\n  const normalizedPayload = normalizeBooleans(payload);\n  \n  try {\n    const response = await fetchJSON(API_URLS.COMA_ICH, normalizedPayload);\n    \n    // Normalize response format for consistency\n    return {\n      probability: response.probability || response.ich_probability,\n      drivers: response.drivers || null,\n      confidence: response.confidence || 0.75,\n      module: 'Coma'\n    };\n  } catch (error) {\n    console.error('Coma ICH prediction failed:', error);\n    throw new APIError(\n      `Failed to get ICH prediction: ${error.message}`,\n      error.status,\n      API_URLS.COMA_ICH\n    );\n  }\n}\n\nexport async function predictLimitedIch(payload) {\n  const normalizedPayload = normalizeBooleans(payload);\n  \n  try {\n    const response = await fetchJSON(API_URLS.LDM_ICH, normalizedPayload);\n    \n    // Normalize response format for consistency\n    return {\n      probability: response.probability || response.ich_probability,\n      drivers: response.drivers || null,\n      confidence: response.confidence || 0.65,\n      module: 'Limited Data'\n    };\n  } catch (error) {\n    console.error('Limited Data ICH prediction failed:', error);\n    throw new APIError(\n      `Failed to get ICH prediction: ${error.message}`,\n      error.status,\n      API_URLS.LDM_ICH\n    );\n  }\n}\n\nexport async function predictFullStroke(payload) {\n  const normalizedPayload = normalizeBooleans(payload);\n  \n  try {\n    const response = await fetchJSON(API_URLS.FULL_STROKE, normalizedPayload);\n    \n    // Extract ICH and LVO predictions\n    const ichResult = {\n      probability: response.ich_probability || response.ich?.probability,\n      drivers: response.ich_drivers || response.ich?.drivers,\n      confidence: response.ich_confidence || response.ich?.confidence || 0.85,\n      module: 'Full Stroke'\n    };\n    \n    const lvoResult = {\n      probability: response.lvo_probability || response.lvo?.probability,\n      drivers: response.lvo_drivers || response.lvo?.drivers,\n      confidence: response.lvo_confidence || response.lvo?.confidence || 0.85,\n      module: 'Full Stroke'\n    };\n    \n    return {\n      ich: ichResult,\n      lvo: lvoResult\n    };\n  } catch (error) {\n    console.error('Full Stroke prediction failed:', error);\n    throw new APIError(\n      `Failed to get stroke predictions: ${error.message}`,\n      error.status,\n      API_URLS.FULL_STROKE\n    );\n  }\n}\n\n// Export the error class for use in other modules\nexport { APIError };","import { store } from '../state/store.js';\nimport { validateForm, showValidationErrors } from './validate.js';\nimport { predictComaIch, predictLimitedIch, predictFullStroke, APIError } from '../api/client.js';\n\nexport function handleTriage1(isComatose) {\n  store.logEvent('triage1_answer', { comatose: isComatose });\n  const nextScreen = isComatose ? 'coma' : 'triage2';\n  navigate(nextScreen);\n}\n\nexport function handleTriage2(isExaminable) {\n  store.logEvent('triage2_answer', { examinable: isExaminable });\n  const nextScreen = isExaminable ? 'full' : 'limited';\n  navigate(nextScreen);\n}\n\nexport function navigate(screen) {\n  store.logEvent('navigate', { \n    from: store.getState().currentScreen, \n    to: screen \n  });\n  store.navigate(screen);\n  window.scrollTo(0, 0);\n}\n\nexport function reset() {\n  if (store.hasUnsavedData()) {\n    if (!confirm('Are you sure you want to start over? All entered data will be lost.')) {\n      return;\n    }\n  }\n  store.logEvent('reset');\n  store.reset();\n}\n\nexport async function handleSubmit(e, container) {\n  e.preventDefault();\n  const form = e.target;\n  const module = form.dataset.module;\n\n  // Validate form\n  const validation = validateForm(form);\n  if (!validation.isValid) {\n    showValidationErrors(container, validation.validationErrors);\n    return;\n  }\n\n  // Collect inputs\n  const formData = new FormData(form);\n  const inputs = {};\n  formData.forEach((value, key) => {\n    const element = form.elements[key];\n    if (element && element.type === 'checkbox') {\n      inputs[key] = element.checked;\n    } else {\n      const n = parseFloat(value);\n      inputs[key] = isNaN(n) ? value : n;\n    }\n  });\n\n  // Store form data\n  store.setFormData(module, inputs);\n\n  // Show loading state\n  const button = form.querySelector('button[type=submit]');\n  const originalContent = button ? button.innerHTML : '';\n  if (button) {\n    button.disabled = true;\n    button.innerHTML = '<span class=\"loading-spinner\"></span> Analyzing...';\n  }\n\n  try {\n    // Run models based on module\n    let results;\n    \n    switch (module) {\n      case 'coma':\n        const comaResult = await predictComaIch(inputs);\n        results = {\n          ich: comaResult,\n          lvo: null\n        };\n        break;\n        \n      case 'limited':\n        const limitedResult = await predictLimitedIch(inputs);\n        results = {\n          ich: limitedResult,\n          lvo: { notPossible: true }\n        };\n        break;\n        \n      case 'full':\n        results = await predictFullStroke(inputs);\n        break;\n        \n      default:\n        throw new Error('Unknown module: ' + module);\n    }\n\n    store.setResults(results);\n    store.logEvent('models_complete', { module, results });\n    navigate('results');\n    \n  } catch (error) {\n    console.error('Error running models:', error);\n    \n    let errorMessage = 'An error occurred during analysis. Please try again.';\n    if (error instanceof APIError) {\n      errorMessage = error.message;\n    }\n    \n    showError(container, errorMessage);\n    \n    if (button) {\n      button.disabled = false;\n      button.innerHTML = originalContent;\n    }\n  }\n}\n\nfunction showError(container, message) {\n  // Remove existing error alerts\n  container.querySelectorAll('.critical-alert').forEach(alert => {\n    if (alert.querySelector('h4')?.textContent?.includes('Error')) {\n      alert.remove();\n    }\n  });\n\n  const alert = document.createElement('div');\n  alert.className = 'critical-alert';\n  alert.innerHTML = `<h4><span class=\"alert-icon\">‚ö†Ô∏è</span> Error</h4><p>${message}</p>`;\n  \n  const containerDiv = container.querySelector('.container');\n  if (containerDiv) {\n    containerDiv.prepend(alert);\n  } else {\n    container.prepend(alert);\n  }\n  \n  setTimeout(() => alert.remove(), 10000);\n}","/**\n * Accessibility utilities for the Stroke Triage Assistant\n */\n\nexport function announceScreenChange(screen) {\n  const announcement = document.createElement('div');\n  announcement.className = 'sr-only';\n  announcement.setAttribute('role', 'status');\n  announcement.setAttribute('aria-live', 'polite');\n  \n  const screenNames = {\n    'triage1': 'Coma assessment',\n    'triage2': 'Examination capability assessment',\n    'coma': 'Coma module',\n    'limited': 'Limited data module',\n    'full': 'Full stroke assessment',\n    'results': 'Assessment results'\n  };\n  \n  announcement.textContent = `Navigated to ${screenNames[screen] || screen}`;\n  document.body.appendChild(announcement);\n  \n  setTimeout(() => announcement.remove(), 1000);\n}\n\nexport function setPageTitle(screen) {\n  const titles = {\n    'triage1': 'Initial Assessment - Stroke Triage Assistant',\n    'triage2': 'Examination Capability - Stroke Triage Assistant',\n    'coma': 'Coma Module - Stroke Triage Assistant',\n    'limited': 'Limited Data Module - Stroke Triage Assistant',\n    'full': 'Full Stroke Module - Stroke Triage Assistant',\n    'results': 'Assessment Results - Stroke Triage Assistant'\n  };\n  \n  document.title = titles[screen] || 'Stroke Triage Assistant';\n}\n\nexport function focusMainHeading() {\n  // Focus on the main heading for screen readers\n  setTimeout(() => {\n    const heading = document.querySelector('h2');\n    if (heading) {\n      heading.setAttribute('tabindex', '-1');\n      heading.focus();\n      // Remove tabindex after focus for proper tab order\n      setTimeout(() => heading.removeAttribute('tabindex'), 100);\n    }\n  }, 100);\n}","import { store } from '../state/store.js';\nimport { renderTriage1 } from './screens/triage1.js';\nimport { renderTriage2 } from './screens/triage2.js';\nimport { renderComa } from './screens/coma.js';\nimport { renderLimited } from './screens/limited.js';\nimport { renderFull } from './screens/full.js';\nimport { renderResults } from './screens/results.js';\nimport { handleTriage1, handleTriage2, handleSubmit, reset } from '../logic/handlers.js';\nimport { clearValidationErrors } from '../logic/validate.js';\nimport { announceScreenChange, setPageTitle, focusMainHeading } from './a11y.js';\n\nexport function render(container) {\n  const state = store.getState();\n  const { currentScreen, results, startTime } = state;\n\n  // Clear container\n  container.innerHTML = '';\n\n  // Render the appropriate screen\n  let html = '';\n  switch (currentScreen) {\n    case 'triage1':\n      html = renderTriage1();\n      break;\n    case 'triage2':\n      html = renderTriage2();\n      break;\n    case 'coma':\n      html = renderComa();\n      break;\n    case 'limited':\n      html = renderLimited();\n      break;\n    case 'full':\n      html = renderFull();\n      break;\n    case 'results':\n      html = renderResults(results, startTime);\n      break;\n    default:\n      html = renderTriage1();\n  }\n\n  container.innerHTML = html;\n\n  // Restore form data if available\n  const form = container.querySelector('form[data-module]');\n  if (form) {\n    const module = form.dataset.module;\n    restoreFormData(form, module);\n  }\n\n  // Attach event listeners\n  attachEvents(container);\n\n  // Accessibility updates\n  announceScreenChange(currentScreen);\n  setPageTitle(currentScreen);\n  focusMainHeading();\n}\n\nfunction restoreFormData(form, module) {\n  const formData = store.getFormData(module);\n  if (!formData || Object.keys(formData).length === 0) return;\n\n  Object.entries(formData).forEach(([key, value]) => {\n    const input = form.elements[key];\n    if (input) {\n      if (input.type === 'checkbox') {\n        input.checked = value === true || value === 'on' || value === 'true';\n      } else {\n        input.value = value;\n      }\n    }\n  });\n}\n\nfunction attachEvents(container) {\n  // Clear any existing validation errors when inputs change\n  container.querySelectorAll('input[type=\"number\"]').forEach(input => {\n    input.addEventListener('blur', () => {\n      clearValidationErrors(container);\n    });\n  });\n\n  // Triage button handlers\n  container.querySelectorAll('[data-action]').forEach(button => {\n    button.addEventListener('click', (e) => {\n      const { action, value } = e.currentTarget.dataset;\n      const boolVal = value === 'true';\n      \n      switch (action) {\n        case 'triage1':\n          handleTriage1(boolVal);\n          break;\n        case 'triage2':\n          handleTriage2(boolVal);\n          break;\n        case 'reset':\n          reset();\n          break;\n      }\n    });\n  });\n\n  // Form submission handlers\n  container.querySelectorAll('form[data-module]').forEach(form => {\n    form.addEventListener('submit', (e) => {\n      handleSubmit(e, container);\n    });\n  });\n\n  // Print button handler\n  const printButton = container.querySelector('#printResults');\n  if (printButton) {\n    printButton.addEventListener('click', () => window.print());\n  }\n}","import { store } from './state/store.js';\nimport { render } from './ui/render.js';\nimport { APP_CONFIG } from './config.js';\n\nclass App {\n  constructor() {\n    this.container = null;\n    this.unsubscribe = null;\n  }\n\n  async init() {\n    // Wait for DOM to be ready\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', () => this.init());\n      return;\n    }\n\n    this.container = document.getElementById('appContainer');\n    if (!this.container) {\n      console.error('App container not found');\n      return;\n    }\n\n    // Subscribe to store changes\n    this.unsubscribe = store.subscribe(() => {\n      render(this.container);\n    });\n\n    // Setup global event listeners\n    this.setupGlobalEventListeners();\n\n    // Initialize theme\n    this.initializeTheme();\n\n    // Start auto-save\n    this.startAutoSave();\n\n    // Setup session timeout\n    this.setupSessionTimeout();\n\n    // Set current year in footer\n    this.setCurrentYear();\n\n    // Initial render\n    render(this.container);\n\n    console.log('Stroke Triage Assistant initialized');\n  }\n\n  setupGlobalEventListeners() {\n    // Dark mode toggle\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    if (darkModeToggle) {\n      darkModeToggle.addEventListener('click', () => this.toggleDarkMode());\n    }\n\n    // Help modal\n    this.setupHelpModal();\n\n    // Footer links\n    this.setupFooterLinks();\n\n    // Keyboard navigation\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        const helpModal = document.getElementById('helpModal');\n        if (helpModal && helpModal.classList.contains('show')) {\n          helpModal.classList.remove('show');\n          helpModal.setAttribute('aria-hidden', 'true');\n        }\n      }\n    });\n\n    // Before unload warning\n    window.addEventListener('beforeunload', (e) => {\n      if (store.hasUnsavedData()) {\n        e.preventDefault();\n        e.returnValue = 'You have unsaved data. Are you sure you want to leave?';\n      }\n    });\n  }\n\n  setupHelpModal() {\n    const helpButton = document.getElementById('helpButton');\n    const helpModal = document.getElementById('helpModal');\n    const modalClose = helpModal?.querySelector('.modal-close');\n\n    if (helpButton && helpModal) {\n      helpButton.addEventListener('click', () => {\n        helpModal.classList.add('show');\n        helpModal.setAttribute('aria-hidden', 'false');\n      });\n      \n      modalClose?.addEventListener('click', () => {\n        helpModal.classList.remove('show');\n        helpModal.setAttribute('aria-hidden', 'true');\n      });\n      \n      helpModal.addEventListener('click', (e) => {\n        if (e.target === helpModal) {\n          helpModal.classList.remove('show');\n          helpModal.setAttribute('aria-hidden', 'true');\n        }\n      });\n    }\n  }\n\n  setupFooterLinks() {\n    document.getElementById('privacyLink')?.addEventListener('click', (e) => {\n      e.preventDefault();\n      this.showPrivacyPolicy();\n    });\n    \n    document.getElementById('disclaimerLink')?.addEventListener('click', (e) => {\n      e.preventDefault();\n      this.showDisclaimer();\n    });\n  }\n\n  initializeTheme() {\n    const savedTheme = localStorage.getItem('theme');\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    \n    if (savedTheme === 'dark' || (!savedTheme && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n      document.body.classList.add('dark-mode');\n      if (darkModeToggle) darkModeToggle.textContent = '‚òÄÔ∏è';\n    }\n  }\n\n  toggleDarkMode() {\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    document.body.classList.toggle('dark-mode');\n    const isDark = document.body.classList.contains('dark-mode');\n    \n    if (darkModeToggle) {\n      darkModeToggle.textContent = isDark ? '‚òÄÔ∏è' : 'üåô';\n    }\n    \n    localStorage.setItem('theme', isDark ? 'dark' : 'light');\n  }\n\n  startAutoSave() {\n    setInterval(() => {\n      this.saveCurrentFormData();\n    }, APP_CONFIG.autoSaveInterval);\n  }\n\n  saveCurrentFormData() {\n    const forms = this.container.querySelectorAll('form[data-module]');\n    forms.forEach(form => {\n      const formData = new FormData(form);\n      const module = form.dataset.module;\n      if (module) {\n        const data = {};\n        formData.forEach((value, key) => {\n          const element = form.elements[key];\n          if (element && element.type === 'checkbox') {\n            data[key] = element.checked;\n          } else {\n            data[key] = value;\n          }\n        });\n        \n        // Only save if data has actually changed to prevent unnecessary re-renders\n        const currentData = store.getFormData(module);\n        const hasChanges = JSON.stringify(currentData) !== JSON.stringify(data);\n        if (hasChanges) {\n          store.setFormData(module, data);\n        }\n      }\n    });\n  }\n\n  setupSessionTimeout() {\n    setTimeout(() => {\n      if (confirm('Your session has been idle for 30 minutes. Would you like to continue?')) {\n        this.setupSessionTimeout();\n      } else {\n        store.reset();\n      }\n    }, APP_CONFIG.sessionTimeout);\n  }\n\n  setCurrentYear() {\n    const yearElement = document.getElementById('currentYear');\n    if (yearElement) {\n      yearElement.textContent = new Date().getFullYear();\n    }\n  }\n\n  showPrivacyPolicy() {\n    alert('Privacy Policy: This tool processes data locally. No patient data is stored or transmitted.');\n  }\n\n  showDisclaimer() {\n    alert('Medical Disclaimer: This tool is for clinical decision support only. Always use clinical judgment and follow local protocols.');\n  }\n\n  destroy() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n}\n\n// Initialize the application\nconst app = new App();\napp.init();\n\n// Export for potential testing or debugging\nexport default app;"],"names":["Store","listener","updates","screen","module","data","formData","errors","results","newState","eventName","event","store","renderProgressIndicator","currentStep","steps","html","step","index","isActive","isCompleted","renderTriage1","renderTriage2","API_URLS","CRITICAL_THRESHOLDS","GFAP_RANGES","APP_CONFIG","VALIDATION_RULES","renderComa","renderLimited","renderFull","renderCriticalAlert","normalizeDrivers","drivers","normalizeShapValues","normalizeLogisticContributions","isRawDriversObject","normalizeRawDrivers","shapData","features","item","feature","value","a","b","positive","f","negative","meta","logitData","obj","renderDriversSection","ich","lvo","renderDriversPanel","title","type","driversViewModel","driver","percentage","width","getRiskLevel","probabilityPercent","p","thresholds","formatTime","milliseconds","seconds","minutes","remainingSeconds","renderRecommendations","startTime","generateRecommendations","rec","recommendations","ichPercent","lvoPercent","renderResults","ichHtml","lvoHtml","criticalAlert","recommendationsHtml","driversHtml","validateInput","name","rules","validateForm","form","isValid","validationErrors","input","showValidationErrors","container","group","el","errorDiv","clearValidationErrors","APIError","message","status","url","normalizeBooleans","payload","normalized","key","fetchJSON","controller","timeoutId","response","errorMessage","errorData","error","predictComaIch","normalizedPayload","predictLimitedIch","predictFullStroke","ichResult","_a","_b","_c","lvoResult","_d","_e","_f","handleTriage1","isComatose","navigate","handleTriage2","isExaminable","reset","handleSubmit","e","validation","inputs","element","n","button","originalContent","showError","alert","containerDiv","announceScreenChange","announcement","screenNames","setPageTitle","titles","focusMainHeading","heading","render","state","currentScreen","restoreFormData","attachEvents","action","boolVal","printButton","App","darkModeToggle","helpModal","helpButton","modalClose","savedTheme","isDark","currentData","yearElement","app"],"mappings":"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"}