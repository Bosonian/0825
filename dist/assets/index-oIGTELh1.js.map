{"version":3,"file":"index-oIGTELh1.js","sources":["../../src/state/store.js","../../src/ui/components/progress.js","../../src/localization/messages.js","../../src/localization/i18n.js","../../src/ui/screens/triage1.js","../../src/ui/screens/triage2.js","../../src/config.js","../../src/ui/screens/coma.js","../../src/ui/screens/limited.js","../../src/ui/screens/full.js","../../src/ui/components/alerts.js","../../src/data/stroke-centers.js","../../src/ui/components/stroke-center-map.js","../../src/logic/formatters.js","../../src/ui/screens/results.js","../../src/logic/validate.js","../../src/api/drivers.js","../../src/api/client.js","../../src/logic/handlers.js","../../src/ui/a11y.js","../../src/ui/components/fastEdModal.js","../../src/ui/render.js","../../src/main.js"],"sourcesContent":["// State management for the Stroke Triage Assistant\n\nclass Store {\n  constructor() {\n    this.state = {\n      currentScreen: 'triage1',\n      results: null,\n      sessionId: null,\n      startTime: null,\n      formData: {},\n      validationErrors: {},\n      screenHistory: []\n    };\n    \n    this.listeners = new Set();\n    this.initialize();\n  }\n  \n  initialize() {\n    this.state.sessionId = this.generateSessionId();\n    this.state.startTime = Date.now();\n    console.log('Store initialized with session:', this.state.sessionId);\n  }\n  \n  generateSessionId() {\n    return 'session_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n  }\n  \n  // Subscribe to state changes\n  subscribe(listener) {\n    this.listeners.add(listener);\n    return () => this.listeners.delete(listener);\n  }\n  \n  // Notify all listeners of state changes\n  notify() {\n    this.listeners.forEach(listener => listener(this.state));\n  }\n  \n  // Get current state (read-only)\n  getState() {\n    return { ...this.state };\n  }\n  \n  // Update state and notify listeners\n  setState(updates) {\n    this.state = { ...this.state, ...updates };\n    this.notify();\n  }\n  \n  // Navigate to a new screen\n  navigate(screen) {\n    console.log(`Navigating from ${this.state.currentScreen} to ${screen}`);\n    const history = [...this.state.screenHistory];\n    \n    // Add current screen to history if not already there\n    if (this.state.currentScreen !== screen && !history.includes(this.state.currentScreen)) {\n      history.push(this.state.currentScreen);\n    }\n    \n    this.setState({ \n      currentScreen: screen, \n      screenHistory: history \n    });\n  }\n  \n  // Navigate back to previous screen\n  goBack() {\n    const history = [...this.state.screenHistory];\n    console.log('goBack() - current history:', history);\n    console.log('goBack() - current screen:', this.state.currentScreen);\n    if (history.length > 0) {\n      const previousScreen = history.pop();\n      console.log('goBack() - navigating to:', previousScreen);\n      this.setState({ \n        currentScreen: previousScreen, \n        screenHistory: history \n      });\n      return true;\n    }\n    console.log('goBack() - no history available');\n    return false;\n  }\n  \n  // Navigate to home screen\n  goHome() {\n    this.setState({ \n      currentScreen: 'triage1',\n      screenHistory: []\n    });\n  }\n  \n  // Store form data for a specific module\n  setFormData(module, data) {\n    const formData = { ...this.state.formData };\n    formData[module] = { ...data };\n    this.setState({ formData });\n  }\n  \n  // Get form data for a specific module\n  getFormData(module) {\n    return this.state.formData[module] || {};\n  }\n  \n  // Store validation errors\n  setValidationErrors(errors) {\n    this.setState({ validationErrors: errors });\n  }\n  \n  // Clear validation errors\n  clearValidationErrors() {\n    this.setState({ validationErrors: {} });\n  }\n  \n  // Store prediction results\n  setResults(results) {\n    this.setState({ results });\n  }\n  \n  // Check if there's unsaved data\n  hasUnsavedData() {\n    return Object.keys(this.state.formData).length > 0 && !this.state.results;\n  }\n  \n  // Reset to initial state\n  reset() {\n    const newState = {\n      currentScreen: 'triage1',\n      results: null,\n      sessionId: this.generateSessionId(),\n      startTime: Date.now(),\n      formData: {},\n      validationErrors: {},\n      screenHistory: []\n    };\n    this.setState(newState);\n    console.log('Store reset with new session:', newState.sessionId);\n  }\n  \n  // Log events for audit trail\n  logEvent(eventName, data = {}) {\n    const event = {\n      timestamp: Date.now(),\n      session: this.state.sessionId,\n      event: eventName,\n      data: data\n    };\n    console.log('Event:', event);\n    // In production, send to analytics service\n    // this.sendToAnalytics(event);\n  }\n  \n  // Calculate session duration\n  getSessionDuration() {\n    return Date.now() - this.state.startTime;\n  }\n}\n\n// Create and export a singleton instance\nexport const store = new Store();\n\n// Export the Store class for testing purposes\nexport { Store };","export function renderProgressIndicator(currentStep) {\n  const steps = [\n    { id: 1, label: 'Triage' },\n    { id: 2, label: 'Assessment' },\n    { id: 3, label: 'Results' }\n  ];\n  \n  let html = `<div class=\"progress-indicator\">`;\n  steps.forEach((step, index) => {\n    const isActive = step.id === currentStep;\n    const isCompleted = step.id < currentStep;\n    html += `\n      <div class=\"progress-step ${isActive ? 'active' : ''} ${isCompleted ? 'completed' : ''}\">\n        ${isCompleted ? '' : step.id}\n      </div>\n    `;\n    if (index < steps.length - 1) {\n      html += `<div class=\"progress-line ${isCompleted ? 'completed' : ''}\"></div>`;\n    }\n  });\n  html += `</div>`;\n  return html;\n}","// Localization messages for the Stroke Triage Assistant\n\nexport const messages = {\n  en: {\n    // Header\n    appTitle: 'iGFAP',\n    emergencyBadge: 'Emergency Tool',\n    helpButton: 'Help and Instructions',\n    darkModeButton: 'Toggle dark mode',\n    languageToggle: 'Language',\n\n    // Progress\n    step1: 'Initial Assessment',\n    step2: 'Data Collection', \n    step3: 'Results',\n    \n    // Module titles\n    comaModuleTitle: 'Coma Module',\n    limitedDataModuleTitle: 'Limited Data Module',\n    fullStrokeModuleTitle: 'Full Stroke Module',\n\n    // Triage 1\n    triage1Title: 'Patient Assessment',\n    triage1Question: 'Is the patient comatose?',\n    triage1Help: 'Glasgow Coma Scale < 8',\n    triage1Yes: 'YES - Comatose',\n    triage1No: 'NO - Conscious',\n\n    // Triage 2\n    triage2Title: 'Examination Capability',\n    triage2Question: 'Can the patient be reliably examined?',\n    triage2Help: 'Patient is not aphasic, confused, or uncooperative',\n    triage2Yes: 'YES - Full Exam Possible',\n    triage2No: 'NO - Limited Exam Only',\n\n    // Forms\n    ageLabel: 'Age (years)',\n    ageHelp: 'Patient age in years',\n    systolicLabel: 'Systolic BP (mmHg)',\n    systolicHelp: 'Systolic blood pressure',\n    diastolicLabel: 'Diastolic BP (mmHg)', \n    diastolicHelp: 'Diastolic blood pressure',\n    gfapLabel: 'GFAP Value (pg/mL)',\n    gfapHelp: 'GFAP biomarker level',\n    fastEdLabel: 'FAST-ED Score',\n    fastEdHelp: 'FAST-ED assessment score (0-9)',\n\n    // Checkboxes\n    headacheLabel: 'Headache',\n    vigilanzLabel: 'Reduced consciousness',\n    armPareseLabel: 'Arm weakness',\n    beinPareseLabel: 'Leg weakness', \n    eyeDeviationLabel: 'Eye deviation',\n    atrialFibLabel: 'Atrial fibrillation',\n    anticoagLabel: 'Anticoagulated (NOAK)',\n    antiplateletsLabel: 'Antiplatelets',\n\n    // Buttons\n    analyzeButton: 'Analyze',\n    analyzing: 'Analyzing...',\n    printResults: 'Print Results',\n    newAssessment: 'Start New Assessment',\n    startOver: 'Start Over',\n    goBack: 'Go Back',\n    goHome: 'Go Home',\n    \n    // Form sections\n    basicInformation: 'Basic Information',\n    biomarkersScores: 'Biomarkers & Scores',\n    clinicalSymptoms: 'Clinical Symptoms',\n    medicalHistory: 'Medical History',\n    \n    // Form labels with units\n    ageYearsLabel: 'Age (years)',\n    systolicBpLabel: 'Systolic BP (mmHg)',\n    diastolicBpLabel: 'Diastolic BP (mmHg)',\n    gfapValueLabel: 'GFAP Value (pg/mL)',\n    fastEdScoreLabel: 'FAST-ED Score',\n    \n    // Help text\n    ageYearsHelp: \"Patient's age in years\",\n    systolicBpHelp: 'Normal: 90-140 mmHg',\n    diastolicBpHelp: 'Normal: 60-90 mmHg',\n    gfapTooltip: 'Brain injury biomarker',\n    gfapTooltipLong: 'Glial Fibrillary Acidic Protein - Brain injury biomarker',\n    gfapRange: 'Range: {min} - {max} pg/mL',\n    fastEdTooltip: '0-9 scale for LVO screening',\n    \n    // Module buttons\n    analyzeIchRisk: 'Analyze ICH Risk',\n    analyzeStrokeRisk: 'Analyze Stroke Risk',\n    \n    // Alert messages\n    criticalPatient: 'Critical Patient',\n    comaAlert: 'Patient is comatose (GCS < 8). Rapid assessment required.',\n    vigilanceReduction: 'Vigilance Reduction (Decreased alertness)',\n    \n    // Additional symptom labels\n    armParesis: 'Arm Paresis',\n    legParesis: 'Leg Paresis',\n    eyeDeviation: 'Eye Deviation',\n    atrialFibrillation: 'Atrial Fibrillation',\n    onNoacDoac: 'On NOAC/DOAC',\n    onAntiplatelets: 'On Antiplatelets',\n\n    // Results\n    resultsTitle: 'Assessment Results',\n    bleedingRiskAssessment: 'Bleeding Risk Assessment',\n    ichProbability: 'ICH Probability',\n    lvoProbability: 'LVO Probability',\n    lvoMayBePossible: 'Large vessel occlusion possible - further evaluation recommended',\n    riskFactorsTitle: 'Main Risk Factors',\n    increasingRisk: 'Increasing Risk',\n    decreasingRisk: 'Decreasing Risk',\n    noFactors: 'No factors',\n    riskLevel: 'Risk Level',\n    lowRisk: 'Low Risk',\n    mediumRisk: 'Medium Risk', \n    highRisk: 'High Risk',\n\n    // Risk levels\n    riskLow: 'Low',\n    riskMedium: 'Medium',\n    riskHigh: 'High',\n\n    // Drivers\n    driversTitle: 'Model Drivers',\n    driversSubtitle: 'Factors contributing to the prediction',\n    riskFactors: 'Risk Factors',\n    increaseRisk: 'INCREASE',\n    decreaseRisk: 'DECREASE',\n    noPositiveFactors: 'No increasing factors',\n    noNegativeFactors: 'No decreasing factors',\n    ichDrivers: 'ICH Risk Factors',\n    lvoDrivers: 'LVO Risk Factors',\n\n    // Critical Alert\n    criticalAlertTitle: 'CRITICAL RISK DETECTED',\n    criticalAlertMessage: 'High probability of intracerebral hemorrhage detected. Immediate medical attention required.',\n    immediateActionsRequired: 'Immediate actions required',\n    initiateStrokeProtocol: 'Initiate stroke protocol immediately',\n    urgentCtImaging: 'Urgent CT imaging required',\n    considerBpManagement: 'Consider blood pressure management',\n    prepareNeurosurgicalConsult: 'Prepare for potential neurosurgical consultation',\n\n    // Help Modal\n    helpTitle: 'Quick Reference Guide',\n    gcsTitle: 'Glasgow Coma Scale (GCS)',\n    gcsLow: 'GCS < 8: Comatose patient - use Coma Module',\n    gcsMod: 'GCS 8-12: Moderate impairment',\n    gcsHigh: 'GCS 13-15: Mild impairment',\n    fastEdTitle: 'FAST-ED Score Components',\n    fastEdFacial: 'Facial Palsy: 0-1 points',\n    fastEdArm: 'Arm Weakness: 0-2 points',\n    fastEdSpeech: 'Speech Changes: 0-2 points',\n    fastEdTime: 'Time: Critical factor',\n    fastEdEye: 'Eye Deviation: 0-2 points',\n    fastEdDenial: 'Denial/Neglect: 0-2 points',\n    criticalValuesTitle: 'Critical Values',\n    criticalBp: 'Systolic BP > 180: Increased ICH risk',\n    criticalGfap: 'GFAP > 500 pg/mL: Significant marker',\n    criticalFastEd: 'FAST-ED ≥ 4: Consider LVO',\n\n    // FAST-ED Calculator Modal\n    fastEdCalculatorTitle: 'FAST-ED Score Calculator',\n    fastEdCalculatorSubtitle: 'Click to calculate FAST-ED score components',\n    facialPalsyTitle: 'Facial Palsy',\n    facialPalsyNormal: 'Normal (0)',\n    facialPalsyMild: 'Mild drooping (1)',\n    armWeaknessTitle: 'Arm Weakness',\n    armWeaknessNormal: 'Normal (0)',\n    armWeaknessMild: 'Mild drift (1)',\n    armWeaknessSevere: 'Falls immediately (2)',\n    speechChangesTitle: 'Speech Changes', \n    speechChangesNormal: 'Normal (0)',\n    speechChangesMild: 'Slurred speech (1)',\n    speechChangesSevere: 'Severe aphasia (2)',\n    eyeDeviationTitle: 'Eye Deviation',\n    eyeDeviationNormal: 'Normal (0)',\n    eyeDeviationPartial: 'Partial gaze palsy (1)',\n    eyeDeviationForced: 'Forced deviation (2)',\n    denialNeglectTitle: 'Denial/Neglect',\n    denialNeglectNormal: 'Normal (0)',\n    denialNeglectPartial: 'Partial neglect (1)',\n    denialNeglectComplete: 'Complete neglect (2)',\n    totalScoreTitle: 'Total FAST-ED Score',\n    riskLevel: 'Risk Level',\n    riskLevelLow: 'LOW (Score <4)',\n    riskLevelHigh: 'HIGH (Score ≥4 - Consider LVO)',\n    applyScore: 'Apply Score',\n    cancel: 'Cancel',\n    \n    // Results Screen Enhancements\n    modelDrivers: 'Model Drivers',\n    modelDriversSubtitle: 'Factors contributing to the prediction',\n    contributingFactors: 'Contributing factors',\n    factorsShown: 'shown',\n    positiveFactors: 'Positive factors',\n    negativeFactors: 'Negative factors',\n    clinicalInformation: 'Clinical Information',\n    clinicalRecommendations: 'Clinical Recommendations',\n    clinicalRec1: 'Consider immediate imaging if ICH risk is high',\n    clinicalRec2: 'Activate stroke team for LVO scores ≥ 50%',\n    clinicalRec3: 'Monitor blood pressure closely',\n    clinicalRec4: 'Document all findings thoroughly',\n    noDriverData: 'No driver data available',\n    driverAnalysisUnavailable: 'Driver analysis unavailable',\n    driverInfoNotAvailable: 'Driver information not available from this prediction model',\n    driverAnalysisNotAvailable: 'Driver analysis not available for this prediction',\n    lvoNotPossible: 'LVO assessment not possible with limited data',\n    fullExamRequired: 'Full neurological examination required for LVO screening',\n    limitedAssessment: 'Limited Assessment',\n\n    // Disclaimer\n    disclaimer: 'Clinical Disclaimer',\n    disclaimerText: 'This tool is for clinical decision support only. Always use clinical judgment and follow local protocols. Not a replacement for physician assessment.',\n    importantNote: 'Important',\n    importantText: 'These results are for clinical decision support only. Always use clinical judgment and follow institutional protocols.',\n    \n    // Input Summary\n    inputSummaryTitle: 'Input Summary',\n    inputSummarySubtitle: 'Values used for this analysis',\n\n    // Footer\n    privacyLink: 'Privacy Policy',\n    disclaimerLink: 'Medical Disclaimer', \n    versionLink: 'Version 2.0.1',\n\n    // Privacy and disclaimers\n    privacyPolicy: 'Privacy Policy: This tool processes data locally. No patient data is stored or transmitted.',\n    medicalDisclaimer: 'Medical Disclaimer: This tool is for clinical decision support only. Always use clinical judgment and follow local protocols.',\n\n    // Error messages\n    networkError: 'Network error - please check your connection and try again',\n    requestTimeout: 'Request timeout - please try again',\n    apiError: 'Failed to get results',\n    validationError: 'Please check your input values',\n\n    // Session\n    sessionTimeout: 'Your session has been idle for 30 minutes. Would you like to continue?',\n    unsavedData: 'You have unsaved data. Are you sure you want to leave?',\n\n    // Stroke Centers\n    nearestCentersTitle: 'Nearest Stroke Centers',\n    useCurrentLocation: 'Use Current Location',\n    enterLocationPlaceholder: 'Enter city or address...',\n    enterManually: 'Enter Location Manually',\n    search: 'Search',\n    yourLocation: 'Your Location',\n    recommendedCenters: 'Recommended Centers',\n    alternativeCenters: 'Alternative Centers',\n    noCentersFound: 'No stroke centers found in this area',\n    gettingLocation: 'Getting your location',\n    searchingLocation: 'Searching location',\n    locationError: 'Unable to get your location',\n    locationPermissionDenied: 'Location access denied. Please allow location access and try again.',\n    locationUnavailable: 'Location information is unavailable',\n    locationTimeout: 'Location request timed out',\n    geolocationNotSupported: 'Geolocation is not supported by this browser',\n    geocodingNotImplemented: 'Location search not available. Please use GPS or enter coordinates manually.',\n    tryManualEntry: 'Try entering your location manually or use GPS.',\n    distanceNote: 'Distances are calculated as straight-line distances. Actual travel times may vary.',\n    travelTimeNote: 'Travel times calculated for emergency vehicles with sirens and priority routing.',\n    calculatingTravelTimes: 'Calculating travel times',\n    minutes: 'min',\n    poweredByOrs: 'Travel times powered by OpenRoute Service',\n    \n    // Center Types and Services\n    comprehensiveCenter: 'Comprehensive Stroke Center',\n    primaryCenter: 'Primary Stroke Center',\n    telemetryCenter: 'Telemedicine Center',\n    thrombectomy: 'Thrombectomy',\n    neurosurgery: 'Neurosurgery',\n    icu: 'Intensive Care',\n    telemedicine: 'Telemedicine',\n    stroke_unit: 'Stroke Unit',\n    \n    // Actions\n    call: 'Call',\n    directions: 'Directions',\n    emergency: 'Emergency',\n    certified: 'Certified'\n  },\n\n  de: {\n    // Header\n    appTitle: 'iGFAP',\n    emergencyBadge: 'Notfall-Tool',\n    helpButton: 'Hilfe und Anweisungen',\n    darkModeButton: 'Dunklen Modus umschalten',\n    languageToggle: 'Sprache',\n\n    // Progress\n    step1: 'Erstbeurteilung',\n    step2: 'Datenerhebung',\n    step3: 'Ergebnisse',\n    \n    // Module titles\n    comaModuleTitle: 'Koma-Modul',\n    limitedDataModuleTitle: 'Begrenzte Daten Modul',\n    fullStrokeModuleTitle: 'Vollständiges Schlaganfall-Modul',\n\n    // Triage 1\n    triage1Title: 'Patientenbeurteilung',\n    triage1Question: 'Ist der Patient komatös?',\n    triage1Help: 'Glasgow Coma Scale < 8',\n    triage1Yes: 'JA - Komatös',\n    triage1No: 'NEIN - Bei Bewusstsein',\n\n    // Triage 2\n    triage2Title: 'Untersuchungsfähigkeit',\n    triage2Question: 'Kann der Patient zuverlässig untersucht werden?',\n    triage2Help: 'Patient ist nicht aphasisch, verwirrt oder unkooperativ',\n    triage2Yes: 'JA - Vollständige Untersuchung möglich',\n    triage2No: 'NEIN - Nur begrenzte Untersuchung',\n\n    // Forms\n    ageLabel: 'Alter (Jahre)',\n    ageHelp: 'Patientenalter in Jahren',\n    systolicLabel: 'Systolischer RR (mmHg)',\n    systolicHelp: 'Systolischer Blutdruck',\n    diastolicLabel: 'Diastolischer RR (mmHg)',\n    diastolicHelp: 'Diastolischer Blutdruck',\n    gfapLabel: 'GFAP-Wert (pg/mL)',\n    gfapHelp: 'GFAP-Biomarker-Wert',\n    fastEdLabel: 'FAST-ED-Score',\n    fastEdHelp: 'FAST-ED-Bewertungsscore (0-9)',\n\n    // Checkboxes\n    headacheLabel: 'Kopfschmerzen',\n    vigilanzLabel: 'Bewusstseinstrübung',\n    armPareseLabel: 'Armschwäche',\n    beinPareseLabel: 'Beinschwäche',\n    eyeDeviationLabel: 'Blickdeviation',\n    atrialFibLabel: 'Vorhofflimmern',\n    anticoagLabel: 'Antikoaguliert (NOAK)',\n    antiplateletsLabel: 'Thrombozytenaggregationshemmer',\n\n    // Buttons\n    analyzeButton: 'Analysieren',\n    analyzing: 'Analysiere...',\n    printResults: 'Ergebnisse drucken',\n    newAssessment: 'Neue Bewertung starten',\n    startOver: 'Von vorn beginnen',\n    goBack: 'Zurück',\n    goHome: 'Zur Startseite',\n    \n    // Form sections\n    basicInformation: 'Grundinformationen',\n    biomarkersScores: 'Biomarker & Scores',\n    clinicalSymptoms: 'Klinische Symptome',\n    medicalHistory: 'Anamnese',\n    \n    // Form labels with units\n    ageYearsLabel: 'Alter (Jahre)',\n    systolicBpLabel: 'Systolischer RR (mmHg)',\n    diastolicBpLabel: 'Diastolischer RR (mmHg)',\n    gfapValueLabel: 'GFAP-Wert (pg/mL)',\n    fastEdScoreLabel: 'FAST-ED-Score',\n    \n    // Help text\n    ageYearsHelp: 'Patientenalter in Jahren',\n    systolicBpHelp: 'Normal: 90-140 mmHg',\n    diastolicBpHelp: 'Normal: 60-90 mmHg',\n    gfapTooltip: 'Hirnverletzungs-Biomarker',\n    gfapTooltipLong: 'Glial Fibrillary Acidic Protein - Hirnverletzungs-Biomarker',\n    gfapRange: 'Bereich: {min} - {max} pg/mL',\n    fastEdTooltip: '0-9 Skala für LVO-Screening',\n    \n    // Module buttons\n    analyzeIchRisk: 'ICB-Risiko analysieren',\n    analyzeStrokeRisk: 'Schlaganfall-Risiko analysieren',\n    \n    // Alert messages\n    criticalPatient: 'Kritischer Patient',\n    comaAlert: 'Patient ist komatös (GCS < 8). Schnelle Beurteilung erforderlich.',\n    vigilanceReduction: 'Vigilanzminderung (Verminderte Wachheit)',\n    \n    // Additional symptom labels\n    armParesis: 'Armparese',\n    legParesis: 'Beinparese',\n    eyeDeviation: 'Blickdeviation',\n    atrialFibrillation: 'Vorhofflimmern',\n    onNoacDoac: 'NOAK/DOAK-Therapie',\n    onAntiplatelets: 'Thrombozytenaggregationshemmer',\n\n    // Results\n    resultsTitle: 'Bewertungsergebnisse',\n    bleedingRiskAssessment: 'Blutungsrisiko-Bewertung',\n    ichProbability: 'ICB-Wahrscheinlichkeit',\n    lvoProbability: 'LVO-Wahrscheinlichkeit',\n    lvoMayBePossible: 'Großgefäßverschluss möglich - weitere Abklärung empfohlen',\n    riskFactorsTitle: 'Hauptrisikofaktoren',\n    increasingRisk: 'Risikoerhöhend',\n    decreasingRisk: 'Risikomindernd',\n    noFactors: 'Keine Faktoren',\n    riskLevel: 'Risikostufe',\n    lowRisk: 'Niedriges Risiko',\n    mediumRisk: 'Mittleres Risiko',\n    highRisk: 'Hohes Risiko',\n\n    // Risk levels\n    riskLow: 'Niedrig',\n    riskMedium: 'Mittel',\n    riskHigh: 'Hoch',\n\n    // Drivers\n    driversTitle: 'Modelltreiber',\n    driversSubtitle: 'Faktoren, die zur Vorhersage beitragen',\n    riskFactors: 'Risikofaktoren',\n    increaseRisk: 'ERHÖHEN',\n    decreaseRisk: 'VERRINGERN',\n    noPositiveFactors: 'Keine erhöhenden Faktoren',\n    noNegativeFactors: 'Keine verringernden Faktoren',\n    ichDrivers: 'ICB-Risikofaktoren',\n    lvoDrivers: 'LVO-Risikofaktoren',\n\n    // Critical Alert\n    criticalAlertTitle: 'KRITISCHES RISIKO ERKANNT',\n    criticalAlertMessage: 'Hohe Wahrscheinlichkeit einer intrazerebralen Blutung erkannt. Sofortige medizinische Behandlung erforderlich.',\n    immediateActionsRequired: 'Sofortige Maßnahmen erforderlich',\n    initiateStrokeProtocol: 'Schlaganfall-Protokoll sofort einleiten',\n    urgentCtImaging: 'Dringende CT-Bildgebung erforderlich',\n    considerBpManagement: 'Blutdruckmanagement erwägen',\n    prepareNeurosurgicalConsult: 'Neurochirurgische Konsultation vorbereiten',\n\n    // Help Modal\n    helpTitle: 'Kurzreferenzleitfaden',\n    gcsTitle: 'Glasgow Coma Scale (GCS)',\n    gcsLow: 'GCS < 8: Komatöser Patient - Koma-Modul verwenden',\n    gcsMod: 'GCS 8-12: Mäßige Beeinträchtigung',\n    gcsHigh: 'GCS 13-15: Leichte Beeinträchtigung',\n    fastEdTitle: 'FAST-ED-Score-Komponenten',\n    fastEdFacial: 'Faziale Parese: 0-1 Punkte',\n    fastEdArm: 'Armschwäche: 0-2 Punkte',\n    fastEdSpeech: 'Sprachveränderungen: 0-2 Punkte',\n    fastEdTime: 'Zeit: Kritischer Faktor',\n    fastEdEye: 'Blickdeviation: 0-2 Punkte',\n    fastEdDenial: 'Verneinung/Neglect: 0-2 Punkte',\n    criticalValuesTitle: 'Kritische Werte',\n    criticalBp: 'Systolischer RR > 180: Erhöhtes ICB-Risiko',\n    criticalGfap: 'GFAP > 500 pg/mL: Signifikanter Marker',\n    criticalFastEd: 'FAST-ED ≥ 4: LVO in Betracht ziehen',\n\n    // FAST-ED Calculator Modal\n    fastEdCalculatorTitle: 'FAST-ED-Score-Rechner',\n    fastEdCalculatorSubtitle: 'Klicken Sie, um FAST-ED-Score-Komponenten zu berechnen',\n    facialPalsyTitle: 'Fazialisparese',\n    facialPalsyNormal: 'Nein (0)',\n    facialPalsyMild: 'Ja (1)',\n    armWeaknessTitle: 'Armschwäche',\n    armWeaknessNormal: 'Normal (0)',\n    armWeaknessMild: 'Leichter Armabfall (1)',\n    armWeaknessSevere: 'Arm fällt sofort ab (2)',\n    speechChangesTitle: 'Sprachveränderungen',\n    speechChangesNormal: 'Normal (0)',\n    speechChangesMild: 'Verwaschene Sprache (1)',\n    speechChangesSevere: 'Schwere Aphasie (2)',\n    eyeDeviationTitle: 'Blickdeviation',\n    eyeDeviationNormal: 'Normal (0)',\n    eyeDeviationPartial: 'Partielle Blickparese (1)',\n    eyeDeviationForced: 'Forcierte Blickdeviation (2)',\n    denialNeglectTitle: 'Verneinung/Neglect',\n    denialNeglectNormal: 'Normal (0)',\n    denialNeglectPartial: 'Partieller Neglect (1)',\n    denialNeglectComplete: 'Kompletter Neglect (2)',\n    totalScoreTitle: 'Gesamt-FAST-ED-Score',\n    riskLevel: 'Risikostufe',\n    riskLevelLow: 'NIEDRIG (Score <4)',\n    riskLevelHigh: 'HOCH (Score ≥4 - LVO erwägen)',\n    applyScore: 'Score Anwenden',\n    cancel: 'Abbrechen',\n    \n    // Results Screen Enhancements\n    modelDrivers: 'Modelltreiber',\n    modelDriversSubtitle: 'Faktoren, die zur Vorhersage beitragen',\n    contributingFactors: 'Beitragende Faktoren',\n    factorsShown: 'angezeigt',\n    positiveFactors: 'Positive Faktoren',\n    negativeFactors: 'Negative Faktoren',\n    clinicalInformation: 'Klinische Informationen',\n    clinicalRecommendations: 'Klinische Empfehlungen',\n    clinicalRec1: 'Sofortige Bildgebung erwägen bei hohem ICB-Risiko',\n    clinicalRec2: 'Stroke-Team aktivieren bei LVO-Score ≥ 50%',\n    clinicalRec3: 'Blutdruck engmaschig überwachen',\n    clinicalRec4: 'Alle Befunde gründlich dokumentieren',\n    noDriverData: 'Keine Treiberdaten verfügbar',\n    driverAnalysisUnavailable: 'Treiberanalyse nicht verfügbar',\n    driverInfoNotAvailable: 'Treiberinformationen von diesem Vorhersagemodell nicht verfügbar',\n    driverAnalysisNotAvailable: 'Treiberanalyse für diese Vorhersage nicht verfügbar',\n    lvoNotPossible: 'LVO-Bewertung mit begrenzten Daten nicht möglich',\n    fullExamRequired: 'Vollständige neurologische Untersuchung für LVO-Screening erforderlich',\n    limitedAssessment: 'Begrenzte Bewertung',\n\n    // Disclaimer\n    disclaimer: 'Klinischer Haftungsausschluss',\n    disclaimerText: 'Dieses Tool dient nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie lokale Protokolle. Kein Ersatz für ärztliche Beurteilung.',\n    importantNote: 'Wichtig',\n    importantText: 'Diese Ergebnisse dienen nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie institutionelle Protokolle.',\n    \n    // Input Summary\n    inputSummaryTitle: 'Eingabezusammenfassung',\n    inputSummarySubtitle: 'Für diese Analyse verwendete Werte',\n\n    // Footer\n    privacyLink: 'Datenschutzrichtlinie',\n    disclaimerLink: 'Medizinischer Haftungsausschluss',\n    versionLink: 'Version 2.0.1',\n\n    // Privacy and disclaimers\n    privacyPolicy: 'Datenschutzrichtlinie: Dieses Tool verarbeitet Daten lokal. Keine Patientendaten werden gespeichert oder übertragen.',\n    medicalDisclaimer: 'Medizinischer Haftungsausschluss: Dieses Tool dient nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie lokale Protokolle.',\n\n    // Error messages\n    networkError: 'Netzwerkfehler - bitte überprüfen Sie Ihre Verbindung und versuchen Sie es erneut',\n    requestTimeout: 'Anfrage-Timeout - bitte versuchen Sie es erneut',\n    apiError: 'Ergebnisse konnten nicht abgerufen werden',\n    validationError: 'Bitte überprüfen Sie Ihre Eingabewerte',\n\n    // Session\n    sessionTimeout: 'Ihre Sitzung war 30 Minuten lang inaktiv. Möchten Sie fortfahren?',\n    unsavedData: 'Sie haben ungespeicherte Daten. Sind Sie sicher, dass Sie verlassen möchten?',\n\n    // Stroke Centers\n    nearestCentersTitle: 'Nächstgelegene Schlaganfall-Zentren',\n    useCurrentLocation: 'Aktuellen Standort verwenden',\n    enterLocationPlaceholder: 'Stadt oder Adresse eingeben...',\n    enterManually: 'Standort manuell eingeben',\n    search: 'Suchen',\n    yourLocation: 'Ihr Standort',\n    recommendedCenters: 'Empfohlene Zentren',\n    alternativeCenters: 'Alternative Zentren',\n    noCentersFound: 'Keine Schlaganfall-Zentren in diesem Bereich gefunden',\n    gettingLocation: 'Standort wird ermittelt',\n    searchingLocation: 'Standort wird gesucht',\n    locationError: 'Standort konnte nicht ermittelt werden',\n    locationPermissionDenied: 'Standortzugriff verweigert. Bitte erlauben Sie Standortzugriff und versuchen Sie es erneut.',\n    locationUnavailable: 'Standortinformationen sind nicht verfügbar',\n    locationTimeout: 'Standortanfrage ist abgelaufen',\n    geolocationNotSupported: 'Geolokalisierung wird von diesem Browser nicht unterstützt',\n    geocodingNotImplemented: 'Standortsuche nicht verfügbar. Bitte verwenden Sie GPS oder geben Sie Koordinaten manuell ein.',\n    tryManualEntry: 'Versuchen Sie, Ihren Standort manuell einzugeben oder GPS zu verwenden.',\n    distanceNote: 'Entfernungen werden als Luftlinie berechnet. Tatsächliche Fahrzeiten können variieren.',\n    travelTimeNote: 'Fahrzeiten berechnet für Rettungsfahrzeuge mit Sondersignalen und Vorfahrtsberechtigung.',\n    calculatingTravelTimes: 'Fahrzeiten werden berechnet',\n    minutes: 'Min',\n    poweredByOrs: 'Fahrzeiten bereitgestellt von OpenRoute Service',\n    \n    // Center Types and Services\n    comprehensiveCenter: 'Überregionales Schlaganfall-Zentrum',\n    primaryCenter: 'Regionales Schlaganfall-Zentrum',\n    telemetryCenter: 'Telemedizin-Zentrum',\n    thrombectomy: 'Thrombektomie',\n    neurosurgery: 'Neurochirurgie',\n    icu: 'Intensivstation',\n    telemedicine: 'Telemedizin',\n    stroke_unit: 'Stroke Unit',\n    \n    // Actions\n    call: 'Anrufen',\n    directions: 'Wegbeschreibung',\n    emergency: 'Notfall',\n    certified: 'Zertifiziert'\n  }\n};","// Internationalization utilities for the Stroke Triage Assistant\n\nimport { messages } from './messages.js';\n\nclass I18n {\n  constructor() {\n    this.supportedLanguages = ['en', 'de'];\n    this.currentLanguage = this.detectLanguage();\n  }\n\n  // Detect browser language and default to appropriate language\n  detectLanguage() {\n    // Check if language is already set in localStorage\n    const savedLanguage = localStorage.getItem('language');\n    if (savedLanguage && this.supportedLanguages.includes(savedLanguage)) {\n      return savedLanguage;\n    }\n\n    // Detect browser language\n    const browserLang = navigator.language || navigator.userLanguage;\n    const langCode = browserLang.substring(0, 2).toLowerCase();\n    \n    // Default to German if browser language is German, otherwise English\n    return langCode === 'de' ? 'de' : 'en';\n  }\n\n  // Get current language\n  getCurrentLanguage() {\n    return this.currentLanguage;\n  }\n\n  // Set language and save to localStorage\n  setLanguage(language) {\n    if (this.supportedLanguages.includes(language)) {\n      this.currentLanguage = language;\n      localStorage.setItem('language', language);\n      \n      // Dispatch custom event for language change\n      window.dispatchEvent(new CustomEvent('languageChanged', { \n        detail: { language } \n      }));\n      \n      return true;\n    }\n    return false;\n  }\n\n  // Get supported languages\n  getSupportedLanguages() {\n    return [...this.supportedLanguages];\n  }\n\n  // Translate a message key\n  t(key) {\n    const currentMessages = messages[this.currentLanguage] || messages.en;\n    return currentMessages[key] || key;\n  }\n\n  // Toggle between English and German\n  toggleLanguage() {\n    const newLanguage = this.currentLanguage === 'en' ? 'de' : 'en';\n    return this.setLanguage(newLanguage);\n  }\n\n  // Get language display name\n  getLanguageDisplayName(lang = null) {\n    const language = lang || this.currentLanguage;\n    const displayNames = {\n      'en': 'English',\n      'de': 'Deutsch'\n    };\n    return displayNames[language] || language;\n  }\n\n  // Format date/time according to current locale\n  formatDateTime(date) {\n    const locale = this.currentLanguage === 'de' ? 'de-DE' : 'en-US';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: '2-digit', \n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    }).format(date);\n  }\n\n  // Format time only according to current locale\n  formatTime(date) {\n    const locale = this.currentLanguage === 'de' ? 'de-DE' : 'en-US';\n    return new Intl.DateTimeFormat(locale, {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    }).format(date);\n  }\n}\n\n// Create singleton instance\nconst i18n = new I18n();\n\n// Export both the instance and the class\nexport { i18n, I18n };\n\n// Export convenience function for translation\nexport const t = (key) => i18n.t(key);","import { renderProgressIndicator } from '../components/progress.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderTriage1() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(1)}\n      <h2>${t('triage1Title')}</h2>\n      <div class=\"triage-question\">\n        ${t('triage1Question')}\n        <small>${t('triage1Help')}</small>\n      </div>\n      <div class=\"triage-buttons\">\n        <button class=\"yes-btn\" data-action=\"triage1\" data-value=\"true\">${t('triage1Yes')}</button>\n        <button class=\"no-btn\" data-action=\"triage1\" data-value=\"false\">${t('triage1No')}</button>\n      </div>\n    </div>\n  `;\n}","import { renderProgressIndicator } from '../components/progress.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderTriage2() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(1)}\n      <h2>${t('triage2Title')}</h2>\n      <div class=\"triage-question\">\n        ${t('triage2Question')}\n        <small>${t('triage2Help')}</small>\n      </div>\n      <div class=\"triage-buttons\">\n        <button class=\"yes-btn\" data-action=\"triage2\" data-value=\"true\">${t('triage2Yes')}</button>\n        <button class=\"no-btn\" data-action=\"triage2\" data-value=\"false\">${t('triage2No')}</button>\n      </div>\n    </div>\n  `;\n}","// Configuration for the Stroke Triage Assistant\n\nexport const API_URLS = {\n  COMA_ICH: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_coma_ich',\n  LDM_ICH: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_limited_data_ich',\n  FULL_STROKE: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_full_stroke'\n};\n\nexport const CRITICAL_THRESHOLDS = {\n  ich: { \n    medium: 25,\n    high: 50\n  },\n  lvo: { \n    medium: 25,\n    high: 50\n  }\n};\n\nexport const GFAP_RANGES = {\n  min: 29,\n  max: 10001,\n  normal: 100,\n  elevated: 500,\n  critical: 1000\n};\n\nexport const APP_CONFIG = {\n  autoSaveInterval: 180000, // 3 minutes to reduce irritating screen blinks\n  sessionTimeout: 30 * 60 * 1000, // 30 minutes\n  requestTimeout: 10000 // 10 seconds\n};\n\nexport const VALIDATION_RULES = {\n  age_years: { required: true, min: 0, max: 120 },\n  systolic_bp: { required: true, min: 60, max: 300 },\n  diastolic_bp: { required: true, min: 30, max: 200 },\n  gfap_value: { required: true, min: GFAP_RANGES.min, max: GFAP_RANGES.max },\n  fast_ed_score: { required: true, min: 0, max: 9 }\n};","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderComa() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>${t('comaModuleTitle') || 'Coma Module'}</h2>\n      <div class=\"critical-alert\">\n        <h4><span class=\"alert-icon\">🚨</span> ${t('criticalPatient')}</h4>\n        <p>${t('comaAlert')}</p>\n      </div>\n      <form data-module=\"coma\">\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              ${t('gfapValueLabel')}\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('gfapTooltipLong')}</span>\n              </span>\n            </label>\n            <input type=\"number\" id=\"gfap_value\" name=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required aria-describedby=\"gfap-help\">\n            <div id=\"gfap-help\" class=\"input-help\">\n              ${t('gfapRange').replace('{min}', GFAP_RANGES.min).replace('{max}', GFAP_RANGES.max)}\n            </div>\n          </div>\n        </div>\n        <button type=\"submit\" class=\"primary\">${t('analyzeIchRisk')}</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">${t('startOver')}</button>\n      </form>\n    </div>\n  `;\n}","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderLimited() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>${t('limitedDataModuleTitle') || 'Limited Data Module'}</h2>\n      <form data-module=\"limited\">\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"age_years\">${t('ageYearsLabel')}</label>\n            <input type=\"number\" name=\"age_years\" id=\"age_years\" min=\"0\" max=\"120\" required aria-describedby=\"age-help\">\n            <div id=\"age-help\" class=\"input-help\">${t('ageYearsHelp')}</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"systolic_bp\">${t('systolicBpLabel')}</label>\n            <input type=\"number\" name=\"systolic_bp\" id=\"systolic_bp\" min=\"60\" max=\"300\" required aria-describedby=\"sbp-help\">\n            <div id=\"sbp-help\" class=\"input-help\">${t('systolicBpHelp')}</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"diastolic_bp\">${t('diastolicBpLabel')}</label>\n            <input type=\"number\" name=\"diastolic_bp\" id=\"diastolic_bp\" min=\"30\" max=\"200\" required aria-describedby=\"dbp-help\">\n            <div id=\"dbp-help\" class=\"input-help\">${t('diastolicBpHelp')}</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              ${t('gfapValueLabel')}\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('gfapTooltipLong')}</span>\n              </span>\n            </label>\n            <input type=\"number\" name=\"gfap_value\" id=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required>\n          </div>\n        </div>\n        <div class=\"checkbox-group\">\n          <label class=\"checkbox-wrapper\">\n            <input type=\"checkbox\" name=\"vigilanzminderung\" id=\"vigilanzminderung\">\n            <span class=\"checkbox-label\">${t('vigilanceReduction')}</span>\n          </label>\n        </div>\n        <button type=\"submit\" class=\"primary\">${t('analyzeIchRisk')}</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">${t('startOver')}</button>\n      </form>\n    </div>\n  `;\n}","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderFull() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>${t('fullStrokeModuleTitle') || 'Full Stroke Module'}</h2>\n      <form data-module=\"full\">\n        <h3>${t('basicInformation')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"age_years\">${t('ageYearsLabel')}</label>\n            <input type=\"number\" name=\"age_years\" id=\"age_years\" min=\"0\" max=\"120\" required>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"systolic_bp\">${t('systolicBpLabel')}</label>\n            <input type=\"number\" name=\"systolic_bp\" id=\"systolic_bp\" min=\"60\" max=\"300\" required>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"diastolic_bp\">${t('diastolicBpLabel')}</label>\n            <input type=\"number\" name=\"diastolic_bp\" id=\"diastolic_bp\" min=\"30\" max=\"200\" required>\n          </div>\n        </div>\n\n        <h3>${t('biomarkersScores')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              ${t('gfapValueLabel')}\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('gfapTooltip')}</span>\n              </span>\n            </label>\n            <input type=\"number\" name=\"gfap_value\" id=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"fast_ed_score\">\n              ${t('fastEdScoreLabel')}\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('fastEdCalculatorSubtitle')}</span>\n              </span>\n            </label>\n            <input type=\"number\" name=\"fast_ed_score\" id=\"fast_ed_score\" min=\"0\" max=\"9\" required readonly placeholder=\"${t('fastEdCalculatorSubtitle')}\" style=\"cursor: pointer;\">\n            <input type=\"hidden\" name=\"armparese\" id=\"armparese_hidden\" value=\"false\">\n            <input type=\"hidden\" name=\"eye_deviation\" id=\"eye_deviation_hidden\" value=\"false\">\n          </div>\n        </div>\n\n        <h3>${t('clinicalSymptoms')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"headache\" id=\"headache\">\n              <span class=\"checkbox-label\">${t('headacheLabel')}</span>\n            </label>\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"vigilanzminderung\" id=\"vigilanzminderung\">\n              <span class=\"checkbox-label\">${t('vigilanzLabel')}</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"beinparese\" id=\"beinparese\">\n              <span class=\"checkbox-label\">${t('legParesis')}</span>\n            </label>\n          </div>\n        </div>\n\n        <h3>${t('medicalHistory')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"atrial_fibrillation\" id=\"atrial_fibrillation\">\n              <span class=\"checkbox-label\">${t('atrialFibrillation')}</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"anticoagulated_noak\" id=\"anticoagulated_noak\">\n              <span class=\"checkbox-label\">${t('onNoacDoac')}</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"antiplatelets\" id=\"antiplatelets\">\n              <span class=\"checkbox-label\">${t('onAntiplatelets')}</span>\n            </label>\n          </div>\n        </div>\n\n        <button type=\"submit\" class=\"primary\">${t('analyzeStrokeRisk')}</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">${t('startOver')}</button>\n      </form>\n    </div>\n  `;\n}","import { t } from '../../localization/i18n.js';\n\nexport function renderCriticalAlert() {\n  return `\n    <div class=\"critical-alert\">\n      <h4><span class=\"alert-icon\">🚨</span> ${t('criticalAlertTitle')}</h4>\n      <p>${t('criticalAlertMessage')}</p>\n      <p><strong>${t('immediateActionsRequired')}:</strong></p>\n      <ul style=\"margin: 10px 0; padding-left: 20px;\">\n        <li>${t('initiateStrokeProtocol')}</li>\n        <li>${t('urgentCtImaging')}</li>\n        <li>${t('considerBpManagement')}</li>\n        <li>${t('prepareNeurosurgicalConsult')}</li>\n      </ul>\n    </div>\n  `;\n}","// Stroke centers in Bayern (Bavaria), Germany\n// Data includes comprehensive stroke centers and stroke units with neurosurgical capabilities\n\nexport const strokeCenters = [\n  // Major comprehensive stroke centers in München\n  {\n    id: 'klinikum-grosshadern-muenchen',\n    name: 'LMU Klinikum München - Großhadern',\n    type: 'comprehensive',\n    address: 'Marchioninistraße 15, 81377 München',\n    coordinates: {\n      lat: 48.1106,\n      lng: 11.4684\n    },\n    phone: '+49 89 4400-0',\n    emergency: '+49 89 4400-73331',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-rechts-der-isar-muenchen',\n    name: 'Klinikum rechts der Isar München (TUM)',\n    type: 'comprehensive',\n    address: 'Ismaninger Str. 22, 81675 München',\n    coordinates: {\n      lat: 48.1497,\n      lng: 11.6052\n    },\n    phone: '+49 89 4140-0',\n    emergency: '+49 89 4140-2249',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-schwabing-muenchen',\n    name: 'Städtisches Klinikum München Schwabing',\n    type: 'comprehensive',\n    address: 'Kölner Platz 1, 80804 München',\n    coordinates: {\n      lat: 48.1732,\n      lng: 11.5755\n    },\n    phone: '+49 89 3068-0',\n    emergency: '+49 89 3068-2050',\n    services: ['thrombectomy', 'neurosurgery', 'icu'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-bogenhausen-muenchen',\n    name: 'Städtisches Klinikum München Bogenhausen',\n    type: 'comprehensive',\n    address: 'Englschalkinger Str. 77, 81925 München',\n    coordinates: {\n      lat: 48.1614,\n      lng: 11.6254\n    },\n    phone: '+49 89 9270-0',\n    emergency: '+49 89 9270-2050',\n    services: ['thrombectomy', 'neurosurgery', 'icu'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01'\n  },\n\n  // Major centers in other Bayern cities\n  {\n    id: 'uniklinikum-erlangen',\n    name: 'Universitätsklinikum Erlangen',\n    type: 'comprehensive',\n    address: 'Maximiliansplatz 2, 91054 Erlangen',\n    coordinates: {\n      lat: 49.5982,\n      lng: 11.0037\n    },\n    phone: '+49 9131 85-0',\n    emergency: '+49 9131 85-39003',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'uniklinikum-regensburg',\n    name: 'Universitätsklinikum Regensburg',\n    type: 'comprehensive',\n    address: 'Franz-Josef-Strauß-Allee 11, 93053 Regensburg',\n    coordinates: {\n      lat: 49.0134,\n      lng: 12.0991\n    },\n    phone: '+49 941 944-0',\n    emergency: '+49 941 944-7501',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'uniklinikum-wuerzburg',\n    name: 'Universitätsklinikum Würzburg',\n    type: 'comprehensive',\n    address: 'Oberdürrbacher Str. 6, 97080 Würzburg',\n    coordinates: {\n      lat: 49.7840,\n      lng: 9.9721\n    },\n    phone: '+49 931 201-0',\n    emergency: '+49 931 201-24444',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-nuernberg',\n    name: 'Klinikum Nürnberg Nord',\n    type: 'comprehensive',\n    address: 'Prof.-Ernst-Nathan-Str. 1, 90419 Nürnberg',\n    coordinates: {\n      lat: 49.4521,\n      lng: 11.0767\n    },\n    phone: '+49 911 398-0',\n    emergency: '+49 911 398-2369',\n    services: ['thrombectomy', 'neurosurgery', 'icu'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-augsburg',\n    name: 'Universitätsklinikum Augsburg',\n    type: 'comprehensive',\n    address: 'Stenglinstr. 2, 86156 Augsburg',\n    coordinates: {\n      lat: 48.3668,\n      lng: 10.9093\n    },\n    phone: '+49 821 400-01',\n    emergency: '+49 821 400-2356',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01'\n  },\n\n  // Primary stroke centers\n  {\n    id: 'klinikum-ingolstadt',\n    name: 'Klinikum Ingolstadt',\n    type: 'primary',\n    address: 'Krumenauerstraße 25, 85049 Ingolstadt',\n    coordinates: {\n      lat: 48.7665,\n      lng: 11.4364\n    },\n    phone: '+49 841 880-0',\n    emergency: '+49 841 880-2201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-passau',\n    name: 'Klinikum Passau',\n    type: 'primary',\n    address: 'Bischof-Pilgrim-Str. 1, 94032 Passau',\n    coordinates: {\n      lat: 48.5665,\n      lng: 13.4513\n    },\n    phone: '+49 851 5300-0',\n    emergency: '+49 851 5300-2100',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-bamberg',\n    name: 'Sozialstiftung Bamberg Klinikum',\n    type: 'primary',\n    address: 'Buger Str. 80, 96049 Bamberg',\n    coordinates: {\n      lat: 49.8988,\n      lng: 10.9027\n    },\n    phone: '+49 951 503-0',\n    emergency: '+49 951 503-11101',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-bayreuth',\n    name: 'Klinikum Bayreuth',\n    type: 'primary',\n    address: 'Preuschwitzer Str. 101, 95445 Bayreuth',\n    coordinates: {\n      lat: 49.9459,\n      lng: 11.5779\n    },\n    phone: '+49 921 400-0',\n    emergency: '+49 921 400-5401',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-landshut',\n    name: 'Klinikum Landshut',\n    type: 'primary',\n    address: 'Robert-Koch-Str. 1, 84034 Landshut',\n    coordinates: {\n      lat: 48.5436,\n      lng: 12.1619\n    },\n    phone: '+49 871 698-0',\n    emergency: '+49 871 698-3333',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-rosenheim',\n    name: 'RoMed Klinikum Rosenheim',\n    type: 'primary',\n    address: 'Pettenkoferstr. 10, 83022 Rosenheim',\n    coordinates: {\n      lat: 47.8567,\n      lng: 12.1265\n    },\n    phone: '+49 8031 365-0',\n    emergency: '+49 8031 365-3711',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-memmingen',\n    name: 'Klinikum Memmingen',\n    type: 'primary',\n    address: 'Bismarckstr. 23, 87700 Memmingen',\n    coordinates: {\n      lat: 47.9833,\n      lng: 10.1833\n    },\n    phone: '+49 8331 70-0',\n    emergency: '+49 8331 70-2500',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-kempten',\n    name: 'Klinikum Kempten-Oberallgäu',\n    type: 'primary',\n    address: 'Robert-Weixler-Str. 50, 87439 Kempten',\n    coordinates: {\n      lat: 47.7261,\n      lng: 10.3097\n    },\n    phone: '+49 831 530-0',\n    emergency: '+49 831 530-2201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-coburg',\n    name: 'Klinikum Coburg',\n    type: 'primary',\n    address: 'Ketschendorfer Str. 33, 96450 Coburg',\n    coordinates: {\n      lat: 50.2596,\n      lng: 10.9685\n    },\n    phone: '+49 9561 22-0',\n    emergency: '+49 9561 22-6300',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-aschaffenburg',\n    name: 'Klinikum Aschaffenburg-Alzenau',\n    type: 'primary',\n    address: 'Am Hasenkopf 1, 63739 Aschaffenburg',\n    coordinates: {\n      lat: 49.9747,\n      lng: 9.1581\n    },\n    phone: '+49 6021 32-0',\n    emergency: '+49 6021 32-2700',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  }\n];\n\n// Helper functions for stroke center data\nexport function getStrokeCentersByType(type) {\n  return strokeCenters.filter(center => center.type === type);\n}\n\nexport function getComprehensiveStrokeCenters() {\n  return getStrokeCentersByType('comprehensive');\n}\n\nexport function getPrimaryStrokeCenters() {\n  return getStrokeCentersByType('primary');\n}\n\nexport function getStrokeCenterById(id) {\n  return strokeCenters.find(center => center.id === id);\n}\n\n// Calculate distance between two coordinates using Haversine formula (fallback)\nexport function calculateDistance(lat1, lng1, lat2, lng2) {\n  const R = 6371; // Earth's radius in kilometers\n  const dLat = toRadians(lat2 - lat1);\n  const dLng = toRadians(lng2 - lng1);\n  const a = \n    Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) * \n    Math.sin(dLng/2) * Math.sin(dLng/2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  return R * c;\n}\n\nfunction toRadians(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\n// Calculate travel time using OpenRoute Service API\nexport async function calculateTravelTime(fromLat, fromLng, toLat, toLng, profile = 'driving-car') {\n  try {\n    // Using OpenRoute Service (free tier)\n    const url = `https://api.openrouteservice.org/v2/directions/${profile}`;\n    const body = {\n      coordinates: [[fromLng, fromLat], [toLng, toLat]],\n      radiuses: [1000, 1000], // Allow 1km radius for routing\n      format: 'json'\n    };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8',\n        'Authorization': '5b3ce3597851110001cf624868c4c27b63ae476c9c26c8bffbc35688', // Free tier key\n        'Content-Type': 'application/json; charset=utf-8'\n      },\n      body: JSON.stringify(body)\n    });\n\n    if (!response.ok) {\n      throw new Error(`Routing API error: ${response.status}`);\n    }\n\n    const data = await response.json();\n    \n    if (data.routes && data.routes.length > 0) {\n      const route = data.routes[0];\n      return {\n        duration: Math.round(route.summary.duration / 60), // Convert to minutes\n        distance: Math.round(route.summary.distance / 1000), // Convert to km\n        source: 'routing'\n      };\n    } else {\n      throw new Error('No route found');\n    }\n  } catch (error) {\n    console.warn('Travel time calculation failed, using distance estimate:', error);\n    \n    // Fallback to distance-based time estimation\n    const distance = calculateDistance(fromLat, fromLng, toLat, toLng);\n    const estimatedTime = Math.round(distance / 0.8); // Assume 48 km/h average (urban + highway)\n    \n    return {\n      duration: estimatedTime,\n      distance: Math.round(distance),\n      source: 'estimated'\n    };\n  }\n}\n\n// Enhanced travel time calculation for emergency vehicles\nexport async function calculateEmergencyTravelTime(fromLat, fromLng, toLat, toLng) {\n  try {\n    // For emergency vehicles, we can use a faster profile and adjust\n    const result = await calculateTravelTime(fromLat, fromLng, toLat, toLng, 'driving-car');\n    \n    // Reduce time by 25% for emergency vehicle (sirens, priority routing)\n    const emergencyDuration = Math.round(result.duration * 0.75);\n    \n    return {\n      duration: emergencyDuration,\n      distance: result.distance,\n      source: result.source === 'routing' ? 'emergency-routing' : 'emergency-estimated'\n    };\n  } catch (error) {\n    // Fallback calculation\n    const distance = calculateDistance(fromLat, fromLng, toLat, toLng);\n    const emergencyTime = Math.round(distance / 1.2); // Assume 72 km/h for emergency vehicles\n    \n    return {\n      duration: emergencyTime,\n      distance: Math.round(distance), \n      source: 'emergency-estimated'\n    };\n  }\n}\n\n// Find nearest stroke centers with travel time calculation\nexport async function findNearestStrokeCentersWithTravelTime(lat, lng, maxResults = 5, maxTime = 120, useEmergencyRouting = true) {\n  console.log('Calculating travel times to stroke centers...');\n  \n  const centersWithTravelTime = await Promise.all(\n    strokeCenters.map(async (center) => {\n      try {\n        const travelInfo = useEmergencyRouting \n          ? await calculateEmergencyTravelTime(lat, lng, center.coordinates.lat, center.coordinates.lng)\n          : await calculateTravelTime(lat, lng, center.coordinates.lat, center.coordinates.lng);\n        \n        return {\n          ...center,\n          travelTime: travelInfo.duration,\n          distance: travelInfo.distance,\n          travelSource: travelInfo.source\n        };\n      } catch (error) {\n        console.warn(`Failed to calculate travel time to ${center.name}:`, error);\n        // Fallback to distance calculation\n        const distance = calculateDistance(lat, lng, center.coordinates.lat, center.coordinates.lng);\n        return {\n          ...center,\n          travelTime: Math.round(distance / 0.8), // Estimate: 48 km/h average\n          distance: Math.round(distance),\n          travelSource: 'fallback'\n        };\n      }\n    })\n  );\n\n  return centersWithTravelTime\n    .filter(center => center.travelTime <= maxTime)\n    .sort((a, b) => a.travelTime - b.travelTime)\n    .slice(0, maxResults);\n}\n\n// Find nearest stroke centers using distance (fallback/fast method)\nexport function findNearestStrokeCenters(lat, lng, maxResults = 5, maxDistance = 100) {\n  const centersWithDistance = strokeCenters.map(center => ({\n    ...center,\n    distance: calculateDistance(lat, lng, center.coordinates.lat, center.coordinates.lng)\n  }));\n\n  return centersWithDistance\n    .filter(center => center.distance <= maxDistance)\n    .sort((a, b) => a.distance - b.distance)\n    .slice(0, maxResults);\n}\n\n// Get stroke center recommendations with travel time (async)\nexport async function getRecommendedStrokeCentersWithTravelTime(lat, lng, conditionType = 'stroke') {\n  const nearestCenters = await findNearestStrokeCentersWithTravelTime(lat, lng, 10, 120, true);\n  \n  if (conditionType === 'lvo' || conditionType === 'thrombectomy') {\n    // For LVO cases, prioritize comprehensive stroke centers within 60 minutes\n    const comprehensive = nearestCenters.filter(center => \n      center.type === 'comprehensive' && \n      center.services.includes('thrombectomy') &&\n      center.travelTime <= 60\n    );\n    \n    const primary = nearestCenters.filter(center => center.type === 'primary');\n    \n    return {\n      recommended: comprehensive.slice(0, 3),\n      alternative: primary.slice(0, 2)\n    };\n  }\n  \n  // For ICH cases, prioritize neurosurgical capabilities\n  if (conditionType === 'ich') {\n    const neurosurgical = nearestCenters.filter(center =>\n      center.services.includes('neurosurgery') &&\n      center.travelTime <= 45\n    );\n    \n    return {\n      recommended: neurosurgical.slice(0, 3),\n      alternative: nearestCenters.filter(c => !neurosurgical.includes(c)).slice(0, 2)\n    };\n  }\n  \n  // For general stroke cases, return nearest centers regardless of type\n  return {\n    recommended: nearestCenters.slice(0, 5),\n    alternative: []\n  };\n}\n\n// Get stroke center recommendations based on patient condition (fallback - distance only)\nexport function getRecommendedStrokeCenters(lat, lng, conditionType = 'stroke') {\n  const nearestCenters = findNearestStrokeCenters(lat, lng, 10);\n  \n  if (conditionType === 'lvo' || conditionType === 'thrombectomy') {\n    // For LVO cases, prioritize comprehensive stroke centers\n    const comprehensive = nearestCenters.filter(center => \n      center.type === 'comprehensive' && \n      center.services.includes('thrombectomy')\n    );\n    \n    const primary = nearestCenters.filter(center => center.type === 'primary');\n    \n    return {\n      recommended: comprehensive.slice(0, 3),\n      alternative: primary.slice(0, 2)\n    };\n  }\n  \n  // For general stroke cases, return nearest centers regardless of type\n  return {\n    recommended: nearestCenters.slice(0, 5),\n    alternative: []\n  };\n}","// GPS-based stroke center map component\nimport { findNearestStrokeCenters, getRecommendedStrokeCenters, findNearestStrokeCentersWithTravelTime, getRecommendedStrokeCentersWithTravelTime } from '../../data/stroke-centers.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderStrokeCenterMap(results) {\n  return `\n    <div class=\"stroke-center-section\">\n      <h3>🏥 ${t('nearestCentersTitle')}</h3>\n      <div id=\"locationContainer\">\n        <div class=\"location-controls\">\n          <button type=\"button\" id=\"useGpsButton\" class=\"secondary\">\n            📍 ${t('useCurrentLocation')}\n          </button>\n          <div class=\"location-manual\" style=\"display: none;\">\n            <input type=\"text\" id=\"locationInput\" placeholder=\"${t('enterLocationPlaceholder')}\" />\n            <button type=\"button\" id=\"searchLocationButton\" class=\"secondary\">${t('search')}</button>\n          </div>\n          <button type=\"button\" id=\"manualLocationButton\" class=\"secondary\">\n            ✏️ ${t('enterManually')}\n          </button>\n        </div>\n        <div id=\"strokeCenterResults\" class=\"stroke-center-results\"></div>\n      </div>\n    </div>\n  `;\n}\n\nexport function initializeStrokeCenterMap(results) {\n  const useGpsButton = document.getElementById('useGpsButton');\n  const manualLocationButton = document.getElementById('manualLocationButton');\n  const locationManual = document.querySelector('.location-manual');\n  const locationInput = document.getElementById('locationInput');\n  const searchLocationButton = document.getElementById('searchLocationButton');\n  const resultsContainer = document.getElementById('strokeCenterResults');\n\n  if (useGpsButton) {\n    useGpsButton.addEventListener('click', () => {\n      requestUserLocation(results, resultsContainer);\n    });\n  }\n\n  if (manualLocationButton) {\n    manualLocationButton.addEventListener('click', () => {\n      locationManual.style.display = locationManual.style.display === 'none' ? 'block' : 'none';\n    });\n  }\n\n  if (searchLocationButton) {\n    searchLocationButton.addEventListener('click', () => {\n      const location = locationInput.value.trim();\n      if (location) {\n        geocodeLocation(location, results, resultsContainer);\n      }\n    });\n  }\n\n  if (locationInput) {\n    locationInput.addEventListener('keypress', (e) => {\n      if (e.key === 'Enter') {\n        const location = locationInput.value.trim();\n        if (location) {\n          geocodeLocation(location, results, resultsContainer);\n        }\n      }\n    });\n  }\n}\n\nfunction requestUserLocation(results, resultsContainer) {\n  if (!navigator.geolocation) {\n    showLocationError(t('geolocationNotSupported'), resultsContainer);\n    return;\n  }\n\n  resultsContainer.innerHTML = `<div class=\"loading\">${t('gettingLocation')}...</div>`;\n\n  navigator.geolocation.getCurrentPosition(\n    (position) => {\n      const { latitude, longitude } = position.coords;\n      showNearestCenters(latitude, longitude, results, resultsContainer);\n    },\n    (error) => {\n      let errorMessage = t('locationError');\n      switch (error.code) {\n        case error.PERMISSION_DENIED:\n          errorMessage = t('locationPermissionDenied');\n          break;\n        case error.POSITION_UNAVAILABLE:\n          errorMessage = t('locationUnavailable');\n          break;\n        case error.TIMEOUT:\n          errorMessage = t('locationTimeout');\n          break;\n      }\n      showLocationError(errorMessage, resultsContainer);\n    },\n    {\n      enableHighAccuracy: true,\n      timeout: 10000,\n      maximumAge: 300000 // 5 minutes\n    }\n  );\n}\n\nasync function geocodeLocation(locationString, results, resultsContainer) {\n  resultsContainer.innerHTML = `<div class=\"loading\">${t('searchingLocation')}...</div>`;\n  \n  try {\n    // Use Nominatim (OpenStreetMap) geocoding service - free and reliable\n    const encodedLocation = encodeURIComponent(locationString + ', Deutschland'); // Add Deutschland for German locations\n    const url = `https://nominatim.openstreetmap.org/search?q=${encodedLocation}&countrycodes=de&format=json&limit=1&addressdetails=1`;\n    \n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'User-Agent': 'iGFAP-StrokeTriage/2.1.0' // Required by Nominatim\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`Geocoding API error: ${response.status}`);\n    }\n\n    const data = await response.json();\n    \n    if (data && data.length > 0) {\n      const location = data[0];\n      const lat = parseFloat(location.lat);\n      const lng = parseFloat(location.lon);\n      const locationName = location.display_name || locationString;\n      \n      // Show success message and then proceed with location\n      resultsContainer.innerHTML = `\n        <div class=\"location-success\">\n          <p>📍 Found: ${locationName}</p>\n        </div>\n      `;\n      \n      // Wait a moment to show the found location, then show centers\n      setTimeout(() => {\n        showNearestCenters(lat, lng, results, resultsContainer);\n      }, 1000);\n      \n    } else {\n      showLocationError(`Location \"${locationString}\" not found. Please try a more specific address or city name.`, resultsContainer);\n    }\n    \n  } catch (error) {\n    console.warn('Geocoding failed:', error);\n    showLocationError(`Unable to find location \"${locationString}\". Please check the spelling or try a different location.`, resultsContainer);\n  }\n}\n\nasync function showNearestCenters(lat, lng, results, resultsContainer) {\n  const conditionType = determineConditionType(results);\n  \n  // Generate routing explanation based on condition\n  const routingExplanation = getRoutingExplanation(conditionType, results);\n  \n  // Show loading state\n  resultsContainer.innerHTML = `\n    <div class=\"location-info\">\n      <p><strong>${t('yourLocation')}:</strong> ${lat.toFixed(4)}, ${lng.toFixed(4)}</p>\n    </div>\n    <div class=\"loading\">${t('calculatingTravelTimes')}...</div>\n  `;\n  \n  try {\n    // Try to get travel time recommendations\n    const recommendations = await getRecommendedStrokeCentersWithTravelTime(lat, lng, conditionType);\n    \n    const html = `\n      <div class=\"location-info\">\n        <p><strong>${t('yourLocation')}:</strong> ${lat.toFixed(4)}, ${lng.toFixed(4)}</p>\n        ${routingExplanation}\n      </div>\n      \n      <div class=\"recommended-centers\">\n        <h4>${t('recommendedCenters')}</h4>\n        ${renderStrokeCenterList(recommendations.recommended, true)}\n      </div>\n      \n      ${recommendations.alternative.length > 0 ? `\n        <div class=\"alternative-centers\">\n          <h4>${t('alternativeCenters')}</h4>\n          ${renderStrokeCenterList(recommendations.alternative, false)}\n        </div>\n      ` : ''}\n      \n      <div class=\"travel-time-note\">\n        <small>${t('travelTimeNote')}</small>\n        <br><small class=\"powered-by\">${t('poweredByOrs')}</small>\n      </div>\n    `;\n    \n    resultsContainer.innerHTML = html;\n    \n  } catch (error) {\n    console.warn('Travel time calculation failed, falling back to distance:', error);\n    \n    // Fallback to distance-based recommendations\n    const recommendations = getRecommendedStrokeCenters(lat, lng, conditionType);\n    \n    const html = `\n      <div class=\"location-info\">\n        <p><strong>${t('yourLocation')}:</strong> ${lat.toFixed(4)}, ${lng.toFixed(4)}</p>\n        ${routingExplanation}\n      </div>\n      \n      <div class=\"recommended-centers\">\n        <h4>${t('recommendedCenters')}</h4>\n        ${renderStrokeCenterList(recommendations.recommended, true)}\n      </div>\n      \n      ${recommendations.alternative.length > 0 ? `\n        <div class=\"alternative-centers\">\n          <h4>${t('alternativeCenters')}</h4>\n          ${renderStrokeCenterList(recommendations.alternative, false)}\n        </div>\n      ` : ''}\n      \n      <div class=\"distance-note\">\n        <small>${t('distanceNote')}</small>\n      </div>\n    `;\n    \n    resultsContainer.innerHTML = html;\n  }\n}\n\nfunction renderStrokeCenterList(centers, isRecommended = false) {\n  if (!centers || centers.length === 0) {\n    return `<p>${t('noCentersFound')}</p>`;\n  }\n\n  return centers.map(center => `\n    <div class=\"stroke-center-card ${isRecommended ? 'recommended' : 'alternative'}\">\n      <div class=\"center-header\">\n        <h5>${center.name}</h5>\n        <span class=\"center-type ${center.type}\">${t(center.type + 'Center')}</span>\n        ${center.travelTime ? `\n          <span class=\"travel-time\">\n            <span class=\"time\">${center.travelTime} ${t('minutes')}</span>\n            <span class=\"distance\">(${center.distance} km)</span>\n          </span>\n        ` : `\n          <span class=\"distance\">${center.distance.toFixed(1)} km</span>\n        `}\n      </div>\n      \n      <div class=\"center-details\">\n        <p class=\"address\">📍 ${center.address}</p>\n        <p class=\"phone\">📞 ${t('emergency')}: ${center.emergency}</p>\n        \n        <div class=\"services\">\n          ${center.services.map(service => `\n            <span class=\"service-badge\">${t(service)}</span>\n          `).join('')}\n        </div>\n        \n        ${center.certified ? `\n          <div class=\"certification\">\n            ✅ ${t('certified')}: ${center.certification}\n          </div>\n        ` : ''}\n      </div>\n      \n      <div class=\"center-actions\">\n        <button class=\"call-button\" onclick=\"window.open('tel:${center.emergency}')\">\n          📞 ${t('call')}\n        </button>\n        <button class=\"directions-button\" onclick=\"window.open('https://maps.google.com/maps?daddr=${center.coordinates.lat},${center.coordinates.lng}', '_blank')\">\n          🧭 ${t('directions')}\n        </button>\n      </div>\n    </div>\n  `).join('');\n}\n\nfunction determineConditionType(results) {\n  if (!results) return 'stroke';\n  \n  // PRIORITIZE ICH - Check for ICH first as it requires neurosurgery\n  // Set threshold to 0.5 (50%) for routing to neurosurgical centers\n  if (results.ich && results.ich.probability > 0.5) {\n    return 'ich';\n  }\n  \n  // Only consider LVO if ICH is low (secondary consideration)\n  if (results.lvo && results.lvo.probability > 0.5 && (!results.ich || results.ich.probability < 0.5)) {\n    return 'lvo';\n  }\n  \n  return 'stroke';\n}\n\nfunction getRoutingExplanation(conditionType, results) {\n  if (conditionType === 'ich') {\n    const ichPercent = Math.round((results?.ich?.probability || 0) * 100);\n    return `\n      <div class=\"routing-explanation ich-routing\">\n        <strong>⚠️ ${t('neurosurgeryRouting') || 'Neurosurgical Centers Recommended'}</strong>\n        <p>${t('ichRoutingExplanation') || `ICH risk ${ichPercent}% - Routing to centers with neurosurgery capability`}</p>\n      </div>\n    `;\n  } else if (conditionType === 'lvo') {\n    return `\n      <div class=\"routing-explanation lvo-routing\">\n        <strong>⚡ ${t('thrombectomyRouting') || 'Thrombectomy Centers Recommended'}</strong>\n        <p>${t('lvoRoutingExplanation') || 'Possible LVO - Routing to centers with thrombectomy capability'}</p>\n      </div>\n    `;\n  }\n  \n  return `\n    <div class=\"routing-explanation general-routing\">\n      <p>${t('generalStrokeRouting') || 'Showing nearest stroke-capable centers'}</p>\n    </div>\n  `;\n}\n\nfunction showLocationError(message, container) {\n  container.innerHTML = `\n    <div class=\"location-error\">\n      <p>⚠️ ${message}</p>\n      <p><small>${t('tryManualEntry')}</small></p>\n    </div>\n  `;\n}","import { CRITICAL_THRESHOLDS } from '../config.js';\n\nexport function getRiskLevel(probabilityPercent, type) {\n  const p = Number(probabilityPercent);\n  const thresholds = CRITICAL_THRESHOLDS[type];\n  \n  if (p >= thresholds.high) {\n    return '🔴 HIGH RISK';\n  } else if (p >= thresholds.medium) {\n    return '🟡 MEDIUM RISK';\n  } else {\n    return '🟢 LOW RISK';\n  }\n}\n\nexport function formatTime(milliseconds) {\n  const seconds = Math.floor(milliseconds / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n}","import { renderProgressIndicator } from '../components/progress.js';\nimport { renderCriticalAlert } from '../components/alerts.js';\nimport { renderDriversSection } from '../components/drivers.js';\nimport { renderStrokeCenterMap } from '../components/stroke-center-map.js';\nimport { getRiskLevel, formatTime } from '../../logic/formatters.js';\nimport { CRITICAL_THRESHOLDS } from '../../config.js';\nimport { t, i18n } from '../../localization/i18n.js';\nimport { store } from '../../state/store.js';\n\nfunction renderInputSummary() {\n  const state = store.getState();\n  const formData = state.formData;\n  \n  if (!formData || Object.keys(formData).length === 0) {\n    return '';\n  }\n  \n  let summaryHtml = '';\n  \n  // Iterate through each module's form data\n  Object.entries(formData).forEach(([module, data]) => {\n    if (data && Object.keys(data).length > 0) {\n      const moduleTitle = t(`${module}ModuleTitle`) || module.charAt(0).toUpperCase() + module.slice(1);\n      let itemsHtml = '';\n      \n      Object.entries(data).forEach(([key, value]) => {\n        // Skip empty values\n        if (value === '' || value === null || value === undefined) return;\n        \n        // Get friendly label name\n        let label = key;\n        if (t(`${key}Label`)) {\n          label = t(`${key}Label`);\n        } else {\n          // Fallback: convert snake_case to Title Case\n          label = key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n        }\n        \n        // Format value\n        let displayValue = value;\n        if (typeof value === 'boolean') {\n          displayValue = value ? '✓' : '✗';\n        }\n        \n        itemsHtml += `\n          <div class=\"summary-item\">\n            <span class=\"summary-label\">${label}:</span>\n            <span class=\"summary-value\">${displayValue}</span>\n          </div>\n        `;\n      });\n      \n      if (itemsHtml) {\n        summaryHtml += `\n          <div class=\"summary-module\">\n            <h4>${moduleTitle}</h4>\n            <div class=\"summary-items\">\n              ${itemsHtml}\n            </div>\n          </div>\n        `;\n      }\n    }\n  });\n  \n  if (!summaryHtml) return '';\n  \n  return `\n    <div class=\"input-summary\">\n      <h3>📋 ${t('inputSummaryTitle')}</h3>\n      <p class=\"summary-subtitle\">${t('inputSummarySubtitle')}</p>\n      <div class=\"summary-content\">\n        ${summaryHtml}\n      </div>\n    </div>\n  `;\n}\n\nfunction renderRiskCard(type, data, results) {\n  if (!data) return '';\n  \n  const percent = Math.round((data.probability || 0) * 100);\n  const riskLevel = getRiskLevel(percent, type);\n  const isCritical = percent > CRITICAL_THRESHOLDS[type].critical;\n  const isHigh = percent > CRITICAL_THRESHOLDS[type].high;\n  \n  const icons = { ich: '🩸', lvo: '🧠' };\n  const titles = { ich: t('ichProbability'), lvo: t('lvoProbability') };\n  const subtitles = { \n    ich: 'ICH', \n    lvo: i18n.getCurrentLanguage() === 'de' ? 'Großgefäßverschluss' : 'Large Vessel Occlusion' \n  };\n  \n  return `\n    <div class=\"enhanced-risk-card ${type} ${isCritical ? 'critical' : isHigh ? 'high' : 'normal'}\">\n      <div class=\"risk-header\">\n        <div class=\"risk-icon\">${icons[type]}</div>\n        <div class=\"risk-title\">\n          <h3>${titles[type]}</h3>\n          <span class=\"risk-subtitle\">${subtitles[type]}</span>\n          <span class=\"risk-module\">${data.module} Module</span>\n        </div>\n      </div>\n      \n      <div class=\"risk-probability\">\n        <div class=\"probability-circle\" data-percent=\"${percent}\">\n          <div class=\"probability-number\">${percent}<span>%</span></div>\n          <svg class=\"probability-ring\" width=\"120\" height=\"120\">\n            <circle cx=\"60\" cy=\"60\" r=\"54\" fill=\"none\" stroke=\"var(--border-color)\" stroke-width=\"8\"/>\n            <circle cx=\"60\" cy=\"60\" r=\"54\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"8\" \n                    stroke-dasharray=\"${2 * Math.PI * 54}\" \n                    stroke-dashoffset=\"${2 * Math.PI * 54 * (1 - percent / 100)}\"\n                    stroke-linecap=\"round\" \n                    transform=\"rotate(-90 60 60)\"\n                    class=\"probability-progress\"/>\n          </svg>\n        </div>\n        \n        <div class=\"risk-assessment\">\n          <div class=\"risk-level ${isCritical ? 'critical' : isHigh ? 'high' : 'normal'}\">\n            ${riskLevel}\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\nfunction renderLVONotPossible() {\n  return `\n    <div class=\"enhanced-risk-card lvo not-possible\">\n      <div class=\"risk-header\">\n        <div class=\"risk-icon\">🔍</div>\n        <div class=\"risk-title\">\n          <h3>${t('lvoProbability')}</h3>\n          <span class=\"risk-module\">${t('limitedAssessment')}</span>\n        </div>\n      </div>\n      \n      <div class=\"not-possible-content\">\n        <p>${t('lvoNotPossible')}</p>\n        <p>${t('fullExamRequired')}</p>\n      </div>\n    </div>\n  `;\n}\n\nexport function renderResults(results, startTime) {\n  const { ich, lvo } = results;\n  \n  // Detect which module was used based on the data\n  const isLimitedOrComa = ich?.module === 'Limited' || ich?.module === 'Coma' || lvo?.notPossible === true;\n  const isFullModule = ich?.module === 'Full';\n  \n  // For limited/coma modules - only show ICH\n  if (isLimitedOrComa) {\n    return renderICHFocusedResults(ich, results, startTime);\n  }\n  \n  // For full module - show ICH prominently with conditional LVO text\n  return renderFullModuleResults(ich, lvo, results, startTime);\n}\n\nfunction renderICHFocusedResults(ich, results, startTime) {\n  const criticalAlert = ich && ich.probability > 0.6 ? renderCriticalAlert() : '';\n  const strokeCenterHtml = renderStrokeCenterMap(results);\n  const inputSummaryHtml = renderInputSummary();\n  \n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(3)}\n      <h2>${t('bleedingRiskAssessment') || 'Blutungsrisiko-Bewertung / Bleeding Risk Assessment'}</h2>\n      ${criticalAlert}\n      \n      <!-- Single ICH Risk Card -->\n      <div class=\"risk-results-single\">\n        ${renderRiskCard('ich', ich, results)}\n      </div>\n      \n      <!-- ICH Drivers Only -->\n      <div class=\"enhanced-drivers-section\">\n        <h3>${t('riskFactorsTitle') || 'Hauptrisikofaktoren / Main Risk Factors'}</h3>\n        ${renderICHDriversOnly(ich)}\n      </div>\n      \n      <!-- Collapsible Additional Information -->\n      <div class=\"additional-info-section\">\n        <button class=\"info-toggle\" data-target=\"input-summary\">\n          <span class=\"toggle-icon\">📋</span>\n          <span class=\"toggle-text\">${t('inputSummaryTitle')}</span>\n          <span class=\"toggle-arrow\">▼</span>\n        </button>\n        <div class=\"collapsible-content\" id=\"input-summary\" style=\"display: none;\">\n          ${inputSummaryHtml}\n        </div>\n        \n        <button class=\"info-toggle\" data-target=\"stroke-centers\">\n          <span class=\"toggle-icon\">🏥</span>\n          <span class=\"toggle-text\">${t('nearestCentersTitle')}</span>\n          <span class=\"toggle-arrow\">▼</span>\n        </button>\n        <div class=\"collapsible-content\" id=\"stroke-centers\" style=\"display: none;\">\n          ${strokeCenterHtml}\n        </div>\n      </div>\n      \n      <div class=\"results-actions\">\n        <div class=\"primary-actions\">\n          <button type=\"button\" class=\"primary\" id=\"printResults\"> 📄 ${t('printResults')} </button>\n          <button type=\"button\" class=\"secondary\" data-action=\"reset\"> ${t('newAssessment')} </button>\n        </div>\n        <div class=\"navigation-actions\">\n          <button type=\"button\" class=\"tertiary\" data-action=\"goBack\"> ← ${t('goBack')} </button>\n          <button type=\"button\" class=\"tertiary\" data-action=\"goHome\"> 🏠 ${t('goHome')} </button>\n        </div>\n      </div>\n      \n      <div class=\"disclaimer\">\n        <strong>⚠️ ${t('importantNote')}:</strong> ${t('importantText')} Results generated at ${new Date().toLocaleTimeString()}.\n      </div>\n    </div>\n  `;\n}\n\nfunction renderFullModuleResults(ich, lvo, results, startTime) {\n  const ichPercent = Math.round((ich?.probability || 0) * 100);\n  const lvoPercent = Math.round((lvo?.probability || 0) * 100);\n  \n  const criticalAlert = ich && ich.probability > 0.6 ? renderCriticalAlert() : '';\n  const strokeCenterHtml = renderStrokeCenterMap(results);\n  const inputSummaryHtml = renderInputSummary();\n  \n  // Determine if we should show LVO notification\n  const showLVONotification = ichPercent < 30 && lvoPercent > 50;\n  \n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(3)}\n      <h2>${t('resultsTitle')}</h2>\n      ${criticalAlert}\n      \n      <!-- Primary ICH Risk Display -->\n      <div class=\"risk-results-single\">\n        ${renderRiskCard('ich', ich, results)}\n        ${showLVONotification ? renderLVONotification() : ''}\n      </div>\n      \n      <!-- ICH Drivers Only -->\n      <div class=\"enhanced-drivers-section\">\n        <h3>${t('riskFactorsTitle') || 'Risikofaktoren / Risk Factors'}</h3>\n        ${renderICHDriversOnly(ich)}\n      </div>\n      \n      <!-- Collapsible Additional Information -->\n      <div class=\"additional-info-section\">\n        <button class=\"info-toggle\" data-target=\"input-summary\">\n          <span class=\"toggle-icon\">📋</span>\n          <span class=\"toggle-text\">${t('inputSummaryTitle')}</span>\n          <span class=\"toggle-arrow\">▼</span>\n        </button>\n        <div class=\"collapsible-content\" id=\"input-summary\" style=\"display: none;\">\n          ${inputSummaryHtml}\n        </div>\n        \n        <button class=\"info-toggle\" data-target=\"stroke-centers\">\n          <span class=\"toggle-icon\">🏥</span>\n          <span class=\"toggle-text\">${t('nearestCentersTitle')}</span>\n          <span class=\"toggle-arrow\">▼</span>\n        </button>\n        <div class=\"collapsible-content\" id=\"stroke-centers\" style=\"display: none;\">\n          ${strokeCenterHtml}\n        </div>\n      </div>\n      \n      <div class=\"results-actions\">\n        <div class=\"primary-actions\">\n          <button type=\"button\" class=\"primary\" id=\"printResults\"> 📄 ${t('printResults')} </button>\n          <button type=\"button\" class=\"secondary\" data-action=\"reset\"> ${t('newAssessment')} </button>\n        </div>\n        <div class=\"navigation-actions\">\n          <button type=\"button\" class=\"tertiary\" data-action=\"goBack\"> ← ${t('goBack')} </button>\n          <button type=\"button\" class=\"tertiary\" data-action=\"goHome\"> 🏠 ${t('goHome')} </button>\n        </div>\n      </div>\n      \n      <div class=\"disclaimer\">\n        <strong>⚠️ ${t('importantNote')}:</strong> ${t('importantText')} Results generated at ${new Date().toLocaleTimeString()}.\n      </div>\n    </div>\n  `;\n}\n\nfunction renderLVONotification() {\n  return `\n    <div class=\"secondary-notification\">\n      <p class=\"lvo-possible\">\n        ⚡ ${t('lvoMayBePossible') || 'Großgefäßverschluss möglich / Large vessel occlusion possible'}\n      </p>\n    </div>\n  `;\n}\n\nfunction renderICHDriversOnly(ich) {\n  if (!ich || !ich.drivers) {\n    return '<p class=\"no-drivers\">No driver data available</p>';\n  }\n  \n  // Drivers are already formatted from API with positive/negative arrays\n  const driversData = ich.drivers;\n  \n  // Check if drivers have the correct structure\n  if (!driversData.positive && !driversData.negative) {\n    // Fallback for unexpected format\n    return '<p class=\"no-drivers\">Driver format error</p>';\n  }\n  \n  const positiveDrivers = driversData.positive || [];\n  const negativeDrivers = driversData.negative || [];\n  \n  return `\n    <div class=\"drivers-split-view\">\n      <div class=\"drivers-column positive-column\">\n        <div class=\"column-header\">\n          <span class=\"column-icon\">⬆</span>\n          <span class=\"column-title\">${t('increasingRisk') || 'Risikoerhöhend / Increasing Risk'}</span>\n        </div>\n        <div class=\"compact-drivers\">\n          ${positiveDrivers.length > 0 ? \n            positiveDrivers.slice(0, 5).map(d => renderCompactDriver(d, 'positive')).join('') :\n            `<p class=\"no-factors\">${t('noFactors') || 'Keine Faktoren / No factors'}</p>`\n          }\n        </div>\n      </div>\n      \n      <div class=\"drivers-column negative-column\">\n        <div class=\"column-header\">\n          <span class=\"column-icon\">⬇</span>\n          <span class=\"column-title\">${t('decreasingRisk') || 'Risikomindernd / Decreasing Risk'}</span>\n        </div>\n        <div class=\"compact-drivers\">\n          ${negativeDrivers.length > 0 ?\n            negativeDrivers.slice(0, 5).map(d => renderCompactDriver(d, 'negative')).join('') :\n            `<p class=\"no-factors\">${t('noFactors') || 'Keine Faktoren / No factors'}</p>`\n          }\n        </div>\n      </div>\n    </div>\n  `;\n}\n\nfunction renderCompactDriver(driver, type) {\n  // Driver object has 'label' and 'weight' properties\n  const percentage = Math.abs(driver.weight * 100);\n  const width = Math.min(percentage * 2, 100); // Scale for display\n  \n  return `\n    <div class=\"compact-driver-item\">\n      <div class=\"compact-driver-label\">${formatDriverName(driver.label)}</div>\n      <div class=\"compact-driver-bar ${type}\" style=\"width: ${width}%;\">\n        <span class=\"compact-driver-value\">${percentage.toFixed(1)}%</span>\n      </div>\n    </div>\n  `;\n}\n\nfunction formatDriverName(name) {\n  // Convert snake_case to readable format\n  const formatted = name.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n  // Try to get translation, fallback to formatted name\n  return t(`driver_${name}`) || formatted;\n}","import { VALIDATION_RULES } from '../config.js';\n\nexport function validateInput(name, value, rules) {\n  const errors = [];\n  \n  if (rules.required && !value && value !== 0) {\n    errors.push('This field is required');\n  }\n  \n  if (rules.min !== undefined && value !== '' && !isNaN(value) && parseFloat(value) < rules.min) {\n    errors.push(`Value must be at least ${rules.min}`);\n  }\n  \n  if (rules.max !== undefined && value !== '' && !isNaN(value) && parseFloat(value) > rules.max) {\n    errors.push(`Value must be at most ${rules.max}`);\n  }\n  \n  if (rules.pattern && !rules.pattern.test(value)) {\n    errors.push('Invalid format');\n  }\n  \n  return errors;\n}\n\nexport function validateForm(form) {\n  let isValid = true;\n  const validationErrors = {};\n\n  Object.entries(VALIDATION_RULES).forEach(([name, rules]) => {\n    const input = form.elements[name];\n    if (input) {\n      const errors = validateInput(name, input.value, rules);\n      if (errors.length > 0) {\n        validationErrors[name] = errors;\n        isValid = false;\n      }\n    }\n  });\n  \n  return { isValid, validationErrors };\n}\n\nexport function showValidationErrors(container, validationErrors) {\n  Object.entries(validationErrors).forEach(([name, errors]) => {\n    const input = container.querySelector(`[name=\"${name}\"]`);\n    if (input) {\n      const group = input.closest('.input-group');\n      if (group) {\n        group.classList.add('error');\n        // Remove existing error messages\n        group.querySelectorAll('.error-message').forEach(el => el.remove());\n        // Add new error message\n        const errorDiv = document.createElement('div');\n        errorDiv.className = 'error-message';\n        errorDiv.innerHTML = `<span class=\"error-icon\">⚠️</span> ${errors[0]}`;\n        group.appendChild(errorDiv);\n      }\n    }\n  });\n}\n\nexport function clearValidationErrors(container) {\n  container.querySelectorAll('.input-group.error').forEach(group => {\n    group.classList.remove('error');\n    group.querySelectorAll('.error-message').forEach(el => el.remove());\n  });\n}","// Clean driver extraction - ensuring LVO drivers come from LVO API, ICH from ICH API\n\n/**\n * Extract and format drivers from new backend flat dictionary format\n */\nexport function extractDriversFromResponse(response, predictionType) {\n  console.log(`=== EXTRACTING ${predictionType.toUpperCase()} DRIVERS ===`);\n  console.log('Full response:', response);\n  \n  let rawDrivers = null;\n  \n  if (predictionType === 'ICH') {\n    rawDrivers = response.ich_prediction?.drivers || null;\n    console.log('🧠 ICH raw drivers extracted:', rawDrivers);\n  } else if (predictionType === 'LVO') {\n    rawDrivers = response.lvo_prediction?.drivers || null;\n    console.log('🩸 LVO raw drivers extracted:', rawDrivers);\n  }\n  \n  if (!rawDrivers) {\n    console.log(`❌ No ${predictionType} drivers found`);\n    return null;\n  }\n  \n  // Convert flat dictionary to structured format\n  const formattedDrivers = formatDriversFromDictionary(rawDrivers, predictionType);\n  \n  console.log(`✅ ${predictionType} drivers formatted:`, formattedDrivers);\n  \n  // Check for FAST-ED specifically\n  const allFeatures = [...formattedDrivers.positive, ...formattedDrivers.negative];\n  const fastEdFeature = allFeatures.find(f => \n    f.label && (\n      f.label.toLowerCase().includes('fast') || \n      f.label.includes('fast_ed')\n    )\n  );\n  \n  if (fastEdFeature) {\n    console.log(`🎯 FAST-ED found in ${predictionType}:`, `${fastEdFeature.label}: ${fastEdFeature.weight > 0 ? '+' : ''}${fastEdFeature.weight.toFixed(4)}`);\n  } else {\n    console.log(`⚠️  FAST-ED NOT found in ${predictionType} drivers`);\n  }\n  \n  return formattedDrivers;\n}\n\n/**\n * Convert backend flat dictionary to structured positive/negative arrays\n */\nfunction formatDriversFromDictionary(drivers, predictionType) {\n  console.log(`🔄 Formatting ${predictionType} drivers from dictionary:`, drivers);\n  \n  const positive = [];\n  const negative = [];\n  \n  Object.entries(drivers).forEach(([label, weight]) => {\n    if (typeof weight === 'number') {\n      if (weight > 0) {\n        positive.push({ label, weight });\n      } else if (weight < 0) {\n        negative.push({ label, weight: Math.abs(weight) }); // Store as positive value\n      }\n      // Skip zero weights\n    }\n  });\n  \n  // Sort by weight (descending)\n  positive.sort((a, b) => b.weight - a.weight);\n  negative.sort((a, b) => b.weight - a.weight);\n  \n  console.log(`📈 ${predictionType} positive drivers:`, positive.slice(0, 5));\n  console.log(`📉 ${predictionType} negative drivers:`, negative.slice(0, 5));\n  \n  return {\n    kind: 'flat_dictionary',\n    units: 'logit',\n    positive,\n    negative,\n    meta: {}\n  };\n}\n\n/**\n * Clean probability extraction with source tracking\n */\nexport function extractProbabilityFromResponse(response, predictionType) {\n  console.log(`=== EXTRACTING ${predictionType.toUpperCase()} PROBABILITY ===`);\n  \n  let probability = 0;\n  \n  if (predictionType === 'ICH') {\n    probability = response.ich_prediction?.probability || 0;\n    console.log('🧠 ICH probability extracted:', probability);\n    \n  } else if (predictionType === 'LVO') {\n    probability = response.lvo_prediction?.probability || 0;\n    console.log('🩸 LVO probability extracted:', probability);\n  }\n  \n  return probability;\n}\n\n/**\n * Clean confidence extraction with source tracking\n */\nexport function extractConfidenceFromResponse(response, predictionType) {\n  let confidence = 0.85; // default\n  \n  if (predictionType === 'ICH') {\n    confidence = response.ich_prediction?.confidence || 0.85;\n  } else if (predictionType === 'LVO') {\n    confidence = response.lvo_prediction?.confidence || 0.85;\n  }\n  \n  return confidence;\n}","import { API_URLS, APP_CONFIG } from '../config.js';\nimport { extractDriversFromResponse, extractProbabilityFromResponse, extractConfidenceFromResponse } from './drivers.js';\n\n// Warm up Google Cloud Functions on app load\nexport async function warmUpFunctions() {\n  console.log('Warming up Cloud Functions...');\n  \n  // Send lightweight ping requests to wake up cold functions\n  const warmUpPromises = Object.values(API_URLS).map(async (url) => {\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 3000); // 3 second timeout for warm-up\n      \n      // Use minimal POST with empty data to warm up\n      await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({}), // Empty body will fail validation but still warms up the function\n        signal: controller.signal,\n        mode: 'cors'\n      });\n      \n      clearTimeout(timeoutId);\n      console.log(`Warmed up: ${url}`);\n    } catch (error) {\n      // Ignore warm-up errors - they're not critical\n      // The function is still warmed up even if it returns an error\n      console.log(`Warm-up attempt for ${url.split('/').pop()} completed`);\n    }\n  });\n  \n  // Don't wait for warm-up to complete - do it in background\n  Promise.all(warmUpPromises).then(() => {\n    console.log('Cloud Functions warm-up complete');\n  });\n}\n\nclass APIError extends Error {\n  constructor(message, status, url) {\n    super(message);\n    this.name = 'APIError';\n    this.status = status;\n    this.url = url;\n  }\n}\n\nfunction normalizeBooleans(payload) {\n  const normalized = { ...payload };\n  \n  Object.keys(normalized).forEach(key => {\n    const value = normalized[key];\n    if (typeof value === 'boolean' || value === 'on' || value === 'true' || value === 'false') {\n      normalized[key] = value === true || value === 'on' || value === 'true' ? 1 : 0;\n    }\n  });\n  \n  return normalized;\n}\n\nfunction safeParseFloat(value, defaultValue = 0) {\n  const parsed = parseFloat(value);\n  return isNaN(parsed) ? defaultValue : parsed;\n}\n\nasync function fetchJSON(url, payload) {\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), APP_CONFIG.requestTimeout);\n  \n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify(payload),\n      signal: controller.signal,\n      mode: 'cors'\n    });\n    \n    clearTimeout(timeoutId);\n    \n    if (!response.ok) {\n      let errorMessage = `HTTP ${response.status}`;\n      try {\n        const errorData = await response.json();\n        errorMessage = errorData.error || errorData.message || errorMessage;\n      } catch {\n        errorMessage = `${errorMessage}: ${response.statusText}`;\n      }\n      throw new APIError(errorMessage, response.status, url);\n    }\n    \n    const data = await response.json();\n    return data;\n    \n  } catch (error) {\n    clearTimeout(timeoutId);\n    \n    if (error.name === 'AbortError') {\n      throw new APIError('Request timeout - please try again', 408, url);\n    }\n    \n    if (error instanceof APIError) {\n      throw error;\n    }\n    \n    // Network or other errors\n    throw new APIError(\n      'Network error - please check your connection and try again',\n      0,\n      url\n    );\n  }\n}\n\nexport async function predictComaIch(payload) {\n  const normalizedPayload = normalizeBooleans(payload);\n  \n  // Debug log the payload being sent\n  console.log('Coma ICH API Payload:', normalizedPayload);\n  \n  try {\n    const response = await fetchJSON(API_URLS.COMA_ICH, normalizedPayload);\n    \n    // Debug log the API response\n    console.log('Coma ICH API Response:', response);\n    \n    // Normalize response format for consistency\n    return {\n      probability: safeParseFloat(response.probability || response.ich_probability, 0),\n      drivers: response.drivers || null,\n      confidence: safeParseFloat(response.confidence, 0.75),\n      module: 'Coma'\n    };\n  } catch (error) {\n    console.error('Coma ICH prediction failed:', error);\n    throw new APIError(\n      `Failed to get ICH prediction: ${error.message}`,\n      error.status,\n      API_URLS.COMA_ICH\n    );\n  }\n}\n\nexport async function predictLimitedIch(payload) {\n  // Ensure all required fields are present for the Limited Data API\n  const fullPayload = {\n    age_years: payload.age_years,\n    systolic_bp: payload.systolic_bp,\n    diastolic_bp: payload.diastolic_bp,\n    gfap_value: payload.gfap_value,\n    // Ensure checkbox fields are present (default to 0 if missing/unchecked)\n    vigilanzminderung: payload.vigilanzminderung || 0\n  };\n  \n  const normalizedPayload = normalizeBooleans(fullPayload);\n  \n  // Debug log the payload being sent\n  console.log('Limited Data ICH API Payload:', normalizedPayload);\n  \n  try {\n    const response = await fetchJSON(API_URLS.LDM_ICH, normalizedPayload);\n    \n    // Debug log the API response\n    console.log('Limited Data ICH API Response:', response);\n    \n    // Normalize response format for consistency\n    return {\n      probability: safeParseFloat(response.probability || response.ich_probability, 0),\n      drivers: response.drivers || null,\n      confidence: safeParseFloat(response.confidence, 0.65),\n      module: 'Limited Data'\n    };\n  } catch (error) {\n    console.error('Limited Data ICH prediction failed:', error);\n    throw new APIError(\n      `Failed to get ICH prediction: ${error.message}`,\n      error.status,\n      API_URLS.LDM_ICH\n    );\n  }\n}\n\nexport async function predictFullStroke(payload) {\n  // Ensure all required fields are present for the Full Stroke API\n  const fullPayload = {\n    age_years: payload.age_years,\n    systolic_bp: payload.systolic_bp,\n    diastolic_bp: payload.diastolic_bp,\n    gfap_value: payload.gfap_value,\n    fast_ed_score: payload.fast_ed_score,\n    // Ensure all checkbox fields are present (default to 0 if missing)\n    headache: payload.headache || 0,\n    vigilanzminderung: payload.vigilanzminderung || 0,\n    armparese: payload.armparese || 0,\n    beinparese: payload.beinparese || 0,\n    eye_deviation: payload.eye_deviation || 0,\n    atrial_fibrillation: payload.atrial_fibrillation || 0,\n    anticoagulated_noak: payload.anticoagulated_noak || 0,\n    antiplatelets: payload.antiplatelets || 0\n  };\n  \n  const normalizedPayload = normalizeBooleans(fullPayload);\n  \n  // Debug log the payload being sent\n  console.log('=== BACKEND DATA MAPPING TEST ===');\n  console.log('📤 Full Stroke API Payload:', normalizedPayload);\n  \n  // Test all key clinical variables\n  console.log('🧪 Clinical Variables Being Sent:');\n  console.log('  📊 FAST-ED Score:', normalizedPayload.fast_ed_score);\n  console.log('  🩸 Systolic BP:', normalizedPayload.systolic_bp);\n  console.log('  🩸 Diastolic BP:', normalizedPayload.diastolic_bp);\n  console.log('  🧬 GFAP Value:', normalizedPayload.gfap_value);\n  console.log('  👤 Age:', normalizedPayload.age_years);\n  console.log('  🤕 Headache:', normalizedPayload.headache);\n  console.log('  😵 Vigilanz:', normalizedPayload.vigilanzminderung);\n  console.log('  💪 Arm Parese:', normalizedPayload.armparese);\n  console.log('  🦵 Leg Parese:', normalizedPayload.beinparese);\n  console.log('  👁️ Eye Deviation:', normalizedPayload.eye_deviation);\n  console.log('  💓 Atrial Fib:', normalizedPayload.atrial_fibrillation);\n  console.log('  💊 Anticoag NOAK:', normalizedPayload.anticoagulated_noak);\n  console.log('  💊 Antiplatelets:', normalizedPayload.antiplatelets);\n  \n  try {\n    const response = await fetchJSON(API_URLS.FULL_STROKE, normalizedPayload);\n    \n    // Debug log the API response\n    console.log('📥 Full Stroke API Response:', response);\n    console.log('🔑 Available keys in response:', Object.keys(response));\n    \n    // Test backend data mapping accuracy\n    console.log('=== BACKEND MAPPING VERIFICATION ===');\n    \n    // Check if backend returns any feature names that match our inputs\n    const responseStr = JSON.stringify(response).toLowerCase();\n    console.log('🔍 Backend Feature Name Analysis:');\n    console.log('  Contains \"fast\":', responseStr.includes('fast'));\n    console.log('  Contains \"ed\":', responseStr.includes('ed'));\n    console.log('  Contains \"fast_ed\":', responseStr.includes('fast_ed'));\n    console.log('  Contains \"systolic\":', responseStr.includes('systolic'));\n    console.log('  Contains \"diastolic\":', responseStr.includes('diastolic'));\n    console.log('  Contains \"gfap\":', responseStr.includes('gfap'));\n    console.log('  Contains \"age\":', responseStr.includes('age'));\n    console.log('  Contains \"headache\":', responseStr.includes('headache'));\n    \n    // Debug driver extraction\n    console.log('🧠 ICH driver sources:');\n    console.log('  response.ich_prediction?.drivers:', response.ich_prediction?.drivers);\n    console.log('  response.ich_drivers:', response.ich_drivers);\n    console.log('  response.ich?.drivers:', response.ich?.drivers);\n    console.log('  response.drivers?.ich:', response.drivers?.ich);\n    \n    console.log('🩸 LVO driver sources:');\n    console.log('  response.lvo_prediction?.drivers:', response.lvo_prediction?.drivers);\n    console.log('  response.lvo_drivers:', response.lvo_drivers);\n    console.log('  response.lvo?.drivers:', response.lvo?.drivers);\n    console.log('  response.drivers?.lvo:', response.drivers?.lvo);\n    \n    // Try to identify probability values\n    Object.keys(response).forEach(key => {\n      const value = response[key];\n      if (typeof value === 'number' && value >= 0 && value <= 1) {\n        console.log(`Potential probability field: ${key} = ${value}`);\n      }\n    });\n    \n    // Clean extraction with proper API mapping\n    const ichProbability = extractProbabilityFromResponse(response, 'ICH');\n    const lvoProbability = extractProbabilityFromResponse(response, 'LVO');\n    \n    const ichDrivers = extractDriversFromResponse(response, 'ICH');\n    const lvoDrivers = extractDriversFromResponse(response, 'LVO');\n    \n    const ichConfidence = extractConfidenceFromResponse(response, 'ICH');\n    const lvoConfidence = extractConfidenceFromResponse(response, 'LVO');\n    \n    console.log('✅ Clean extraction results:');\n    console.log('  ICH:', { probability: ichProbability, hasDrivers: !!ichDrivers });\n    console.log('  LVO:', { probability: lvoProbability, hasDrivers: !!lvoDrivers });\n\n    const ichResult = {\n      probability: ichProbability,\n      drivers: ichDrivers,\n      confidence: ichConfidence,\n      module: 'Full Stroke'\n    };\n    \n    const lvoResult = {\n      probability: lvoProbability,\n      drivers: lvoDrivers,\n      confidence: lvoConfidence,\n      module: 'Full Stroke'\n    };\n    \n    return {\n      ich: ichResult,\n      lvo: lvoResult\n    };\n  } catch (error) {\n    console.error('Full Stroke prediction failed:', error);\n    throw new APIError(\n      `Failed to get stroke predictions: ${error.message}`,\n      error.status,\n      API_URLS.FULL_STROKE\n    );\n  }\n}\n\n// Export the error class for use in other modules\nexport { APIError };","import { store } from '../state/store.js';\nimport { validateForm, showValidationErrors } from './validate.js';\nimport { predictComaIch, predictLimitedIch, predictFullStroke, APIError } from '../api/client.js';\nimport { t } from '../localization/i18n.js';\n\nexport function handleTriage1(isComatose) {\n  store.logEvent('triage1_answer', { comatose: isComatose });\n  const nextScreen = isComatose ? 'coma' : 'triage2';\n  navigate(nextScreen);\n}\n\nexport function handleTriage2(isExaminable) {\n  store.logEvent('triage2_answer', { examinable: isExaminable });\n  const nextScreen = isExaminable ? 'full' : 'limited';\n  navigate(nextScreen);\n}\n\nexport function navigate(screen) {\n  store.logEvent('navigate', { \n    from: store.getState().currentScreen, \n    to: screen \n  });\n  store.navigate(screen);\n  window.scrollTo(0, 0);\n}\n\nexport function reset() {\n  if (store.hasUnsavedData()) {\n    if (!confirm('Are you sure you want to start over? All entered data will be lost.')) {\n      return;\n    }\n  }\n  store.logEvent('reset');\n  store.reset();\n}\n\nexport function goBack() {\n  console.log('goBack() called');\n  const success = store.goBack();\n  console.log('goBack() success:', success);\n  if (success) {\n    store.logEvent('navigate_back');\n    window.scrollTo(0, 0);\n  } else {\n    console.log('No history available, going home instead');\n    goHome();\n  }\n}\n\nexport function goHome() {\n  console.log('goHome() called');\n  store.logEvent('navigate_home');\n  store.goHome();\n  window.scrollTo(0, 0);\n}\n\nexport async function handleSubmit(e, container) {\n  e.preventDefault();\n  const form = e.target;\n  const module = form.dataset.module;\n\n  // Validate form\n  const validation = validateForm(form);\n  if (!validation.isValid) {\n    showValidationErrors(container, validation.validationErrors);\n    return;\n  }\n\n  // Collect inputs - handle all form elements including unchecked checkboxes\n  const inputs = {};\n  \n  // Process all form elements to ensure checkboxes are included\n  Array.from(form.elements).forEach(element => {\n    if (element.name) {\n      if (element.type === 'checkbox') {\n        inputs[element.name] = element.checked;\n      } else if (element.type === 'number') {\n        const n = parseFloat(element.value);\n        inputs[element.name] = isNaN(n) ? 0 : n;\n      } else if (element.type === 'hidden') {\n        // Handle hidden fields (like armparese from FAST-ED)\n        if (element.name === 'armparese') {\n          inputs[element.name] = element.value === 'true';\n        } else {\n          inputs[element.name] = element.value;\n        }\n      } else {\n        inputs[element.name] = element.value;\n      }\n    }\n  });\n  \n  console.log('Collected form inputs:', inputs);\n\n  // Store form data\n  store.setFormData(module, inputs);\n\n  // Show loading state\n  const button = form.querySelector('button[type=submit]');\n  const originalContent = button ? button.innerHTML : '';\n  if (button) {\n    button.disabled = true;\n    button.innerHTML = `<span class=\"loading-spinner\"></span> ${t('analyzing')}`;\n  }\n\n  try {\n    // Run models based on module\n    let results;\n    \n    switch (module) {\n      case 'coma':\n        const comaResult = await predictComaIch(inputs);\n        results = {\n          ich: comaResult,\n          lvo: null\n        };\n        break;\n        \n      case 'limited':\n        const limitedResult = await predictLimitedIch(inputs);\n        results = {\n          ich: limitedResult,\n          lvo: { notPossible: true }\n        };\n        break;\n        \n      case 'full':\n        results = await predictFullStroke(inputs);\n        break;\n        \n      default:\n        throw new Error('Unknown module: ' + module);\n    }\n\n    store.setResults(results);\n    store.logEvent('models_complete', { module, results });\n    navigate('results');\n    \n  } catch (error) {\n    console.error('Error running models:', error);\n    \n    let errorMessage = 'An error occurred during analysis. Please try again.';\n    if (error instanceof APIError) {\n      errorMessage = error.message;\n    }\n    \n    showError(container, errorMessage);\n    \n    if (button) {\n      button.disabled = false;\n      button.innerHTML = originalContent;\n    }\n  }\n}\n\nfunction showError(container, message) {\n  // Remove existing error alerts\n  container.querySelectorAll('.critical-alert').forEach(alert => {\n    if (alert.querySelector('h4')?.textContent?.includes('Error')) {\n      alert.remove();\n    }\n  });\n\n  const alert = document.createElement('div');\n  alert.className = 'critical-alert';\n  alert.innerHTML = `<h4><span class=\"alert-icon\">⚠️</span> Error</h4><p>${message}</p>`;\n  \n  const containerDiv = container.querySelector('.container');\n  if (containerDiv) {\n    containerDiv.prepend(alert);\n  } else {\n    container.prepend(alert);\n  }\n  \n  setTimeout(() => alert.remove(), 10000);\n}","/**\n * Accessibility utilities for the Stroke Triage Assistant\n */\n\nexport function announceScreenChange(screen) {\n  const announcement = document.createElement('div');\n  announcement.className = 'sr-only';\n  announcement.setAttribute('role', 'status');\n  announcement.setAttribute('aria-live', 'polite');\n  \n  const screenNames = {\n    'triage1': 'Coma assessment',\n    'triage2': 'Examination capability assessment',\n    'coma': 'Coma module',\n    'limited': 'Limited data module',\n    'full': 'Full stroke assessment',\n    'results': 'Assessment results'\n  };\n  \n  announcement.textContent = `Navigated to ${screenNames[screen] || screen}`;\n  document.body.appendChild(announcement);\n  \n  setTimeout(() => announcement.remove(), 1000);\n}\n\nexport function setPageTitle(screen) {\n  const titles = {\n    'triage1': 'Initial Assessment - Stroke Triage Assistant',\n    'triage2': 'Examination Capability - Stroke Triage Assistant',\n    'coma': 'Coma Module - Stroke Triage Assistant',\n    'limited': 'Limited Data Module - Stroke Triage Assistant',\n    'full': 'Full Stroke Module - Stroke Triage Assistant',\n    'results': 'Assessment Results - Stroke Triage Assistant'\n  };\n  \n  document.title = titles[screen] || 'Stroke Triage Assistant';\n}\n\nexport function focusMainHeading() {\n  // Focus on the main heading for screen readers\n  setTimeout(() => {\n    const heading = document.querySelector('h2');\n    if (heading) {\n      heading.setAttribute('tabindex', '-1');\n      heading.focus();\n      // Remove tabindex after focus for proper tab order\n      setTimeout(() => heading.removeAttribute('tabindex'), 100);\n    }\n  }, 100);\n}","import { t } from '../../localization/i18n.js';\n\nexport class FastEdCalculator {\n  constructor() {\n    this.scores = {\n      facial_palsy: 0,\n      arm_weakness: 0,\n      speech_changes: 0,\n      eye_deviation: 0,\n      denial_neglect: 0\n    };\n    this.onApply = null;\n    this.modal = null;\n  }\n\n  getTotal() {\n    return Object.values(this.scores).reduce((sum, score) => sum + score, 0);\n  }\n\n  getRiskLevel() {\n    const total = this.getTotal();\n    return total >= 4 ? 'high' : 'low';\n  }\n\n  render() {\n    const total = this.getTotal();\n    const riskLevel = this.getRiskLevel();\n    \n    return `\n      <div id=\"fastEdModal\" class=\"modal\" role=\"dialog\" aria-labelledby=\"fastEdModalTitle\" aria-hidden=\"true\" style=\"display: none !important;\">\n        <div class=\"modal-content fast-ed-modal\">\n          <div class=\"modal-header\">\n            <h2 id=\"fastEdModalTitle\">${t('fastEdCalculatorTitle')}</h2>\n            <button class=\"modal-close\" aria-label=\"Close\">&times;</button>\n          </div>\n          <div class=\"modal-body\">\n            \n            <!-- Facial Palsy -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('facialPalsyTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"facial_palsy\" value=\"0\" ${this.scores.facial_palsy === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('facialPalsyNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"facial_palsy\" value=\"1\" ${this.scores.facial_palsy === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('facialPalsyMild')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Arm Weakness -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('armWeaknessTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"arm_weakness\" value=\"0\" ${this.scores.arm_weakness === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('armWeaknessNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"arm_weakness\" value=\"1\" ${this.scores.arm_weakness === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('armWeaknessMild')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"arm_weakness\" value=\"2\" ${this.scores.arm_weakness === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('armWeaknessSevere')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Speech Changes -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('speechChangesTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"speech_changes\" value=\"0\" ${this.scores.speech_changes === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('speechChangesNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"speech_changes\" value=\"1\" ${this.scores.speech_changes === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('speechChangesMild')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"speech_changes\" value=\"2\" ${this.scores.speech_changes === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('speechChangesSevere')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Eye Deviation -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('eyeDeviationTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"eye_deviation\" value=\"0\" ${this.scores.eye_deviation === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('eyeDeviationNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"eye_deviation\" value=\"1\" ${this.scores.eye_deviation === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('eyeDeviationPartial')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"eye_deviation\" value=\"2\" ${this.scores.eye_deviation === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('eyeDeviationForced')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Denial/Neglect -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('denialNeglectTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"denial_neglect\" value=\"0\" ${this.scores.denial_neglect === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('denialNeglectNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"denial_neglect\" value=\"1\" ${this.scores.denial_neglect === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('denialNeglectPartial')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"denial_neglect\" value=\"2\" ${this.scores.denial_neglect === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('denialNeglectComplete')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Total Score Display -->\n            <div class=\"fast-ed-total\">\n              <div class=\"score-display\">\n                <h3>${t('totalScoreTitle')}: <span class=\"total-score\">${total}/9</span></h3>\n                <div class=\"risk-indicator ${riskLevel}\">\n                  ${t('riskLevel')}: ${riskLevel === 'high' ? t('riskLevelHigh') : t('riskLevelLow')}\n                </div>\n              </div>\n            </div>\n\n          </div>\n          <div class=\"modal-footer\">\n            <button class=\"secondary\" data-action=\"cancel-fast-ed\">${t('cancel')}</button>\n            <button class=\"primary\" data-action=\"apply-fast-ed\">${t('applyScore')}</button>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  setupEventListeners() {\n    this.modal = document.getElementById('fastEdModal');\n    if (!this.modal) return;\n\n    // Radio button changes\n    this.modal.addEventListener('change', (e) => {\n      if (e.target.type === 'radio') {\n        const component = e.target.name;\n        const value = parseInt(e.target.value);\n        this.scores[component] = value;\n        this.updateDisplay();\n      }\n    });\n\n    // Close button\n    const closeBtn = this.modal.querySelector('.modal-close');\n    closeBtn?.addEventListener('click', () => this.close());\n\n    // Cancel button\n    const cancelBtn = this.modal.querySelector('[data-action=\"cancel-fast-ed\"]');\n    cancelBtn?.addEventListener('click', () => this.close());\n\n    // Apply button\n    const applyBtn = this.modal.querySelector('[data-action=\"apply-fast-ed\"]');\n    applyBtn?.addEventListener('click', () => this.apply());\n\n    // Click outside to close\n    this.modal.addEventListener('click', (e) => {\n      if (e.target === this.modal) {\n        this.close();\n      }\n    });\n\n    // Keyboard navigation\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape' && this.modal?.classList.contains('show')) {\n        this.close();\n      }\n    });\n  }\n\n  updateDisplay() {\n    const totalElement = this.modal?.querySelector('.total-score');\n    const riskElement = this.modal?.querySelector('.risk-indicator');\n    \n    if (totalElement) {\n      totalElement.textContent = `${this.getTotal()}/9`;\n    }\n    \n    if (riskElement) {\n      const riskLevel = this.getRiskLevel();\n      riskElement.className = `risk-indicator ${riskLevel}`;\n      riskElement.textContent = `${t('riskLevel')}: ${riskLevel === 'high' ? t('riskLevelHigh') : t('riskLevelLow')}`;\n    }\n  }\n\n  show(currentScore = 0, onApplyCallback = null) {\n    this.onApply = onApplyCallback;\n    \n    // If we have a current score, try to reverse engineer it (basic approximation)\n    if (currentScore > 0 && currentScore <= 9) {\n      this.approximateFromTotal(currentScore);\n    }\n    \n    // Inject modal HTML if not already present\n    if (!document.getElementById('fastEdModal')) {\n      document.body.insertAdjacentHTML('beforeend', this.render());\n    } else {\n      // Re-render the modal with current state\n      this.modal.remove();\n      document.body.insertAdjacentHTML('beforeend', this.render());\n      this.modal = document.getElementById('fastEdModal');\n    }\n    \n    this.setupEventListeners();\n    \n    this.modal.setAttribute('aria-hidden', 'false');\n    this.modal.style.display = 'flex';\n    this.modal.classList.add('show');\n    \n    // Focus first radio button\n    const firstRadio = this.modal.querySelector('input[type=\"radio\"]');\n    firstRadio?.focus();\n  }\n\n  close() {\n    if (this.modal) {\n      this.modal.classList.remove('show');\n      this.modal.style.display = 'none';\n      this.modal.setAttribute('aria-hidden', 'true');\n    }\n  }\n\n  apply() {\n    const total = this.getTotal();\n    const armWeaknessBoolean = this.scores.arm_weakness > 0;\n    const eyeDeviationBoolean = this.scores.eye_deviation > 0;\n    \n    if (this.onApply) {\n      this.onApply({\n        total,\n        components: { ...this.scores },\n        armWeaknessBoolean,\n        eyeDeviationBoolean\n      });\n    }\n    \n    this.close();\n  }\n\n  approximateFromTotal(total) {\n    // Simple approximation - distribute points across components\n    // This is basic but gives users a starting point\n    this.scores = {\n      facial_palsy: 0,\n      arm_weakness: 0,\n      speech_changes: 0,\n      eye_deviation: 0,\n      denial_neglect: 0\n    };\n    \n    let remaining = total;\n    const components = Object.keys(this.scores);\n    \n    for (const component of components) {\n      if (remaining <= 0) break;\n      \n      const maxForComponent = (component === 'facial_palsy') ? 1 : 2;\n      const assignToThis = Math.min(remaining, maxForComponent);\n      this.scores[component] = assignToThis;\n      remaining -= assignToThis;\n    }\n  }\n}\n\n// Create singleton instance\nexport const fastEdCalculator = new FastEdCalculator();","import { store } from '../state/store.js';\nimport { renderTriage1 } from './screens/triage1.js';\nimport { renderTriage2 } from './screens/triage2.js';\nimport { renderComa } from './screens/coma.js';\nimport { renderLimited } from './screens/limited.js';\nimport { renderFull } from './screens/full.js';\nimport { renderResults } from './screens/results.js';\nimport { handleTriage1, handleTriage2, handleSubmit, reset, goBack, goHome } from '../logic/handlers.js';\nimport { clearValidationErrors } from '../logic/validate.js';\nimport { announceScreenChange, setPageTitle, focusMainHeading } from './a11y.js';\nimport { initializeStrokeCenterMap } from './components/stroke-center-map.js';\nimport { fastEdCalculator } from './components/fastEdModal.js';\n\nexport function render(container) {\n  const state = store.getState();\n  const { currentScreen, results, startTime, navigationHistory } = state;\n\n  // Clear container\n  container.innerHTML = '';\n  \n  // Show/hide back button based on navigation history\n  const backButton = document.getElementById('backButton');\n  if (backButton) {\n    backButton.style.display = navigationHistory && navigationHistory.length > 0 ? 'flex' : 'none';\n  }\n\n  // Render the appropriate screen\n  let html = '';\n  switch (currentScreen) {\n    case 'triage1':\n      html = renderTriage1();\n      break;\n    case 'triage2':\n      html = renderTriage2();\n      break;\n    case 'coma':\n      html = renderComa();\n      break;\n    case 'limited':\n      html = renderLimited();\n      break;\n    case 'full':\n      html = renderFull();\n      break;\n    case 'results':\n      html = renderResults(results, startTime);\n      break;\n    default:\n      html = renderTriage1();\n  }\n\n  container.innerHTML = html;\n\n  // Restore form data if available\n  const form = container.querySelector('form[data-module]');\n  if (form) {\n    const module = form.dataset.module;\n    restoreFormData(form, module);\n  }\n\n  // Attach event listeners\n  attachEvents(container);\n\n  // Initialize stroke center map if on results screen\n  if (currentScreen === 'results' && results) {\n    setTimeout(() => {\n      initializeStrokeCenterMap(results);\n    }, 100);\n  }\n\n  // Accessibility updates\n  announceScreenChange(currentScreen);\n  setPageTitle(currentScreen);\n  focusMainHeading();\n}\n\nfunction restoreFormData(form, module) {\n  const formData = store.getFormData(module);\n  if (!formData || Object.keys(formData).length === 0) return;\n\n  Object.entries(formData).forEach(([key, value]) => {\n    const input = form.elements[key];\n    if (input) {\n      if (input.type === 'checkbox') {\n        input.checked = value === true || value === 'on' || value === 'true';\n      } else {\n        input.value = value;\n      }\n    }\n  });\n}\n\nfunction attachEvents(container) {\n  // Clear any existing validation errors when inputs change\n  container.querySelectorAll('input[type=\"number\"]').forEach(input => {\n    input.addEventListener('blur', () => {\n      clearValidationErrors(container);\n    });\n  });\n\n  // Triage button handlers\n  container.querySelectorAll('[data-action]').forEach(button => {\n    button.addEventListener('click', (e) => {\n      const { action, value } = e.currentTarget.dataset;\n      const boolVal = value === 'true';\n      \n      switch (action) {\n        case 'triage1':\n          handleTriage1(boolVal);\n          break;\n        case 'triage2':\n          handleTriage2(boolVal);\n          break;\n        case 'reset':\n          reset();\n          break;\n        case 'goBack':\n          goBack();\n          break;\n        case 'goHome':\n          goHome();\n          break;\n      }\n    });\n  });\n\n  // Form submission handlers\n  container.querySelectorAll('form[data-module]').forEach(form => {\n    form.addEventListener('submit', (e) => {\n      handleSubmit(e, container);\n    });\n  });\n\n  // Print button handler\n  const printButton = container.querySelector('#printResults');\n  if (printButton) {\n    printButton.addEventListener('click', () => window.print());\n  }\n\n  // FAST-ED calculator handler\n  const fastEdInput = container.querySelector('#fast_ed_score');\n  if (fastEdInput) {\n    fastEdInput.addEventListener('click', (e) => {\n      e.preventDefault();\n      const currentValue = parseInt(fastEdInput.value) || 0;\n      \n      fastEdCalculator.show(currentValue, (result) => {\n        // Update FAST-ED score\n        fastEdInput.value = result.total;\n        \n        // Update hidden arm weakness field\n        const armPareseField = container.querySelector('#armparese_hidden');\n        if (armPareseField) {\n          armPareseField.value = result.armWeaknessBoolean ? 'true' : 'false';\n        }\n        \n        // Update eye deviation hidden field if exists\n        const eyeDeviationField = container.querySelector('#eye_deviation_hidden');\n        if (eyeDeviationField) {\n          eyeDeviationField.value = result.eyeDeviationBoolean ? 'true' : 'false';\n        }\n        \n        // Trigger change event to save form data\n        fastEdInput.dispatchEvent(new Event('change', { bubbles: true }));\n      });\n    });\n    \n    // Prevent manual typing\n    fastEdInput.addEventListener('keydown', (e) => {\n      e.preventDefault();\n    });\n  }\n\n  // Collapsible info toggles handler\n  const infoToggles = container.querySelectorAll('.info-toggle');\n  infoToggles.forEach(toggle => {\n    toggle.addEventListener('click', (e) => {\n      const targetId = toggle.dataset.target;\n      const targetContent = container.querySelector(`#${targetId}`);\n      const arrow = toggle.querySelector('.toggle-arrow');\n      \n      if (targetContent) {\n        const isVisible = targetContent.style.display !== 'none';\n        \n        if (isVisible) {\n          // Hide content\n          targetContent.style.display = 'none';\n          targetContent.classList.remove('show');\n          toggle.classList.remove('active');\n          arrow.style.transform = 'rotate(0deg)';\n        } else {\n          // Show content\n          targetContent.style.display = 'block';\n          targetContent.classList.add('show');\n          toggle.classList.add('active');\n          arrow.style.transform = 'rotate(180deg)';\n        }\n      }\n    });\n  });\n}","import { store } from './state/store.js';\nimport { render } from './ui/render.js';\nimport { APP_CONFIG } from './config.js';\nimport { i18n, t } from './localization/i18n.js';\nimport { warmUpFunctions } from './api/client.js';\n\nclass App {\n  constructor() {\n    this.container = null;\n    this.unsubscribe = null;\n  }\n\n  async init() {\n    // Wait for DOM to be ready\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', () => this.init());\n      return;\n    }\n\n    this.container = document.getElementById('appContainer');\n    if (!this.container) {\n      console.error('App container not found');\n      return;\n    }\n\n    // Subscribe to store changes\n    this.unsubscribe = store.subscribe(() => {\n      render(this.container);\n    });\n\n    // Subscribe to language changes\n    window.addEventListener('languageChanged', () => {\n      this.updateUILanguage();\n      render(this.container);\n    });\n\n    // Setup global event listeners\n    this.setupGlobalEventListeners();\n\n    // Initialize theme\n    this.initializeTheme();\n    \n    // Initialize language\n    this.updateUILanguage();\n\n    // Start auto-save\n    this.startAutoSave();\n\n    // Setup session timeout\n    this.setupSessionTimeout();\n\n    // Set current year in footer\n    this.setCurrentYear();\n\n    // Register PWA Service Worker with forced update\n    this.registerServiceWorker();\n    \n    // Warm up Cloud Functions in background\n    warmUpFunctions();\n\n    // Initial render\n    render(this.container);\n\n    console.log('iGFAP Stroke Triage Assistant initialized');\n  }\n\n  setupGlobalEventListeners() {\n    // Navigation buttons\n    const backButton = document.getElementById('backButton');\n    if (backButton) {\n      backButton.addEventListener('click', () => {\n        store.goBack();\n        render(this.container);\n      });\n    }\n    \n    const homeButton = document.getElementById('homeButton');\n    if (homeButton) {\n      homeButton.addEventListener('click', () => {\n        store.goHome();\n        render(this.container);\n      });\n    }\n\n    // Language toggle\n    const languageToggle = document.getElementById('languageToggle');\n    if (languageToggle) {\n      languageToggle.addEventListener('click', () => this.toggleLanguage());\n    }\n\n    // Dark mode toggle\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    if (darkModeToggle) {\n      darkModeToggle.addEventListener('click', () => this.toggleDarkMode());\n    }\n\n    // Help modal\n    this.setupHelpModal();\n\n    // Footer links\n    this.setupFooterLinks();\n\n    // Keyboard navigation\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        const helpModal = document.getElementById('helpModal');\n        if (helpModal && helpModal.classList.contains('show')) {\n          helpModal.classList.remove('show');\n          helpModal.style.display = 'none';\n          helpModal.setAttribute('aria-hidden', 'true');\n        }\n      }\n    });\n\n    // Before unload warning\n    window.addEventListener('beforeunload', (e) => {\n      if (store.hasUnsavedData()) {\n        e.preventDefault();\n        e.returnValue = 'You have unsaved data. Are you sure you want to leave?';\n      }\n    });\n  }\n\n  setupHelpModal() {\n    const helpButton = document.getElementById('helpButton');\n    const helpModal = document.getElementById('helpModal');\n    const modalClose = helpModal?.querySelector('.modal-close');\n\n    if (helpButton && helpModal) {\n      // Ensure modal starts hidden\n      helpModal.classList.remove('show');\n      helpModal.style.display = 'none';\n      helpModal.setAttribute('aria-hidden', 'true');\n\n      helpButton.addEventListener('click', () => {\n        helpModal.style.display = 'flex';\n        helpModal.classList.add('show');\n        helpModal.setAttribute('aria-hidden', 'false');\n      });\n      \n      const closeModal = () => {\n        helpModal.classList.remove('show');\n        helpModal.style.display = 'none';\n        helpModal.setAttribute('aria-hidden', 'true');\n      };\n      \n      modalClose?.addEventListener('click', closeModal);\n      \n      helpModal.addEventListener('click', (e) => {\n        if (e.target === helpModal) {\n          closeModal();\n        }\n      });\n    }\n  }\n\n  setupFooterLinks() {\n    document.getElementById('privacyLink')?.addEventListener('click', (e) => {\n      e.preventDefault();\n      this.showPrivacyPolicy();\n    });\n    \n    document.getElementById('disclaimerLink')?.addEventListener('click', (e) => {\n      e.preventDefault();\n      this.showDisclaimer();\n    });\n  }\n\n  initializeTheme() {\n    const savedTheme = localStorage.getItem('theme');\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    \n    if (savedTheme === 'dark' || (!savedTheme && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n      document.body.classList.add('dark-mode');\n      if (darkModeToggle) darkModeToggle.textContent = '☀️';\n    }\n  }\n\n  toggleLanguage() {\n    i18n.toggleLanguage();\n    this.updateUILanguage();\n    \n    // Update flag icon\n    const languageToggle = document.getElementById('languageToggle');\n    if (languageToggle) {\n      const currentLang = i18n.getCurrentLanguage();\n      languageToggle.textContent = currentLang === 'en' ? '🇬🇧' : '🇩🇪';\n      languageToggle.dataset.lang = currentLang;\n    }\n  }\n\n  updateUILanguage() {\n    // Update HTML lang attribute\n    document.documentElement.lang = i18n.getCurrentLanguage();\n    \n    // Update header text\n    const headerTitle = document.querySelector('.app-header h1');\n    if (headerTitle) {\n      headerTitle.textContent = t('appTitle');\n    }\n    \n    const emergencyBadge = document.querySelector('.emergency-badge');\n    if (emergencyBadge) {\n      emergencyBadge.textContent = t('emergencyBadge');\n    }\n    \n    // Update button tooltips\n    const languageToggle = document.getElementById('languageToggle');\n    if (languageToggle) {\n      languageToggle.title = t('languageToggle');\n      languageToggle.setAttribute('aria-label', t('languageToggle'));\n    }\n    \n    const helpButton = document.getElementById('helpButton');\n    if (helpButton) {\n      helpButton.title = t('helpButton');\n      helpButton.setAttribute('aria-label', t('helpButton'));\n    }\n    \n    const darkModeToggle = document.getElementById('darkModeToggle');\n    if (darkModeToggle) {\n      darkModeToggle.title = t('darkModeButton');\n      darkModeToggle.setAttribute('aria-label', t('darkModeButton'));\n    }\n    \n    // Update help modal\n    const modalTitle = document.getElementById('modalTitle');\n    if (modalTitle) {\n      modalTitle.textContent = t('helpTitle');\n    }\n    \n    // Note: Stroke center map initialization is handled in render.js\n  }\n\n  toggleDarkMode() {\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    document.body.classList.toggle('dark-mode');\n    const isDark = document.body.classList.contains('dark-mode');\n    \n    if (darkModeToggle) {\n      darkModeToggle.textContent = isDark ? '☀️' : '🌙';\n    }\n    \n    localStorage.setItem('theme', isDark ? 'dark' : 'light');\n  }\n\n  startAutoSave() {\n    setInterval(() => {\n      this.saveCurrentFormData();\n    }, APP_CONFIG.autoSaveInterval);\n  }\n\n  saveCurrentFormData() {\n    const forms = this.container.querySelectorAll('form[data-module]');\n    forms.forEach(form => {\n      const formData = new FormData(form);\n      const module = form.dataset.module;\n      if (module) {\n        const data = {};\n        formData.forEach((value, key) => {\n          const element = form.elements[key];\n          if (element && element.type === 'checkbox') {\n            data[key] = element.checked;\n          } else {\n            data[key] = value;\n          }\n        });\n        \n        // Only save if data has actually changed to prevent unnecessary re-renders\n        const currentData = store.getFormData(module);\n        const hasChanges = JSON.stringify(currentData) !== JSON.stringify(data);\n        if (hasChanges) {\n          store.setFormData(module, data);\n        }\n      }\n    });\n  }\n\n  setupSessionTimeout() {\n    setTimeout(() => {\n      if (confirm('Your session has been idle for 30 minutes. Would you like to continue?')) {\n        this.setupSessionTimeout();\n      } else {\n        store.reset();\n      }\n    }, APP_CONFIG.sessionTimeout);\n  }\n\n  setCurrentYear() {\n    const yearElement = document.getElementById('currentYear');\n    if (yearElement) {\n      yearElement.textContent = new Date().getFullYear();\n    }\n  }\n\n  showPrivacyPolicy() {\n    alert('Privacy Policy: This tool processes data locally. No patient data is stored or transmitted.');\n  }\n\n  showDisclaimer() {\n    alert('Medical Disclaimer: This tool is for clinical decision support only. Always use clinical judgment and follow local protocols.');\n  }\n\n  async registerServiceWorker() {\n    // Check if service workers are supported\n    if (!('serviceWorker' in navigator)) {\n      console.log('Service Workers not supported');\n      return;\n    }\n\n    try {\n      const registration = await navigator.serviceWorker.register('/0825/sw.js', {\n        scope: '/0825/'\n      });\n\n      console.log('Service Worker registered successfully:', registration);\n\n      // Handle service worker updates\n      registration.addEventListener('updatefound', () => {\n        const newWorker = registration.installing;\n        console.log('New service worker found');\n\n        newWorker.addEventListener('statechange', () => {\n          if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n            console.log('New service worker installed, update available');\n            // Could show update notification here\n            this.showUpdateNotification();\n          }\n        });\n      });\n\n      // Listen for service worker messages\n      navigator.serviceWorker.addEventListener('message', (event) => {\n        console.log('Message from service worker:', event.data);\n      });\n\n    } catch (error) {\n      console.error('Service Worker registration failed:', error);\n    }\n  }\n\n  showUpdateNotification() {\n    // Create modal dialog for update notification\n    const modal = document.createElement('div');\n    modal.className = 'modal show update-modal';\n    modal.style.cssText = `\n      display: flex;\n      position: fixed;\n      z-index: 2000;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0,0,0,0.6);\n      backdrop-filter: blur(5px);\n      align-items: center;\n      justify-content: center;\n    `;\n    \n    const modalContent = document.createElement('div');\n    modalContent.className = 'modal-content';\n    modalContent.style.cssText = `\n      background-color: var(--container-bg);\n      padding: 30px;\n      border-radius: 16px;\n      max-width: 400px;\n      box-shadow: var(--shadow-lg);\n      text-align: center;\n      animation: slideUp 0.3s ease;\n    `;\n    \n    modalContent.innerHTML = `\n      <div style=\"margin-bottom: 20px;\">\n        <div style=\"font-size: 3rem; margin-bottom: 16px;\">🔄</div>\n        <h3 style=\"margin: 0 0 12px 0; color: var(--text-color);\">Update Available</h3>\n        <p style=\"color: var(--text-secondary); margin: 0 0 24px 0; line-height: 1.5;\">\n          A new version with improvements is ready to install.\n        </p>\n      </div>\n      <div style=\"display: flex; gap: 12px; justify-content: center;\">\n        <button id=\"updateNow\" class=\"primary\" style=\"flex: 1; max-width: 140px;\">\n          Refresh Now\n        </button>\n        <button id=\"updateLater\" class=\"secondary\" style=\"flex: 1; max-width: 140px;\">\n          Later\n        </button>\n      </div>\n    `;\n    \n    modal.appendChild(modalContent);\n    document.body.appendChild(modal);\n    \n    // Handle buttons\n    const updateNow = modal.querySelector('#updateNow');\n    const updateLater = modal.querySelector('#updateLater');\n    \n    updateNow.addEventListener('click', () => {\n      window.location.reload();\n    });\n    \n    updateLater.addEventListener('click', () => {\n      modal.remove();\n      // Show again in 5 minutes\n      setTimeout(() => this.showUpdateNotification(), 5 * 60 * 1000);\n    });\n    \n    // Close on backdrop click\n    modal.addEventListener('click', (e) => {\n      if (e.target === modal) {\n        updateLater.click();\n      }\n    });\n  }\n\n  destroy() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n}\n\n// Initialize the application\nconst app = new App();\napp.init();\n\n// Export for potential testing or debugging\nexport default app;"],"names":["Store","listener","updates","screen","history","previousScreen","module","data","formData","errors","results","newState","eventName","event","store","renderProgressIndicator","currentStep","steps","html","step","index","isActive","isCompleted","messages","I18n","savedLanguage","language","key","newLanguage","lang","date","locale","i18n","t","renderTriage1","renderTriage2","API_URLS","CRITICAL_THRESHOLDS","GFAP_RANGES","APP_CONFIG","VALIDATION_RULES","renderComa","renderLimited","renderFull","renderCriticalAlert","strokeCenters","calculateDistance","lat1","lng1","lat2","lng2","dLat","toRadians","dLng","a","degrees","calculateTravelTime","fromLat","fromLng","toLat","toLng","profile","url","response","route","error","distance","calculateEmergencyTravelTime","result","findNearestStrokeCentersWithTravelTime","lat","lng","maxResults","maxTime","useEmergencyRouting","center","travelInfo","b","findNearestStrokeCenters","maxDistance","getRecommendedStrokeCentersWithTravelTime","conditionType","nearestCenters","comprehensive","primary","neurosurgical","c","getRecommendedStrokeCenters","renderStrokeCenterMap","initializeStrokeCenterMap","useGpsButton","manualLocationButton","locationManual","locationInput","searchLocationButton","resultsContainer","requestUserLocation","location","geocodeLocation","e","showLocationError","position","latitude","longitude","showNearestCenters","errorMessage","locationString","locationName","determineConditionType","routingExplanation","getRoutingExplanation","recommendations","renderStrokeCenterList","centers","isRecommended","service","ichPercent","_a","message","container","getRiskLevel","probabilityPercent","type","p","thresholds","renderInputSummary","summaryHtml","moduleTitle","itemsHtml","value","label","l","displayValue","renderRiskCard","percent","riskLevel","isCritical","isHigh","icons","titles","subtitles","renderResults","startTime","ich","lvo","isLimitedOrComa","renderICHFocusedResults","renderFullModuleResults","criticalAlert","strokeCenterHtml","inputSummaryHtml","renderICHDriversOnly","lvoPercent","showLVONotification","renderLVONotification","driversData","positiveDrivers","negativeDrivers","d","renderCompactDriver","driver","percentage","width","formatDriverName","name","formatted","validateInput","rules","validateForm","form","isValid","validationErrors","input","showValidationErrors","group","el","errorDiv","clearValidationErrors","extractDriversFromResponse","predictionType","rawDrivers","_b","formattedDrivers","formatDriversFromDictionary","fastEdFeature","f","drivers","positive","negative","weight","extractProbabilityFromResponse","probability","extractConfidenceFromResponse","confidence","warmUpFunctions","warmUpPromises","controller","timeoutId","APIError","status","normalizeBooleans","payload","normalized","safeParseFloat","defaultValue","parsed","fetchJSON","errorData","predictComaIch","normalizedPayload","predictLimitedIch","fullPayload","predictFullStroke","responseStr","_c","_d","_e","_f","ichProbability","lvoProbability","ichDrivers","lvoDrivers","ichConfidence","lvoConfidence","handleTriage1","isComatose","navigate","handleTriage2","isExaminable","reset","goBack","success","goHome","handleSubmit","validation","inputs","element","n","button","originalContent","showError","alert","containerDiv","announceScreenChange","announcement","screenNames","setPageTitle","focusMainHeading","heading","FastEdCalculator","sum","score","total","component","closeBtn","cancelBtn","applyBtn","totalElement","riskElement","currentScore","onApplyCallback","firstRadio","armWeaknessBoolean","eyeDeviationBoolean","remaining","components","assignToThis","fastEdCalculator","render","state","currentScreen","navigationHistory","backButton","restoreFormData","attachEvents","action","boolVal","printButton","fastEdInput","currentValue","armPareseField","eyeDeviationField","toggle","targetId","targetContent","arrow","App","homeButton","languageToggle","darkModeToggle","helpModal","helpButton","modalClose","closeModal","savedTheme","currentLang","headerTitle","emergencyBadge","modalTitle","isDark","currentData","yearElement","registration","newWorker","modal","modalContent","updateNow","updateLater","app"],"mappings":"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"}