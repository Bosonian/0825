{"version":3,"file":"index-CbLxNIia.js","sources":["../../src/state/store.js","../../src/ui/components/progress.js","../../src/localization/messages.js","../../src/localization/i18n.js","../../src/ui/screens/triage1.js","../../src/ui/screens/triage2.js","../../src/config.js","../../src/ui/screens/coma.js","../../src/ui/screens/limited.js","../../src/ui/screens/full.js","../../src/ui/components/alerts.js","../../src/logic/shap.js","../../src/ui/components/drivers.js","../../src/data/stroke-centers.js","../../src/ui/components/stroke-center-map.js","../../src/logic/formatters.js","../../src/ui/screens/results.js","../../src/logic/validate.js","../../src/api/client.js","../../src/logic/handlers.js","../../src/ui/a11y.js","../../src/ui/render.js","../../src/main.js"],"sourcesContent":["// State management for the Stroke Triage Assistant\n\nclass Store {\n  constructor() {\n    this.state = {\n      currentScreen: 'triage1',\n      results: null,\n      sessionId: null,\n      startTime: null,\n      formData: {},\n      validationErrors: {}\n    };\n    \n    this.listeners = new Set();\n    this.initialize();\n  }\n  \n  initialize() {\n    this.state.sessionId = this.generateSessionId();\n    this.state.startTime = Date.now();\n    console.log('Store initialized with session:', this.state.sessionId);\n  }\n  \n  generateSessionId() {\n    return 'session_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n  }\n  \n  // Subscribe to state changes\n  subscribe(listener) {\n    this.listeners.add(listener);\n    return () => this.listeners.delete(listener);\n  }\n  \n  // Notify all listeners of state changes\n  notify() {\n    this.listeners.forEach(listener => listener(this.state));\n  }\n  \n  // Get current state (read-only)\n  getState() {\n    return { ...this.state };\n  }\n  \n  // Update state and notify listeners\n  setState(updates) {\n    this.state = { ...this.state, ...updates };\n    this.notify();\n  }\n  \n  // Navigate to a new screen\n  navigate(screen) {\n    console.log(`Navigating from ${this.state.currentScreen} to ${screen}`);\n    this.setState({ currentScreen: screen });\n  }\n  \n  // Store form data for a specific module\n  setFormData(module, data) {\n    const formData = { ...this.state.formData };\n    formData[module] = { ...data };\n    this.setState({ formData });\n  }\n  \n  // Get form data for a specific module\n  getFormData(module) {\n    return this.state.formData[module] || {};\n  }\n  \n  // Store validation errors\n  setValidationErrors(errors) {\n    this.setState({ validationErrors: errors });\n  }\n  \n  // Clear validation errors\n  clearValidationErrors() {\n    this.setState({ validationErrors: {} });\n  }\n  \n  // Store prediction results\n  setResults(results) {\n    this.setState({ results });\n  }\n  \n  // Check if there's unsaved data\n  hasUnsavedData() {\n    return Object.keys(this.state.formData).length > 0 && !this.state.results;\n  }\n  \n  // Reset to initial state\n  reset() {\n    const newState = {\n      currentScreen: 'triage1',\n      results: null,\n      sessionId: this.generateSessionId(),\n      startTime: Date.now(),\n      formData: {},\n      validationErrors: {}\n    };\n    this.setState(newState);\n    console.log('Store reset with new session:', newState.sessionId);\n  }\n  \n  // Log events for audit trail\n  logEvent(eventName, data = {}) {\n    const event = {\n      timestamp: Date.now(),\n      session: this.state.sessionId,\n      event: eventName,\n      data: data\n    };\n    console.log('Event:', event);\n    // In production, send to analytics service\n    // this.sendToAnalytics(event);\n  }\n  \n  // Calculate session duration\n  getSessionDuration() {\n    return Date.now() - this.state.startTime;\n  }\n}\n\n// Create and export a singleton instance\nexport const store = new Store();\n\n// Export the Store class for testing purposes\nexport { Store };","export function renderProgressIndicator(currentStep) {\n  const steps = [\n    { id: 1, label: 'Triage' },\n    { id: 2, label: 'Assessment' },\n    { id: 3, label: 'Results' }\n  ];\n  \n  let html = `<div class=\"progress-indicator\">`;\n  steps.forEach((step, index) => {\n    const isActive = step.id === currentStep;\n    const isCompleted = step.id < currentStep;\n    html += `\n      <div class=\"progress-step ${isActive ? 'active' : ''} ${isCompleted ? 'completed' : ''}\">\n        ${isCompleted ? '' : step.id}\n      </div>\n    `;\n    if (index < steps.length - 1) {\n      html += `<div class=\"progress-line ${isCompleted ? 'completed' : ''}\"></div>`;\n    }\n  });\n  html += `</div>`;\n  return html;\n}","// Localization messages for the Stroke Triage Assistant\n\nexport const messages = {\n  en: {\n    // Header\n    appTitle: 'Stroke Triage Assistant',\n    emergencyBadge: 'Emergency Tool',\n    helpButton: 'Help and Instructions',\n    darkModeButton: 'Toggle dark mode',\n    languageToggle: 'Language',\n\n    // Progress\n    step1: 'Initial Assessment',\n    step2: 'Data Collection', \n    step3: 'Results',\n\n    // Triage 1\n    triage1Title: 'Patient Assessment',\n    triage1Question: 'Is the patient comatose?',\n    triage1Help: 'Glasgow Coma Scale < 8',\n    triage1Yes: 'YES - Comatose',\n    triage1No: 'NO - Conscious',\n\n    // Triage 2\n    triage2Title: 'Examination Capability',\n    triage2Question: 'Can the patient be reliably examined?',\n    triage2Help: 'Patient is not aphasic, confused, or uncooperative',\n    triage2Yes: 'YES - Full Exam Possible',\n    triage2No: 'NO - Limited Exam Only',\n\n    // Forms\n    ageLabel: 'Age (years)',\n    ageHelp: 'Patient age in years',\n    systolicLabel: 'Systolic BP (mmHg)',\n    systolicHelp: 'Systolic blood pressure',\n    diastolicLabel: 'Diastolic BP (mmHg)', \n    diastolicHelp: 'Diastolic blood pressure',\n    gfapLabel: 'GFAP Value (pg/mL)',\n    gfapHelp: 'GFAP biomarker level',\n    fastEdLabel: 'FAST-ED Score',\n    fastEdHelp: 'FAST-ED assessment score (0-9)',\n\n    // Checkboxes\n    headacheLabel: 'Headache',\n    vigilanzLabel: 'Reduced consciousness',\n    armPareseLabel: 'Arm weakness',\n    beinPareseLabel: 'Leg weakness', \n    eyeDeviationLabel: 'Eye deviation',\n    atrialFibLabel: 'Atrial fibrillation',\n    anticoagLabel: 'Anticoagulated (NOAK)',\n    antiplateletsLabel: 'Antiplatelets',\n\n    // Buttons\n    analyzeButton: 'Analyze',\n    analyzing: 'Analyzing...',\n    printResults: 'Print Results',\n    newAssessment: 'Start New Assessment',\n\n    // Results\n    resultsTitle: 'Assessment Results',\n    ichProbability: 'ICH Probability',\n    lvoProbability: 'LVO Probability',\n    riskLevel: 'Risk Level',\n    lowRisk: 'Low Risk',\n    moderateRisk: 'Moderate Risk', \n    highRisk: 'High Risk',\n    criticalRisk: 'Critical Risk',\n\n    // Risk levels\n    riskLow: 'Low',\n    riskModerate: 'Moderate',\n    riskHigh: 'High', \n    riskCritical: 'Critical',\n\n    // Drivers\n    driversTitle: 'Model Drivers',\n    driversSubtitle: 'Factors contributing to the prediction',\n    ichDrivers: 'ICH Risk Factors',\n    lvoDrivers: 'LVO Risk Factors',\n\n    // Critical Alert\n    criticalAlertTitle: 'CRITICAL RISK DETECTED',\n    criticalAlertMessage: 'High probability of intracerebral hemorrhage detected. Immediate medical attention required.',\n\n    // Help Modal\n    helpTitle: 'Quick Reference Guide',\n    gcsTitle: 'Glasgow Coma Scale (GCS)',\n    gcsLow: 'GCS < 8: Comatose patient - use Coma Module',\n    gcsMod: 'GCS 8-12: Moderate impairment',\n    gcsHigh: 'GCS 13-15: Mild impairment',\n    fastEdTitle: 'FAST-ED Score Components',\n    fastEdFacial: 'Facial Palsy: 0-1 points',\n    fastEdArm: 'Arm Weakness: 0-2 points',\n    fastEdSpeech: 'Speech Changes: 0-2 points',\n    fastEdTime: 'Time: Critical factor',\n    fastEdEye: 'Eye Deviation: 0-2 points',\n    fastEdDenial: 'Denial/Neglect: 0-2 points',\n    criticalValuesTitle: 'Critical Values',\n    criticalBp: 'Systolic BP > 180: Increased ICH risk',\n    criticalGfap: 'GFAP > 500 pg/mL: Significant marker',\n    criticalFastEd: 'FAST-ED ≥ 4: Consider LVO',\n\n    // Disclaimer\n    disclaimer: 'Clinical Disclaimer',\n    disclaimerText: 'This tool is for clinical decision support only. Always use clinical judgment and follow local protocols. Not a replacement for physician assessment.',\n    importantNote: 'Important',\n    importantText: 'These results are for clinical decision support only. Always use clinical judgment and follow institutional protocols.',\n\n    // Footer\n    privacyLink: 'Privacy Policy',\n    disclaimerLink: 'Medical Disclaimer', \n    versionLink: 'Version 2.0.1',\n\n    // Privacy and disclaimers\n    privacyPolicy: 'Privacy Policy: This tool processes data locally. No patient data is stored or transmitted.',\n    medicalDisclaimer: 'Medical Disclaimer: This tool is for clinical decision support only. Always use clinical judgment and follow local protocols.',\n\n    // Error messages\n    networkError: 'Network error - please check your connection and try again',\n    requestTimeout: 'Request timeout - please try again',\n    apiError: 'Failed to get results',\n    validationError: 'Please check your input values',\n\n    // Session\n    sessionTimeout: 'Your session has been idle for 30 minutes. Would you like to continue?',\n    unsavedData: 'You have unsaved data. Are you sure you want to leave?',\n\n    // Stroke Centers\n    nearestCentersTitle: 'Nearest Stroke Centers',\n    useCurrentLocation: 'Use Current Location',\n    enterLocationPlaceholder: 'Enter city or address...',\n    enterManually: 'Enter Location Manually',\n    search: 'Search',\n    yourLocation: 'Your Location',\n    recommendedCenters: 'Recommended Centers',\n    alternativeCenters: 'Alternative Centers',\n    noCentersFound: 'No stroke centers found in this area',\n    gettingLocation: 'Getting your location',\n    searchingLocation: 'Searching location',\n    locationError: 'Unable to get your location',\n    locationPermissionDenied: 'Location access denied. Please allow location access and try again.',\n    locationUnavailable: 'Location information is unavailable',\n    locationTimeout: 'Location request timed out',\n    geolocationNotSupported: 'Geolocation is not supported by this browser',\n    geocodingNotImplemented: 'Location search not available. Please use GPS or enter coordinates manually.',\n    tryManualEntry: 'Try entering your location manually or use GPS.',\n    distanceNote: 'Distances are calculated as straight-line distances. Actual travel times may vary.',\n    \n    // Center Types and Services\n    comprehensiveCenter: 'Comprehensive Stroke Center',\n    primaryCenter: 'Primary Stroke Center',\n    telemetryCenter: 'Telemedicine Center',\n    thrombectomy: 'Thrombectomy',\n    neurosurgery: 'Neurosurgery',\n    icu: 'Intensive Care',\n    telemedicine: 'Telemedicine',\n    stroke_unit: 'Stroke Unit',\n    \n    // Actions\n    call: 'Call',\n    directions: 'Directions',\n    emergency: 'Emergency',\n    certified: 'Certified'\n  },\n\n  de: {\n    // Header\n    appTitle: 'Schlaganfall-Triage-Assistent',\n    emergencyBadge: 'Notfall-Tool',\n    helpButton: 'Hilfe und Anweisungen',\n    darkModeButton: 'Dunklen Modus umschalten',\n    languageToggle: 'Sprache',\n\n    // Progress\n    step1: 'Erstbeurteilung',\n    step2: 'Datenerhebung',\n    step3: 'Ergebnisse',\n\n    // Triage 1\n    triage1Title: 'Patientenbeurteilung',\n    triage1Question: 'Ist der Patient komatös?',\n    triage1Help: 'Glasgow Coma Scale < 8',\n    triage1Yes: 'JA - Komatös',\n    triage1No: 'NEIN - Bei Bewusstsein',\n\n    // Triage 2\n    triage2Title: 'Untersuchungsfähigkeit',\n    triage2Question: 'Kann der Patient zuverlässig untersucht werden?',\n    triage2Help: 'Patient ist nicht aphasisch, verwirrt oder unkooperativ',\n    triage2Yes: 'JA - Vollständige Untersuchung möglich',\n    triage2No: 'NEIN - Nur begrenzte Untersuchung',\n\n    // Forms\n    ageLabel: 'Alter (Jahre)',\n    ageHelp: 'Patientenalter in Jahren',\n    systolicLabel: 'Systolischer RR (mmHg)',\n    systolicHelp: 'Systolischer Blutdruck',\n    diastolicLabel: 'Diastolischer RR (mmHg)',\n    diastolicHelp: 'Diastolischer Blutdruck',\n    gfapLabel: 'GFAP-Wert (pg/mL)',\n    gfapHelp: 'GFAP-Biomarker-Wert',\n    fastEdLabel: 'FAST-ED-Score',\n    fastEdHelp: 'FAST-ED-Bewertungsscore (0-9)',\n\n    // Checkboxes\n    headacheLabel: 'Kopfschmerzen',\n    vigilanzLabel: 'Bewusstseinstrübung',\n    armPareseLabel: 'Armschwäche',\n    beinPareseLabel: 'Beinschwäche',\n    eyeDeviationLabel: 'Blickdeviation',\n    atrialFibLabel: 'Vorhofflimmern',\n    anticoagLabel: 'Antikoaguliert (NOAK)',\n    antiplateletsLabel: 'Thrombozytenaggregationshemmer',\n\n    // Buttons\n    analyzeButton: 'Analysieren',\n    analyzing: 'Analysiere...',\n    printResults: 'Ergebnisse drucken',\n    newAssessment: 'Neue Bewertung starten',\n\n    // Results\n    resultsTitle: 'Bewertungsergebnisse',\n    ichProbability: 'ICB-Wahrscheinlichkeit',\n    lvoProbability: 'LVO-Wahrscheinlichkeit',\n    riskLevel: 'Risikostufe',\n\n    // Risk levels\n    riskLow: 'Niedrig',\n    riskModerate: 'Mäßig',\n    riskHigh: 'Hoch',\n    riskCritical: 'Kritisch',\n\n    // Drivers\n    driversTitle: 'Modelltreiber',\n    driversSubtitle: 'Faktoren, die zur Vorhersage beitragen',\n    ichDrivers: 'ICB-Risikofaktoren',\n    lvoDrivers: 'LVO-Risikofaktoren',\n\n    // Critical Alert\n    criticalAlertTitle: 'KRITISCHES RISIKO ERKANNT',\n    criticalAlertMessage: 'Hohe Wahrscheinlichkeit einer intrazerebralen Blutung erkannt. Sofortige medizinische Behandlung erforderlich.',\n\n    // Help Modal\n    helpTitle: 'Kurzreferenzleitfaden',\n    gcsTitle: 'Glasgow Coma Scale (GCS)',\n    gcsLow: 'GCS < 8: Komatöser Patient - Koma-Modul verwenden',\n    gcsMod: 'GCS 8-12: Mäßige Beeinträchtigung',\n    gcsHigh: 'GCS 13-15: Leichte Beeinträchtigung',\n    fastEdTitle: 'FAST-ED-Score-Komponenten',\n    fastEdFacial: 'Faziale Parese: 0-1 Punkte',\n    fastEdArm: 'Armschwäche: 0-2 Punkte',\n    fastEdSpeech: 'Sprachveränderungen: 0-2 Punkte',\n    fastEdTime: 'Zeit: Kritischer Faktor',\n    fastEdEye: 'Blickdeviation: 0-2 Punkte',\n    fastEdDenial: 'Verneinung/Neglect: 0-2 Punkte',\n    criticalValuesTitle: 'Kritische Werte',\n    criticalBp: 'Systolischer RR > 180: Erhöhtes ICB-Risiko',\n    criticalGfap: 'GFAP > 500 pg/mL: Signifikanter Marker',\n    criticalFastEd: 'FAST-ED ≥ 4: LVO in Betracht ziehen',\n\n    // Disclaimer\n    disclaimer: 'Klinischer Haftungsausschluss',\n    disclaimerText: 'Dieses Tool dient nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie lokale Protokolle. Kein Ersatz für ärztliche Beurteilung.',\n    importantNote: 'Wichtig',\n    importantText: 'Diese Ergebnisse dienen nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie institutionelle Protokolle.',\n\n    // Footer\n    privacyLink: 'Datenschutzrichtlinie',\n    disclaimerLink: 'Medizinischer Haftungsausschluss',\n    versionLink: 'Version 2.0.1',\n\n    // Privacy and disclaimers\n    privacyPolicy: 'Datenschutzrichtlinie: Dieses Tool verarbeitet Daten lokal. Keine Patientendaten werden gespeichert oder übertragen.',\n    medicalDisclaimer: 'Medizinischer Haftungsausschluss: Dieses Tool dient nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie lokale Protokolle.',\n\n    // Error messages\n    networkError: 'Netzwerkfehler - bitte überprüfen Sie Ihre Verbindung und versuchen Sie es erneut',\n    requestTimeout: 'Anfrage-Timeout - bitte versuchen Sie es erneut',\n    apiError: 'Ergebnisse konnten nicht abgerufen werden',\n    validationError: 'Bitte überprüfen Sie Ihre Eingabewerte',\n\n    // Session\n    sessionTimeout: 'Ihre Sitzung war 30 Minuten lang inaktiv. Möchten Sie fortfahren?',\n    unsavedData: 'Sie haben ungespeicherte Daten. Sind Sie sicher, dass Sie verlassen möchten?',\n\n    // Stroke Centers\n    nearestCentersTitle: 'Nächstgelegene Schlaganfall-Zentren',\n    useCurrentLocation: 'Aktuellen Standort verwenden',\n    enterLocationPlaceholder: 'Stadt oder Adresse eingeben...',\n    enterManually: 'Standort manuell eingeben',\n    search: 'Suchen',\n    yourLocation: 'Ihr Standort',\n    recommendedCenters: 'Empfohlene Zentren',\n    alternativeCenters: 'Alternative Zentren',\n    noCentersFound: 'Keine Schlaganfall-Zentren in diesem Bereich gefunden',\n    gettingLocation: 'Standort wird ermittelt',\n    searchingLocation: 'Standort wird gesucht',\n    locationError: 'Standort konnte nicht ermittelt werden',\n    locationPermissionDenied: 'Standortzugriff verweigert. Bitte erlauben Sie Standortzugriff und versuchen Sie es erneut.',\n    locationUnavailable: 'Standortinformationen sind nicht verfügbar',\n    locationTimeout: 'Standortanfrage ist abgelaufen',\n    geolocationNotSupported: 'Geolokalisierung wird von diesem Browser nicht unterstützt',\n    geocodingNotImplemented: 'Standortsuche nicht verfügbar. Bitte verwenden Sie GPS oder geben Sie Koordinaten manuell ein.',\n    tryManualEntry: 'Versuchen Sie, Ihren Standort manuell einzugeben oder GPS zu verwenden.',\n    distanceNote: 'Entfernungen werden als Luftlinie berechnet. Tatsächliche Fahrzeiten können variieren.',\n    \n    // Center Types and Services\n    comprehensiveCenter: 'Überregionales Schlaganfall-Zentrum',\n    primaryCenter: 'Regionales Schlaganfall-Zentrum',\n    telemetryCenter: 'Telemedizin-Zentrum',\n    thrombectomy: 'Thrombektomie',\n    neurosurgery: 'Neurochirurgie',\n    icu: 'Intensivstation',\n    telemedicine: 'Telemedizin',\n    stroke_unit: 'Stroke Unit',\n    \n    // Actions\n    call: 'Anrufen',\n    directions: 'Wegbeschreibung',\n    emergency: 'Notfall',\n    certified: 'Zertifiziert'\n  }\n};","// Internationalization utilities for the Stroke Triage Assistant\n\nimport { messages } from './messages.js';\n\nclass I18n {\n  constructor() {\n    this.supportedLanguages = ['en', 'de'];\n    this.currentLanguage = this.detectLanguage();\n  }\n\n  // Detect browser language and default to appropriate language\n  detectLanguage() {\n    // Check if language is already set in localStorage\n    const savedLanguage = localStorage.getItem('language');\n    if (savedLanguage && this.supportedLanguages.includes(savedLanguage)) {\n      return savedLanguage;\n    }\n\n    // Detect browser language\n    const browserLang = navigator.language || navigator.userLanguage;\n    const langCode = browserLang.substring(0, 2).toLowerCase();\n    \n    // Default to German if browser language is German, otherwise English\n    return langCode === 'de' ? 'de' : 'en';\n  }\n\n  // Get current language\n  getCurrentLanguage() {\n    return this.currentLanguage;\n  }\n\n  // Set language and save to localStorage\n  setLanguage(language) {\n    if (this.supportedLanguages.includes(language)) {\n      this.currentLanguage = language;\n      localStorage.setItem('language', language);\n      \n      // Dispatch custom event for language change\n      window.dispatchEvent(new CustomEvent('languageChanged', { \n        detail: { language } \n      }));\n      \n      return true;\n    }\n    return false;\n  }\n\n  // Get supported languages\n  getSupportedLanguages() {\n    return [...this.supportedLanguages];\n  }\n\n  // Translate a message key\n  t(key) {\n    const currentMessages = messages[this.currentLanguage] || messages.en;\n    return currentMessages[key] || key;\n  }\n\n  // Toggle between English and German\n  toggleLanguage() {\n    const newLanguage = this.currentLanguage === 'en' ? 'de' : 'en';\n    return this.setLanguage(newLanguage);\n  }\n\n  // Get language display name\n  getLanguageDisplayName(lang = null) {\n    const language = lang || this.currentLanguage;\n    const displayNames = {\n      'en': 'English',\n      'de': 'Deutsch'\n    };\n    return displayNames[language] || language;\n  }\n\n  // Format date/time according to current locale\n  formatDateTime(date) {\n    const locale = this.currentLanguage === 'de' ? 'de-DE' : 'en-US';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: '2-digit', \n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    }).format(date);\n  }\n\n  // Format time only according to current locale\n  formatTime(date) {\n    const locale = this.currentLanguage === 'de' ? 'de-DE' : 'en-US';\n    return new Intl.DateTimeFormat(locale, {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    }).format(date);\n  }\n}\n\n// Create singleton instance\nconst i18n = new I18n();\n\n// Export both the instance and the class\nexport { i18n, I18n };\n\n// Export convenience function for translation\nexport const t = (key) => i18n.t(key);","import { renderProgressIndicator } from '../components/progress.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderTriage1() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(1)}\n      <h2>${t('triage1Title')}</h2>\n      <div class=\"triage-question\">\n        ${t('triage1Question')}\n        <small>${t('triage1Help')}</small>\n      </div>\n      <div class=\"triage-buttons\">\n        <button class=\"yes-btn\" data-action=\"triage1\" data-value=\"true\">${t('triage1Yes')}</button>\n        <button class=\"no-btn\" data-action=\"triage1\" data-value=\"false\">${t('triage1No')}</button>\n      </div>\n    </div>\n  `;\n}","import { renderProgressIndicator } from '../components/progress.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderTriage2() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(1)}\n      <h2>${t('triage2Title')}</h2>\n      <div class=\"triage-question\">\n        ${t('triage2Question')}\n        <small>${t('triage2Help')}</small>\n      </div>\n      <div class=\"triage-buttons\">\n        <button class=\"yes-btn\" data-action=\"triage2\" data-value=\"true\">${t('triage2Yes')}</button>\n        <button class=\"no-btn\" data-action=\"triage2\" data-value=\"false\">${t('triage2No')}</button>\n      </div>\n    </div>\n  `;\n}","// Configuration for the Stroke Triage Assistant\n\nexport const API_URLS = {\n  COMA_ICH: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_coma_ich',\n  LDM_ICH: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_limited_data_ich',\n  FULL_STROKE: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_full_stroke'\n};\n\nexport const CRITICAL_THRESHOLDS = {\n  ich: { \n    high: 60, \n    critical: 80 \n  },\n  lvo: { \n    high: 50, \n    critical: 70 \n  }\n};\n\nexport const GFAP_RANGES = {\n  min: 29,\n  max: 10001,\n  normal: 100,\n  elevated: 500,\n  critical: 1000\n};\n\nexport const APP_CONFIG = {\n  autoSaveInterval: 30000, // Increased from 5s to 30s to reduce blinking\n  sessionTimeout: 30 * 60 * 1000, // 30 minutes\n  requestTimeout: 10000 // 10 seconds\n};\n\nexport const VALIDATION_RULES = {\n  age_years: { required: true, min: 0, max: 120 },\n  systolic_bp: { required: true, min: 60, max: 300 },\n  diastolic_bp: { required: true, min: 30, max: 200 },\n  gfap_value: { required: true, min: GFAP_RANGES.min, max: GFAP_RANGES.max },\n  fast_ed_score: { required: true, min: 0, max: 9 }\n};","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\n\nexport function renderComa() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>Coma Module</h2>\n      <div class=\"critical-alert\">\n        <h4><span class=\"alert-icon\">🚨</span> Critical Patient</h4>\n        <p>Patient is comatose (GCS &lt; 8). Rapid assessment required.</p>\n      </div>\n      <form data-module=\"coma\">\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              GFAP Value (pg/mL)\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">Glial Fibrillary Acidic Protein - Brain injury biomarker</span>\n              </span>\n            </label>\n            <input type=\"number\" id=\"gfap_value\" name=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required aria-describedby=\"gfap-help\">\n            <div id=\"gfap-help\" class=\"input-help\">\n              Range: ${GFAP_RANGES.min} - ${GFAP_RANGES.max} pg/mL\n            </div>\n          </div>\n        </div>\n        <button type=\"submit\" class=\"primary\">Analyze ICH Risk</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">Start Over</button>\n      </form>\n    </div>\n  `;\n}","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\n\nexport function renderLimited() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>Limited Data Module</h2>\n      <form data-module=\"limited\">\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"age_years\">Age (years)</label>\n            <input type=\"number\" name=\"age_years\" id=\"age_years\" min=\"0\" max=\"120\" required aria-describedby=\"age-help\">\n            <div id=\"age-help\" class=\"input-help\">Patient's age in years</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"systolic_bp\">Systolic BP (mmHg)</label>\n            <input type=\"number\" name=\"systolic_bp\" id=\"systolic_bp\" min=\"60\" max=\"300\" required aria-describedby=\"sbp-help\">\n            <div id=\"sbp-help\" class=\"input-help\">Normal: 90-140 mmHg</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"diastolic_bp\">Diastolic BP (mmHg)</label>\n            <input type=\"number\" name=\"diastolic_bp\" id=\"diastolic_bp\" min=\"30\" max=\"200\" required aria-describedby=\"dbp-help\">\n            <div id=\"dbp-help\" class=\"input-help\">Normal: 60-90 mmHg</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              GFAP Value (pg/mL)\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">Glial Fibrillary Acidic Protein</span>\n              </span>\n            </label>\n            <input type=\"number\" name=\"gfap_value\" id=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required>\n          </div>\n        </div>\n        <div class=\"checkbox-group\">\n          <label class=\"checkbox-wrapper\">\n            <input type=\"checkbox\" name=\"vigilanzminderung\" id=\"vigilanzminderung\">\n            <span class=\"checkbox-label\">Vigilance Reduction (Decreased alertness)</span>\n          </label>\n        </div>\n        <button type=\"submit\" class=\"primary\">Analyze ICH Risk</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">Start Over</button>\n      </form>\n    </div>\n  `;\n}","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\n\nexport function renderFull() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>Full Stroke Module</h2>\n      <form data-module=\"full\">\n        <h3>Basic Information</h3>\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"age_years\">Age (years)</label>\n            <input type=\"number\" name=\"age_years\" id=\"age_years\" min=\"0\" max=\"120\" required>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"systolic_bp\">Systolic BP (mmHg)</label>\n            <input type=\"number\" name=\"systolic_bp\" id=\"systolic_bp\" min=\"60\" max=\"300\" required>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"diastolic_bp\">Diastolic BP (mmHg)</label>\n            <input type=\"number\" name=\"diastolic_bp\" id=\"diastolic_bp\" min=\"30\" max=\"200\" required>\n          </div>\n        </div>\n\n        <h3>Biomarkers & Scores</h3>\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              GFAP Value (pg/mL)\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">Brain injury biomarker</span>\n              </span>\n            </label>\n            <input type=\"number\" name=\"gfap_value\" id=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"fast_ed_score\">\n              FAST-ED Score\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">0-9 scale for LVO screening</span>\n              </span>\n            </label>\n            <input type=\"number\" name=\"fast_ed_score\" id=\"fast_ed_score\" min=\"0\" max=\"9\" required>\n          </div>\n        </div>\n\n        <h3>Clinical Symptoms</h3>\n        <div class=\"input-grid\">\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"headache\" id=\"headache\">\n              <span class=\"checkbox-label\">Headache</span>\n            </label>\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"vigilanzminderung\" id=\"vigilanzminderung\">\n              <span class=\"checkbox-label\">Vigilance Reduction</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"armparese\" id=\"armparese\">\n              <span class=\"checkbox-label\">Arm Paresis</span>\n            </label>\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"beinparese\" id=\"beinparese\">\n              <span class=\"checkbox-label\">Leg Paresis</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"eye_deviation\" id=\"eye_deviation\">\n              <span class=\"checkbox-label\">Eye Deviation</span>\n            </label>\n          </div>\n        </div>\n\n        <h3>Medical History</h3>\n        <div class=\"input-grid\">\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"atrial_fibrillation\" id=\"atrial_fibrillation\">\n              <span class=\"checkbox-label\">Atrial Fibrillation</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"anticoagulated_noak\" id=\"anticoagulated_noak\">\n              <span class=\"checkbox-label\">On NOAC/DOAC</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"antiplatelets\" id=\"antiplatelets\">\n              <span class=\"checkbox-label\">On Antiplatelets</span>\n            </label>\n          </div>\n        </div>\n\n        <button type=\"submit\" class=\"primary\">Analyze Stroke Risk</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">Start Over</button>\n      </form>\n    </div>\n  `;\n}","export function renderCriticalAlert() {\n  return `\n    <div class=\"critical-alert\">\n      <h4><span class=\"alert-icon\">🚨</span> CRITICAL FINDING</h4>\n      <p>High probability of intracerebral hemorrhage detected.</p>\n      <p><strong>Immediate actions required:</strong></p>\n      <ul style=\"margin: 10px 0; padding-left: 20px;\">\n        <li>Initiate stroke protocol immediately</li>\n        <li>Urgent CT imaging required</li>\n        <li>Consider blood pressure management</li>\n        <li>Prepare for potential neurosurgical consultation</li>\n      </ul>\n    </div>\n  `;\n}","/**\n * Normalize drivers from API responses into a unified format for visualization\n * @param {Object} drivers - Raw drivers data from API\n * @returns {Object} Normalized drivers view model\n */\nexport function normalizeDrivers(drivers) {\n  if (!drivers || typeof drivers !== 'object') {\n    return {\n      kind: 'unavailable',\n      units: null,\n      positive: [],\n      negative: [],\n      meta: {}\n    };\n  }\n\n  // Check if it's already in the expected format with kind property\n  if (drivers.kind) {\n    return drivers;\n  }\n\n  // Check if it's SHAP values format\n  if (drivers.shap_values || (drivers.kind && drivers.kind === 'shap_values')) {\n    return normalizeShapValues(drivers);\n  }\n\n  // Check if it's logistic contributions format\n  if (drivers.logistic_contributions || (drivers.kind && drivers.kind === 'logistic_contributions')) {\n    return normalizeLogisticContributions(drivers);\n  }\n\n  // Try to infer format from raw object\n  if (isRawDriversObject(drivers)) {\n    return normalizeRawDrivers(drivers);\n  }\n\n  return {\n    kind: 'unavailable',\n    units: null,\n    positive: [],\n    negative: [],\n    meta: {}\n  };\n}\n\nfunction normalizeShapValues(drivers) {\n  const shapData = drivers.shap_values || drivers;\n  const features = [];\n\n  if (Array.isArray(shapData)) {\n    // Handle array format\n    shapData.forEach((item, index) => {\n      if (typeof item === 'object' && item.feature && item.value !== undefined) {\n        features.push({\n          label: item.feature,\n          weight: item.value\n        });\n      } else if (typeof item === 'number') {\n        features.push({\n          label: `Feature ${index}`,\n          weight: item\n        });\n      }\n    });\n  } else if (typeof shapData === 'object') {\n    // Handle object format\n    Object.entries(shapData).forEach(([feature, value]) => {\n      if (typeof value === 'number') {\n        features.push({\n          label: feature,\n          weight: value\n        });\n      }\n    });\n  }\n\n  // Sort by absolute weight value\n  features.sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight));\n\n  const positive = features.filter(f => f.weight > 0);\n  const negative = features.filter(f => f.weight < 0);\n\n  const meta = {};\n  if (drivers.base_value !== undefined) meta.base_value = drivers.base_value;\n  if (drivers.contrib_sum !== undefined) meta.contrib_sum = drivers.contrib_sum;\n  if (drivers.logit_total !== undefined) meta.logit_total = drivers.logit_total;\n\n  return {\n    kind: 'shap_values',\n    units: 'logit',\n    positive,\n    negative,\n    meta\n  };\n}\n\nfunction normalizeLogisticContributions(drivers) {\n  const logitData = drivers.logistic_contributions || drivers;\n  const features = [];\n\n  if (typeof logitData === 'object') {\n    Object.entries(logitData).forEach(([feature, value]) => {\n      if (typeof value === 'number' && !['intercept', 'contrib_sum', 'logit_total'].includes(feature)) {\n        features.push({\n          label: feature,\n          weight: value\n        });\n      }\n    });\n  }\n\n  // Sort by absolute weight value\n  features.sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight));\n\n  const positive = features.filter(f => f.weight > 0);\n  const negative = features.filter(f => f.weight < 0);\n\n  const meta = {};\n  if (logitData.intercept !== undefined) meta.base_value = logitData.intercept;\n  if (logitData.contrib_sum !== undefined) meta.contrib_sum = logitData.contrib_sum;\n  if (logitData.logit_total !== undefined) meta.logit_total = logitData.logit_total;\n  if (drivers.contrib_sum !== undefined) meta.contrib_sum = drivers.contrib_sum;\n\n  return {\n    kind: 'logistic_contributions',\n    units: 'logit',\n    positive,\n    negative,\n    meta\n  };\n}\n\nfunction normalizeRawDrivers(drivers) {\n  const features = [];\n\n  Object.entries(drivers).forEach(([feature, value]) => {\n    if (typeof value === 'number') {\n      features.push({\n        label: feature,\n        weight: value\n      });\n    }\n  });\n\n  // Sort by absolute weight value\n  features.sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight));\n\n  const positive = features.filter(f => f.weight > 0);\n  const negative = features.filter(f => f.weight < 0);\n\n  return {\n    kind: 'raw_weights',\n    units: null,\n    positive,\n    negative,\n    meta: {}\n  };\n}\n\nfunction isRawDriversObject(obj) {\n  return Object.values(obj).every(value => typeof value === 'number');\n}","import { normalizeDrivers } from '../../logic/shap.js';\n\nexport function renderDriversSection(ich, lvo) {\n  if (!ich?.drivers && !lvo?.drivers) return '';\n  \n  let html = `\n    <div class=\"drivers-section\">\n      <h3>Prediction Drivers</h3>\n      <div class=\"drivers-grid\">\n  `;\n  \n  if (ich?.drivers) {\n    html += renderDriversPanel(ich.drivers, 'ICH', 'ich');\n  }\n  \n  if (lvo?.drivers && !lvo.notPossible) {\n    html += renderDriversPanel(lvo.drivers, 'LVO', 'lvo');\n  }\n  \n  html += `\n      </div>\n    </div>\n  `;\n  return html;\n}\n\nexport function renderDriversPanel(drivers, title, type) {\n  if (!drivers || Object.keys(drivers).length === 0) {\n    return `\n      <div class=\"drivers-panel\">\n        <h4>\n          <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\n          ${title} Risk Factors\n        </h4>\n        <p style=\"color: var(--text-secondary); font-style: italic;\">\n          Driver information not available from this prediction model.\n        </p>\n      </div>\n    `;\n  }\n\n  const driversViewModel = normalizeDrivers(drivers);\n  \n  if (driversViewModel.kind === 'unavailable') {\n    return `\n      <div class=\"drivers-panel\">\n        <h4>\n          <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\n          ${title} Risk Factors\n        </h4>\n        <p style=\"color: var(--text-secondary); font-style: italic;\">\n          Driver analysis not available for this prediction.\n        </p>\n      </div>\n    `;\n  }\n\n  let html = `\n    <div class=\"drivers-panel\">\n      <h4>\n        <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\n        ${title} Risk Factors\n      </h4>\n  `;\n\n  // Show positive drivers (increase risk)\n  if (driversViewModel.positive.length > 0) {\n    driversViewModel.positive.forEach(driver => {\n      const percentage = Math.abs(driver.weight * 100);\n      const width = Math.min(percentage * 2, 100); // Scale for visualization\n      html += `\n        <div class=\"driver-item\">\n          <span class=\"driver-label\">${driver.label}</span>\n          <div class=\"driver-bar-container\">\n            <div class=\"driver-bar positive\" style=\"width: ${width}%\">\n              <span class=\"driver-value\">+${percentage.toFixed(0)}%</span>\n            </div>\n          </div>\n        </div>\n      `;\n    });\n  }\n\n  // Show negative drivers (decrease risk)\n  if (driversViewModel.negative.length > 0) {\n    driversViewModel.negative.forEach(driver => {\n      const percentage = Math.abs(driver.weight * 100);\n      const width = Math.min(percentage * 2, 100); // Scale for visualization\n      html += `\n        <div class=\"driver-item\">\n          <span class=\"driver-label\">${driver.label}</span>\n          <div class=\"driver-bar-container\">\n            <div class=\"driver-bar negative\" style=\"width: ${width}%\">\n              <span class=\"driver-value\">-${percentage.toFixed(0)}%</span>\n            </div>\n          </div>\n        </div>\n      `;\n    });\n  }\n\n  // Show metadata if available\n  if (driversViewModel.meta && Object.keys(driversViewModel.meta).length > 0) {\n    html += `\n      <div style=\"margin-top: 15px; padding-top: 10px; border-top: 1px solid var(--border-color);\">\n        <small style=\"color: var(--text-secondary);\">\n    `;\n    \n    if (driversViewModel.meta.base_value !== undefined) {\n      html += `Base value: ${driversViewModel.meta.base_value.toFixed(2)} `;\n    }\n    if (driversViewModel.meta.contrib_sum !== undefined) {\n      html += `Contrib sum: ${driversViewModel.meta.contrib_sum.toFixed(2)} `;\n    }\n    if (driversViewModel.meta.logit_total !== undefined) {\n      html += `Logit total: ${driversViewModel.meta.logit_total.toFixed(2)}`;\n    }\n    \n    html += `\n        </small>\n      </div>\n    `;\n  }\n\n  html += `</div>`;\n  return html;\n}","// Stroke centers in Baden-Württemberg, Germany\n// Data includes comprehensive stroke centers and stroke units\n\nexport const strokeCenters = [\n  {\n    id: 'uniklinik-freiburg',\n    name: 'Universitätsklinikum Freiburg',\n    type: 'comprehensive', // comprehensive, primary, telemedicine\n    address: 'Hugstetter Str. 55, 79106 Freiburg im Breisgau',\n    coordinates: {\n      lat: 48.0025,\n      lng: 7.8347\n    },\n    phone: '+49 761 270-0',\n    emergency: '+49 761 270-34010',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'uniklinik-heidelberg',\n    name: 'Universitätsklinikum Heidelberg',\n    type: 'comprehensive',\n    address: 'Im Neuenheimer Feld 400, 69120 Heidelberg',\n    coordinates: {\n      lat: 49.4178,\n      lng: 8.6706\n    },\n    phone: '+49 6221 56-0',\n    emergency: '+49 6221 56-36643',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'uniklinik-tuebingen',\n    name: 'Universitätsklinikum Tübingen',\n    type: 'comprehensive',\n    address: 'Geissweg 3, 72076 Tübingen',\n    coordinates: {\n      lat: 48.5378,\n      lng: 9.0538\n    },\n    phone: '+49 7071 29-0',\n    emergency: '+49 7071 29-82211',\n    services: ['thrombectory', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'uniklinik-ulm',\n    name: 'Universitätsklinikum Ulm',\n    type: 'comprehensive',\n    address: 'Albert-Einstein-Allee 23, 89081 Ulm',\n    coordinates: {\n      lat: 48.4196,\n      lng: 9.9592\n    },\n    phone: '+49 731 500-0',\n    emergency: '+49 731 500-63001',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'klinikum-stuttgart',\n    name: 'Klinikum Stuttgart - Katharinenhospital',\n    type: 'comprehensive',\n    address: 'Kriegsbergstraße 60, 70174 Stuttgart',\n    coordinates: {\n      lat: 48.7784,\n      lng: 9.1682\n    },\n    phone: '+49 711 278-0',\n    emergency: '+49 711 278-32001',\n    services: ['thrombectomy', 'neurosurgery', 'icu'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'robert-bosch-stuttgart',\n    name: 'Robert-Bosch-Krankenhaus Stuttgart',\n    type: 'primary',\n    address: 'Auerbachstraße 110, 70376 Stuttgart',\n    coordinates: {\n      lat: 48.7447,\n      lng: 9.2294\n    },\n    phone: '+49 711 8101-0',\n    emergency: '+49 711 8101-3456',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'diakonie-stuttgart',\n    name: 'Diakonie-Klinikum Stuttgart',\n    type: 'primary',\n    address: 'Rosenbergstraße 38, 70176 Stuttgart',\n    coordinates: {\n      lat: 48.7861,\n      lng: 9.1736\n    },\n    phone: '+49 711 991-0',\n    emergency: '+49 711 991-2201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'rkh-ludwigsburg',\n    name: 'RKH Klinikum Ludwigsburg',\n    type: 'primary',\n    address: 'Posilipostraße 4, 71640 Ludwigsburg',\n    coordinates: {\n      lat: 48.8901,\n      lng: 9.1953\n    },\n    phone: '+49 7141 99-0',\n    emergency: '+49 7141 99-67201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'klinikum-karlsruhe',\n    name: 'Städtisches Klinikum Karlsruhe',\n    type: 'comprehensive',\n    address: 'Moltkestraße 90, 76133 Karlsruhe',\n    coordinates: {\n      lat: 49.0047,\n      lng: 8.3858\n    },\n    phone: '+49 721 974-0',\n    emergency: '+49 721 974-2301',\n    services: ['thrombectomy', 'neurosurgery', 'icu'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'vincentius-karlsruhe',\n    name: 'ViDia Kliniken Karlsruhe - St. Vincentius',\n    type: 'primary',\n    address: 'Südendstraße 32, 76135 Karlsruhe',\n    coordinates: {\n      lat: 48.9903,\n      lng: 8.3711\n    },\n    phone: '+49 721 8108-0',\n    emergency: '+49 721 8108-9201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'klinikum-mannheim',\n    name: 'Universitätsmedizin Mannheim',\n    type: 'comprehensive',\n    address: 'Theodor-Kutzer-Ufer 1-3, 68167 Mannheim',\n    coordinates: {\n      lat: 49.4828,\n      lng: 8.4664\n    },\n    phone: '+49 621 383-0',\n    emergency: '+49 621 383-2251',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'theresienkrankenhaus-mannheim',\n    name: 'Theresienkrankenhaus Mannheim',\n    type: 'primary',\n    address: 'Bassermannstraße 1, 68165 Mannheim',\n    coordinates: {\n      lat: 49.4904,\n      lng: 8.4594\n    },\n    phone: '+49 621 424-0',\n    emergency: '+49 621 424-2101',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'klinikum-pforzheim',\n    name: 'Helios Klinikum Pforzheim',\n    type: 'primary',\n    address: 'Kanzlerstraße 2-6, 75175 Pforzheim',\n    coordinates: {\n      lat: 48.8833,\n      lng: 8.6936\n    },\n    phone: '+49 7231 969-0',\n    emergency: '+49 7231 969-2301',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'zollernalb-klinikum',\n    name: 'Zollernalb Klinikum Albstadt',\n    type: 'primary',\n    address: 'Zollernring 10-14, 72488 Sigmaringen',\n    coordinates: {\n      lat: 48.0878,\n      lng: 9.2233\n    },\n    phone: '+49 7571 100-0',\n    emergency: '+49 7571 100-1501',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'klinikum-konstanz',\n    name: 'Gesundheitsverbund Landkreis Konstanz',\n    type: 'primary',\n    address: 'Mainaustraße 14, 78464 Konstanz',\n    coordinates: {\n      lat: 47.6779,\n      lng: 9.1732\n    },\n    phone: '+49 7531 801-0',\n    emergency: '+49 7531 801-2301',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'klinikum-friedrichshafen',\n    name: 'Klinikum Friedrichshafen',\n    type: 'primary',\n    address: 'Röntgenstraße 2, 88048 Friedrichshafen',\n    coordinates: {\n      lat: 47.6587,\n      lng: 9.4685\n    },\n    phone: '+49 7541 96-0',\n    emergency: '+49 7541 96-2401',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'oberschwabenklinik-ravensburg',\n    name: 'Oberschwabenklinik Ravensburg',\n    type: 'primary',\n    address: 'Elisabethenstraße 17, 88212 Ravensburg',\n    coordinates: {\n      lat: 47.7815,\n      lng: 9.6078\n    },\n    phone: '+49 751 87-0',\n    emergency: '+49 751 87-2201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'alb-donau-klinikum',\n    name: 'Alb Donau Klinikum Ehingen',\n    type: 'primary',\n    address: 'Schwörhausgasse 7, 89584 Ehingen',\n    coordinates: {\n      lat: 48.2833,\n      lng: 9.7262\n    },\n    phone: '+49 7391 789-0',\n    emergency: '+49 7391 789-1801',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'ortenau-klinikum-offenburg',\n    name: 'Ortenau Klinikum Offenburg',\n    type: 'primary',\n    address: 'Ebertplatz 12, 77654 Offenburg',\n    coordinates: {\n      lat: 48.4706,\n      lng: 7.9444\n    },\n    phone: '+49 781 472-0',\n    emergency: '+49 781 472-2001',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  },\n  {\n    id: 'klinikum-baden-baden',\n    name: 'Klinikum Mittelbaden Baden-Baden',\n    type: 'primary',\n    address: 'Balger Str. 50, 76532 Baden-Baden',\n    coordinates: {\n      lat: 48.7606,\n      lng: 8.2275\n    },\n    phone: '+49 7221 91-0',\n    emergency: '+49 7221 91-1701',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-01-01'\n  }\n];\n\n// Helper functions for stroke center data\nexport function getStrokeCentersByType(type) {\n  return strokeCenters.filter(center => center.type === type);\n}\n\nexport function getComprehensiveStrokeCenters() {\n  return getStrokeCentersByType('comprehensive');\n}\n\nexport function getPrimaryStrokeCenters() {\n  return getStrokeCentersByType('primary');\n}\n\nexport function getStrokeCenterById(id) {\n  return strokeCenters.find(center => center.id === id);\n}\n\n// Calculate distance between two coordinates using Haversine formula\nexport function calculateDistance(lat1, lng1, lat2, lng2) {\n  const R = 6371; // Earth's radius in kilometers\n  const dLat = toRadians(lat2 - lat1);\n  const dLng = toRadians(lng2 - lng1);\n  const a = \n    Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) * \n    Math.sin(dLng/2) * Math.sin(dLng/2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  return R * c;\n}\n\nfunction toRadians(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\n// Find nearest stroke centers to given coordinates\nexport function findNearestStrokeCenters(lat, lng, maxResults = 5, maxDistance = 100) {\n  const centersWithDistance = strokeCenters.map(center => ({\n    ...center,\n    distance: calculateDistance(lat, lng, center.coordinates.lat, center.coordinates.lng)\n  }));\n\n  return centersWithDistance\n    .filter(center => center.distance <= maxDistance)\n    .sort((a, b) => a.distance - b.distance)\n    .slice(0, maxResults);\n}\n\n// Get stroke center recommendations based on patient condition\nexport function getRecommendedStrokeCenters(lat, lng, conditionType = 'stroke') {\n  const nearestCenters = findNearestStrokeCenters(lat, lng, 10);\n  \n  if (conditionType === 'lvo' || conditionType === 'thrombectomy') {\n    // For LVO cases, prioritize comprehensive stroke centers\n    const comprehensive = nearestCenters.filter(center => \n      center.type === 'comprehensive' && \n      center.services.includes('thrombectomy')\n    );\n    \n    const primary = nearestCenters.filter(center => center.type === 'primary');\n    \n    return {\n      recommended: comprehensive.slice(0, 3),\n      alternative: primary.slice(0, 2)\n    };\n  }\n  \n  // For general stroke cases, return nearest centers regardless of type\n  return {\n    recommended: nearestCenters.slice(0, 5),\n    alternative: []\n  };\n}","// GPS-based stroke center map component\nimport { findNearestStrokeCenters, getRecommendedStrokeCenters } from '../../data/stroke-centers.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderStrokeCenterMap(results) {\n  return `\n    <div class=\"stroke-center-section\">\n      <h3>🏥 ${t('nearestCentersTitle')}</h3>\n      <div id=\"locationContainer\">\n        <div class=\"location-controls\">\n          <button type=\"button\" id=\"useGpsButton\" class=\"secondary\">\n            📍 ${t('useCurrentLocation')}\n          </button>\n          <div class=\"location-manual\" style=\"display: none;\">\n            <input type=\"text\" id=\"locationInput\" placeholder=\"${t('enterLocationPlaceholder')}\" />\n            <button type=\"button\" id=\"searchLocationButton\" class=\"secondary\">${t('search')}</button>\n          </div>\n          <button type=\"button\" id=\"manualLocationButton\" class=\"secondary\">\n            ✏️ ${t('enterManually')}\n          </button>\n        </div>\n        <div id=\"strokeCenterResults\" class=\"stroke-center-results\"></div>\n      </div>\n    </div>\n  `;\n}\n\nexport function initializeStrokeCenterMap(results) {\n  const useGpsButton = document.getElementById('useGpsButton');\n  const manualLocationButton = document.getElementById('manualLocationButton');\n  const locationManual = document.querySelector('.location-manual');\n  const locationInput = document.getElementById('locationInput');\n  const searchLocationButton = document.getElementById('searchLocationButton');\n  const resultsContainer = document.getElementById('strokeCenterResults');\n\n  if (useGpsButton) {\n    useGpsButton.addEventListener('click', () => {\n      requestUserLocation(results, resultsContainer);\n    });\n  }\n\n  if (manualLocationButton) {\n    manualLocationButton.addEventListener('click', () => {\n      locationManual.style.display = locationManual.style.display === 'none' ? 'block' : 'none';\n    });\n  }\n\n  if (searchLocationButton) {\n    searchLocationButton.addEventListener('click', () => {\n      const location = locationInput.value.trim();\n      if (location) {\n        geocodeLocation(location, results, resultsContainer);\n      }\n    });\n  }\n\n  if (locationInput) {\n    locationInput.addEventListener('keypress', (e) => {\n      if (e.key === 'Enter') {\n        const location = locationInput.value.trim();\n        if (location) {\n          geocodeLocation(location, results, resultsContainer);\n        }\n      }\n    });\n  }\n}\n\nfunction requestUserLocation(results, resultsContainer) {\n  if (!navigator.geolocation) {\n    showLocationError(t('geolocationNotSupported'), resultsContainer);\n    return;\n  }\n\n  resultsContainer.innerHTML = `<div class=\"loading\">${t('gettingLocation')}...</div>`;\n\n  navigator.geolocation.getCurrentPosition(\n    (position) => {\n      const { latitude, longitude } = position.coords;\n      showNearestCenters(latitude, longitude, results, resultsContainer);\n    },\n    (error) => {\n      let errorMessage = t('locationError');\n      switch (error.code) {\n        case error.PERMISSION_DENIED:\n          errorMessage = t('locationPermissionDenied');\n          break;\n        case error.POSITION_UNAVAILABLE:\n          errorMessage = t('locationUnavailable');\n          break;\n        case error.TIMEOUT:\n          errorMessage = t('locationTimeout');\n          break;\n      }\n      showLocationError(errorMessage, resultsContainer);\n    },\n    {\n      enableHighAccuracy: true,\n      timeout: 10000,\n      maximumAge: 300000 // 5 minutes\n    }\n  );\n}\n\nasync function geocodeLocation(locationString, results, resultsContainer) {\n  resultsContainer.innerHTML = `<div class=\"loading\">${t('searchingLocation')}...</div>`;\n  \n  // Simple geocoding using a free service (in a real app, you'd use a proper geocoding service)\n  // For now, we'll show a placeholder and allow manual coordinate entry\n  showLocationError(t('geocodingNotImplemented'), resultsContainer);\n}\n\nfunction showNearestCenters(lat, lng, results, resultsContainer) {\n  const conditionType = determineConditionType(results);\n  const recommendations = getRecommendedStrokeCenters(lat, lng, conditionType);\n  \n  const html = `\n    <div class=\"location-info\">\n      <p><strong>${t('yourLocation')}:</strong> ${lat.toFixed(4)}, ${lng.toFixed(4)}</p>\n    </div>\n    \n    <div class=\"recommended-centers\">\n      <h4>${t('recommendedCenters')}</h4>\n      ${renderStrokeCenterList(recommendations.recommended, true)}\n    </div>\n    \n    ${recommendations.alternative.length > 0 ? `\n      <div class=\"alternative-centers\">\n        <h4>${t('alternativeCenters')}</h4>\n        ${renderStrokeCenterList(recommendations.alternative, false)}\n      </div>\n    ` : ''}\n    \n    <div class=\"distance-note\">\n      <small>${t('distanceNote')}</small>\n    </div>\n  `;\n  \n  resultsContainer.innerHTML = html;\n}\n\nfunction renderStrokeCenterList(centers, isRecommended = false) {\n  if (!centers || centers.length === 0) {\n    return `<p>${t('noCentersFound')}</p>`;\n  }\n\n  return centers.map(center => `\n    <div class=\"stroke-center-card ${isRecommended ? 'recommended' : 'alternative'}\">\n      <div class=\"center-header\">\n        <h5>${center.name}</h5>\n        <span class=\"center-type ${center.type}\">${t(center.type + 'Center')}</span>\n        <span class=\"distance\">${center.distance.toFixed(1)} km</span>\n      </div>\n      \n      <div class=\"center-details\">\n        <p class=\"address\">📍 ${center.address}</p>\n        <p class=\"phone\">📞 ${t('emergency')}: ${center.emergency}</p>\n        \n        <div class=\"services\">\n          ${center.services.map(service => `\n            <span class=\"service-badge\">${t(service)}</span>\n          `).join('')}\n        </div>\n        \n        ${center.certified ? `\n          <div class=\"certification\">\n            ✅ ${t('certified')}: ${center.certification}\n          </div>\n        ` : ''}\n      </div>\n      \n      <div class=\"center-actions\">\n        <button class=\"call-button\" onclick=\"window.open('tel:${center.emergency}')\">\n          📞 ${t('call')}\n        </button>\n        <button class=\"directions-button\" onclick=\"window.open('https://maps.google.com/maps?daddr=${center.coordinates.lat},${center.coordinates.lng}', '_blank')\">\n          🧭 ${t('directions')}\n        </button>\n      </div>\n    </div>\n  `).join('');\n}\n\nfunction determineConditionType(results) {\n  if (!results) return 'stroke';\n  \n  // If LVO probability is high, recommend comprehensive centers with thrombectomy\n  if (results.lvo && results.lvo.probability > 0.5) {\n    return 'lvo';\n  }\n  \n  // If ICH probability is high, recommend comprehensive centers with neurosurgery\n  if (results.ich && results.ich.probability > 0.6) {\n    return 'ich';\n  }\n  \n  return 'stroke';\n}\n\nfunction showLocationError(message, container) {\n  container.innerHTML = `\n    <div class=\"location-error\">\n      <p>⚠️ ${message}</p>\n      <p><small>${t('tryManualEntry')}</small></p>\n    </div>\n  `;\n}","import { CRITICAL_THRESHOLDS } from '../config.js';\n\nexport function getRiskLevel(probabilityPercent, type) {\n  const p = Number(probabilityPercent);\n  const thresholds = CRITICAL_THRESHOLDS[type];\n  \n  if (p >= thresholds.critical) {\n    return '🔴 CRITICAL RISK';\n  } else if (p >= thresholds.high) {\n    return '🟠 HIGH RISK';\n  } else if (p >= 30) {\n    return '🟡 MODERATE RISK';\n  } else {\n    return '🟢 LOW RISK';\n  }\n}\n\nexport function formatTime(milliseconds) {\n  const seconds = Math.floor(milliseconds / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n}","import { renderProgressIndicator } from '../components/progress.js';\nimport { renderCriticalAlert } from '../components/alerts.js';\nimport { renderDriversSection } from '../components/drivers.js';\nimport { renderStrokeCenterMap } from '../components/stroke-center-map.js';\nimport { getRiskLevel, formatTime } from '../../logic/formatters.js';\nimport { CRITICAL_THRESHOLDS } from '../../config.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderResults(results, startTime) {\n  const { ich, lvo } = results;\n  let ichHtml = '', lvoHtml = '';\n\n  if (ich) {\n    const ichPercent = Math.round((ich.probability || 0) * 100);\n    const isCritical = ichPercent > CRITICAL_THRESHOLDS.ich.critical;\n\n    ichHtml = `\n      <div class=\"result-card ${isCritical ? 'critical' : 'ich'}\">\n        <h3> 🧠 ${t('ichProbability')} <small>(${ich.module} Module)</small> </h3>\n        <div class=\"probability-display\">${ichPercent}%</div>\n        <div class=\"probability-meter\">\n          <div class=\"probability-fill\" style=\"width: ${ichPercent}%\"></div>\n          <div class=\"probability-marker\" style=\"left: ${ichPercent}%\">${ichPercent}%</div>\n        </div>\n        <p><strong>${t('riskLevel')}:</strong> ${getRiskLevel(ichPercent, 'ich')}</p>\n      </div>\n    `;\n  }\n\n  if (lvo) {\n    if (lvo.notPossible) {\n      lvoHtml = `\n        <div class=\"result-card info\">\n          <h3>🔍 ${t('lvoProbability')}</h3>\n          <p>LVO assessment not possible with limited data.</p>\n          <p>A full neurological examination is required for LVO screening.</p>\n        </div>\n      `;\n    } else {\n      const lvoPercent = Math.round((lvo.probability || 0) * 100);\n      const isCritical = lvoPercent > CRITICAL_THRESHOLDS.lvo.critical;\n\n      lvoHtml = `\n        <div class=\"result-card ${isCritical ? 'critical' : 'lvo'}\">\n          <h3> 🩸 ${t('lvoProbability')} <small>(${lvo.module} Module)</small> </h3>\n          <div class=\"probability-display\">${lvoPercent}%</div>\n          <div class=\"probability-meter\">\n            <div class=\"probability-fill\" style=\"width: ${lvoPercent}%\"></div>\n            <div class=\"probability-marker\" style=\"left: ${lvoPercent}%\">${lvoPercent}%</div>\n          </div>\n          <p><strong>${t('riskLevel')}:</strong> ${getRiskLevel(lvoPercent, 'lvo')}</p>\n        </div>\n      `;\n    }\n  }\n\n  const criticalAlert = ich && ich.probability > 0.6 ? renderCriticalAlert() : '';\n  const driversHtml = renderDriversSection(ich, lvo);\n  const strokeCenterHtml = renderStrokeCenterMap(results);\n\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(3)}\n      <h2>${t('resultsTitle')}</h2>\n      ${criticalAlert}\n      <div style=\"display: flex; flex-direction: column; gap: 20px;\">\n        ${ichHtml}\n        ${lvoHtml}\n      </div>\n      ${driversHtml}\n      ${strokeCenterHtml}\n      <button type=\"button\" class=\"primary\" id=\"printResults\"> 📄 ${t('printResults')} </button>\n      <button type=\"button\" class=\"secondary\" data-action=\"reset\"> ${t('newAssessment')} </button>\n      <div class=\"disclaimer\">\n        <strong>⚠️ ${t('importantNote')}:</strong> ${t('importantText')} Results generated at ${new Date().toLocaleTimeString()}.\n      </div>\n    </div>\n  `;\n}","import { VALIDATION_RULES } from '../config.js';\n\nexport function validateInput(name, value, rules) {\n  const errors = [];\n  \n  if (rules.required && !value && value !== 0) {\n    errors.push('This field is required');\n  }\n  \n  if (rules.min !== undefined && value !== '' && !isNaN(value) && parseFloat(value) < rules.min) {\n    errors.push(`Value must be at least ${rules.min}`);\n  }\n  \n  if (rules.max !== undefined && value !== '' && !isNaN(value) && parseFloat(value) > rules.max) {\n    errors.push(`Value must be at most ${rules.max}`);\n  }\n  \n  if (rules.pattern && !rules.pattern.test(value)) {\n    errors.push('Invalid format');\n  }\n  \n  return errors;\n}\n\nexport function validateForm(form) {\n  let isValid = true;\n  const validationErrors = {};\n\n  Object.entries(VALIDATION_RULES).forEach(([name, rules]) => {\n    const input = form.elements[name];\n    if (input) {\n      const errors = validateInput(name, input.value, rules);\n      if (errors.length > 0) {\n        validationErrors[name] = errors;\n        isValid = false;\n      }\n    }\n  });\n  \n  return { isValid, validationErrors };\n}\n\nexport function showValidationErrors(container, validationErrors) {\n  Object.entries(validationErrors).forEach(([name, errors]) => {\n    const input = container.querySelector(`[name=\"${name}\"]`);\n    if (input) {\n      const group = input.closest('.input-group');\n      if (group) {\n        group.classList.add('error');\n        // Remove existing error messages\n        group.querySelectorAll('.error-message').forEach(el => el.remove());\n        // Add new error message\n        const errorDiv = document.createElement('div');\n        errorDiv.className = 'error-message';\n        errorDiv.innerHTML = `<span class=\"error-icon\">⚠️</span> ${errors[0]}`;\n        group.appendChild(errorDiv);\n      }\n    }\n  });\n}\n\nexport function clearValidationErrors(container) {\n  container.querySelectorAll('.input-group.error').forEach(group => {\n    group.classList.remove('error');\n    group.querySelectorAll('.error-message').forEach(el => el.remove());\n  });\n}","import { API_URLS, APP_CONFIG } from '../config.js';\n\nclass APIError extends Error {\n  constructor(message, status, url) {\n    super(message);\n    this.name = 'APIError';\n    this.status = status;\n    this.url = url;\n  }\n}\n\nfunction normalizeBooleans(payload) {\n  const normalized = { ...payload };\n  \n  Object.keys(normalized).forEach(key => {\n    const value = normalized[key];\n    if (typeof value === 'boolean' || value === 'on' || value === 'true' || value === 'false') {\n      normalized[key] = value === true || value === 'on' || value === 'true' ? 1 : 0;\n    }\n  });\n  \n  return normalized;\n}\n\nfunction safeParseFloat(value, defaultValue = 0) {\n  const parsed = parseFloat(value);\n  return isNaN(parsed) ? defaultValue : parsed;\n}\n\nasync function fetchJSON(url, payload) {\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), APP_CONFIG.requestTimeout);\n  \n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify(payload),\n      signal: controller.signal,\n      mode: 'cors'\n    });\n    \n    clearTimeout(timeoutId);\n    \n    if (!response.ok) {\n      let errorMessage = `HTTP ${response.status}`;\n      try {\n        const errorData = await response.json();\n        errorMessage = errorData.error || errorData.message || errorMessage;\n      } catch {\n        errorMessage = `${errorMessage}: ${response.statusText}`;\n      }\n      throw new APIError(errorMessage, response.status, url);\n    }\n    \n    const data = await response.json();\n    return data;\n    \n  } catch (error) {\n    clearTimeout(timeoutId);\n    \n    if (error.name === 'AbortError') {\n      throw new APIError('Request timeout - please try again', 408, url);\n    }\n    \n    if (error instanceof APIError) {\n      throw error;\n    }\n    \n    // Network or other errors\n    throw new APIError(\n      'Network error - please check your connection and try again',\n      0,\n      url\n    );\n  }\n}\n\nexport async function predictComaIch(payload) {\n  const normalizedPayload = normalizeBooleans(payload);\n  \n  // Debug log the payload being sent\n  console.log('Coma ICH API Payload:', normalizedPayload);\n  \n  try {\n    const response = await fetchJSON(API_URLS.COMA_ICH, normalizedPayload);\n    \n    // Debug log the API response\n    console.log('Coma ICH API Response:', response);\n    \n    // Normalize response format for consistency\n    return {\n      probability: safeParseFloat(response.probability || response.ich_probability, 0),\n      drivers: response.drivers || null,\n      confidence: safeParseFloat(response.confidence, 0.75),\n      module: 'Coma'\n    };\n  } catch (error) {\n    console.error('Coma ICH prediction failed:', error);\n    throw new APIError(\n      `Failed to get ICH prediction: ${error.message}`,\n      error.status,\n      API_URLS.COMA_ICH\n    );\n  }\n}\n\nexport async function predictLimitedIch(payload) {\n  // Ensure all required fields are present for the Limited Data API\n  const fullPayload = {\n    age_years: payload.age_years,\n    systolic_bp: payload.systolic_bp,\n    diastolic_bp: payload.diastolic_bp,\n    gfap_value: payload.gfap_value,\n    // Ensure checkbox fields are present (default to 0 if missing/unchecked)\n    vigilanzminderung: payload.vigilanzminderung || 0\n  };\n  \n  const normalizedPayload = normalizeBooleans(fullPayload);\n  \n  // Debug log the payload being sent\n  console.log('Limited Data ICH API Payload:', normalizedPayload);\n  \n  try {\n    const response = await fetchJSON(API_URLS.LDM_ICH, normalizedPayload);\n    \n    // Debug log the API response\n    console.log('Limited Data ICH API Response:', response);\n    \n    // Normalize response format for consistency\n    return {\n      probability: safeParseFloat(response.probability || response.ich_probability, 0),\n      drivers: response.drivers || null,\n      confidence: safeParseFloat(response.confidence, 0.65),\n      module: 'Limited Data'\n    };\n  } catch (error) {\n    console.error('Limited Data ICH prediction failed:', error);\n    throw new APIError(\n      `Failed to get ICH prediction: ${error.message}`,\n      error.status,\n      API_URLS.LDM_ICH\n    );\n  }\n}\n\nexport async function predictFullStroke(payload) {\n  // Ensure all required fields are present for the Full Stroke API\n  const fullPayload = {\n    age_years: payload.age_years,\n    systolic_bp: payload.systolic_bp,\n    diastolic_bp: payload.diastolic_bp,\n    gfap_value: payload.gfap_value,\n    fast_ed_score: payload.fast_ed_score,\n    // Ensure all checkbox fields are present (default to 0 if missing)\n    headache: payload.headache || 0,\n    vigilanzminderung: payload.vigilanzminderung || 0,\n    armparese: payload.armparese || 0,\n    beinparese: payload.beinparese || 0,\n    eye_deviation: payload.eye_deviation || 0,\n    atrial_fibrillation: payload.atrial_fibrillation || 0,\n    anticoagulated_noak: payload.anticoagulated_noak || 0,\n    antiplatelets: payload.antiplatelets || 0\n  };\n  \n  const normalizedPayload = normalizeBooleans(fullPayload);\n  \n  // Debug log the payload being sent\n  console.log('Full Stroke API Payload:', normalizedPayload);\n  \n  try {\n    const response = await fetchJSON(API_URLS.FULL_STROKE, normalizedPayload);\n    \n    // Debug log the API response\n    console.log('Full Stroke API Response:', response);\n    console.log('Available keys in response:', Object.keys(response));\n    console.log('Response type:', typeof response);\n    \n    // Try to identify probability values\n    Object.keys(response).forEach(key => {\n      const value = response[key];\n      if (typeof value === 'number' && value >= 0 && value <= 1) {\n        console.log(`Potential probability field: ${key} = ${value}`);\n      }\n    });\n    \n    // Extract ICH and LVO predictions with flexible field name handling\n    const ichResult = {\n      probability: safeParseFloat(\n        response.ich_probability || \n        response.ich?.probability || \n        response.ICH_probability || \n        response.ich_prob || \n        response.probability?.ich ||\n        response.results?.ich_probability, 0),\n      drivers: response.ich_drivers || response.ich?.drivers || response.drivers?.ich || null,\n      confidence: safeParseFloat(response.ich_confidence || response.ich?.confidence, 0.85),\n      module: 'Full Stroke'\n    };\n    \n    const lvoResult = {\n      probability: safeParseFloat(\n        response.lvo_probability || \n        response.lvo?.probability || \n        response.LVO_probability || \n        response.lvo_prob ||\n        response.probability?.lvo ||\n        response.results?.lvo_probability, 0),\n      drivers: response.lvo_drivers || response.lvo?.drivers || response.drivers?.lvo || null,\n      confidence: safeParseFloat(response.lvo_confidence || response.lvo?.confidence, 0.85),\n      module: 'Full Stroke'\n    };\n    \n    return {\n      ich: ichResult,\n      lvo: lvoResult\n    };\n  } catch (error) {\n    console.error('Full Stroke prediction failed:', error);\n    throw new APIError(\n      `Failed to get stroke predictions: ${error.message}`,\n      error.status,\n      API_URLS.FULL_STROKE\n    );\n  }\n}\n\n// Export the error class for use in other modules\nexport { APIError };","import { store } from '../state/store.js';\nimport { validateForm, showValidationErrors } from './validate.js';\nimport { predictComaIch, predictLimitedIch, predictFullStroke, APIError } from '../api/client.js';\nimport { t } from '../localization/i18n.js';\n\nexport function handleTriage1(isComatose) {\n  store.logEvent('triage1_answer', { comatose: isComatose });\n  const nextScreen = isComatose ? 'coma' : 'triage2';\n  navigate(nextScreen);\n}\n\nexport function handleTriage2(isExaminable) {\n  store.logEvent('triage2_answer', { examinable: isExaminable });\n  const nextScreen = isExaminable ? 'full' : 'limited';\n  navigate(nextScreen);\n}\n\nexport function navigate(screen) {\n  store.logEvent('navigate', { \n    from: store.getState().currentScreen, \n    to: screen \n  });\n  store.navigate(screen);\n  window.scrollTo(0, 0);\n}\n\nexport function reset() {\n  if (store.hasUnsavedData()) {\n    if (!confirm('Are you sure you want to start over? All entered data will be lost.')) {\n      return;\n    }\n  }\n  store.logEvent('reset');\n  store.reset();\n}\n\nexport async function handleSubmit(e, container) {\n  e.preventDefault();\n  const form = e.target;\n  const module = form.dataset.module;\n\n  // Validate form\n  const validation = validateForm(form);\n  if (!validation.isValid) {\n    showValidationErrors(container, validation.validationErrors);\n    return;\n  }\n\n  // Collect inputs\n  const formData = new FormData(form);\n  const inputs = {};\n  formData.forEach((value, key) => {\n    const element = form.elements[key];\n    if (element && element.type === 'checkbox') {\n      inputs[key] = element.checked;\n    } else {\n      const n = parseFloat(value);\n      inputs[key] = isNaN(n) ? value : n;\n    }\n  });\n\n  // Store form data\n  store.setFormData(module, inputs);\n\n  // Show loading state\n  const button = form.querySelector('button[type=submit]');\n  const originalContent = button ? button.innerHTML : '';\n  if (button) {\n    button.disabled = true;\n    button.innerHTML = `<span class=\"loading-spinner\"></span> ${t('analyzing')}`;\n  }\n\n  try {\n    // Run models based on module\n    let results;\n    \n    switch (module) {\n      case 'coma':\n        const comaResult = await predictComaIch(inputs);\n        results = {\n          ich: comaResult,\n          lvo: null\n        };\n        break;\n        \n      case 'limited':\n        const limitedResult = await predictLimitedIch(inputs);\n        results = {\n          ich: limitedResult,\n          lvo: { notPossible: true }\n        };\n        break;\n        \n      case 'full':\n        results = await predictFullStroke(inputs);\n        break;\n        \n      default:\n        throw new Error('Unknown module: ' + module);\n    }\n\n    store.setResults(results);\n    store.logEvent('models_complete', { module, results });\n    navigate('results');\n    \n  } catch (error) {\n    console.error('Error running models:', error);\n    \n    let errorMessage = 'An error occurred during analysis. Please try again.';\n    if (error instanceof APIError) {\n      errorMessage = error.message;\n    }\n    \n    showError(container, errorMessage);\n    \n    if (button) {\n      button.disabled = false;\n      button.innerHTML = originalContent;\n    }\n  }\n}\n\nfunction showError(container, message) {\n  // Remove existing error alerts\n  container.querySelectorAll('.critical-alert').forEach(alert => {\n    if (alert.querySelector('h4')?.textContent?.includes('Error')) {\n      alert.remove();\n    }\n  });\n\n  const alert = document.createElement('div');\n  alert.className = 'critical-alert';\n  alert.innerHTML = `<h4><span class=\"alert-icon\">⚠️</span> Error</h4><p>${message}</p>`;\n  \n  const containerDiv = container.querySelector('.container');\n  if (containerDiv) {\n    containerDiv.prepend(alert);\n  } else {\n    container.prepend(alert);\n  }\n  \n  setTimeout(() => alert.remove(), 10000);\n}","/**\n * Accessibility utilities for the Stroke Triage Assistant\n */\n\nexport function announceScreenChange(screen) {\n  const announcement = document.createElement('div');\n  announcement.className = 'sr-only';\n  announcement.setAttribute('role', 'status');\n  announcement.setAttribute('aria-live', 'polite');\n  \n  const screenNames = {\n    'triage1': 'Coma assessment',\n    'triage2': 'Examination capability assessment',\n    'coma': 'Coma module',\n    'limited': 'Limited data module',\n    'full': 'Full stroke assessment',\n    'results': 'Assessment results'\n  };\n  \n  announcement.textContent = `Navigated to ${screenNames[screen] || screen}`;\n  document.body.appendChild(announcement);\n  \n  setTimeout(() => announcement.remove(), 1000);\n}\n\nexport function setPageTitle(screen) {\n  const titles = {\n    'triage1': 'Initial Assessment - Stroke Triage Assistant',\n    'triage2': 'Examination Capability - Stroke Triage Assistant',\n    'coma': 'Coma Module - Stroke Triage Assistant',\n    'limited': 'Limited Data Module - Stroke Triage Assistant',\n    'full': 'Full Stroke Module - Stroke Triage Assistant',\n    'results': 'Assessment Results - Stroke Triage Assistant'\n  };\n  \n  document.title = titles[screen] || 'Stroke Triage Assistant';\n}\n\nexport function focusMainHeading() {\n  // Focus on the main heading for screen readers\n  setTimeout(() => {\n    const heading = document.querySelector('h2');\n    if (heading) {\n      heading.setAttribute('tabindex', '-1');\n      heading.focus();\n      // Remove tabindex after focus for proper tab order\n      setTimeout(() => heading.removeAttribute('tabindex'), 100);\n    }\n  }, 100);\n}","import { store } from '../state/store.js';\nimport { renderTriage1 } from './screens/triage1.js';\nimport { renderTriage2 } from './screens/triage2.js';\nimport { renderComa } from './screens/coma.js';\nimport { renderLimited } from './screens/limited.js';\nimport { renderFull } from './screens/full.js';\nimport { renderResults } from './screens/results.js';\nimport { handleTriage1, handleTriage2, handleSubmit, reset } from '../logic/handlers.js';\nimport { clearValidationErrors } from '../logic/validate.js';\nimport { announceScreenChange, setPageTitle, focusMainHeading } from './a11y.js';\nimport { initializeStrokeCenterMap } from './components/stroke-center-map.js';\n\nexport function render(container) {\n  const state = store.getState();\n  const { currentScreen, results, startTime } = state;\n\n  // Clear container\n  container.innerHTML = '';\n\n  // Render the appropriate screen\n  let html = '';\n  switch (currentScreen) {\n    case 'triage1':\n      html = renderTriage1();\n      break;\n    case 'triage2':\n      html = renderTriage2();\n      break;\n    case 'coma':\n      html = renderComa();\n      break;\n    case 'limited':\n      html = renderLimited();\n      break;\n    case 'full':\n      html = renderFull();\n      break;\n    case 'results':\n      html = renderResults(results, startTime);\n      break;\n    default:\n      html = renderTriage1();\n  }\n\n  container.innerHTML = html;\n\n  // Restore form data if available\n  const form = container.querySelector('form[data-module]');\n  if (form) {\n    const module = form.dataset.module;\n    restoreFormData(form, module);\n  }\n\n  // Attach event listeners\n  attachEvents(container);\n\n  // Initialize stroke center map if on results screen\n  if (currentScreen === 'results' && results) {\n    setTimeout(() => {\n      initializeStrokeCenterMap(results);\n    }, 100);\n  }\n\n  // Accessibility updates\n  announceScreenChange(currentScreen);\n  setPageTitle(currentScreen);\n  focusMainHeading();\n}\n\nfunction restoreFormData(form, module) {\n  const formData = store.getFormData(module);\n  if (!formData || Object.keys(formData).length === 0) return;\n\n  Object.entries(formData).forEach(([key, value]) => {\n    const input = form.elements[key];\n    if (input) {\n      if (input.type === 'checkbox') {\n        input.checked = value === true || value === 'on' || value === 'true';\n      } else {\n        input.value = value;\n      }\n    }\n  });\n}\n\nfunction attachEvents(container) {\n  // Clear any existing validation errors when inputs change\n  container.querySelectorAll('input[type=\"number\"]').forEach(input => {\n    input.addEventListener('blur', () => {\n      clearValidationErrors(container);\n    });\n  });\n\n  // Triage button handlers\n  container.querySelectorAll('[data-action]').forEach(button => {\n    button.addEventListener('click', (e) => {\n      const { action, value } = e.currentTarget.dataset;\n      const boolVal = value === 'true';\n      \n      switch (action) {\n        case 'triage1':\n          handleTriage1(boolVal);\n          break;\n        case 'triage2':\n          handleTriage2(boolVal);\n          break;\n        case 'reset':\n          reset();\n          break;\n      }\n    });\n  });\n\n  // Form submission handlers\n  container.querySelectorAll('form[data-module]').forEach(form => {\n    form.addEventListener('submit', (e) => {\n      handleSubmit(e, container);\n    });\n  });\n\n  // Print button handler\n  const printButton = container.querySelector('#printResults');\n  if (printButton) {\n    printButton.addEventListener('click', () => window.print());\n  }\n}","import { store } from './state/store.js';\nimport { render } from './ui/render.js';\nimport { APP_CONFIG } from './config.js';\nimport { i18n, t } from './localization/i18n.js';\n\nclass App {\n  constructor() {\n    this.container = null;\n    this.unsubscribe = null;\n  }\n\n  async init() {\n    // Wait for DOM to be ready\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', () => this.init());\n      return;\n    }\n\n    this.container = document.getElementById('appContainer');\n    if (!this.container) {\n      console.error('App container not found');\n      return;\n    }\n\n    // Subscribe to store changes\n    this.unsubscribe = store.subscribe(() => {\n      render(this.container);\n    });\n\n    // Subscribe to language changes\n    window.addEventListener('languageChanged', () => {\n      this.updateUILanguage();\n      render(this.container);\n    });\n\n    // Setup global event listeners\n    this.setupGlobalEventListeners();\n\n    // Initialize theme\n    this.initializeTheme();\n    \n    // Initialize language\n    this.updateUILanguage();\n\n    // Start auto-save\n    this.startAutoSave();\n\n    // Setup session timeout\n    this.setupSessionTimeout();\n\n    // Set current year in footer\n    this.setCurrentYear();\n\n    // Initial render\n    render(this.container);\n\n    console.log('Stroke Triage Assistant initialized');\n  }\n\n  setupGlobalEventListeners() {\n    // Language toggle\n    const languageToggle = document.getElementById('languageToggle');\n    if (languageToggle) {\n      languageToggle.addEventListener('click', () => this.toggleLanguage());\n    }\n\n    // Dark mode toggle\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    if (darkModeToggle) {\n      darkModeToggle.addEventListener('click', () => this.toggleDarkMode());\n    }\n\n    // Help modal\n    this.setupHelpModal();\n\n    // Footer links\n    this.setupFooterLinks();\n\n    // Keyboard navigation\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        const helpModal = document.getElementById('helpModal');\n        if (helpModal && helpModal.classList.contains('show')) {\n          helpModal.classList.remove('show');\n          helpModal.setAttribute('aria-hidden', 'true');\n        }\n      }\n    });\n\n    // Before unload warning\n    window.addEventListener('beforeunload', (e) => {\n      if (store.hasUnsavedData()) {\n        e.preventDefault();\n        e.returnValue = 'You have unsaved data. Are you sure you want to leave?';\n      }\n    });\n  }\n\n  setupHelpModal() {\n    const helpButton = document.getElementById('helpButton');\n    const helpModal = document.getElementById('helpModal');\n    const modalClose = helpModal?.querySelector('.modal-close');\n\n    if (helpButton && helpModal) {\n      helpButton.addEventListener('click', () => {\n        helpModal.classList.add('show');\n        helpModal.setAttribute('aria-hidden', 'false');\n      });\n      \n      modalClose?.addEventListener('click', () => {\n        helpModal.classList.remove('show');\n        helpModal.setAttribute('aria-hidden', 'true');\n      });\n      \n      helpModal.addEventListener('click', (e) => {\n        if (e.target === helpModal) {\n          helpModal.classList.remove('show');\n          helpModal.setAttribute('aria-hidden', 'true');\n        }\n      });\n    }\n  }\n\n  setupFooterLinks() {\n    document.getElementById('privacyLink')?.addEventListener('click', (e) => {\n      e.preventDefault();\n      this.showPrivacyPolicy();\n    });\n    \n    document.getElementById('disclaimerLink')?.addEventListener('click', (e) => {\n      e.preventDefault();\n      this.showDisclaimer();\n    });\n  }\n\n  initializeTheme() {\n    const savedTheme = localStorage.getItem('theme');\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    \n    if (savedTheme === 'dark' || (!savedTheme && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n      document.body.classList.add('dark-mode');\n      if (darkModeToggle) darkModeToggle.textContent = '☀️';\n    }\n  }\n\n  toggleLanguage() {\n    i18n.toggleLanguage();\n    this.updateUILanguage();\n  }\n\n  updateUILanguage() {\n    // Update HTML lang attribute\n    document.documentElement.lang = i18n.getCurrentLanguage();\n    \n    // Update header text\n    const headerTitle = document.querySelector('.app-header h1');\n    if (headerTitle) {\n      headerTitle.textContent = t('appTitle');\n    }\n    \n    const emergencyBadge = document.querySelector('.emergency-badge');\n    if (emergencyBadge) {\n      emergencyBadge.textContent = t('emergencyBadge');\n    }\n    \n    // Update button tooltips\n    const languageToggle = document.getElementById('languageToggle');\n    if (languageToggle) {\n      languageToggle.title = t('languageToggle');\n      languageToggle.setAttribute('aria-label', t('languageToggle'));\n    }\n    \n    const helpButton = document.getElementById('helpButton');\n    if (helpButton) {\n      helpButton.title = t('helpButton');\n      helpButton.setAttribute('aria-label', t('helpButton'));\n    }\n    \n    const darkModeToggle = document.getElementById('darkModeToggle');\n    if (darkModeToggle) {\n      darkModeToggle.title = t('darkModeButton');\n      darkModeToggle.setAttribute('aria-label', t('darkModeButton'));\n    }\n    \n    // Update help modal\n    const modalTitle = document.getElementById('modalTitle');\n    if (modalTitle) {\n      modalTitle.textContent = t('helpTitle');\n    }\n    \n    // Note: Stroke center map initialization is handled in render.js\n  }\n\n  toggleDarkMode() {\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    document.body.classList.toggle('dark-mode');\n    const isDark = document.body.classList.contains('dark-mode');\n    \n    if (darkModeToggle) {\n      darkModeToggle.textContent = isDark ? '☀️' : '🌙';\n    }\n    \n    localStorage.setItem('theme', isDark ? 'dark' : 'light');\n  }\n\n  startAutoSave() {\n    setInterval(() => {\n      this.saveCurrentFormData();\n    }, APP_CONFIG.autoSaveInterval);\n  }\n\n  saveCurrentFormData() {\n    const forms = this.container.querySelectorAll('form[data-module]');\n    forms.forEach(form => {\n      const formData = new FormData(form);\n      const module = form.dataset.module;\n      if (module) {\n        const data = {};\n        formData.forEach((value, key) => {\n          const element = form.elements[key];\n          if (element && element.type === 'checkbox') {\n            data[key] = element.checked;\n          } else {\n            data[key] = value;\n          }\n        });\n        \n        // Only save if data has actually changed to prevent unnecessary re-renders\n        const currentData = store.getFormData(module);\n        const hasChanges = JSON.stringify(currentData) !== JSON.stringify(data);\n        if (hasChanges) {\n          store.setFormData(module, data);\n        }\n      }\n    });\n  }\n\n  setupSessionTimeout() {\n    setTimeout(() => {\n      if (confirm('Your session has been idle for 30 minutes. Would you like to continue?')) {\n        this.setupSessionTimeout();\n      } else {\n        store.reset();\n      }\n    }, APP_CONFIG.sessionTimeout);\n  }\n\n  setCurrentYear() {\n    const yearElement = document.getElementById('currentYear');\n    if (yearElement) {\n      yearElement.textContent = new Date().getFullYear();\n    }\n  }\n\n  showPrivacyPolicy() {\n    alert('Privacy Policy: This tool processes data locally. No patient data is stored or transmitted.');\n  }\n\n  showDisclaimer() {\n    alert('Medical Disclaimer: This tool is for clinical decision support only. Always use clinical judgment and follow local protocols.');\n  }\n\n  destroy() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n}\n\n// Initialize the application\nconst app = new App();\napp.init();\n\n// Export for potential testing or debugging\nexport default app;"],"names":["Store","listener","updates","screen","module","data","formData","errors","results","newState","eventName","event","store","renderProgressIndicator","currentStep","steps","html","step","index","isActive","isCompleted","messages","I18n","savedLanguage","language","key","newLanguage","lang","date","locale","i18n","t","renderTriage1","renderTriage2","API_URLS","CRITICAL_THRESHOLDS","GFAP_RANGES","APP_CONFIG","VALIDATION_RULES","renderComa","renderLimited","renderFull","renderCriticalAlert","normalizeDrivers","drivers","normalizeShapValues","normalizeLogisticContributions","isRawDriversObject","normalizeRawDrivers","shapData","features","item","feature","value","a","b","positive","f","negative","meta","logitData","obj","renderDriversSection","ich","lvo","renderDriversPanel","title","type","driversViewModel","driver","percentage","width","strokeCenters","calculateDistance","lat1","lng1","lat2","lng2","dLat","toRadians","dLng","degrees","findNearestStrokeCenters","lat","lng","maxResults","maxDistance","center","getRecommendedStrokeCenters","conditionType","nearestCenters","comprehensive","primary","renderStrokeCenterMap","initializeStrokeCenterMap","useGpsButton","manualLocationButton","locationManual","locationInput","searchLocationButton","resultsContainer","requestUserLocation","location","geocodeLocation","e","showLocationError","position","latitude","longitude","showNearestCenters","error","errorMessage","locationString","determineConditionType","recommendations","renderStrokeCenterList","centers","isRecommended","service","message","container","getRiskLevel","probabilityPercent","p","thresholds","renderResults","startTime","ichHtml","lvoHtml","ichPercent","lvoPercent","criticalAlert","driversHtml","strokeCenterHtml","validateInput","name","rules","validateForm","form","isValid","validationErrors","input","showValidationErrors","group","el","errorDiv","clearValidationErrors","APIError","status","url","normalizeBooleans","payload","normalized","safeParseFloat","defaultValue","parsed","fetchJSON","controller","timeoutId","response","errorData","predictComaIch","normalizedPayload","predictLimitedIch","fullPayload","predictFullStroke","ichResult","_a","_b","_c","_d","_e","_f","lvoResult","_g","_h","_i","_j","_k","_l","handleTriage1","isComatose","navigate","handleTriage2","isExaminable","reset","handleSubmit","validation","inputs","element","n","button","originalContent","showError","alert","containerDiv","announceScreenChange","announcement","screenNames","setPageTitle","titles","focusMainHeading","heading","render","state","currentScreen","restoreFormData","attachEvents","action","boolVal","printButton","App","languageToggle","darkModeToggle","helpModal","helpButton","modalClose","savedTheme","headerTitle","emergencyBadge","modalTitle","isDark","currentData","yearElement","app"],"mappings":"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"}