{"version":3,"mappings":"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","names":["isDevelopment","MOCK_AUTH_SUCCESS","MOCK_API_RESPONSES","API_URLS","DEV_CONFIG","CRITICAL_THRESHOLDS","GFAP_RANGES","APP_CONFIG","VALIDATION_RULES","value","formData","diastolic","systolic","LAMBDA","B0","B_GFAP","B_FAST","MU_G","SIG_G","MU_F","SIG_F","A_PLATT","B_PLATT","FINAL_THRESHOLD","NUMERIC_EPS","MIN_FAST_ED","MAX_FAST_ED","yeoJohnson","x","lambda","standardize","mean","std","logistic","validateInputs","gfap","fasted","numGfap","numFasted","lvoProbability","validated","clampedFasted","gfapTransformed","gfapStandardized","fastedStandardized","logit","calibratedLogit","lvoClass","messages","I18n","savedLanguage","language","key","newLanguage","lang","date","locale","i18n","t","getPrerequisites","renderPrerequisitesModal","prerequisites","item","initPrerequisitesModal","modal","closeBtn","cancelBtn","confirmBtn","closeModal","navigate","e","checkboxes","cb","warning","checkbox","allChecked","showPrerequisitesModal","existingModal","modalElement","safeSetInnerHTML","error","fallbackModal","handleTriage1","isComatose","store","handleTriage2","isExaminable","screen","reset","goBack","goHome","handleSubmit","container","form","module","validation","validateForm","showValidationErrors","firstErrorName","el","sr","errorCount","inputs","element","n","button","originalContent","results","predictComaIch","predictLimitedIch","predictFullStroke","_a","_b","storedState","showToast","cs","isLocalPreview","m","ich","lvo","pIch","pLvo","fallbackResults","errorMessage","APIError","showError","e2","message","alert","h4","iconSpan","p","containerDiv","duration","toast","ERROR_SEVERITY","ERROR_CATEGORIES","MedicalError","code","category","severity","context","GlobalErrorHandler","event","errorEntry","globalErrorHandler","safeAsync","asyncFn","options","fallback","timeout","retries","attempt","timeoutPromise","_","reject","resolve","safeAuthOperation","authFn","validatePatientData","data","errors","warnings","validateICHRiskResult","result","isPatientData","isICHRiskResult","TypeChecker","expectedType","fieldName","isValid","actualType","range","min","max","LOG_LEVELS","LOG_CATEGORIES","MedicalLogger","stored","timestamp","random","loggingError","level","safeContext","entry","userId","sanitized","sensitiveFields","removeSensitiveData","obj","cleaned","lowerKey","field","sessionData","navigation","performance","levelInfo","style","serialized","keys","operation","action","success","url","method","status","metric","urlObj","param","filters","allLogs","log","filtered","b","minLevel","sinceDate","format","logs","headers","rows","row","medicalLogger","debug","info","warn","critical","medicalCalculation","authentication","userInteraction","networkRequest","auditTrail","AuthenticationManager","password","expectedPassword","getResearchPassword","storageError","isLocalHost","preferMock","response","errorCode","secureRemove","input","hashBuffer","hash","char","session","secureRetrieve","storedToken","storedExpiry","expiryDate","timestampNum","events","updateActivity","timeRemaining","hoursRemaining","minutesRemaining","authManager","renderProgressIndicator","currentStep","steps","html","step","index","isActive","isCompleted","renderTriage1","renderTriage2","renderComa","renderLimited","renderFull","renderCriticalAlert","FIELD_LABEL_MAP","PATTERN_REPLACEMENTS","formatDriverName","mappedKey","translated","formatted","pattern","replacement","l","formatSummaryLabel","formatDisplayValue","renderDriversSection","renderEnhancedDriversPanel","drivers","title","type","probability","driversViewModel","positiveDrivers","a","negativeDrivers","maxWeight","d","totalPositiveWeight","sum","driver","relativeImportance","barWidth","cleanLabel","totalNegativeWeight","COMPREHENSIVE_HOSPITAL_DATABASE","ROUTING_ALGORITHM","patientData","location","state","ichProbability","timeFromOnset","clinicalFactors","detectedState","database","destination","comprehensiveOptions","allThrombolysisCapable","strokeUnitsAndHigher","stateCenters","nearestState","minDistance","center","distance","userLocation","hospitals","hospital","point1","point2","dLat","dLng","deg","calculateDistance","lat1","lng1","lat2","lng2","toRadians","degrees","calculateTravelTime","fromLat","fromLng","toLat","toLng","profile","route","calculateEmergencyTravelTime","getRiskLevel","probabilityPercent","thresholds","renderInputSummary","summaryHtml","moduleTitle","itemsHtml","label","displayValue","renderRiskCard","percent","riskLevel","isCritical","isHigh","icons","titles","renderICHVolumeDisplay","gfapValue","getCurrentGfapValue","estVolume","estimateVolumeFromGFAP","renderCircularBrainDisplay","renderResults","startTime","currentModule","getCurrentModuleName","legacyResults","calculateLegacyFromResults","isResearchModeEnabled","safeLogResearchData","getPatientInputs","isLimitedOrComa","isFullModule","resultsHtml","renderICHFocusedResults","renderFullModuleResults","initializeVolumeAnimations","mountIslands","__vitePreload","mountIslands$1","err","criticalAlert","ichPercentLocal","strokeCenterHtml","renderStrokeCenterMap","inputSummaryHtml","researchToggleHtml","renderResearchToggle","researchComparisonHtml","renderModelComparison","alternativeDiagnosesHtml","renderComaAlternativeDiagnoses","strokeDifferentialHtml","renderStrokeDifferentialDiagnoses","renderVolumeCard","renderICHDriversOnly","renderBibliography","ichPercent","lvoPercent","fastEdScore","hasValidLVO","showLVORiskCard","showVolumeCard","ratio","inRatioBand","showDominanceBanner","debugShowTachometer","cardCount","layoutClass","renderTachometerGauge","renderDominanceBanner","dominant","icon","dominantText","subtitle","driversData","renderCompactDriver","percentage","width","ichData","patientInputs","calculateLegacyICH","age","isDE","mortality","estimateMortalityFromVolume","diff","maxP","c","renderLoginScreen","initializeLoginScreen","loginForm","passwordInput","loginError","loginButton","showLoginError","setLoginLoading","hideLoginError","authResult","isLoading","buttonText","loadingSpinner","announceScreenChange","announcement","screenNames","setPageTitle","appName","section","focusMainHeading","heading","FastEdCalculator","score","total","component","applyBtn","totalElement","riskElement","currentScore","onApplyCallback","firstRadio","armWeaknessBoolean","eyeDeviationBoolean","remaining","components","assignToThis","fastEdCalculator","render","currentScreen","screenHistory","tempContainer","backButton","restoreFormData","attachEvents","initializeStrokeCenterMap","initializeResearchMode","group","boolVal","printButton","fastEdInput","currentValue","armPareseField","eyeDeviationField","toggle","targetId","targetContent","arrow","UIManager","isLocal","next","btn","elementId","handler","wrappedHandler","target","helpButton","helpModal","modalClose","languageToggle","currentLang","selector","text","darkModeToggle","isDark","researchModeToggle","shouldShow","researchPanel","isVisible","modalId","yearElement","errorEvent","missingElements","id","ThemeManager","savedTheme","prefersDark","themeToApply","mediaQuery","handleSystemThemeChange","newTheme","theme","metaThemeColor","themeColors","systemTheme","SessionManager","forms","savedCount","numValue","newData","currentData","savedData","CacheStorageType","CachePriority","MedicalCacheTTL","CacheEntry","ttl","priority","metadata","priorityWeight","accessWeight","ageWeight","MedicalCache","storageType","cacheData","parsed","entryData","metricId","medicalPerformanceMonitor","PerformanceMetricType","size","oldEntry","medicalEventObserver","MEDICAL_EVENTS","entriesCleared","lowestScore","keyToEvict","cleanedCount","hitRate","MedicalCacheFactory","cache","__publicField","predictionCache","LoadPriority","LoadState","LazyComponent","name","loader","delay","dependencyPromises","dep","LazyLoader","entries","priorities","targetPriorities","preloadPromises","pri","componentName","pendingComponents","comp","loadPromises","scheduleNext","deadline","normalQueue","lowQueue","stats","totalLoadTime","loadedCount","queue","MedicalComponentLoader","lazyLoader","command","predictionStrategy","validationFactory","clinicalSituation","moduleType","enterpriseComponents","r","AdvancedFeaturesManager","swInitialized","medicalSWManager","syncInitialized","medicalSyncManager","criticalResources","clinicalAuditTrail","clinicalReportingSystem","qualityMetricsTracker","v","_d","_c","_f","_e","AppController","coreInitTasks","failures","createApp","app","initializeApplication","startupEvent","handleInitializationFailure","handlePageUnload","setupGlobalErrorHandlers","main","__vite_import_meta_env__","regs","reg","getCSSVar","ProbabilityRing","canvasRef","useRef","containerRef","useEffect","canvas","draw","dpr","ctx","height","cx","cy","radius","progressWidth","trackWidth","adjustedRadius","borderColor","stroke","startAngle","endAngle","rafId","ro","React","TachometerGauge","lvoProb","ichProb","raf","currentPos","safeIch","rawRatio","clampedRatio","targetPos","absDiff","maxProb","confidence","rect","cssW","cssH","isMobile","isTablet","baseWidth","padding","maxRHorizontal","maxRVerticalBase","maxRVertical","colors","bezelGradient","segments","angleStep","i","progress","g","color","majorTicks","minorTicks","val","pos","inner","outer","tickFont","th","labelFont","labelDistance","needleAngle","needleLen","coneSpan","needleColor","now","gradient","tx","ty","pulse","tipRadius","hubOuter","hubInner","hubGradient","innerGradient","ratioFont","ratioY","plateWidth","plateHeight","confY","confWidth","confHeight","confFill","confGradient","node","root","createRoot","MedicalCommand","description","UpdatePatientDataCommand","newValue","previousValue","NavigationCommand","targetScreen","sourceScreen","SubmitFormCommand","ClearDataCommand","dataType","MedicalCommandInvoker","cmd","medicalCommandInvoker","PredictionStrategy","inputData","missingFields","rawResult","summary","ComaPredictionStrategy","processedInput","LimitedDataPredictionStrategy","FullStrokePredictionStrategy","PredictionContext","strategy","strategyName","predictionContext","PREDICTION_STRATEGIES","ValidationRule","required","validator","check","medicalError","NumericValidationRule","BiomarkerValidationRule","biomarkerType","ranges","VitalSignValidationRule","vitalType","AgeValidationRule","ClinicalScaleValidationRule","scaleType","MedicalValidationFactory","rules","validationErrors","rule","VALIDATION_RULE_TYPES","BIOMARKER_TYPES","VITAL_SIGN_TYPES","CLINICAL_SCALE_TYPES"],"ignoreList":[],"sources":["../../src/config.js","../../src/lib/lvoModel.js","../../src/localization/messages.js","../../src/localization/i18n.js","../../src/ui/components/prerequisites-modal.js","../../src/logic/handlers.js","../../src/utils/error-handler.js","../../src/types/medical-types.js","../../src/utils/medical-logger.js","../../src/auth/authentication.js","../../src/ui/components/progress.js","../../src/ui/screens/triage1.js","../../src/ui/screens/triage2.js","../../src/ui/screens/coma.js","../../src/ui/screens/limited.js","../../src/ui/screens/full.js","../../src/ui/components/alerts.js","../../src/utils/label-formatter.js","../../src/ui/components/drivers.js","../../src/data/comprehensive-stroke-centers.js","../../src/data/stroke-centers.js","../../src/logic/formatters.js","../../src/ui/screens/results.js","../../src/ui/screens/login.js","../../src/ui/a11y.js","../../src/ui/components/fastEdModal.js","../../src/ui/render.js","../../src/core/ui-manager.js","../../src/core/theme-manager.js","../../src/core/session-manager.js","../../src/performance/medical-cache.js","../../src/components/lazy-loader.js","../../src/core/advanced-features-manager.js","../../src/core/app-controller.js","../../src/main.js","../../src/react/ProbabilityRing.jsx","../../src/react/TachometerGauge.jsx","../../src/react/mountIslands.jsx","../../src/patterns/command.js","../../src/patterns/prediction-strategy.js","../../src/patterns/validation-factory.js"],"sourcesContent":["// Configuration for the Stroke Triage Assistant\n\n// Development mode detection (prefer Vite flag, fallback to hostname)\n// Only treat Vite dev server as development; preview uses production settings\nconst isDevelopment = !!(import.meta && import.meta.env && import.meta.env.DEV);\n\n// Mock authentication for local development\nconst MOCK_AUTH_SUCCESS = {\n  success: true,\n  message: 'Development mode - authentication bypassed',\n  session_token: 'dev-token-' + Date.now(),\n  expires_at: new Date(Date.now() + 30 * 60 * 1000).toISOString(),\n  session_duration: 1800\n};\n\n// Mock API responses for development (matching real Cloud Function format)\nconst MOCK_API_RESPONSES = {\n  coma_ich: {\n    probability: 25.3,\n    ich_probability: 25.3,\n    drivers: {\n      \"gfap_value\": 0.4721,\n      \"baseline_risk\": 0.1456\n    },\n    confidence: 0.75\n  },\n  limited_ich: {\n    probability: 31.7,\n    ich_probability: 31.7,\n    drivers: {\n      \"age_years\": 0.2845,\n      \"systolic_bp\": 0.1923,\n      \"gfap_value\": 0.4231,\n      \"vigilanzminderung\": 0.3456\n    },\n    confidence: 0.65\n  },\n  full_stroke: {\n    ich_prediction: {\n      probability: 28.4,\n      drivers: {\n        \"age_years\": 0.1834,\n        \"gfap_value\": 0.3921,\n        \"systolic_bp\": 0.2341,\n        \"vigilanzminderung\": 0.2876\n      },\n      confidence: 0.88\n    },\n    lvo_prediction: {\n      probability: 45.2,\n      drivers: {\n        \"fast_ed_score\": 0.7834,\n        \"age_years\": 0.2341,\n        \"eye_deviation\": 0.1923\n      },\n      confidence: 0.82\n    }\n  },\n  authenticate: {\n    success: true,\n    message: 'Development mode - authentication bypassed',\n    session_token: 'dev-token-' + Date.now(),\n    expires_at: new Date(Date.now() + 30 * 60 * 1000).toISOString(),\n    session_duration: 1800\n  }\n};\n\nexport const API_URLS = isDevelopment ? {\n  // Development mode - use Vite proxy to bypass CORS\n  COMA_ICH: '/api/cloud-functions/predict_coma_ich',\n  LDM_ICH: '/api/cloud-functions/predict_limited_data_ich',\n  FULL_STROKE: '/api/cloud-functions/predict_full_stroke',\n  LVO_PREDICTION: '/api/cloud-functions/predict_lvo',\n  AUTHENTICATE: '/api/cloud-functions/authenticate-research-access',\n} : {\n  // Production mode - use direct endpoints\n  COMA_ICH: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_coma_ich',\n  LDM_ICH: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_limited_data_ich',\n  FULL_STROKE: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_full_stroke',\n  LVO_PREDICTION: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_lvo',\n  AUTHENTICATE: 'https://europe-west3-igfap-452720.cloudfunctions.net/authenticate-research-access',\n};\n\nexport const DEV_CONFIG = {\n  isDevelopment,\n  mockAuthResponse: MOCK_AUTH_SUCCESS,\n  mockApiResponses: MOCK_API_RESPONSES\n};\n\nexport const CRITICAL_THRESHOLDS = {\n  ich: {\n    medium: 25,\n    high: 50,\n  },\n  lvo: {\n    medium: 25,\n    high: 50,\n  },\n};\n\nexport const GFAP_RANGES = {\n  min: 29,\n  max: 10001,\n  normal: 100,\n  elevated: 500,\n  critical: 1000,\n};\n\nexport const APP_CONFIG = {\n  autoSaveInterval: 180000, // 3 minutes to reduce irritating screen blinks\n  sessionTimeout: 30 * 60 * 1000, // 30 minutes\n  requestTimeout: 10000, // 10 seconds (default)\n  fullStrokeTimeout: 20000, // 20 seconds for full stroke (handles cold starts)\n};\n\nexport const VALIDATION_RULES = {\n  age_years: {\n    required: true,\n    min: 0,\n    max: 120,\n    type: 'integer',\n    medicalCheck: (value) => (value < 18 ? 'Emergency stroke assessment typically for adults (≥18 years)' : null),\n  },\n  systolic_bp: {\n    required: true,\n    min: 60,\n    max: 300,\n    type: 'number',\n    medicalCheck: (value, formData) => {\n      const diastolic = formData?.diastolic_bp;\n      if (diastolic && value <= diastolic) {\n        return 'Systolic BP must be higher than diastolic BP';\n      }\n      return null;\n    },\n  },\n  diastolic_bp: {\n    required: true,\n    min: 30,\n    max: 200,\n    type: 'number',\n    medicalCheck: (value, formData) => {\n      const systolic = formData?.systolic_bp;\n      if (systolic && value >= systolic) {\n        return 'Diastolic BP must be lower than systolic BP';\n      }\n      return null;\n    },\n  },\n  gfap_value: {\n    required: true,\n    min: GFAP_RANGES.min,\n    max: GFAP_RANGES.max,\n    type: 'number',\n    medicalCheck: (value) => {\n      if (value > 8000) {\n        return 'Warning: Extremely high GFAP value - please verify lab result (still valid)';\n      }\n      return null;\n    },\n  },\n  fast_ed_score: {\n    required: true,\n    min: 0,\n    max: 9,\n    type: 'integer',\n    medicalCheck: (value) => (value >= 4 ? 'High FAST-ED score suggests LVO - consider urgent intervention' : null),\n  },\n  gcs: {\n    required: true,\n    min: 3,\n    max: 15,\n    type: 'integer',\n    medicalCheck: (value) => (value < 8 ? 'GCS < 8 indicates severe consciousness impairment - consider coma module' : null),\n  },\n};\n","/**\n * Production LVO Model - Scientifically Calibrated (JavaScript Version)\n *\n * Implementation of GFAP + FAST-ED LVO prediction model with:\n * - Yeo-Johnson power transformation for GFAP\n * - Z-score normalization\n * - Logistic regression with calibrated thresholds\n * - Platt scaling for probability calibration\n */\n\n// Model parameters (scientifically calibrated via CalibratedClassifierCV)\nconst LAMBDA = -0.825559;           // Yeo-Johnson lambda for GFAP transformation\nconst B0 = -0.408314;               // Logistic regression intercept\nconst B_GFAP = -0.826450;           // GFAP coefficient (negative = protective when transformed)\nconst B_FAST = 1.651521;            // FAST-ED coefficient (positive = risk factor)\n\n// Standardization parameters (from training data statistics)\nconst MU_G = -0.000000;             // Mean of transformed GFAP\nconst SIG_G = 1.000000;             // Standard deviation of transformed GFAP\nconst MU_F = 3.701422;              // Mean of FAST-ED\nconst SIG_F = 2.306173;             // Standard deviation of FAST-ED\n\n// Platt scaling parameters (for probability calibration)\nconst A_PLATT = 1.117420;           // Platt scaling slope\nconst B_PLATT = -1.032167;          // Platt scaling intercept\n\n// Decision threshold\nconst FINAL_THRESHOLD = 0.333333;   // Classification threshold\n\n// Validation constants\nconst NUMERIC_EPS = 1e-15;\nconst MAX_GFAP_WARNING = 50000;\nconst MIN_FAST_ED = 0;\nconst MAX_FAST_ED = 16;\n\n/**\n * Yeo-Johnson power transformation\n */\nfunction yeoJohnson(x, lambda) {\n  if (Math.abs(lambda) < NUMERIC_EPS) {\n    return Math.log(x + 1.0);\n  }\n  return (Math.pow(x + 1.0, lambda) - 1.0) / lambda;\n}\n\n/**\n * Z-score standardization\n */\nfunction standardize(value, mean, std) {\n  return (value - mean) / std;\n}\n\n/**\n * Logistic (sigmoid) function\n */\nfunction logistic(x) {\n  if (x > 500) return 1.0;  // Prevent overflow\n  if (x < -500) return 0.0; // Prevent underflow\n  return 1.0 / (1.0 + Math.exp(-x));\n}\n\n/**\n * Input validation\n */\nfunction validateInputs(gfap, fasted) {\n  // Check for null/undefined\n  if (gfap == null) throw new Error('gfap is required');\n  if (fasted == null) throw new Error('fasted is required');\n\n  // Convert to numbers\n  const numGfap = Number(gfap);\n  const numFasted = Number(fasted);\n\n  // Check for valid numbers\n  if (!Number.isFinite(numGfap)) throw new Error('gfap must be a finite number');\n  if (!Number.isFinite(numFasted)) throw new Error('fasted must be a finite number');\n\n  // Check ranges\n  if (numGfap < 0) throw new Error('GFAP value must be non-negative');\n\n  return { gfap: numGfap, fasted: numFasted };\n}\n\n/**\n * Calculate LVO probability using scientifically calibrated model\n */\nexport function lvoProbability(gfap, fasted) {\n  const validated = validateInputs(gfap, fasted);\n\n  // Clamp FAST-ED to valid range\n  const clampedFasted = Math.max(MIN_FAST_ED, Math.min(MAX_FAST_ED, validated.fasted));\n\n  // Apply transformations\n  const gfapTransformed = yeoJohnson(validated.gfap, LAMBDA);\n  const gfapStandardized = standardize(gfapTransformed, MU_G, SIG_G);\n  const fastedStandardized = standardize(clampedFasted, MU_F, SIG_F);\n\n  // Calculate logit\n  const logit = B0 + B_GFAP * gfapStandardized + B_FAST * fastedStandardized;\n\n  // Apply Platt calibration\n  const calibratedLogit = A_PLATT * logit + B_PLATT;\n\n  // Return probability\n  return logistic(calibratedLogit);\n}\n\n/**\n * Binary classification using threshold\n */\nexport function lvoClass(gfap, fasted) {\n  const probability = lvoProbability(gfap, fasted);\n  return probability >= FINAL_THRESHOLD ? 1 : 0;\n}\n\n/**\n * Comprehensive prediction with detailed intermediate values\n */\nexport function predictLVO(gfap, fasted) {\n  const warnings = [];\n  let isValid = true;\n\n  try {\n    const validated = validateInputs(gfap, fasted);\n    const originalFasted = validated.fasted;\n\n    // Clamp FAST-ED and warn if out of range\n    const clampedFasted = Math.max(MIN_FAST_ED, Math.min(MAX_FAST_ED, validated.fasted));\n    if (clampedFasted !== originalFasted) {\n      warnings.push(`FAST-ED score clamped from ${originalFasted} to ${clampedFasted} (valid range: ${MIN_FAST_ED}-${MAX_FAST_ED})`);\n    }\n\n    // Warn for very high GFAP values\n    if (validated.gfap > MAX_GFAP_WARNING) {\n      warnings.push(`GFAP value ${validated.gfap} exceeds typical range (may indicate extreme case)`);\n    }\n\n    // Apply transformations\n    const gfapTransformed = yeoJohnson(validated.gfap, LAMBDA);\n    const gfapStandardized = standardize(gfapTransformed, MU_G, SIG_G);\n    const fastedStandardized = standardize(clampedFasted, MU_F, SIG_F);\n\n    // Calculate logit\n    const logit = B0 + B_GFAP * gfapStandardized + B_FAST * fastedStandardized;\n\n    // Apply Platt calibration\n    const calibratedLogit = A_PLATT * logit + B_PLATT;\n\n    // Calculate final probability\n    const probability = logistic(calibratedLogit);\n    const classification = probability >= FINAL_THRESHOLD ? 1 : 0;\n\n    return {\n      probability,\n      classification,\n      inputs: {\n        gfap: validated.gfap,\n        fasted: clampedFasted\n      },\n      transformedValues: {\n        gfapTransformed,\n        gfapStandardized,\n        fastedStandardized,\n        logit,\n        calibratedLogit\n      },\n      metadata: {\n        modelVersion: '2024.09.28-calibrated',\n        threshold: FINAL_THRESHOLD,\n        isValid,\n        warnings\n      }\n    };\n\n  } catch (error) {\n    warnings.push(error.message);\n    isValid = false;\n\n    return {\n      probability: NaN,\n      classification: 0,\n      inputs: { gfap, fasted },\n      transformedValues: {\n        gfapTransformed: NaN,\n        gfapStandardized: NaN,\n        fastedStandardized: NaN,\n        logit: NaN,\n        calibratedLogit: NaN\n      },\n      metadata: {\n        modelVersion: '2024.09.28-calibrated',\n        threshold: FINAL_THRESHOLD,\n        isValid,\n        warnings\n      }\n    };\n  }\n}\n\n// Export constants for external use\nexport const MODEL_CONSTANTS = {\n  LAMBDA,\n  B0,\n  B_GFAP,\n  B_FAST,\n  MU_G,\n  SIG_G,\n  MU_F,\n  SIG_F,\n  A_PLATT,\n  B_PLATT,\n  FINAL_THRESHOLD\n};","// Localization messages for the Stroke Triage Assistant\n\nexport const messages = {\n  en: {\n    // Header\n    appTitle: 'iGFAP',\n    emergencyBadge: 'Emergency Tool',\n    helpButton: 'Help and Instructions',\n    darkModeButton: 'Toggle dark mode',\n    languageToggle: 'Language',\n\n    // Progress\n    step1: 'Initial Assessment',\n    step2: 'Data Collection',\n    step3: 'Results',\n\n    // Module titles\n    comaModuleTitle: 'Coma Module',\n    limitedDataModuleTitle: 'Limited Data Module',\n    fullStrokeModuleTitle: 'Full Stroke Module',\n\n    // Triage 1\n    triage1Title: 'Patient Assessment',\n    triage1Question: 'Is the patient comatose?',\n    triage1Help: 'Glasgow Coma Scale < 9',\n    triage1Yes: 'YES - Comatose',\n    triage1No: 'NO - Conscious',\n\n    // Triage 2\n    triage2Title: 'Examination Capability',\n    triage2Question: 'Can the patient be reliably examined?',\n    triage2Help: 'Patient is not aphasic, confused, or uncooperative',\n    triage2Yes: 'YES - Full Exam Possible',\n    triage2No: 'NO - Limited Exam Only',\n\n    // Forms\n    ageLabel: 'Age (years)',\n    ageHelp: 'Patient age in years',\n    systolicLabel: 'Systolic BP (mmHg)',\n    systolicHelp: 'Systolic blood pressure',\n    diastolicLabel: 'Diastolic BP (mmHg)',\n    diastolicHelp: 'Diastolic blood pressure',\n    gfapLabel: 'GFAP Value (pg/mL)',\n    gfapHelp: 'GFAP biomarker level',\n    fastEdLabel: 'FAST-ED Score',\n    fastEdHelp: 'FAST-ED assessment score (0-9)',\n\n    // Checkboxes\n    headacheLabel: 'Headache',\n    vigilanzLabel: 'Reduced consciousness',\n    armPareseLabel: 'Arm weakness',\n    beinPareseLabel: 'Leg weakness',\n    eyeDeviationLabel: 'Eye deviation',\n    atrialFibLabel: 'Atrial fibrillation',\n    anticoagLabel: 'Anticoagulated (NOAK)',\n    antiplateletsLabel: 'Antiplatelets',\n\n    // Buttons\n    analyzeButton: 'Analyze',\n    analyzing: 'Analyzing...',\n    printResults: 'Print Results',\n    newAssessment: 'Start New Assessment',\n    startOver: 'Start Over',\n    goBack: 'Go Back',\n    goHome: 'Go Home',\n\n    // Form sections\n    basicInformation: 'Basic Information',\n    biomarkersScores: 'Biomarkers & Scores',\n    clinicalSymptoms: 'Clinical Symptoms',\n    medicalHistory: 'Medical History',\n\n    // Form labels with units\n    ageYearsLabel: 'Age (years)',\n    systolicBpLabel: 'Systolic BP (mmHg)',\n    diastolicBpLabel: 'Diastolic BP (mmHg)',\n    gfapValueLabel: 'GFAP Value (pg/mL)',\n    fastEdScoreLabel: 'FAST-ED Score',\n\n    // Help text\n    ageYearsHelp: \"Patient's age in years\",\n    systolicBpHelp: 'Normal: 90-140 mmHg',\n    diastolicBpHelp: 'Normal: 60-90 mmHg',\n    gfapTooltip: 'Brain injury biomarker',\n    gfapTooltipLong: 'Glial Fibrillary Acidic Protein - Brain injury biomarker',\n    gfapRange: 'Range: {min} - {max} pg/mL',\n    fastEdTooltip: '0-9 scale for LVO screening',\n\n    // Module buttons\n    analyzeIchRisk: 'Analyze ICH Risk',\n    analyzeStrokeRisk: 'Analyze Stroke Risk',\n\n    // Alert messages\n    criticalPatient: 'Critical Patient',\n    comaAlert: 'Patient is comatose (GCS < 9). Rapid assessment required.',\n    vigilanceReduction: 'Vigilance Reduction (Decreased alertness)',\n\n    // Additional symptom labels\n    armParesis: 'Arm Paresis',\n    legParesis: 'Leg Paresis',\n    eyeDeviation: 'Eye Deviation',\n    atrialFibrillation: 'Atrial Fibrillation',\n    onNoacDoac: 'On NOAC/DOAC',\n    onAntiplatelets: 'On Antiplatelets',\n\n    // Results\n    resultsTitle: 'Assessment Results',\n    bleedingRiskAssessment: 'Bleeding Risk Assessment',\n    ichProbability: 'ICH Probability',\n    lvoProbability: 'LVO Probability',\n    lvoMayBePossible: 'Large vessel occlusion possible - further evaluation recommended',\n    riskFactorsTitle: 'Main Risk Factors',\n    increasingRisk: 'Increasing Risk',\n    decreasingRisk: 'Decreasing Risk',\n    noFactors: 'No factors',\n    riskLevel: 'Risk Level',\n    lowRisk: 'Low Risk',\n    mediumRisk: 'Medium Risk',\n    highRisk: 'High Risk',\n\n    // Risk levels\n    riskLow: 'Low',\n    riskMedium: 'Medium',\n    riskHigh: 'High',\n\n    // Risk Factors Analysis\n    riskFactorsAnalysis: 'Risk Factors',\n    contributingFactors: 'Contributing factors to the assessment',\n    riskFactors: 'Risk Factors',\n    increaseRisk: 'INCREASE',\n    decreaseRisk: 'DECREASE',\n    noPositiveFactors: 'No increasing factors',\n    noNegativeFactors: 'No decreasing factors',\n    ichRiskFactors: 'ICH Risk Factors',\n    lvoRiskFactors: 'LVO Risk Factors',\n\n    // Critical Alert\n    criticalAlertTitle: 'CRITICAL RISK DETECTED',\n    criticalAlertMessage: 'High probability of intracerebral hemorrhage detected.',\n    immediateActionsRequired: 'Immediate actions required',\n    initiateStrokeProtocol: 'Initiate stroke protocol immediately',\n    urgentCtImaging: 'Urgent CT imaging required',\n    considerBpManagement: 'Consider blood pressure management',\n    prepareNeurosurgicalConsult: 'Prepare for potential neurosurgical consultation',\n\n    // Help Modal\n    helpTitle: 'Quick Reference Guide',\n    gcsTitle: 'Glasgow Coma Scale (GCS)',\n    gcsLow: 'GCS < 9: Comatose patient - use Coma Module',\n    gcsMod: 'GCS 8-12: Moderate impairment',\n    gcsHigh: 'GCS 13-15: Mild impairment',\n    fastEdTitle: 'FAST-ED Score Components',\n    fastEdFacial: 'Facial Palsy: 0-1 points',\n    fastEdArm: 'Arm Weakness: 0-2 points',\n    fastEdSpeech: 'Speech Changes: 0-2 points',\n    fastEdTime: 'Time: Critical factor',\n    fastEdEye: 'Eye Deviation: 0-2 points',\n    fastEdDenial: 'Denial/Neglect: 0-2 points',\n    criticalValuesTitle: 'Critical Values',\n    criticalBp: 'Systolic BP > 180: Increased ICH risk',\n    criticalGfap: 'GFAP > 500 pg/mL: Significant marker',\n    criticalFastEd: 'FAST-ED ≥ 4: Consider LVO',\n\n    // FAST-ED Calculator Modal\n    fastEdCalculatorTitle: 'FAST-ED Score Calculator',\n    fastEdCalculatorSubtitle: 'Click to calculate FAST-ED score components',\n    facialPalsyTitle: 'Facial Palsy',\n    facialPalsyNormal: 'Normal (0)',\n    facialPalsyMild: 'Present (1)',\n    armWeaknessTitle: 'Arm Weakness',\n    armWeaknessNormal: 'Normal (0)',\n    armWeaknessMild: 'Mild weakness or drift (1)',\n    armWeaknessSevere: 'Severe weakness or falls immediately (2)',\n    speechChangesTitle: 'Speech Abnormalities',\n    speechChangesNormal: 'Normal (0)',\n    speechChangesMild: 'Mild dysarthria or aphasia (1)',\n    speechChangesSevere: 'Severe dysarthria or aphasia (2)',\n    eyeDeviationTitle: 'Eye Deviation',\n    eyeDeviationNormal: 'Normal (0)',\n    eyeDeviationPartial: 'Partial gaze deviation (1)',\n    eyeDeviationForced: 'Forced gaze deviation (2)',\n    denialNeglectTitle: 'Denial/Neglect',\n    denialNeglectNormal: 'Normal (0)',\n    denialNeglectPartial: 'Partial neglect (1)',\n    denialNeglectComplete: 'Complete neglect (2)',\n    totalScoreTitle: 'Total FAST-ED Score',\n    riskLevel: 'Risk Level',\n    riskLevelLow: 'LOW (Score <4)',\n    riskLevelHigh: 'HIGH (Score ≥4 - Consider LVO)',\n    applyScore: 'Apply Score',\n    cancel: 'Cancel',\n\n    // Results Screen Enhancements\n    riskAnalysis: 'Risk Analysis',\n    riskAnalysisSubtitle: 'Clinical factors in this assessment',\n    contributingFactors: 'Contributing factors',\n    factorsShown: 'shown',\n    positiveFactors: 'Positive factors',\n    negativeFactors: 'Negative factors',\n    clinicalInformation: 'Clinical Information',\n    clinicalRecommendations: 'Clinical Recommendations',\n    clinicalRec1: 'Consider immediate imaging if ICH risk is high',\n    clinicalRec2: 'Activate stroke team for LVO scores ≥ 50%',\n    clinicalRec3: 'Monitor blood pressure closely',\n    clinicalRec4: 'Document all findings thoroughly',\n    noDriverData: 'No driver data available',\n    driverAnalysisUnavailable: 'Driver analysis unavailable',\n    driverInfoNotAvailable: 'Driver information not available from this prediction model',\n    driverAnalysisNotAvailable: 'Driver analysis not available for this prediction',\n    lvoNotPossible: 'LVO assessment not possible with limited data',\n    fullExamRequired: 'Full neurological examination required for LVO screening',\n    limitedAssessment: 'Limited Assessment',\n\n    // Disclaimer\n    disclaimer: 'Clinical Disclaimer',\n    disclaimerText: 'This tool is for clinical decision support only. Always use clinical judgment and follow local protocols. Not a replacement for physician assessment.',\n    importantNote: 'Important',\n    importantText: 'These results are for clinical decision support only. Always use clinical judgment and follow institutional protocols.',\n\n    // ICH Volume and Mortality\n    predictedMortality: 'Predicted 30-day mortality',\n    ichVolumeLabel: 'ICH Volume',\n    references: 'References',\n\n    // Input Summary\n    inputSummaryTitle: 'Input Summary',\n    inputSummarySubtitle: 'Values used for this analysis',\n\n    // Footer\n    privacyLink: 'Privacy Policy',\n    disclaimerLink: 'Medical Disclaimer',\n    versionLink: 'Version 2.1.0 - Research Preview',\n\n    // Privacy and disclaimers\n    privacyPolicy: 'Privacy Policy: This tool processes data locally. No patient data is stored or transmitted.',\n    medicalDisclaimer: 'Medical Disclaimer: This tool is for clinical decision support only. Always use clinical judgment and follow local protocols.',\n\n    // Error messages\n    networkError: 'Network error - please check your connection and try again',\n    requestTimeout: 'Request timeout - please try again',\n    apiError: 'Failed to get results',\n    validationError: 'Please check your input values',\n\n    // Session\n    sessionTimeout: 'Your session has been idle for 30 minutes. Would you like to continue?',\n    unsavedData: 'You have unsaved data. Are you sure you want to leave?',\n\n    // Stroke Centers\n    nearestCentersTitle: 'Nearest Stroke Centers',\n    useCurrentLocation: 'Use Current Location',\n    enterLocationPlaceholder: 'Enter city or address...',\n    enterManually: 'Enter Location Manually',\n    search: 'Search',\n    yourLocation: 'Your Location',\n    recommendedCenters: 'Recommended Centers',\n    alternativeCenters: 'Alternative Centers',\n    noCentersFound: 'No stroke centers found in this area',\n    gettingLocation: 'Getting your location',\n    searchingLocation: 'Searching location',\n    locationError: 'Unable to get your location',\n    locationPermissionDenied: 'Location access denied. Please allow location access and try again.',\n    locationUnavailable: 'Location information is unavailable',\n    locationTimeout: 'Location request timed out',\n    geolocationNotSupported: 'Geolocation is not supported by this browser',\n    geocodingNotImplemented: 'Location search not available. Please use GPS or enter coordinates manually.',\n    tryManualEntry: 'Try entering your location manually or use GPS.',\n    distanceNote: 'Distances are calculated as straight-line distances. Actual travel times may vary.',\n    travelTimeNote: 'Travel times calculated for emergency vehicles with sirens and priority routing.',\n    calculatingTravelTimes: 'Calculating travel times',\n    minutes: 'min',\n    poweredByOrs: 'Travel times powered by OpenRoute Service',\n\n    // Center Types and Services\n    comprehensiveCenter: 'Comprehensive Stroke Center',\n    primaryCenter: 'Primary Stroke Center',\n    telemetryCenter: 'Telemedicine Center',\n    thrombectomy: 'Thrombectomy',\n    neurosurgery: 'Neurosurgery',\n    icu: 'Intensive Care',\n    telemedicine: 'Telemedicine',\n    stroke_unit: 'Stroke Unit',\n\n    // Actions\n    call: 'Call',\n    directions: 'Directions',\n    emergency: 'Emergency',\n    certified: 'Certified',\n\n    // Prerequisites Modal\n    prerequisitesTitle: 'Prerequisites for Stroke Triage',\n    prerequisitesIntro: 'Please confirm that all of the following prerequisites are met:',\n    prerequisitesWarning: 'All prerequisites must be met to continue',\n    continue: 'Continue',\n    acute_deficit: 'Acute (severe) neurological deficit present',\n    symptom_onset: 'Symptom onset within 6 hours',\n    no_preexisting: 'No pre-existing severe neurological deficits',\n    no_trauma: 'No traumatic brain injury present',\n\n    // Differential Diagnoses for Stroke Modules\n    differentialDiagnoses: 'Differential Diagnoses',\n    reconfirmTimeWindow: 'Please reconfirm time window!',\n    unclearTimeWindow: 'With unclear/extended time window, early demarcated brain infarction is also possible',\n    rareDiagnoses: 'Rare diagnoses such as glioblastoma are also possible',\n\n  },\n\n  de: {\n    // Header\n    appTitle: 'iGFAP',\n    emergencyBadge: 'Notfall-Tool',\n    helpButton: 'Hilfe und Anweisungen',\n    darkModeButton: 'Dunklen Modus umschalten',\n    languageToggle: 'Sprache',\n\n    // Progress\n    step1: 'Erstbeurteilung',\n    step2: 'Datenerhebung',\n    step3: 'Ergebnisse',\n\n    // Module titles\n    comaModuleTitle: 'Koma-Modul',\n    limitedDataModuleTitle: 'Begrenzte Daten Modul',\n    fullStrokeModuleTitle: 'Vollständiges Schlaganfall-Modul',\n\n    // Triage 1\n    triage1Title: 'Patientenbeurteilung',\n    triage1Question: 'Ist der Patient komatös?',\n    triage1Help: 'Glasgow Coma Scale < 9',\n    triage1Yes: 'JA - Komatös',\n    triage1No: 'NEIN - Bei Bewusstsein',\n\n    // Triage 2\n    triage2Title: 'Untersuchungsfähigkeit',\n    triage2Question: 'Kann der Patient zuverlässig untersucht werden?',\n    triage2Help: 'Patient ist nicht aphasisch, verwirrt oder unkooperativ',\n    triage2Yes: 'JA - Vollständige Untersuchung möglich',\n    triage2No: 'NEIN - Nur begrenzte Untersuchung',\n\n    // Forms\n    ageLabel: 'Alter (Jahre)',\n    ageHelp: 'Patientenalter in Jahren',\n    systolicLabel: 'Systolischer RR (mmHg)',\n    systolicHelp: 'Systolischer Blutdruck',\n    diastolicLabel: 'Diastolischer RR (mmHg)',\n    diastolicHelp: 'Diastolischer Blutdruck',\n    gfapLabel: 'GFAP-Wert (pg/mL)',\n    gfapHelp: 'GFAP-Biomarker-Wert',\n    fastEdLabel: 'FAST-ED-Score',\n    fastEdHelp: 'FAST-ED-Bewertungsscore (0-9)',\n\n    // Checkboxes\n    headacheLabel: 'Kopfschmerzen',\n    vigilanzLabel: 'Bewusstseinstrübung',\n    armPareseLabel: 'Armschwäche',\n    beinPareseLabel: 'Beinschwäche',\n    eyeDeviationLabel: 'Blickdeviation',\n    atrialFibLabel: 'Vorhofflimmern',\n    anticoagLabel: 'Antikoaguliert (NOAK)',\n    antiplateletsLabel: 'Thrombozytenaggregationshemmer',\n\n    // Buttons\n    analyzeButton: 'Analysieren',\n    analyzing: 'Analysiere...',\n    printResults: 'Ergebnisse drucken',\n    newAssessment: 'Neue Bewertung starten',\n    startOver: 'Von vorn beginnen',\n    goBack: 'Zurück',\n    goHome: 'Zur Startseite',\n\n    // Form sections\n    basicInformation: 'Grundinformationen',\n    biomarkersScores: 'Biomarker & Scores',\n    clinicalSymptoms: 'Klinische Symptome',\n    medicalHistory: 'Anamnese',\n\n    // Form labels with units\n    ageYearsLabel: 'Alter (Jahre)',\n    systolicBpLabel: 'Systolischer RR (mmHg)',\n    diastolicBpLabel: 'Diastolischer RR (mmHg)',\n    gfapValueLabel: 'GFAP-Wert (pg/mL)',\n    fastEdScoreLabel: 'FAST-ED-Score',\n\n    // Help text\n    ageYearsHelp: 'Patientenalter in Jahren',\n    systolicBpHelp: 'Normal: 90-140 mmHg',\n    diastolicBpHelp: 'Normal: 60-90 mmHg',\n    gfapTooltip: 'Hirnverletzungs-Biomarker',\n    gfapTooltipLong: 'Glial Fibrillary Acidic Protein - Hirnverletzungs-Biomarker',\n    gfapRange: 'Bereich: {min} - {max} pg/mL',\n    fastEdTooltip: '0-9 Skala für LVO-Screening',\n\n    // Module buttons\n    analyzeIchRisk: 'ICB-Risiko analysieren',\n    analyzeStrokeRisk: 'Schlaganfall-Risiko analysieren',\n\n    // Alert messages\n    criticalPatient: 'Kritischer Patient',\n    comaAlert: 'Patient ist komatös (GCS < 9). Schnelle Beurteilung erforderlich.',\n    vigilanceReduction: 'Vigilanzminderung (Verminderte Wachheit)',\n\n    // Additional symptom labels\n    armParesis: 'Armparese',\n    legParesis: 'Beinparese',\n    eyeDeviation: 'Blickdeviation',\n    atrialFibrillation: 'Vorhofflimmern',\n    onNoacDoac: 'NOAK/DOAK-Therapie',\n    onAntiplatelets: 'Thrombozytenaggregationshemmer',\n\n    // Results\n    resultsTitle: 'Bewertungsergebnisse',\n    bleedingRiskAssessment: 'Blutungsrisiko-Bewertung',\n    ichProbability: 'ICB-Risiko',\n    lvoProbability: 'LVO-Risiko',\n    lvoMayBePossible: 'Großgefäßverschluss möglich - weitere Abklärung empfohlen',\n    riskFactorsTitle: 'Hauptrisikofaktoren',\n    increasingRisk: 'Risikoerhöhend',\n    decreasingRisk: 'Risikomindernd',\n    noFactors: 'Keine Faktoren',\n    riskLevel: 'Risikostufe',\n    lowRisk: 'Niedriges Risiko',\n    mediumRisk: 'Mittleres Risiko',\n    highRisk: 'Hohes Risiko',\n\n    // Risk levels\n    riskLow: 'Niedrig',\n    riskMedium: 'Mittel',\n    riskHigh: 'Hoch',\n\n    // Risk Factors Analysis\n    riskFactorsAnalysis: 'Risikofaktoren',\n    contributingFactors: 'Beitragende Faktoren zur Bewertung',\n    riskFactors: 'Risikofaktoren',\n    increaseRisk: 'ERHÖHEN',\n    decreaseRisk: 'VERRINGERN',\n    noPositiveFactors: 'Keine erhöhenden Faktoren',\n    noNegativeFactors: 'Keine verringernden Faktoren',\n    ichRiskFactors: 'ICB-Risikofaktoren',\n    lvoRiskFactors: 'LVO-Risikofaktoren',\n\n    // Critical Alert\n    criticalAlertTitle: 'KRITISCHES RISIKO ERKANNT',\n    criticalAlertMessage: 'Hohe Wahrscheinlichkeit einer intrazerebralen Blutung erkannt.',\n    immediateActionsRequired: 'Sofortige Maßnahmen erforderlich',\n    initiateStrokeProtocol: 'Schlaganfall-Protokoll sofort einleiten',\n    urgentCtImaging: 'Dringende CT-Bildgebung erforderlich',\n    considerBpManagement: 'Blutdruckmanagement erwägen',\n    prepareNeurosurgicalConsult: 'Neurochirurgische Konsultation vorbereiten',\n\n    // Help Modal\n    helpTitle: 'Kurzreferenzleitfaden',\n    gcsTitle: 'Glasgow Coma Scale (GCS)',\n    gcsLow: 'GCS < 9: Komatöser Patient - Koma-Modul verwenden',\n    gcsMod: 'GCS 8-12: Mäßige Beeinträchtigung',\n    gcsHigh: 'GCS 13-15: Leichte Beeinträchtigung',\n    fastEdTitle: 'FAST-ED-Score-Komponenten',\n    fastEdFacial: 'Faziale Parese: 0-1 Punkte',\n    fastEdArm: 'Armschwäche: 0-2 Punkte',\n    fastEdSpeech: 'Sprachveränderungen: 0-2 Punkte',\n    fastEdTime: 'Zeit: Kritischer Faktor',\n    fastEdEye: 'Blickdeviation: 0-2 Punkte',\n    fastEdDenial: 'Verneinung/Neglect: 0-2 Punkte',\n    criticalValuesTitle: 'Kritische Werte',\n    criticalBp: 'Systolischer RR > 180: Erhöhtes ICB-Risiko',\n    criticalGfap: 'GFAP > 500 pg/mL: Signifikanter Marker',\n    criticalFastEd: 'FAST-ED ≥ 4: LVO in Betracht ziehen',\n\n    // FAST-ED Calculator Modal\n    fastEdCalculatorTitle: 'FAST-ED-Score-Rechner',\n    fastEdCalculatorSubtitle: 'Klicken Sie, um FAST-ED-Score-Komponenten zu berechnen',\n    facialPalsyTitle: 'Fazialisparese',\n    facialPalsyNormal: 'Normal (0)',\n    facialPalsyMild: 'Vorhanden (1)',\n    armWeaknessTitle: 'Armschwäche',\n    armWeaknessNormal: 'Normal (0)',\n    armWeaknessMild: 'Leichte Schwäche oder Absinken (1)',\n    armWeaknessSevere: 'Schwere Schwäche oder fällt sofort ab (2)',\n    speechChangesTitle: 'Sprachstörungen',\n    speechChangesNormal: 'Normal (0)',\n    speechChangesMild: 'Leichte Dysarthrie oder Aphasie (1)',\n    speechChangesSevere: 'Schwere Dysarthrie oder Aphasie (2)',\n    eyeDeviationTitle: 'Blickdeviation',\n    eyeDeviationNormal: 'Normal (0)',\n    eyeDeviationPartial: 'Partielle Blickdeviation (1)',\n    eyeDeviationForced: 'Forcierte Blickdeviation (2)',\n    denialNeglectTitle: 'Verneinung/Neglect',\n    denialNeglectNormal: 'Normal (0)',\n    denialNeglectPartial: 'Partieller Neglect (1)',\n    denialNeglectComplete: 'Kompletter Neglect (2)',\n    totalScoreTitle: 'Gesamt-FAST-ED-Score',\n    riskLevel: 'Risikostufe',\n    riskLevelLow: 'NIEDRIG (Score <4)',\n    riskLevelHigh: 'HOCH (Score ≥4 - LVO erwägen)',\n    applyScore: 'Score Anwenden',\n    cancel: 'Abbrechen',\n\n    // Results Screen Enhancements\n    riskAnalysis: 'Risikoanalyse',\n    riskAnalysisSubtitle: 'Klinische Faktoren in dieser Bewertung',\n    contributingFactors: 'Beitragende Faktoren',\n    factorsShown: 'angezeigt',\n    positiveFactors: 'Positive Faktoren',\n    negativeFactors: 'Negative Faktoren',\n    clinicalInformation: 'Klinische Informationen',\n    clinicalRecommendations: 'Klinische Empfehlungen',\n    clinicalRec1: 'Sofortige Bildgebung erwägen bei hohem ICB-Risiko',\n    clinicalRec2: 'Stroke-Team aktivieren bei LVO-Score ≥ 50%',\n    clinicalRec3: 'Blutdruck engmaschig überwachen',\n    clinicalRec4: 'Alle Befunde gründlich dokumentieren',\n    noDriverData: 'Keine Treiberdaten verfügbar',\n    driverAnalysisUnavailable: 'Treiberanalyse nicht verfügbar',\n    driverInfoNotAvailable: 'Treiberinformationen von diesem Vorhersagemodell nicht verfügbar',\n    driverAnalysisNotAvailable: 'Treiberanalyse für diese Vorhersage nicht verfügbar',\n    lvoNotPossible: 'LVO-Bewertung mit begrenzten Daten nicht möglich',\n    fullExamRequired: 'Vollständige neurologische Untersuchung für LVO-Screening erforderlich',\n    limitedAssessment: 'Begrenzte Bewertung',\n\n    // Disclaimer\n    disclaimer: 'Klinischer Haftungsausschluss',\n    disclaimerText: 'Dieses Tool dient nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie lokale Protokolle. Kein Ersatz für ärztliche Beurteilung.',\n    importantNote: 'Wichtig',\n    importantText: 'Diese Ergebnisse dienen nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie institutionelle Protokolle.',\n\n    // ICH Volume and Mortality\n    predictedMortality: 'Vorhergesagte 30-Tage-Mortalität',\n    ichVolumeLabel: 'ICB-Volumen',\n    references: 'Referenzen',\n\n    // Input Summary\n    inputSummaryTitle: 'Eingabezusammenfassung',\n    inputSummarySubtitle: 'Für diese Analyse verwendete Werte',\n\n    // Footer\n    privacyLink: 'Datenschutzrichtlinie',\n    disclaimerLink: 'Medizinischer Haftungsausschluss',\n    versionLink: 'Version 2.1.0 - Research Preview',\n\n    // Privacy and disclaimers\n    privacyPolicy: 'Datenschutzrichtlinie: Dieses Tool verarbeitet Daten lokal. Keine Patientendaten werden gespeichert oder übertragen.',\n    medicalDisclaimer: 'Medizinischer Haftungsausschluss: Dieses Tool dient nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie lokale Protokolle.',\n\n    // Error messages\n    networkError: 'Netzwerkfehler - bitte überprüfen Sie Ihre Verbindung und versuchen Sie es erneut',\n    requestTimeout: 'Anfrage-Timeout - bitte versuchen Sie es erneut',\n    apiError: 'Ergebnisse konnten nicht abgerufen werden',\n    validationError: 'Bitte überprüfen Sie Ihre Eingabewerte',\n\n    // Session\n    sessionTimeout: 'Ihre Sitzung war 30 Minuten lang inaktiv. Möchten Sie fortfahren?',\n    unsavedData: 'Sie haben ungespeicherte Daten. Sind Sie sicher, dass Sie verlassen möchten?',\n\n    // Stroke Centers\n    nearestCentersTitle: 'Nächstgelegene Schlaganfall-Zentren',\n    useCurrentLocation: 'Aktuellen Standort verwenden',\n    enterLocationPlaceholder: 'Stadt oder Adresse eingeben...',\n    enterManually: 'Standort manuell eingeben',\n    search: 'Suchen',\n    yourLocation: 'Ihr Standort',\n    recommendedCenters: 'Empfohlene Zentren',\n    alternativeCenters: 'Alternative Zentren',\n    noCentersFound: 'Keine Schlaganfall-Zentren in diesem Bereich gefunden',\n    gettingLocation: 'Standort wird ermittelt',\n    searchingLocation: 'Standort wird gesucht',\n    locationError: 'Standort konnte nicht ermittelt werden',\n    locationPermissionDenied: 'Standortzugriff verweigert. Bitte erlauben Sie Standortzugriff und versuchen Sie es erneut.',\n    locationUnavailable: 'Standortinformationen sind nicht verfügbar',\n    locationTimeout: 'Standortanfrage ist abgelaufen',\n    geolocationNotSupported: 'Geolokalisierung wird von diesem Browser nicht unterstützt',\n    geocodingNotImplemented: 'Standortsuche nicht verfügbar. Bitte verwenden Sie GPS oder geben Sie Koordinaten manuell ein.',\n    tryManualEntry: 'Versuchen Sie, Ihren Standort manuell einzugeben oder GPS zu verwenden.',\n    distanceNote: 'Entfernungen werden als Luftlinie berechnet. Tatsächliche Fahrzeiten können variieren.',\n    travelTimeNote: 'Fahrzeiten berechnet für Rettungsfahrzeuge mit Sondersignalen und Vorfahrtsberechtigung.',\n    calculatingTravelTimes: 'Fahrzeiten werden berechnet',\n    minutes: 'Min',\n    poweredByOrs: 'Fahrzeiten bereitgestellt von OpenRoute Service',\n\n    // Center Types and Services\n    comprehensiveCenter: 'Überregionales Schlaganfall-Zentrum',\n    primaryCenter: 'Regionales Schlaganfall-Zentrum',\n    telemetryCenter: 'Telemedizin-Zentrum',\n    thrombectomy: 'Thrombektomie',\n    neurosurgery: 'Neurochirurgie',\n    icu: 'Intensivstation',\n    telemedicine: 'Telemedizin',\n    stroke_unit: 'Stroke Unit',\n\n    // Actions\n    call: 'Anrufen',\n    directions: 'Wegbeschreibung',\n    emergency: 'Notfall',\n    certified: 'Zertifiziert',\n\n    // Prerequisites Modal\n    prerequisitesTitle: 'Voraussetzungen für Schlaganfall-Triage',\n    prerequisitesIntro: 'Bitte bestätigen Sie, dass alle folgenden Voraussetzungen erfüllt sind:',\n    prerequisitesWarning: 'Alle Voraussetzungen müssen erfüllt sein, um fortzufahren',\n    continue: 'Weiter',\n    acute_deficit: 'Akutes (schweres) neurologisches Defizit vorhanden',\n    symptom_onset: 'Symptombeginn innerhalb 6h',\n    no_preexisting: 'Keine vorbestehende schwere neurologische Defizite',\n    no_trauma: 'Kein Schädelhirntrauma vorhanden',\n\n    // Differential Diagnoses for Stroke Modules\n    differentialDiagnoses: 'Differentialdiagnosen',\n    reconfirmTimeWindow: 'Bitte Zeitfenster rekonfirmieren!',\n    unclearTimeWindow: 'Bei unklarem/erweitertem Zeitfenster ist auch ein beginnend demarkierter Hirninfarkt möglich',\n    rareDiagnoses: 'Seltene Diagnosen wie ein Glioblastom sind auch möglich',\n\n  },\n};\n","// Internationalization utilities for the Stroke Triage Assistant\n\nimport { messages } from './messages.js';\n\nclass I18n {\n  constructor() {\n    this.supportedLanguages = ['en', 'de'];\n    this.currentLanguage = this.detectLanguage();\n  }\n\n  // Detect browser language and default to appropriate language\n  detectLanguage() {\n    // Check if language is already set in localStorage\n    const savedLanguage = localStorage.getItem('language');\n    if (savedLanguage && this.supportedLanguages.includes(savedLanguage)) {\n      return savedLanguage;\n    }\n\n    // Detect browser language\n    const browserLang = navigator.language || navigator.userLanguage;\n    const langCode = browserLang.substring(0, 2).toLowerCase();\n\n    // Default to German if browser language is German, otherwise English\n    return langCode === 'de' ? 'de' : 'en';\n  }\n\n  // Get current language\n  getCurrentLanguage() {\n    return this.currentLanguage;\n  }\n\n  // Set language and save to localStorage\n  setLanguage(language) {\n    if (this.supportedLanguages.includes(language)) {\n      this.currentLanguage = language;\n      localStorage.setItem('language', language);\n\n      // Dispatch custom event for language change\n      window.dispatchEvent(new CustomEvent('languageChanged', {\n        detail: { language },\n      }));\n\n      return true;\n    }\n    return false;\n  }\n\n  // Get supported languages\n  getSupportedLanguages() {\n    return [...this.supportedLanguages];\n  }\n\n  // Translate a message key\n  t(key) {\n    const currentMessages = messages[this.currentLanguage] || messages.en;\n    return currentMessages[key] || key;\n  }\n\n  // Toggle between English and German\n  toggleLanguage() {\n    const newLanguage = this.currentLanguage === 'en' ? 'de' : 'en';\n    return this.setLanguage(newLanguage);\n  }\n\n  // Get language display name\n  getLanguageDisplayName(lang = null) {\n    const language = lang || this.currentLanguage;\n    const displayNames = {\n      en: 'English',\n      de: 'Deutsch',\n    };\n    return displayNames[language] || language;\n  }\n\n  // Format date/time according to current locale\n  formatDateTime(date) {\n    const locale = this.currentLanguage === 'de' ? 'de-DE' : 'en-US';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n    }).format(date);\n  }\n\n  // Format time only according to current locale\n  formatTime(date) {\n    const locale = this.currentLanguage === 'de' ? 'de-DE' : 'en-US';\n    return new Intl.DateTimeFormat(locale, {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n    }).format(date);\n  }\n}\n\n// Create singleton instance\nconst i18n = new I18n();\n\n// Export both the instance and the class\nexport { i18n, I18n };\n\n// Export convenience function for translation\nexport const t = (key) => i18n.t(key);\n","import { t, i18n } from '../../localization/i18n.js';\nimport { navigate } from '../../logic/handlers.js';\nimport { safeSetInnerHTML } from '../../security/html-sanitizer.js';\n\n/**\n * Prerequisites checklist items\n */\nconst getPrerequisites = () => [\n  { id: 'acute_deficit', checked: false },\n  { id: 'symptom_onset', checked: false },\n  { id: 'no_preexisting', checked: false },\n  { id: 'no_trauma', checked: false },\n];\n\n/**\n * Render prerequisites modal\n * @returns {string} HTML for prerequisites modal\n */\nexport function renderPrerequisitesModal() {\n  const prerequisites = getPrerequisites();\n\n  return `\n    <div id=\"prerequisitesModal\" class=\"modal prerequisites-modal\" style=\"display: flex;\">\n      <div class=\"modal-content prerequisites-content\">\n        <div class=\"modal-header\">\n          <h2>${t('prerequisitesTitle')}</h2>\n          <button class=\"modal-close\" id=\"closePrerequisites\">&times;</button>\n        </div>\n        \n        <div class=\"modal-body\">\n          <p class=\"prerequisites-intro\">\n            ${t('prerequisitesIntro')}\n          </p>\n          \n          <div class=\"prerequisites-list\">\n            ${prerequisites.map((item) => `\n              <div class=\"prerequisite-item\" data-id=\"${item.id}\">\n                <label class=\"toggle-switch\">\n                  <input type=\"checkbox\" id=\"${item.id}\" class=\"toggle-input\">\n                  <span class=\"toggle-slider\"></span>\n                </label>\n                <span class=\"prerequisite-label\">\n                  ${t(item.id)}\n                </span>\n              </div>\n            `).join('')}\n          </div>\n          \n          <div class=\"prerequisites-warning\" id=\"prerequisitesWarning\" style=\"display: none;\">\n            <span class=\"warning-icon\">⚠️</span>\n            <span class=\"warning-text\">\n              ${t('prerequisitesWarning')}\n            </span>\n          </div>\n        </div>\n        \n        <div class=\"modal-footer\">\n          <div class=\"button-group\">\n            <button type=\"button\" class=\"secondary\" id=\"cancelPrerequisites\">\n              ${t('cancel')}\n            </button>\n            <button type=\"button\" class=\"primary\" id=\"confirmPrerequisites\">\n              ${t('continue')}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Initialize prerequisites modal event handlers\n */\nexport function initPrerequisitesModal() {\n  const modal = document.getElementById('prerequisitesModal');\n  if (!modal) {\n    //('Prerequisites modal not found');\n    return;\n  }\n\n  //('Initializing prerequisites modal');\n\n  // Close button handlers\n  const closeBtn = document.getElementById('closePrerequisites');\n  const cancelBtn = document.getElementById('cancelPrerequisites');\n  const confirmBtn = document.getElementById('confirmPrerequisites');\n\n  //('Modal buttons found:', { closeBtn: !!closeBtn, cancelBtn: !!cancelBtn, confirmBtn: !!confirmBtn });\n\n  const closeModal = () => {\n    modal.remove();\n    // Navigate back to welcome screen if cancelled\n    navigate('welcome');\n  };\n\n  closeBtn?.addEventListener('click', closeModal);\n  cancelBtn?.addEventListener('click', closeModal);\n\n  // Confirm button handler\n  confirmBtn?.addEventListener('click', (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    //('Prerequisites confirm button clicked');\n    const checkboxes = modal.querySelectorAll('.toggle-input');\n    const allChecked = Array.from(checkboxes).every((cb) => cb.checked);\n    //('All prerequisites checked:', allChecked);\n\n    if (allChecked) {\n      //('Navigating to triage2');\n      modal.remove();\n      // Proceed to triage2 (stroke module selection)\n      navigate('triage2');\n    } else {\n      //('Showing prerequisites warning');\n      // Show warning\n      const warning = document.getElementById('prerequisitesWarning');\n      if (warning) {\n        warning.style.display = 'flex';\n        // Shake animation\n        warning.classList.add('shake');\n        setTimeout(() => warning.classList.remove('shake'), 500);\n      }\n    }\n  });\n\n  // Toggle change handler to hide warning when all checked\n  const checkboxes = modal.querySelectorAll('.toggle-input');\n  checkboxes.forEach((checkbox) => {\n    checkbox.addEventListener('change', () => {\n      const allChecked = Array.from(checkboxes).every((cb) => cb.checked);\n      const warning = document.getElementById('prerequisitesWarning');\n\n      if (allChecked && warning) {\n        warning.style.display = 'none';\n      }\n    });\n  });\n}\n\n/**\n * Show prerequisites modal\n */\nexport function showPrerequisitesModal() {\n  const existingModal = document.getElementById('prerequisitesModal');\n\n  // Always remove existing modal and create fresh one to handle language changes\n  if (existingModal) {\n    existingModal.remove();\n  }\n\n  // Create modal element safely\n  const modalElement = document.createElement('div');\n  try {\n    safeSetInnerHTML(modalElement, renderPrerequisitesModal());\n    const modal = modalElement.firstElementChild;\n\n    if (!modal) {\n      throw new Error('Failed to create modal element');\n    }\n\n    // Insert into DOM\n    document.body.appendChild(modal);\n  } catch (error) {\n    console.error('Prerequisites modal sanitization failed:', error);\n    // Fallback: create basic modal\n    const fallbackModal = document.createElement('div');\n    fallbackModal.className = 'modal prerequisites-modal';\n    fallbackModal.style.display = 'flex';\n    fallbackModal.textContent = 'Prerequisites modal could not be displayed securely. Please refresh the page.';\n    document.body.appendChild(fallbackModal);\n    return;\n  }\n\n  // Initialize immediately since DOM is ready\n  initPrerequisitesModal();\n}\n","import { store } from '../state/store.js';\nimport {\n  predictComaIch, predictLimitedIch, predictFullStroke, APIError,\n} from '../api/client.js';\nimport { t } from '../localization/i18n.js';\nimport { showPrerequisitesModal } from '../ui/components/prerequisites-modal.js';\nimport { safeSetInnerHTML } from '../security/html-sanitizer.js';\n\nimport { validateForm, showValidationErrors } from './validate.js';\nimport { DEV_CONFIG } from '../config.js';\n\nexport function handleTriage1(isComatose) {\n  store.logEvent('triage1_answer', { comatose: isComatose });\n\n  if (isComatose) {\n    navigate('coma');\n  } else {\n    // Show prerequisites modal for conscious patients\n    showPrerequisitesModal();\n  }\n}\n\nexport function handleTriage2(isExaminable) {\n  store.logEvent('triage2_answer', { examinable: isExaminable });\n  const nextScreen = isExaminable ? 'full' : 'limited';\n  navigate(nextScreen);\n}\n\nexport function navigate(screen) {\n  store.logEvent('navigate', {\n    from: store.getState().currentScreen,\n    to: screen,\n  });\n  store.navigate(screen);\n  window.scrollTo(0, 0);\n}\n\nexport function reset() {\n  if (store.hasUnsavedData()) {\n    if (!confirm('Are you sure you want to start over? All entered data will be lost.')) {\n      return;\n    }\n  }\n  store.logEvent('reset');\n  store.reset();\n}\n\nexport function goBack() {\n  const success = store.goBack();\n\n  if (success) {\n    store.logEvent('navigate_back');\n    window.scrollTo(0, 0);\n  } else {\n    goHome();\n  }\n}\n\nexport function goHome() {\n  store.logEvent('navigate_home');\n  store.goHome();\n  window.scrollTo(0, 0);\n}\n\nexport async function handleSubmit(e, container) {\n  e.preventDefault();\n  const form = e.target;\n  const { module } = form.dataset;\n\n  // Validate form\n  const validation = validateForm(form);\n  if (!validation.isValid) {\n    showValidationErrors(container, validation.validationErrors);\n    try {\n      // Focus first invalid field and announce summary for screen readers\n      const firstErrorName = Object.keys(validation.validationErrors)[0];\n      if (firstErrorName && form.elements[firstErrorName]) {\n        const el = form.elements[firstErrorName];\n        el.focus({ preventScroll: true });\n        el.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      }\n      const sr = document.createElement('div');\n      sr.className = 'sr-only';\n      sr.setAttribute('role', 'status');\n      sr.setAttribute('aria-live', 'polite');\n      const errorCount = Object.keys(validation.validationErrors).length;\n      sr.textContent = `${errorCount} field${errorCount === 1 ? '' : 's'} need attention.`;\n      document.body.appendChild(sr);\n      setTimeout(() => sr.remove(), 1200);\n    } catch {}\n    return;\n  }\n\n  // Collect inputs - handle all form elements including unchecked checkboxes\n  const inputs = {};\n\n  // Process all form elements to ensure checkboxes are included\n  Array.from(form.elements).forEach((element) => {\n    if (element.name) {\n      if (element.type === 'checkbox') {\n        inputs[element.name] = element.checked;\n      } else if (element.type === 'number') {\n        const n = parseFloat(element.value);\n        inputs[element.name] = isNaN(n) ? 0 : n;\n      } else if (element.type === 'hidden') {\n        // Handle hidden fields (like armparese from FAST-ED)\n        if (element.name === 'armparese') {\n          inputs[element.name] = element.value === 'true';\n        } else {\n          inputs[element.name] = element.value;\n        }\n      } else {\n        inputs[element.name] = element.value;\n      }\n    }\n  });\n\n  // Store form data\n  store.setFormData(module, inputs);\n\n  // Show loading state\n  const button = form.querySelector('button[type=submit]');\n  const originalContent = button ? button.innerHTML : '';\n  if (button) {\n    button.disabled = true;\n    try {\n      safeSetInnerHTML(button, `<span class=\"loading-spinner\"></span> ${t('analyzing')}`);\n    } catch (error) {\n      console.error('Button loading state sanitization failed:', error);\n      button.textContent = t('analyzing') || 'Analyzing...';\n    }\n  }\n\n  try {\n    console.log('[Submit] Module:', module);\n    console.log('[Submit] Inputs:', inputs);\n    // Run models based on module\n    let results;\n\n    switch (module) {\n      case 'coma':\n        const comaResult = await predictComaIch(inputs);\n        results = {\n          ich: {\n            ...comaResult,\n            module: 'Coma'\n          },\n          lvo: null,\n        };\n        break;\n\n      case 'limited':\n        const limitedResult = await predictLimitedIch(inputs);\n        results = {\n          ich: {\n            ...limitedResult,\n            module: 'Limited'\n          },\n          lvo: { notPossible: true },\n        };\n        break;\n\n      case 'full':\n        results = await predictFullStroke(inputs);\n        console.log('[Submit] Full results:', {\n          ich: !!results?.ich,\n          lvo: !!results?.lvo,\n          ichP: results?.ich?.probability,\n          lvoP: results?.lvo?.probability\n        });\n        // Validate results structure\n        if (!results || !results.ich) {\n          throw new Error('Invalid response structure from Full Stroke API');\n        }\n        // Fix ICH probability mapping for Full Stroke\n        if (results.ich && !results.ich.probability && results.ich.ich_probability !== undefined) {\n          results.ich.probability = results.ich.ich_probability;\n          console.log('[Submit] Fixed ICH probability for Full Stroke:', results.ich.probability);\n        }\n        // Ensure module property is set\n        if (results.ich && !results.ich.module) {\n          results.ich.module = 'Full Stroke';\n        }\n        if (results.lvo && !results.lvo.module) {\n          results.lvo.module = 'Full Stroke';\n        }\n        break;\n\n      default:\n        throw new Error(`Unknown module: ${module}`);\n    }\n\n    console.log('[Submit] Setting results in store:', results);\n    store.setResults(results);\n    store.logEvent('models_complete', { module, results });\n\n    // Verify results were stored\n    const storedState = store.getState();\n    console.log('[Submit] State after setResults:', {\n      hasResults: !!storedState.results,\n      currentScreen: storedState.currentScreen\n    });\n\n    console.log('[Submit] Navigating to results...');\n    navigate('results');\n    // Visual confirmation that results screen loaded\n    showToast('✅ Results loaded', 2000);\n    // Double-check navigation and force if needed\n    setTimeout(() => {\n      try {\n        const cs = store.getState().currentScreen;\n        console.log('[Submit] currentScreen after navigate:', cs);\n        if (cs !== 'results') {\n          store.navigate('results');\n          showToast('🔁 Forced results view', 1500);\n        }\n      } catch {}\n    }, 0);\n  } catch (error) {\n    // Error running models - handle gracefully, with Full module fallback in preview\n    const isLocalPreview = ['localhost', '127.0.0.1', '0.0.0.0'].includes(window.location.hostname) && !(import.meta && import.meta.env && import.meta.env.DEV);\n    if (module === 'full' && isLocalPreview) {\n      try {\n        const m = DEV_CONFIG.mockApiResponses.full_stroke;\n        const ich = m.ich_prediction || {};\n        const lvo = m.lvo_prediction || {};\n        const pIch = parseFloat(ich.probability) || 0;\n        const pLvo = parseFloat(lvo.probability) || 0;\n        const fallbackResults = {\n          ich: {\n            probability: pIch > 1 ? pIch / 100 : pIch,\n            drivers: ich.drivers || null,\n            confidence: parseFloat(ich.confidence) || 0.85,\n            module: 'Full Stroke'\n          },\n          lvo: {\n            probability: pLvo > 1 ? pLvo / 100 : pLvo,\n            drivers: lvo.drivers || null,\n            confidence: parseFloat(lvo.confidence) || 0.85,\n            module: 'Full Stroke'\n          }\n        };\n        store.setResults(fallbackResults);\n        store.logEvent('models_complete_fallback', { module, reason: error.message });\n        navigate('results');\n        return;\n      } catch (e) {\n        // Continue to show error below\n      }\n    }\n\n    let errorMessage = 'An error occurred during analysis. Please try again.';\n    if (error instanceof APIError) {\n      errorMessage = error.message;\n    }\n\n    showError(container, errorMessage);\n\n    if (button) {\n      button.disabled = false;\n      try {\n        safeSetInnerHTML(button, originalContent);\n      } catch (e2) {\n        console.error('Button restore sanitization failed:', e2);\n        button.textContent = 'Submit';\n      }\n    }\n  }\n}\n\nfunction showError(container, message) {\n  // Remove existing error alerts\n  container.querySelectorAll('.critical-alert').forEach((alert) => {\n    if (alert.querySelector('h4')?.textContent?.includes('Error')) {\n      alert.remove();\n    }\n  });\n\n  const alert = document.createElement('div');\n  alert.className = 'critical-alert';\n\n  // Create safe DOM structure without innerHTML to prevent XSS\n  const h4 = document.createElement('h4');\n  const iconSpan = document.createElement('span');\n  iconSpan.className = 'alert-icon';\n  iconSpan.textContent = '⚠️';\n  h4.appendChild(iconSpan);\n  h4.appendChild(document.createTextNode(' Error'));\n\n  const p = document.createElement('p');\n  p.textContent = message; // Safe text content only\n\n  alert.appendChild(h4);\n  alert.appendChild(p);\n\n  const containerDiv = container.querySelector('.container');\n  if (containerDiv) {\n    containerDiv.prepend(alert);\n  } else {\n    container.prepend(alert);\n  }\n\n  setTimeout(() => alert.remove(), 10000);\n}\n\n// Lightweight toast helper (overlays at top center)\nfunction showToast(message, duration = 2000) {\n  try {\n    const toast = document.createElement('div');\n    toast.textContent = message;\n    toast.setAttribute('role', 'status');\n    toast.setAttribute('aria-live', 'polite');\n    toast.style.cssText = `\n      position: fixed;\n      top: 16px;\n      left: 50%;\n      transform: translateX(-50%);\n      background: #0066CC;\n      color: #fff;\n      padding: 10px 14px;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.2);\n      z-index: 10000;\n      font-size: 14px;\n      pointer-events: none;\n      opacity: 0;\n      transition: opacity 160ms ease;\n    `;\n    document.body.appendChild(toast);\n    requestAnimationFrame(() => { toast.style.opacity = '1'; });\n    setTimeout(() => {\n      toast.style.opacity = '0';\n      setTimeout(() => toast.remove(), 200);\n    }, duration);\n  } catch {}\n}\n","/**\n * Comprehensive Error Handling Utilities\n * iGFAP Stroke Triage Assistant - Enterprise Error Management\n *\n * Provides robust error handling for production medical applications\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\n/**\n * Error severity levels\n */\nexport const ERROR_SEVERITY = {\n  LOW: 'low',\n  MEDIUM: 'medium',\n  HIGH: 'high',\n  CRITICAL: 'critical'\n};\n\n/**\n * Error categories for medical applications\n */\nexport const ERROR_CATEGORIES = {\n  NETWORK: 'network',\n  VALIDATION: 'validation',\n  AUTHENTICATION: 'authentication',\n  CALCULATION: 'calculation',\n  STORAGE: 'storage',\n  RENDERING: 'rendering',\n  MEDICAL: 'medical',\n  SECURITY: 'security'\n};\n\n/**\n * Medical error codes\n */\nexport const MEDICAL_ERROR_CODES = {\n  INVALID_VITAL_SIGNS: 'MED001',\n  CALCULATION_FAILED: 'MED002',\n  DATA_INCOMPLETE: 'MED003',\n  PREDICTION_UNAVAILABLE: 'MED004',\n  SAFETY_THRESHOLD_EXCEEDED: 'MED005'\n};\n\n/**\n * Enhanced error class for medical applications\n */\nexport class MedicalError extends Error {\n  constructor(message, code, category = ERROR_CATEGORIES.MEDICAL, severity = ERROR_SEVERITY.MEDIUM) {\n    super(message);\n    this.name = 'MedicalError';\n    this.code = code;\n    this.category = category;\n    this.severity = severity;\n    this.timestamp = new Date().toISOString();\n    this.context = {};\n  }\n\n  /**\n   * Add context to error\n   * @param {Object} context - Error context\n   * @returns {MedicalError} - This error instance\n   */\n  withContext(context) {\n    this.context = { ...this.context, ...context };\n    return this;\n  }\n\n  /**\n   * Get user-friendly error message\n   * @returns {string} - User-friendly message\n   */\n  getUserMessage() {\n    switch (this.category) {\n      case ERROR_CATEGORIES.NETWORK:\n        return 'Network connection issue. Please check your internet connection and try again.';\n      case ERROR_CATEGORIES.VALIDATION:\n        return 'Please check your input data and try again.';\n      case ERROR_CATEGORIES.AUTHENTICATION:\n        return 'Authentication failed. Please log in again.';\n      case ERROR_CATEGORIES.CALCULATION:\n        return 'Unable to complete calculation. Please verify your input data.';\n      case ERROR_CATEGORIES.MEDICAL:\n        return 'Medical calculation could not be completed. Please verify all clinical data.';\n      default:\n        return 'An unexpected error occurred. Please try again.';\n    }\n  }\n}\n\n/**\n * Global error handler for unhandled errors\n */\nclass GlobalErrorHandler {\n  constructor() {\n    this.errorQueue = [];\n    this.maxQueueSize = 100;\n    this.setupGlobalHandlers();\n  }\n\n  setupGlobalHandlers() {\n    // Handle unhandled promise rejections\n    window.addEventListener('unhandledrejection', (event) => {\n      this.handleError(event.reason, ERROR_CATEGORIES.NETWORK, ERROR_SEVERITY.HIGH);\n      event.preventDefault();\n    });\n\n    // Handle uncaught errors\n    window.addEventListener('error', (event) => {\n      this.handleError(event.error, ERROR_CATEGORIES.RENDERING, ERROR_SEVERITY.MEDIUM);\n    });\n  }\n\n  handleError(error, category = ERROR_CATEGORIES.NETWORK, severity = ERROR_SEVERITY.MEDIUM) {\n    const errorEntry = {\n      error: error instanceof Error ? error : new Error(String(error)),\n      category,\n      severity,\n      timestamp: new Date().toISOString(),\n      userAgent: navigator.userAgent.substring(0, 100),\n      url: window.location.href\n    };\n\n    // Add to queue\n    this.errorQueue.push(errorEntry);\n    if (this.errorQueue.length > this.maxQueueSize) {\n      this.errorQueue.shift();\n    }\n\n    // Handle critical errors immediately\n    if (severity === ERROR_SEVERITY.CRITICAL) {\n      this.handleCriticalError(errorEntry);\n    }\n  }\n\n  handleCriticalError(errorEntry) {\n    // For critical medical errors, show immediate user notification\n    if (errorEntry.category === ERROR_CATEGORIES.MEDICAL) {\n      this.showMedicalAlert(errorEntry.error.message);\n    }\n  }\n\n  showMedicalAlert(message) {\n    // Create a critical medical alert\n    const alert = document.createElement('div');\n    alert.className = 'critical-medical-alert';\n    alert.style.cssText = `\n      position: fixed;\n      top: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      background: #ff4444;\n      color: white;\n      padding: 15px 20px;\n      border-radius: 8px;\n      z-index: 10000;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n      max-width: 90%;\n      text-align: center;\n    `;\n    alert.textContent = `⚠️ Medical Error: ${message}`;\n\n    document.body.appendChild(alert);\n\n    // Auto-remove after 10 seconds\n    setTimeout(() => {\n      if (document.body.contains(alert)) {\n        document.body.removeChild(alert);\n      }\n    }, 10000);\n  }\n\n  getErrorSummary() {\n    return {\n      totalErrors: this.errorQueue.length,\n      criticalErrors: this.errorQueue.filter(e => e.severity === ERROR_SEVERITY.CRITICAL).length,\n      recentErrors: this.errorQueue.slice(-10)\n    };\n  }\n}\n\n// Initialize global error handler\nconst globalErrorHandler = new GlobalErrorHandler();\n\n/**\n * Wrapper for async operations with comprehensive error handling\n * @param {Function} asyncFn - Async function to execute\n * @param {Object} options - Error handling options\n * @returns {Promise} - Promise with error handling\n */\nexport async function safeAsync(asyncFn, options = {}) {\n  const {\n    category = ERROR_CATEGORIES.NETWORK,\n    severity = ERROR_SEVERITY.MEDIUM,\n    fallback = null,\n    timeout = 30000,\n    retries = 0,\n    context = {}\n  } = options;\n\n  let lastError;\n\n  for (let attempt = 0; attempt <= retries; attempt++) {\n    try {\n      // Add timeout wrapper\n      const timeoutPromise = new Promise((_, reject) => {\n        setTimeout(() => reject(new Error('Operation timeout')), timeout);\n      });\n\n      const result = await Promise.race([asyncFn(), timeoutPromise]);\n      return result;\n\n    } catch (error) {\n      lastError = error;\n\n      // Log error\n      globalErrorHandler.handleError(error, category, severity);\n\n      // If we have retries left, wait and retry\n      if (attempt < retries) {\n        await new Promise(resolve => setTimeout(resolve, 1000 * (attempt + 1)));\n        continue;\n      }\n\n      // Final attempt failed\n      if (fallback !== null) {\n        return typeof fallback === 'function' ? fallback(error) : fallback;\n      }\n\n      // Throw enhanced error\n      const enhancedError = new MedicalError(\n        error.message || 'Operation failed',\n        error.code || 'UNKNOWN',\n        category,\n        severity\n      ).withContext(context);\n\n      throw enhancedError;\n    }\n  }\n}\n\n/**\n * Safe wrapper for medical calculations\n * @param {Function} calculationFn - Medical calculation function\n * @param {Object} inputs - Input data\n * @param {Object} options - Calculation options\n * @returns {Promise} - Calculation result with error handling\n */\nexport async function safeMedicalCalculation(calculationFn, inputs, options = {}) {\n  return safeAsync(\n    () => calculationFn(inputs),\n    {\n      category: ERROR_CATEGORIES.MEDICAL,\n      severity: ERROR_SEVERITY.HIGH,\n      fallback: () => ({\n        error: true,\n        message: 'Medical calculation unavailable',\n        fallbackUsed: true\n      }),\n      context: {\n        operation: 'medical_calculation',\n        inputKeys: Object.keys(inputs || {}),\n        ...options.context\n      },\n      ...options\n    }\n  );\n}\n\n/**\n * Safe wrapper for network requests\n * @param {Function} requestFn - Network request function\n * @param {Object} options - Request options\n * @returns {Promise} - Request result with error handling\n */\nexport async function safeNetworkRequest(requestFn, options = {}) {\n  return safeAsync(requestFn, {\n    category: ERROR_CATEGORIES.NETWORK,\n    severity: ERROR_SEVERITY.MEDIUM,\n    retries: 2,\n    timeout: 10000,\n    fallback: () => ({\n      error: true,\n      message: 'Network request failed',\n      offline: true\n    }),\n    ...options\n  });\n}\n\n/**\n * Safe wrapper for authentication operations\n * @param {Function} authFn - Authentication function\n * @param {Object} options - Auth options\n * @returns {Promise} - Auth result with error handling\n */\nexport async function safeAuthOperation(authFn, options = {}) {\n  return safeAsync(authFn, {\n    category: ERROR_CATEGORIES.AUTHENTICATION,\n    severity: ERROR_SEVERITY.HIGH,\n    timeout: 15000,\n    fallback: () => ({\n      success: false,\n      error: true,\n      message: 'Authentication service unavailable'\n    }),\n    ...options\n  });\n}\n\n/**\n * Create error boundary for React-like error handling\n * @param {HTMLElement} element - DOM element to wrap\n * @param {Function} renderFn - Function to render content\n * @param {Function} errorFn - Function to render error state\n */\nexport function createErrorBoundary(element, renderFn, errorFn) {\n  try {\n    renderFn();\n  } catch (error) {\n    globalErrorHandler.handleError(error, ERROR_CATEGORIES.RENDERING, ERROR_SEVERITY.MEDIUM);\n\n    if (errorFn) {\n      errorFn(error);\n    } else {\n      element.textContent = 'Content could not be displayed due to an error.';\n    }\n  }\n}\n\n/**\n * Validate medical input data\n * @param {Object} data - Input data\n * @param {Object} schema - Validation schema\n * @returns {Object} - Validation result\n */\nexport function validateMedicalInputs(data, schema) {\n  const errors = [];\n  const warnings = [];\n\n  Object.keys(schema).forEach(key => {\n    const rule = schema[key];\n    const value = data[key];\n\n    // Required field check\n    if (rule.required && (value === undefined || value === null || value === '')) {\n      errors.push({\n        field: key,\n        code: MEDICAL_ERROR_CODES.DATA_INCOMPLETE,\n        message: `${key} is required`\n      });\n      return;\n    }\n\n    // Type check\n    if (value !== undefined && rule.type) {\n      const expectedType = rule.type;\n      const actualType = typeof value;\n\n      if (expectedType === 'number' && (isNaN(value) || actualType !== 'number')) {\n        errors.push({\n          field: key,\n          code: MEDICAL_ERROR_CODES.INVALID_VITAL_SIGNS,\n          message: `${key} must be a valid number`\n        });\n        return;\n      }\n    }\n\n    // Range check for medical values\n    if (value !== undefined && typeof value === 'number') {\n      if (rule.min !== undefined && value < rule.min) {\n        errors.push({\n          field: key,\n          code: MEDICAL_ERROR_CODES.INVALID_VITAL_SIGNS,\n          message: `${key} must be at least ${rule.min}`\n        });\n      }\n\n      if (rule.max !== undefined && value > rule.max) {\n        errors.push({\n          field: key,\n          code: MEDICAL_ERROR_CODES.INVALID_VITAL_SIGNS,\n          message: `${key} must not exceed ${rule.max}`\n        });\n      }\n\n      // Medical warning thresholds\n      if (rule.warningMin !== undefined && value < rule.warningMin) {\n        warnings.push({\n          field: key,\n          message: `${key} is below typical range (${rule.warningMin})`\n        });\n      }\n\n      if (rule.warningMax !== undefined && value > rule.warningMax) {\n        warnings.push({\n          field: key,\n          message: `${key} is above typical range (${rule.warningMax})`\n        });\n      }\n    }\n  });\n\n  return {\n    isValid: errors.length === 0,\n    errors,\n    warnings,\n    hasWarnings: warnings.length > 0\n  };\n}\n\n/**\n * Get error handler instance for debugging\n */\nexport function getErrorHandler() {\n  return globalErrorHandler;\n}\n\n/**\n * Export error classes\n */\nexport { GlobalErrorHandler };","/**\n * Medical Type Definitions for iGFAP Stroke Triage Assistant\n * Provides comprehensive type safety for medical calculations and data\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\n/**\n * @typedef {Object} PatientData\n * @property {number} age - Patient age in years (0-120)\n * @property {string} gender - Patient gender ('male' | 'female' | 'other')\n * @property {number} gfap - GFAP biomarker level in pg/mL (29-10001)\n * @property {number} [nihss] - NIHSS score (0-42)\n * @property {number} [gcs] - Glasgow Coma Scale (3-15)\n * @property {boolean} [hypertension] - History of hypertension\n * @property {boolean} [diabetes] - History of diabetes\n * @property {boolean} [smoking] - Smoking status\n * @property {number} [sbp] - Systolic blood pressure (mmHg)\n * @property {number} [dbp] - Diastolic blood pressure (mmHg)\n */\n\n/**\n * @typedef {Object} ICHRiskResult\n * @property {number} probability - ICH risk probability (0-1)\n * @property {number} percentage - ICH risk percentage (0-100)\n * @property {'low'|'moderate'|'high'|'critical'} riskLevel - Risk classification\n * @property {string} module - Module used for calculation\n * @property {string} timestamp - ISO timestamp of calculation\n */\n\n/**\n * @typedef {Object} ICHVolumeResult\n * @property {number} volume - Predicted volume in mL\n * @property {number} confidence - Confidence level (0-1)\n * @property {'small'|'moderate'|'large'|'massive'} volumeCategory - Volume classification\n * @property {string} timestamp - ISO timestamp of calculation\n */\n\n/**\n * @typedef {Object} ValidationResult\n * @property {boolean} isValid - Whether the data is valid\n * @property {string[]} errors - Array of validation error messages\n * @property {string[]} warnings - Array of validation warnings\n */\n\n/**\n * @typedef {Object} PredictionRequest\n * @property {PatientData} data - Patient data for prediction\n * @property {string} module - Module type ('coma'|'limited'|'full')\n * @property {string} timestamp - ISO timestamp of request\n * @property {string} sessionId - Session identifier\n */\n\n/**\n * @typedef {Object} PredictionResponse\n * @property {boolean} success - Whether prediction was successful\n * @property {ICHRiskResult} [ichRisk] - ICH risk prediction result\n * @property {ICHVolumeResult} [ichVolume] - ICH volume prediction result\n * @property {string} [error] - Error message if prediction failed\n * @property {number} processingTime - Time taken for prediction (ms)\n */\n\n/**\n * @typedef {Object} QualityMetric\n * @property {string} name - Metric name\n * @property {'count'|'duration'|'percentage'|'average'} type - Metric type\n * @property {number} value - Metric value\n * @property {string} timestamp - ISO timestamp\n * @property {Object} [metadata] - Additional metric metadata\n */\n\n/**\n * @typedef {Object} AuditEvent\n * @property {string} eventType - Type of event ('data_entry'|'prediction'|'error')\n * @property {string} timestamp - ISO timestamp\n * @property {string} userId - User identifier\n * @property {Object} data - Event-specific data\n * @property {string} [sessionId] - Session identifier\n */\n\n/**\n * @typedef {Object} SessionInfo\n * @property {string} sessionId - Unique session identifier\n * @property {string} userId - User identifier\n * @property {number} startTime - Session start timestamp\n * @property {number} lastActivity - Last activity timestamp\n * @property {boolean} isValid - Whether session is still valid\n */\n\n/**\n * @typedef {Object} AppStatus\n * @property {boolean} isInitialized - Whether app is initialized\n * @property {boolean} isAuthenticated - Whether user is authenticated\n * @property {string} currentScreen - Current screen name\n * @property {Object} features - Feature availability status\n * @property {string} version - Application version\n */\n\n/**\n * @typedef {Object} ErrorContext\n * @property {string} operation - Operation being performed\n * @property {string} [component] - Component where error occurred\n * @property {Object} [metadata] - Additional error metadata\n * @property {string} timestamp - ISO timestamp\n */\n\n/**\n * @typedef {Object} SafeOperationOptions\n * @property {'AUTHENTICATION'|'NETWORK'|'MEDICAL'|'STORAGE'|'RENDERING'} category - Error category\n * @property {'LOW'|'MEDIUM'|'HIGH'|'CRITICAL'} severity - Error severity\n * @property {number} [timeout] - Operation timeout in milliseconds\n * @property {number} [retries] - Number of retry attempts\n * @property {ErrorContext} context - Error context information\n */\n\n/**\n * Type validation functions\n */\n\n/**\n * Validates patient data structure and ranges\n * @param {any} data - Data to validate\n * @returns {ValidationResult} Validation result\n */\nexport function validatePatientData(data) {\n  const errors = [];\n  const warnings = [];\n\n  if (!data || typeof data !== 'object') {\n    errors.push('Patient data must be an object');\n    return { isValid: false, errors, warnings };\n  }\n\n  // Required fields validation\n  if (typeof data.age !== 'number' || data.age < 0 || data.age > 120) {\n    errors.push('Age must be a number between 0 and 120');\n  }\n\n  if (!['male', 'female', 'other'].includes(data.gender)) {\n    errors.push('Gender must be \"male\", \"female\", or \"other\"');\n  }\n\n  if (typeof data.gfap !== 'number' || data.gfap < 29 || data.gfap > 10001) {\n    errors.push('GFAP must be a number between 29 and 10001 pg/mL');\n  }\n\n  // Optional fields validation\n  if (data.nihss !== undefined && (typeof data.nihss !== 'number' || data.nihss < 0 || data.nihss > 42)) {\n    errors.push('NIHSS must be a number between 0 and 42');\n  }\n\n  if (data.gcs !== undefined && (typeof data.gcs !== 'number' || data.gcs < 3 || data.gcs > 15)) {\n    errors.push('GCS must be a number between 3 and 15');\n  }\n\n  if (data.sbp !== undefined && (typeof data.sbp !== 'number' || data.sbp < 50 || data.sbp > 300)) {\n    warnings.push('Systolic BP should typically be between 50-300 mmHg');\n  }\n\n  if (data.dbp !== undefined && (typeof data.dbp !== 'number' || data.dbp < 30 || data.dbp > 200)) {\n    warnings.push('Diastolic BP should typically be between 30-200 mmHg');\n  }\n\n  return { isValid: errors.length === 0, errors, warnings };\n}\n\n/**\n * Validates ICH risk result\n * @param {any} result - Result to validate\n * @returns {ValidationResult} Validation result\n */\nexport function validateICHRiskResult(result) {\n  const errors = [];\n  const warnings = [];\n\n  if (!result || typeof result !== 'object') {\n    errors.push('ICH risk result must be an object');\n    return { isValid: false, errors, warnings };\n  }\n\n  if (typeof result.probability !== 'number' || result.probability < 0 || result.probability > 1) {\n    errors.push('Probability must be a number between 0 and 1');\n  }\n\n  if (typeof result.percentage !== 'number' || result.percentage < 0 || result.percentage > 100) {\n    errors.push('Percentage must be a number between 0 and 100');\n  }\n\n  if (!['low', 'moderate', 'high', 'critical'].includes(result.riskLevel)) {\n    errors.push('Risk level must be \"low\", \"moderate\", \"high\", or \"critical\"');\n  }\n\n  if (!result.timestamp || !Date.parse(result.timestamp)) {\n    errors.push('Timestamp must be a valid ISO date string');\n  }\n\n  return { isValid: errors.length === 0, errors, warnings };\n}\n\n/**\n * Type guard functions\n */\n\n/**\n * Checks if value is valid patient data\n * @param {any} value - Value to check\n * @returns {value is PatientData} Type guard result\n */\nexport function isPatientData(value) {\n  const validation = validatePatientData(value);\n  return validation.isValid;\n}\n\n/**\n * Checks if value is valid ICH risk result\n * @param {any} value - Value to check\n * @returns {value is ICHRiskResult} Type guard result\n */\nexport function isICHRiskResult(value) {\n  const validation = validateICHRiskResult(value);\n  return validation.isValid;\n}\n\n/**\n * Medical calculation constants with type safety\n */\nexport const MEDICAL_CONSTANTS = {\n  /** @type {[number, number]} Age range */\n  AGE_RANGE: [0, 120],\n\n  /** @type {[number, number]} GFAP range in pg/mL */\n  GFAP_RANGE: [29, 10001],\n\n  /** @type {[number, number]} NIHSS range */\n  NIHSS_RANGE: [0, 42],\n\n  /** @type {[number, number]} GCS range */\n  GCS_RANGE: [3, 15],\n\n  /** @type {Object.<string, number>} Risk thresholds */\n  RISK_THRESHOLDS: {\n    LOW: 0.25,\n    MODERATE: 0.50,\n    HIGH: 0.70,\n    CRITICAL: 0.85\n  },\n\n  /** @type {Object.<string, number>} Volume thresholds in mL */\n  VOLUME_THRESHOLDS: {\n    SMALL: 10,\n    MODERATE: 30,\n    LARGE: 60,\n    MASSIVE: 100\n  }\n};\n\n/**\n * Runtime type checking utility\n */\nexport class TypeChecker {\n  /**\n   * Ensures value matches expected type with detailed error\n   * @param {any} value - Value to check\n   * @param {string} expectedType - Expected type description\n   * @param {string} fieldName - Field name for error messages\n   * @throws {TypeError} If type check fails\n   */\n  static ensureType(value, expectedType, fieldName) {\n    let isValid = false;\n    let actualType = typeof value;\n\n    switch (expectedType) {\n      case 'PatientData':\n        isValid = isPatientData(value);\n        actualType = 'Invalid PatientData';\n        break;\n      case 'ICHRiskResult':\n        isValid = isICHRiskResult(value);\n        actualType = 'Invalid ICHRiskResult';\n        break;\n      case 'number':\n        isValid = typeof value === 'number' && !isNaN(value);\n        break;\n      case 'string':\n        isValid = typeof value === 'string';\n        break;\n      case 'boolean':\n        isValid = typeof value === 'boolean';\n        break;\n      default:\n        isValid = typeof value === expectedType;\n    }\n\n    if (!isValid) {\n      throw new TypeError(\n        `Type error in ${fieldName}: expected ${expectedType}, got ${actualType}. ` +\n        `This is a critical error in medical calculations.`\n      );\n    }\n  }\n\n  /**\n   * Validates number is within range\n   * @param {number} value - Value to check\n   * @param {[number, number]} range - [min, max] range\n   * @param {string} fieldName - Field name for error messages\n   * @throws {RangeError} If value is out of range\n   */\n  static ensureRange(value, range, fieldName) {\n    this.ensureType(value, 'number', fieldName);\n    const [min, max] = range;\n\n    if (value < min || value > max) {\n      throw new RangeError(\n        `Range error in ${fieldName}: value ${value} must be between ${min} and ${max}. ` +\n        `This is a critical error in medical calculations.`\n      );\n    }\n  }\n}","/**\n * Professional Medical Logging System\n * iGFAP Stroke Triage Assistant - Enterprise-Grade Logging\n *\n * Provides structured, secure logging for medical applications with:\n * - HIPAA compliance (no PHI in logs)\n * - Structured JSON logging\n * - Performance monitoring\n * - Error tracking\n * - Audit trail capabilities\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { safeAsync, ERROR_CATEGORIES } from './error-handler.js';\n\n/**\n * @typedef {Object} LogEntry\n * @property {string} timestamp - ISO timestamp\n * @property {string} level - Log level\n * @property {string} category - Log category\n * @property {string} message - Log message\n * @property {Object} [context] - Additional context (sanitized)\n * @property {string} [sessionId] - Session identifier\n * @property {string} [userId] - User identifier (anonymized)\n * @property {Object} [performance] - Performance metrics\n * @property {string} [stackTrace] - Stack trace for errors\n */\n\n/**\n * Log levels with priority ordering\n */\nexport const LOG_LEVELS = {\n  DEBUG: { level: 0, name: 'DEBUG', color: '#6366f1' },\n  INFO: { level: 1, name: 'INFO', color: '#10b981' },\n  WARN: { level: 2, name: 'WARN', color: '#f59e0b' },\n  ERROR: { level: 3, name: 'ERROR', color: '#ef4444' },\n  CRITICAL: { level: 4, name: 'CRITICAL', color: '#dc2626' }\n};\n\n/**\n * Log categories for medical application\n */\nexport const LOG_CATEGORIES = {\n  AUTHENTICATION: 'AUTH',\n  MEDICAL_CALCULATION: 'MEDICAL',\n  NETWORK: 'NETWORK',\n  PERFORMANCE: 'PERF',\n  SECURITY: 'SECURITY',\n  USER_INTERACTION: 'UI',\n  DATA_VALIDATION: 'VALIDATION',\n  AUDIT: 'AUDIT',\n  SYSTEM: 'SYSTEM',\n  ERROR: 'ERROR'\n};\n\n/**\n * Professional Medical Logger Class\n */\nexport class MedicalLogger {\n  constructor() {\n    this.logLevel = this.getLogLevel();\n    this.sessionId = this.generateSessionId();\n    this.logBuffer = [];\n    this.maxBufferSize = 1000;\n    this.isProduction = window.location.hostname !== 'localhost' && window.location.hostname !== '127.0.0.1';\n    this.enableConsole = !this.isProduction;\n    this.enableStorage = true;\n    this.enableNetwork = false; // Would send to logging service in production\n\n    this.setupErrorHandlers();\n    this.startPeriodicFlush();\n  }\n\n  /**\n   * Get configured log level from environment or localStorage\n   */\n  getLogLevel() {\n    try {\n      const stored = localStorage.getItem('medicalLogLevel');\n      if (stored && LOG_LEVELS[stored.toUpperCase()]) {\n        return LOG_LEVELS[stored.toUpperCase()].level;\n      }\n    } catch (error) {\n      // localStorage not available\n    }\n\n    // Default to INFO in production, DEBUG in development\n    return this.isProduction ? LOG_LEVELS.INFO.level : LOG_LEVELS.DEBUG.level;\n  }\n\n  /**\n   * Generate unique session identifier\n   */\n  generateSessionId() {\n    const timestamp = Date.now().toString(36);\n    const random = Math.random().toString(36).substring(2, 8);\n    return `sess_${timestamp}_${random}`;\n  }\n\n  /**\n   * Setup global error handlers\n   */\n  setupErrorHandlers() {\n    // Capture unhandled errors\n    window.addEventListener('error', (event) => {\n      try {\n        this.critical('Unhandled JavaScript Error', {\n          category: LOG_CATEGORIES.ERROR,\n          message: event.message,\n          filename: event.filename,\n          lineno: event.lineno,\n          colno: event.colno,\n          stack: event.error?.stack\n        });\n      } catch (loggingError) {\n        // Fallback to console if logging fails\n        console.error('Logging failed:', loggingError);\n        console.error('Original error:', event.error);\n      }\n    });\n\n    // Capture unhandled promise rejections\n    window.addEventListener('unhandledrejection', (event) => {\n      try {\n        this.critical('Unhandled Promise Rejection', {\n          category: LOG_CATEGORIES.ERROR,\n          reason: event.reason?.message || String(event.reason) || 'Unknown rejection',\n          stack: event.reason?.stack\n        });\n      } catch (loggingError) {\n        // Fallback to console if logging fails\n        console.error('Logging failed:', loggingError);\n        console.error('Original rejection:', event.reason);\n      }\n    });\n  }\n\n  /**\n   * Create structured log entry\n   */\n  createLogEntry(level, message, context = {}) {\n    // Ensure context is always an object\n    const safeContext = context && typeof context === 'object' ? context : {};\n\n    const entry = {\n      timestamp: new Date().toISOString(),\n      level: LOG_LEVELS[level]?.name || level,\n      category: safeContext.category || LOG_CATEGORIES.SYSTEM,\n      message: this.sanitizeMessage(message),\n      sessionId: this.sessionId,\n      context: this.sanitizeContext(safeContext),\n      performance: this.getPerformanceMetrics()\n    };\n\n    // Add stack trace for errors\n    if (level === 'ERROR' || level === 'CRITICAL') {\n      entry.stackTrace = new Error().stack;\n    }\n\n    // Add user ID if available (anonymized)\n    const userId = this.getAnonymizedUserId();\n    if (userId) {\n      entry.userId = userId;\n    }\n\n    return entry;\n  }\n\n  /**\n   * Sanitize message to remove PHI\n   */\n  sanitizeMessage(message) {\n    if (typeof message !== 'string') {\n      message = String(message);\n    }\n\n    // Remove potential PHI patterns\n    const sanitized = message\n      .replace(/\\b\\d{3}-\\d{2}-\\d{4}\\b/g, '***-**-****') // SSN\n      .replace(/\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g, '***@***.***') // Email\n      .replace(/\\b\\d{10,}\\b/g, '**********') // Phone numbers\n      .replace(/\\b[A-Z][a-z]+ [A-Z][a-z]+\\b/g, '[NAME]'); // Names\n\n    return sanitized;\n  }\n\n  /**\n   * Sanitize context object to remove PHI\n   */\n  sanitizeContext(context) {\n    // Handle null or non-object inputs\n    if (!context || typeof context !== 'object') {\n      return {};\n    }\n\n    const sanitized = { ...context };\n\n    // Remove sensitive fields\n    const sensitiveFields = [\n      'password', 'token', 'sessionToken', 'authToken',\n      'patientName', 'firstName', 'lastName', 'fullName',\n      'email', 'phone', 'ssn', 'mrn', 'dob', 'dateOfBirth'\n    ];\n\n    const removeSensitiveData = (obj) => {\n      if (!obj || typeof obj !== 'object') return obj;\n\n      const cleaned = Array.isArray(obj) ? [] : {};\n\n      for (const [key, value] of Object.entries(obj)) {\n        const lowerKey = key.toLowerCase();\n\n        if (sensitiveFields.some(field => lowerKey.includes(field))) {\n          cleaned[key] = '[REDACTED]';\n        } else if (typeof value === 'object' && value !== null) {\n          cleaned[key] = removeSensitiveData(value);\n        } else {\n          cleaned[key] = value;\n        }\n      }\n\n      return cleaned;\n    };\n\n    return removeSensitiveData(sanitized);\n  }\n\n  /**\n   * Get anonymized user ID\n   */\n  getAnonymizedUserId() {\n    try {\n      // Use a hash of session info, not actual user data\n      const sessionData = sessionStorage.getItem('session_hash');\n      if (sessionData) {\n        return `user_${sessionData.substring(0, 8)}`;\n      }\n    } catch (error) {\n      // Session storage not available\n    }\n    return null;\n  }\n\n  /**\n   * Get performance metrics\n   */\n  getPerformanceMetrics() {\n    try {\n      if ('performance' in window) {\n        const navigation = performance.getEntriesByType('navigation')[0];\n        return {\n          memoryUsed: performance.memory?.usedJSHeapSize || 0,\n          loadTime: navigation?.loadEventEnd - navigation?.loadEventStart || 0,\n          domReady: navigation?.domContentLoadedEventEnd - navigation?.domContentLoadedEventStart || 0\n        };\n      }\n    } catch (error) {\n      // Performance API not available\n    }\n    return null;\n  }\n\n  /**\n   * Log message at specified level\n   */\n  log(level, message, context = {}) {\n    return safeAsync(\n      async () => {\n        // Validate inputs\n        if (!level || !message) {\n          return; // Skip logging if no level or message\n        }\n\n        const levelInfo = LOG_LEVELS[level.toUpperCase()];\n        if (!levelInfo || levelInfo.level < this.logLevel) {\n          return; // Below configured log level\n        }\n\n        const entry = this.createLogEntry(level.toUpperCase(), message, context);\n\n        // Add to buffer\n        this.addToBuffer(entry);\n\n        // Console output in development\n        if (this.enableConsole) {\n          this.outputToConsole(entry);\n        }\n\n        // Store locally\n        if (this.enableStorage) {\n          this.storeEntry(entry);\n        }\n\n        // Send to logging service (production)\n        if (this.enableNetwork) {\n          await this.sendToLoggingService(entry);\n        }\n      },\n      {\n        category: ERROR_CATEGORIES.SYSTEM,\n        context: { operation: 'logging', level, message: message.substring(0, 100) }\n      }\n    );\n  }\n\n  /**\n   * Add entry to buffer\n   */\n  addToBuffer(entry) {\n    this.logBuffer.push(entry);\n\n    // Maintain buffer size\n    if (this.logBuffer.length > this.maxBufferSize) {\n      this.logBuffer = this.logBuffer.slice(-this.maxBufferSize);\n    }\n  }\n\n  /**\n   * Output to browser console with styling\n   */\n  outputToConsole(entry) {\n    const levelInfo = LOG_LEVELS[entry.level];\n    const color = levelInfo?.color || '#666666';\n\n    const style = `color: ${color}; font-weight: bold;`;\n    const timestamp = new Date(entry.timestamp).toLocaleTimeString();\n\n    const consoleMethod = entry.level === 'ERROR' || entry.level === 'CRITICAL' ? 'error' :\n                         entry.level === 'WARN' ? 'warn' : 'log';\n\n    console.groupCollapsed(\n      `%c[${entry.level}] ${timestamp} [${entry.category}] ${entry.message}`,\n      style\n    );\n\n    if (entry.context && Object.keys(entry.context).length > 0) {\n      console.log('Context:', entry.context);\n    }\n\n    if (entry.performance) {\n      console.log('Performance:', entry.performance);\n    }\n\n    if (entry.stackTrace && (entry.level === 'ERROR' || entry.level === 'CRITICAL')) {\n      console.log('Stack Trace:', entry.stackTrace);\n    }\n\n    console.groupEnd();\n  }\n\n  /**\n   * Store entry locally\n   */\n  storeEntry(entry) {\n    try {\n      const key = `medicalLog_${entry.timestamp}`;\n      const serialized = JSON.stringify(entry);\n\n      // Use sessionStorage for temporary storage\n      sessionStorage.setItem(key, serialized);\n\n      // Clean old entries (keep last 100)\n      this.cleanOldEntries();\n    } catch (error) {\n      // Storage failed - continue silently\n    }\n  }\n\n  /**\n   * Clean old log entries from storage\n   */\n  cleanOldEntries() {\n    try {\n      const keys = Object.keys(sessionStorage)\n        .filter(key => key.startsWith('medicalLog_'))\n        .sort()\n        .reverse();\n\n      // Keep only the last 100 entries\n      if (keys.length > 100) {\n        keys.slice(100).forEach(key => {\n          sessionStorage.removeItem(key);\n        });\n      }\n    } catch (error) {\n      // Cleanup failed - continue silently\n    }\n  }\n\n  /**\n   * Send to remote logging service\n   */\n  async sendToLoggingService(entry) {\n    // In production, this would send to a logging service like:\n    // - Google Cloud Logging\n    // - AWS CloudWatch\n    // - Elastic Stack\n    // - Splunk\n\n    // For now, just return - would implement actual service call\n    return Promise.resolve();\n  }\n\n  /**\n   * Start periodic buffer flush\n   */\n  startPeriodicFlush() {\n    setInterval(() => {\n      this.flushBuffer();\n    }, 30000); // Flush every 30 seconds\n  }\n\n  /**\n   * Flush log buffer\n   */\n  flushBuffer() {\n    if (this.logBuffer.length === 0) return;\n\n    // In production, this would batch-send logs to service\n    this.info('Log buffer flushed', {\n      category: LOG_CATEGORIES.SYSTEM,\n      entriesCount: this.logBuffer.length\n    });\n  }\n\n  /**\n   * Convenience methods for different log levels\n   */\n  debug(message, context = {}) {\n    return this.log('DEBUG', message, context);\n  }\n\n  info(message, context = {}) {\n    return this.log('INFO', message, context);\n  }\n\n  warn(message, context = {}) {\n    return this.log('WARN', message, context);\n  }\n\n  error(message, context = {}) {\n    return this.log('ERROR', message, context);\n  }\n\n  critical(message, context = {}) {\n    return this.log('CRITICAL', message, context);\n  }\n\n  /**\n   * Specialized medical logging methods\n   */\n  medicalCalculation(operation, result, context = {}) {\n    return this.info(`Medical calculation: ${operation}`, {\n      category: LOG_CATEGORIES.MEDICAL_CALCULATION,\n      operation,\n      success: !context.error,\n      ...context\n    });\n  }\n\n  authentication(action, success, context = {}) {\n    return this.info(`Authentication: ${action}`, {\n      category: LOG_CATEGORIES.AUTHENTICATION,\n      action,\n      success,\n      ...context\n    });\n  }\n\n  userInteraction(action, context = {}) {\n    return this.debug(`User interaction: ${action}`, {\n      category: LOG_CATEGORIES.USER_INTERACTION,\n      action,\n      ...context\n    });\n  }\n\n  networkRequest(url, method, status, context = {}) {\n    const level = status >= 400 ? 'ERROR' : status >= 300 ? 'WARN' : 'DEBUG';\n    return this.log(level, `Network request: ${method} ${url}`, {\n      category: LOG_CATEGORIES.NETWORK,\n      method,\n      url: this.sanitizeUrl(url),\n      status,\n      ...context\n    });\n  }\n\n  performance(metric, value, context = {}) {\n    return this.debug(`Performance metric: ${metric} = ${value}`, {\n      category: LOG_CATEGORIES.PERFORMANCE,\n      metric,\n      value,\n      ...context\n    });\n  }\n\n  auditTrail(event, context = {}) {\n    return this.info(`Audit: ${event}`, {\n      category: LOG_CATEGORIES.AUDIT,\n      event,\n      ...context\n    });\n  }\n\n  /**\n   * Sanitize URL to remove sensitive parameters\n   */\n  sanitizeUrl(url) {\n    try {\n      const urlObj = new URL(url);\n      const sensitiveParams = ['token', 'auth', 'key', 'secret'];\n\n      sensitiveParams.forEach(param => {\n        if (urlObj.searchParams.has(param)) {\n          urlObj.searchParams.set(param, '[REDACTED]');\n        }\n      });\n\n      return urlObj.toString();\n    } catch (error) {\n      return url;\n    }\n  }\n\n  /**\n   * Get all logs from buffer and storage\n   */\n  getLogs(filters = {}) {\n    const allLogs = [...this.logBuffer];\n\n    // Add logs from storage\n    try {\n      const keys = Object.keys(sessionStorage)\n        .filter(key => key.startsWith('medicalLog_'))\n        .sort();\n\n      keys.forEach(key => {\n        try {\n          const entry = JSON.parse(sessionStorage.getItem(key));\n          if (entry && !allLogs.find(log => log.timestamp === entry.timestamp)) {\n            allLogs.push(entry);\n          }\n        } catch (error) {\n          // Skip corrupted entries\n        }\n      });\n    } catch (error) {\n      // Storage access failed\n    }\n\n    // Apply filters\n    let filtered = allLogs.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n\n    if (filters.level) {\n      const minLevel = LOG_LEVELS[filters.level.toUpperCase()]?.level || 0;\n      filtered = filtered.filter(log => {\n        const logLevel = LOG_LEVELS[log.level]?.level || 0;\n        return logLevel >= minLevel;\n      });\n    }\n\n    if (filters.category) {\n      filtered = filtered.filter(log => log.category === filters.category);\n    }\n\n    if (filters.since) {\n      const sinceDate = new Date(filters.since);\n      filtered = filtered.filter(log => new Date(log.timestamp) >= sinceDate);\n    }\n\n    if (filters.limit) {\n      filtered = filtered.slice(0, filters.limit);\n    }\n\n    return filtered;\n  }\n\n  /**\n   * Export logs for debugging or compliance\n   */\n  exportLogs(format = 'json') {\n    const logs = this.getLogs();\n\n    if (format === 'csv') {\n      return this.logsToCSV(logs);\n    }\n\n    return JSON.stringify(logs, null, 2);\n  }\n\n  /**\n   * Convert logs to CSV format\n   */\n  logsToCSV(logs) {\n    if (logs.length === 0) return '';\n\n    const headers = ['timestamp', 'level', 'category', 'message', 'sessionId'];\n    const rows = logs.map(log => [\n      log.timestamp,\n      log.level,\n      log.category,\n      `\"${log.message.replace(/\"/g, '\"\"')}\"`,\n      log.sessionId\n    ]);\n\n    return [headers.join(','), ...rows.map(row => row.join(','))].join('\\n');\n  }\n\n  /**\n   * Clear all logs\n   */\n  clearLogs() {\n    this.logBuffer = [];\n\n    try {\n      const keys = Object.keys(sessionStorage)\n        .filter(key => key.startsWith('medicalLog_'));\n\n      keys.forEach(key => sessionStorage.removeItem(key));\n    } catch (error) {\n      // Storage cleanup failed\n    }\n\n    this.info('Log storage cleared', {\n      category: LOG_CATEGORIES.SYSTEM\n    });\n  }\n}\n\n// Create global logger instance\nexport const medicalLogger = new MedicalLogger();\n\n// Export convenience functions\nexport const {\n  debug,\n  info,\n  warn,\n  error,\n  critical,\n  medicalCalculation,\n  authentication,\n  userInteraction,\n  networkRequest,\n  performance,\n  auditTrail\n} = medicalLogger;","/**\n * Secure Authentication System for iGFAP Stroke Triage Assistant\n * Enterprise-grade authentication using Google Cloud Functions\n *\n * @typedef {import('../types/medical-types.js').SessionInfo} SessionInfo\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { API_URLS, DEV_CONFIG } from '../config.js';\nimport { getResearchPassword, isDevelopment, getSecurityConfig } from '../security/environment.js';\n\n// Bulletproof error handling utilities\nimport {\n  safeAsync,\n  safeAuthOperation,\n  MedicalError,\n  ERROR_CATEGORIES,\n  ERROR_SEVERITY,\n  MEDICAL_ERROR_CODES\n} from '../utils/error-handler.js';\n\n// Type safety utilities\nimport { TypeChecker } from '../types/medical-types.js';\n\n// Professional logging\nimport { medicalLogger, LOG_CATEGORIES } from '../utils/medical-logger.js';\n\n// Encrypted storage\nimport { secureStore, secureRetrieve, secureRemove } from '../security/data-encryption.js';\n\nexport class AuthenticationManager {\n  constructor() {\n    this.isAuthenticated = false;\n    this.sessionToken = null;\n    this.sessionExpiry = null;\n    this.lastActivity = Date.now();\n    this.setupActivityTracking();\n  }\n\n  /**\n   * Authenticate user with research access password via secure Cloud Function\n   * @param {string} password - Research access password\n   * @returns {Promise<{success: boolean, message: string, sessionInfo?: SessionInfo}>} - Authentication result with success status and message\n   */\n  async authenticate(password) {\n    return safeAuthOperation(\n      async () => {\n        medicalLogger.info('Authentication attempt started', {\n          category: LOG_CATEGORIES.AUTHENTICATION,\n          hasPassword: !!password && password.length > 0,\n          isDevelopment: DEV_CONFIG.isDevelopment\n        });\n\n        // Type safety validation\n        TypeChecker.ensureType(password, 'string', 'authentication password');\n\n        if (!password || password.trim().length === 0) {\n          medicalLogger.warn('Authentication failed: empty password', {\n            category: LOG_CATEGORIES.AUTHENTICATION\n          });\n          throw new MedicalError(\n            'Password is required',\n            'EMPTY_PASSWORD',\n            ERROR_CATEGORIES.VALIDATION,\n            ERROR_SEVERITY.MEDIUM\n          );\n        }\n\n        // Local preview (localhost, vite preview): authenticate locally to avoid CORS\n        const isLocalPreview = ['localhost', '127.0.0.1', '0.0.0.0'].includes(window.location.hostname) && !(import.meta && import.meta.env && import.meta.env.DEV);\n        if (isLocalPreview || DEV_CONFIG.isDevelopment) {\n          medicalLogger.info('Development mode authentication path', {\n            category: LOG_CATEGORIES.AUTHENTICATION\n          });\n\n          // SECURITY: Use environment-based research password\n          const expectedPassword = getResearchPassword();\n          if (password.trim() !== expectedPassword) {\n            await this.delayFailedAttempt();\n            return {\n              success: false,\n              message: 'Invalid credentials',\n              errorCode: 'INVALID_CREDENTIALS'\n            };\n          }\n\n          await new Promise(resolve => setTimeout(resolve, 300)); // small UX delay\n\n          this.isAuthenticated = true;\n          this.sessionToken = DEV_CONFIG.mockAuthResponse.session_token;\n          this.sessionExpiry = new Date(DEV_CONFIG.mockAuthResponse.expires_at);\n          this.lastActivity = Date.now();\n\n          // Store session\n          try {\n            this.storeSecureSession();\n          } catch (storageError) {\n            console.warn('Session storage failed:', storageError.message);\n          }\n\n          return {\n            success: true,\n            message: 'Authentication successful',\n            sessionDuration: DEV_CONFIG.mockAuthResponse.session_duration\n          };\n        }\n\n        // This branch is now unreachable due to isLocalPreview handling above; keep as guard\n        const isLocalHost = ['localhost', '127.0.0.1', '0.0.0.0'].includes(window.location.hostname);\n        const preferMock = localStorage.getItem('use_mock_api') !== 'false';\n        if (isLocalHost && preferMock && !(import.meta && import.meta.env && import.meta.env.DEV)) {\n          if (password.trim() !== getResearchPassword()) {\n            await this.delayFailedAttempt();\n            return {\n              success: false,\n              message: 'Invalid credentials',\n              errorCode: 'INVALID_CREDENTIALS'\n            };\n          }\n\n          // Simulate minimal delay for UX\n          await new Promise(resolve => setTimeout(resolve, 200));\n\n          this.isAuthenticated = true;\n          this.sessionToken = 'local-preview-token-' + Date.now();\n          this.sessionExpiry = new Date(Date.now() + 30 * 60 * 1000);\n          this.lastActivity = Date.now();\n\n          try { this.storeSecureSession(); } catch {}\n\n          return {\n            success: true,\n            message: 'Authentication successful',\n            sessionDuration: 1800\n          };\n        }\n\n        medicalLogger.debug('Sending authentication request', {\n          category: LOG_CATEGORIES.AUTHENTICATION,\n          url: API_URLS.AUTHENTICATE\n        });\n\n        const response = await fetch(API_URLS.AUTHENTICATE, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            action: 'login',\n            password: password.trim()\n          })\n        });\n\n        if (!response.ok) {\n          let errorMessage = 'Authentication failed';\n          let errorCode = 'AUTH_FAILED';\n\n          if (response.status === 429) {\n            errorMessage = 'Too many authentication attempts. Please wait and try again.';\n            errorCode = 'RATE_LIMITED';\n          } else if (response.status >= 500) {\n            errorMessage = 'Authentication service temporarily unavailable';\n            errorCode = 'SERVICE_ERROR';\n          }\n\n          throw new MedicalError(\n            errorMessage,\n            errorCode,\n            ERROR_CATEGORIES.AUTHENTICATION,\n            response.status >= 500 ? ERROR_SEVERITY.HIGH : ERROR_SEVERITY.MEDIUM\n          ).withContext({ statusCode: response.status, url: API_URLS.AUTHENTICATE });\n        }\n\n        const data = await response.json();\n\n        if (!data || typeof data !== 'object') {\n          throw new MedicalError(\n            'Invalid response from authentication service',\n            'INVALID_RESPONSE',\n            ERROR_CATEGORIES.AUTHENTICATION,\n            ERROR_SEVERITY.HIGH\n          );\n        }\n\n        if (data.success) {\n          this.isAuthenticated = true;\n          this.sessionToken = data.session_token;\n          this.sessionExpiry = data.expires_at ? new Date(data.expires_at) : null;\n          this.lastActivity = Date.now();\n\n          // Safely store session\n          try {\n            this.storeSecureSession();\n          } catch (storageError) {\n            // Continue with authentication even if storage fails\n            console.warn('Session storage failed:', storageError.message);\n          }\n\n          return {\n            success: true,\n            message: 'Authentication successful',\n            sessionDuration: data.session_duration\n          };\n        } else {\n          // Handle authentication failure\n          await this.delayFailedAttempt();\n\n          throw new MedicalError(\n            data.message || 'Invalid credentials',\n            'INVALID_CREDENTIALS',\n            ERROR_CATEGORIES.AUTHENTICATION,\n            ERROR_SEVERITY.MEDIUM\n          ).withContext({\n            remainingAttempts: data.rate_limit_remaining,\n            statusCode: response.status\n          });\n        }\n      },\n      {\n        timeout: 15000,\n        fallback: (error) => ({\n          success: false,\n          message: error instanceof MedicalError ? error.getUserMessage() : 'Authentication service unavailable. Please try again.',\n          errorCode: error.code || 'NETWORK_ERROR',\n          details: error.message,\n          remainingAttempts: error.context?.remainingAttempts\n        }),\n        context: {\n          operation: 'user_authentication',\n          endpoint: 'authenticate'\n        }\n      }\n    );\n  }\n\n  /**\n   * Check if current session is valid\n   * @returns {boolean} - Session validity\n   */\n  isValidSession() {\n    if (!this.isAuthenticated) {\n      return this.checkStoredSession();\n    }\n\n    // Check session expiry\n    if (this.sessionExpiry && new Date() > this.sessionExpiry) {\n      this.logout();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Validate session token with server\n   * @returns {boolean} - Server-side session validity\n   */\n  async validateSessionWithServer() {\n    if (!this.sessionToken) {\n      return false;\n    }\n\n    return safeAuthOperation(\n      async () => {\n        // Skip remote validation on local preview to avoid CORS noise\n        const isLocalPreview = ['localhost', '127.0.0.1', '0.0.0.0'].includes(window.location.hostname) && !(import.meta && import.meta.env && import.meta.env.DEV);\n        if (isLocalPreview) {\n          this.updateActivity();\n          return true;\n        }\n\n        const response = await fetch(API_URLS.AUTHENTICATE, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            action: 'validate_session',\n            session_token: this.sessionToken\n          })\n        });\n\n        if (!response.ok) {\n          if (response.status === 401 || response.status === 403) {\n            // Session expired or invalid\n            this.logout();\n            return false;\n          }\n\n          throw new MedicalError(\n            'Session validation service error',\n            'VALIDATION_ERROR',\n            ERROR_CATEGORIES.AUTHENTICATION,\n            ERROR_SEVERITY.MEDIUM\n          ).withContext({ statusCode: response.status });\n        }\n\n        const data = await response.json();\n\n        if (!data || typeof data !== 'object') {\n          throw new MedicalError(\n            'Invalid response from session validation service',\n            'INVALID_RESPONSE',\n            ERROR_CATEGORIES.AUTHENTICATION,\n            ERROR_SEVERITY.MEDIUM\n          );\n        }\n\n        if (data.success) {\n          this.updateActivity();\n          return true;\n        } else {\n          this.logout();\n          return false;\n        }\n      },\n      {\n        timeout: 10000,\n        fallback: (error) => {\n          // On network errors, allow local session to continue\n          // This prevents logout during temporary network issues\n          console.warn('Session validation failed, continuing with local session:', error.message);\n          return this.isValidSession();\n        },\n        context: {\n          operation: 'session_validation',\n          endpoint: 'validate_session'\n        }\n      }\n    );\n  }\n\n  /**\n   * Update activity timestamp\n   */\n  updateActivity() {\n    this.lastActivity = Date.now();\n    this.storeAuthSession();\n  }\n\n  /**\n   * Logout and clear session securely\n   */\n  async logout() {\n    medicalLogger.info('User logout initiated', {\n      category: LOG_CATEGORIES.AUTHENTICATION\n    });\n\n    this.isAuthenticated = false;\n    this.sessionToken = null;\n    this.sessionExpiry = null;\n\n    // Clear all encrypted session storage securely\n    try {\n      await secureRemove('auth_session', true);\n      await secureRemove('auth_timestamp', true);\n      await secureRemove('session_token', true);\n      await secureRemove('session_expiry', true);\n\n      // Clear legacy unencrypted data\n      sessionStorage.removeItem('auth_session');\n      sessionStorage.removeItem('auth_timestamp');\n      sessionStorage.removeItem('session_token');\n      sessionStorage.removeItem('session_expiry');\n\n      medicalLogger.info('Session data cleared during logout', {\n        category: LOG_CATEGORIES.SECURITY\n      });\n    } catch (error) {\n      medicalLogger.warn('Failed to clear some session data during logout', {\n        category: LOG_CATEGORIES.SECURITY,\n        error: error.message\n      });\n    }\n  }\n\n  /**\n   * Simple hash function for password verification\n   * Note: For production medical device, use proper bcrypt/PBKDF2\n   * @param {string} input - Password to hash\n   * @returns {string} - Hashed password\n   */\n  async hashPassword(input) {\n    return safeAsync(\n      async () => {\n        if (!input || typeof input !== 'string') {\n          throw new MedicalError(\n            'Invalid input for password hashing',\n            'INVALID_INPUT',\n            ERROR_CATEGORIES.VALIDATION,\n            ERROR_SEVERITY.MEDIUM\n          );\n        }\n\n        if (!crypto || !crypto.subtle) {\n          throw new MedicalError(\n            'Crypto API not available',\n            'CRYPTO_UNAVAILABLE',\n            ERROR_CATEGORIES.SECURITY,\n            ERROR_SEVERITY.HIGH\n          );\n        }\n\n        const encoder = new TextEncoder();\n        const data = encoder.encode(input);\n        const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n        const hashArray = Array.from(new Uint8Array(hashBuffer));\n        const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n        return hashHex;\n      },\n      {\n        category: ERROR_CATEGORIES.SECURITY,\n        severity: ERROR_SEVERITY.HIGH,\n        timeout: 5000,\n        fallback: () => {\n          // Simple fallback hash for non-critical use\n          let hash = 0;\n          for (let i = 0; i < input.length; i++) {\n            const char = input.charCodeAt(i);\n            hash = ((hash << 5) - hash) + char;\n            hash = hash & hash; // Convert to 32-bit integer\n          }\n          return Math.abs(hash).toString(16);\n        },\n        context: {\n          operation: 'password_hashing',\n          inputLength: input ? input.length : 0\n        }\n      }\n    );\n  }\n\n  /**\n   * Store authenticated session securely\n   */\n  storeSecureSession() {\n    return safeAsync(\n      async () => {\n        if (!this.isAuthenticated || !this.sessionToken) {\n          throw new MedicalError(\n            'Cannot store session: not authenticated',\n            'NOT_AUTHENTICATED',\n            ERROR_CATEGORIES.AUTHENTICATION,\n            ERROR_SEVERITY.LOW\n          );\n        }\n\n        if (typeof sessionStorage === 'undefined') {\n          throw new MedicalError(\n            'Session storage not available',\n            'STORAGE_UNAVAILABLE',\n            ERROR_CATEGORIES.STORAGE,\n            ERROR_SEVERITY.MEDIUM\n          );\n        }\n\n        // Store session data securely\n        sessionStorage.setItem('auth_session', 'verified');\n        sessionStorage.setItem('auth_timestamp', this.lastActivity.toString());\n        sessionStorage.setItem('session_token', this.sessionToken);\n        if (this.sessionExpiry) {\n          sessionStorage.setItem('session_expiry', this.sessionExpiry.toISOString());\n        }\n\n        return true;\n      },\n      {\n        category: ERROR_CATEGORIES.STORAGE,\n        severity: ERROR_SEVERITY.LOW,\n        timeout: 1000,\n        fallback: (error) => {\n          console.warn('Failed to store session:', error.message);\n          return false;\n        },\n        context: {\n          operation: 'store_session',\n          hasToken: !!this.sessionToken,\n          hasExpiry: !!this.sessionExpiry\n        }\n      }\n    );\n  }\n\n  /**\n   * Legacy method for compatibility\n   */\n  storeAuthSession() {\n    this.storeSecureSession();\n  }\n\n  /**\n   * Check for existing valid session\n   * @returns {boolean} - Stored session validity\n   */\n  checkStoredSession() {\n    try {\n      return safeAsync(\n        async () => {\n          if (typeof sessionStorage === 'undefined') {\n            throw new MedicalError(\n              'Session storage not available',\n              'STORAGE_UNAVAILABLE',\n              ERROR_CATEGORIES.STORAGE,\n              ERROR_SEVERITY.LOW\n            );\n          }\n\n          const session = await secureRetrieve('auth_session', true);\n          const timestamp = await secureRetrieve('auth_timestamp', true);\n          const storedToken = await secureRetrieve('session_token', true);\n          const storedExpiry = await secureRetrieve('session_expiry', true);\n\n          if (session === 'verified' && timestamp && storedToken) {\n            // Check if session has expired\n            if (storedExpiry) {\n              const expiryDate = new Date(storedExpiry);\n              if (new Date() > expiryDate) {\n                this.logout();\n                return false;\n              }\n              this.sessionExpiry = expiryDate;\n            }\n\n            // Validate timestamp is a valid number\n            const timestampNum = parseInt(timestamp);\n            if (isNaN(timestampNum)) {\n              throw new MedicalError(\n                'Invalid session timestamp',\n                'INVALID_SESSION_DATA',\n                ERROR_CATEGORIES.STORAGE,\n                ERROR_SEVERITY.MEDIUM\n              );\n            }\n\n            this.isAuthenticated = true;\n            this.sessionToken = storedToken;\n            this.lastActivity = timestampNum;\n            return true;\n          }\n\n          this.logout();\n          return false;\n        },\n        {\n          category: ERROR_CATEGORIES.STORAGE,\n          severity: ERROR_SEVERITY.LOW,\n          timeout: 1000,\n          fallback: (error) => {\n            console.warn('Failed to check stored session:', error.message);\n            this.logout();\n            return false;\n          },\n          context: {\n            operation: 'check_stored_session'\n          }\n        }\n      );\n    } catch (error) {\n      this.logout();\n      return false;\n    }\n  }\n\n  /**\n   * Setup activity tracking for session management\n   */\n  setupActivityTracking() {\n    // Track user interactions to maintain session\n    const events = ['mousedown', 'mousemove', 'keypress', 'scroll', 'touchstart'];\n\n    const updateActivity = () => {\n      if (this.isAuthenticated) {\n        this.updateActivity();\n      }\n    };\n\n    events.forEach((event) => {\n      document.addEventListener(event, updateActivity, { passive: true });\n    });\n  }\n\n  /**\n   * Rate limiting for failed authentication attempts\n   */\n  async delayFailedAttempt() {\n    return safeAsync(\n      async () => {\n        return new Promise((resolve) => {\n          setTimeout(resolve, 1000); // 1 second delay\n        });\n      },\n      {\n        category: ERROR_CATEGORIES.AUTHENTICATION,\n        severity: ERROR_SEVERITY.LOW,\n        timeout: 2000,\n        fallback: () => {\n          // If delay fails, continue without delay\n          return Promise.resolve();\n        },\n        context: {\n          operation: 'auth_delay'\n        }\n      }\n    );\n  }\n\n  /**\n   * Get session status for UI\n   * @returns {object} - Session information\n   */\n  getSessionInfo() {\n    if (!this.isAuthenticated) {\n      return { authenticated: false };\n    }\n\n    const timeRemaining = this.sessionTimeout - (Date.now() - this.lastActivity);\n    const hoursRemaining = Math.floor(timeRemaining / (60 * 60 * 1000));\n    const minutesRemaining = Math.floor((timeRemaining % (60 * 60 * 1000)) / (60 * 1000));\n\n    return {\n      authenticated: true,\n      timeRemaining: `${hoursRemaining}h ${minutesRemaining}m`,\n      lastActivity: new Date(this.lastActivity).toLocaleTimeString(),\n    };\n  }\n}\n\n// Export singleton instance\nexport const authManager = new AuthenticationManager();\n","export function renderProgressIndicator(currentStep) {\n  const steps = [\n    { id: 1, label: 'Triage' },\n    { id: 2, label: 'Assessment' },\n    { id: 3, label: 'Results' },\n  ];\n\n  let html = '<div class=\"progress-indicator\">';\n  steps.forEach((step, index) => {\n    const isActive = step.id === currentStep;\n    const isCompleted = step.id < currentStep;\n    html += `\n      <div class=\"progress-step ${isActive ? 'active' : ''} ${isCompleted ? 'completed' : ''}\">\n        ${isCompleted ? '' : step.id}\n      </div>\n    `;\n    if (index < steps.length - 1) {\n      html += `<div class=\"progress-line ${isCompleted ? 'completed' : ''}\"></div>`;\n    }\n  });\n  html += '</div>';\n  return html;\n}\n","import { renderProgressIndicator } from '../components/progress.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderTriage1() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(1)}\n      <h2>${t('triage1Title')}</h2>\n      <div class=\"triage-question\">\n        ${t('triage1Question')}\n        <small>${t('triage1Help')}</small>\n      </div>\n      <div class=\"triage-buttons\">\n        <button class=\"yes-btn\" data-action=\"triage1\" data-value=\"true\">${t('triage1Yes')}</button>\n        <button class=\"no-btn\" data-action=\"triage1\" data-value=\"false\">${t('triage1No')}</button>\n      </div>\n    </div>\n  `;\n}\n","import { renderProgressIndicator } from '../components/progress.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderTriage2() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(1)}\n      <h2>${t('triage2Title')}</h2>\n      <div class=\"triage-question\">\n        ${t('triage2Question')}\n        <small>${t('triage2Help')}</small>\n      </div>\n      <div class=\"triage-buttons\">\n        <button class=\"yes-btn\" data-action=\"triage2\" data-value=\"true\">${t('triage2Yes')}</button>\n        <button class=\"no-btn\" data-action=\"triage2\" data-value=\"false\">${t('triage2No')}</button>\n      </div>\n    </div>\n  `;\n}\n","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderComa() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>${t('comaModuleTitle') || 'Coma Module'}</h2>\n      <form data-module=\"coma\">\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              ${t('gfapValueLabel')}\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('gfapTooltipLong')}</span>\n              </span>\n            </label>\n            <input type=\"number\" id=\"gfap_value\" name=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required aria-describedby=\"gfap-help\">\n            <div id=\"gfap-help\" class=\"input-help\">\n              ${t('gfapRange').replace('{min}', GFAP_RANGES.min).replace('{max}', GFAP_RANGES.max)}\n            </div>\n          </div>\n        </div>\n        <button type=\"submit\" class=\"primary\">${t('analyzeIchRisk')}</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">${t('startOver')}</button>\n      </form>\n    </div>\n  `;\n}\n","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderLimited() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>${t('limitedDataModuleTitle') || 'Limited Data Module'}</h2>\n      <form data-module=\"limited\">\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"age_years\">${t('ageYearsLabel')}</label>\n            <input type=\"number\" name=\"age_years\" id=\"age_years\" min=\"0\" max=\"120\" required aria-describedby=\"age-help\">\n            <div id=\"age-help\" class=\"input-help\">${t('ageYearsHelp')}</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"systolic_bp\">${t('systolicBpLabel')}</label>\n            <div class=\"input-with-unit\">\n              <input type=\"number\" name=\"systolic_bp\" id=\"systolic_bp\" min=\"60\" max=\"300\" required aria-describedby=\"sbp-help\" inputmode=\"numeric\">\n              <span class=\"unit\">mmHg</span>\n            </div>\n            <div id=\"sbp-help\" class=\"input-help\">${t('systolicBpHelp')}</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"diastolic_bp\">${t('diastolicBpLabel')}</label>\n            <div class=\"input-with-unit\">\n              <input type=\"number\" name=\"diastolic_bp\" id=\"diastolic_bp\" min=\"30\" max=\"200\" required aria-describedby=\"dbp-help\" inputmode=\"numeric\">\n              <span class=\"unit\">mmHg</span>\n            </div>\n            <div id=\"dbp-help\" class=\"input-help\">${t('diastolicBpHelp')}</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              ${t('gfapValueLabel')}\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('gfapTooltipLong')}</span>\n              </span>\n            </label>\n            <div class=\"input-with-unit\">\n              <input type=\"number\" name=\"gfap_value\" id=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required inputmode=\"decimal\">\n              <span class=\"unit\">pg/mL</span>\n            </div>\n          </div>\n        </div>\n        <div class=\"checkbox-group\">\n          <label class=\"checkbox-wrapper\">\n            <input type=\"checkbox\" name=\"vigilanzminderung\" id=\"vigilanzminderung\">\n            <span class=\"checkbox-label\">${t('vigilanceReduction')}</span>\n          </label>\n        </div>\n        <button type=\"submit\" class=\"primary\">${t('analyzeIchRisk')}</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">${t('startOver')}</button>\n      </form>\n    </div>\n  `;\n}\n","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderFull() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>${t('fullStrokeModuleTitle') || 'Full Stroke Module'}</h2>\n      <form data-module=\"full\">\n        <h3>${t('basicInformation')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"age_years\">${t('ageYearsLabel')}</label>\n            <input type=\"number\" name=\"age_years\" id=\"age_years\" min=\"0\" max=\"120\" required>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"systolic_bp\">${t('systolicBpLabel')}</label>\n            <div class=\"input-with-unit\">\n              <input type=\"number\" name=\"systolic_bp\" id=\"systolic_bp\" min=\"60\" max=\"300\" required inputmode=\"numeric\">\n              <span class=\"unit\">mmHg</span>\n            </div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"diastolic_bp\">${t('diastolicBpLabel')}</label>\n            <div class=\"input-with-unit\">\n              <input type=\"number\" name=\"diastolic_bp\" id=\"diastolic_bp\" min=\"30\" max=\"200\" required inputmode=\"numeric\">\n              <span class=\"unit\">mmHg</span>\n            </div>\n          </div>\n        </div>\n\n        <h3>${t('biomarkersScores')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              ${t('gfapValueLabel')}\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('gfapTooltip')}</span>\n              </span>\n            </label>\n            <div class=\"input-with-unit\">\n              <input type=\"number\" name=\"gfap_value\" id=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required inputmode=\"decimal\">\n              <span class=\"unit\">pg/mL</span>\n            </div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"fast_ed_score\">\n              ${t('fastEdScoreLabel')}\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('fastEdCalculatorSubtitle')}</span>\n              </span>\n            </label>\n            <input type=\"number\" name=\"fast_ed_score\" id=\"fast_ed_score\" min=\"0\" max=\"9\" required readonly placeholder=\"${t('fastEdCalculatorSubtitle')}\" style=\"cursor: pointer;\">\n            <input type=\"hidden\" name=\"armparese\" id=\"armparese_hidden\" value=\"false\">\n            <input type=\"hidden\" name=\"eye_deviation\" id=\"eye_deviation_hidden\" value=\"false\">\n          </div>\n        </div>\n\n        <h3>${t('clinicalSymptoms')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"headache\" id=\"headache\">\n              <span class=\"checkbox-label\">${t('headacheLabel')}</span>\n            </label>\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"vigilanzminderung\" id=\"vigilanzminderung\">\n              <span class=\"checkbox-label\">${t('vigilanzLabel')}</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"beinparese\" id=\"beinparese\">\n              <span class=\"checkbox-label\">${t('legParesis')}</span>\n            </label>\n          </div>\n        </div>\n\n        <h3>${t('medicalHistory')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"atrial_fibrillation\" id=\"atrial_fibrillation\">\n              <span class=\"checkbox-label\">${t('atrialFibrillation')}</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"anticoagulated_noak\" id=\"anticoagulated_noak\">\n              <span class=\"checkbox-label\">${t('onNoacDoac')}</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"antiplatelets\" id=\"antiplatelets\">\n              <span class=\"checkbox-label\">${t('onAntiplatelets')}</span>\n            </label>\n          </div>\n        </div>\n\n        <button type=\"submit\" class=\"primary\">${t('analyzeStrokeRisk')}</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">${t('startOver')}</button>\n      </form>\n    </div>\n  `;\n}\n","import { t } from '../../localization/i18n.js';\n\nexport function renderCriticalAlert() {\n  return `\n    <div class=\"critical-alert\">\n      <h4><span class=\"alert-icon\">🚨</span> ${t('criticalAlertTitle')}</h4>\n      <p>${t('criticalAlertMessage')}</p>\n    </div>\n  `;\n}\n","// User-friendly label formatter for technical field names\n// Converts technical driver and field names to user-friendly labels\n\nimport { t } from '../localization/i18n.js';\n\n/**\n * Mapping of technical field names to the same labels used in input forms\n * Uses existing localization keys from the input forms\n */\nconst FIELD_LABEL_MAP = {\n  // Age and demographics\n  age_years: 'ageLabel',\n  age: 'ageLabel',\n\n  // Blood pressure\n  systolic_bp: 'systolicLabel',\n  diastolic_bp: 'diastolicLabel',\n  systolic_blood_pressure: 'systolicLabel',\n  diastolic_blood_pressure: 'diastolicLabel',\n  blood_pressure_systolic: 'systolicLabel',\n  blood_pressure_diastolic: 'diastolicLabel',\n\n  // Biomarkers\n  gfap_value: 'gfapLabel',\n  gfap: 'gfapLabel',\n  gfap_level: 'gfapLabel',\n\n  // Clinical scores\n  fast_ed_score: 'fastEdLabel',\n  fast_ed: 'fastEdLabel',\n  fast_ed_total: 'fastEdLabel',\n\n  // Neurological symptoms\n  vigilanzminderung: 'vigilanzLabel',\n  vigilance_reduction: 'vigilanzLabel',\n  reduced_consciousness: 'vigilanzLabel',\n  armparese: 'armPareseLabel',\n  arm_paresis: 'armPareseLabel',\n  arm_weakness: 'armPareseLabel',\n  beinparese: 'beinPareseLabel',\n  leg_paresis: 'beinPareseLabel',\n  leg_weakness: 'beinPareseLabel',\n  eye_deviation: 'eyeDeviationLabel',\n  blickdeviation: 'eyeDeviationLabel',\n  headache: 'headacheLabel',\n  kopfschmerzen: 'headacheLabel',\n\n  // Medical history\n  atrial_fibrillation: 'atrialFibLabel',\n  vorhofflimmern: 'atrialFibLabel',\n  anticoagulated_noak: 'anticoagLabel',\n  anticoagulation: 'anticoagLabel',\n  antiplatelets: 'antiplateletsLabel',\n  thrombozytenaggregationshemmer: 'antiplateletsLabel',\n};\n\n/**\n * Fallback patterns for common technical terms\n * Used when no specific mapping exists\n */\nconst PATTERN_REPLACEMENTS = [\n  { pattern: /_score$/, replacement: ' Score' },\n  { pattern: /_value$/, replacement: ' Level' },\n  { pattern: /_bp$/, replacement: ' Blood Pressure' },\n  { pattern: /_years?$/, replacement: ' (years)' },\n  { pattern: /^ich_/, replacement: 'Brain Bleeding ' },\n  { pattern: /^lvo_/, replacement: 'Large Vessel ' },\n  { pattern: /parese$/, replacement: 'Weakness' },\n  { pattern: /deviation$/, replacement: 'Movement' },\n];\n\n/**\n * Format a technical field name using the same labels as input forms\n * @param {string} fieldName - Technical field name (e.g., 'fast_ed_score')\n * @returns {string} - Consistent medical terminology label\n */\nexport function formatDriverName(fieldName) {\n  if (!fieldName) {\n    return '';\n  }\n\n  // First, try to find exact match in mapping to input form labels\n  const mappedKey = FIELD_LABEL_MAP[fieldName.toLowerCase()];\n  if (mappedKey) {\n    const translated = t(mappedKey);\n    if (translated && translated !== mappedKey) {\n      return translated;\n    }\n  }\n\n  // Apply pattern-based replacements for common medical terms\n  let formatted = fieldName.toLowerCase();\n  PATTERN_REPLACEMENTS.forEach(({ pattern, replacement }) => {\n    formatted = formatted.replace(pattern, replacement);\n  });\n\n  // Clean up and format - keep medical terminology consistent\n  formatted = formatted\n    .replace(/_/g, ' ') // Replace underscores with spaces\n    .replace(/\\b\\w/g, (l) => l.toUpperCase()) // Title case\n    .trim();\n\n  return formatted;\n}\n\n/**\n * Format field names for input summary display\n * @param {string} fieldName - Technical field name\n * @returns {string} - User-friendly label for summary\n */\nexport function formatSummaryLabel(fieldName) {\n  // Use the same logic but with specific summary context\n  const friendlyLabel = formatDriverName(fieldName);\n\n  // Remove units from summary labels as they're shown in values\n  return friendlyLabel\n    .replace(/\\s*\\([^)]*\\)\\s*/g, '') // Remove anything in parentheses\n    .trim();\n}\n\n/**\n * Format field values for display\n * @param {any} value - Field value\n * @param {string} fieldName - Field name for context\n * @returns {string} - Formatted display value\n */\nexport function formatDisplayValue(value, fieldName = '') {\n  if (value === null || value === undefined || value === '') {\n    return '';\n  }\n\n  if (typeof value === 'boolean') {\n    return value ? '✓' : '✗';\n  }\n\n  if (typeof value === 'number') {\n    // Add units based on field type\n    if (fieldName.includes('bp') || fieldName.includes('blood_pressure')) {\n      return `${value} mmHg`;\n    }\n    if (fieldName.includes('gfap')) {\n      return `${value} pg/mL`;\n    }\n    if (fieldName.includes('age')) {\n      return `${value} years`;\n    }\n    if (fieldName.includes('score')) {\n      return value.toString();\n    }\n\n    // Default number formatting\n    return Number.isInteger(value) ? value.toString() : value.toFixed(1);\n  }\n\n  return value.toString();\n}\n\n/**\n * Get a short description for a clinical field\n * @param {string} fieldName - Technical field name\n * @returns {string} - Brief description\n */\nexport function getFieldDescription(fieldName) {\n  const descriptions = {\n    fast_ed_score: 'Stroke severity assessment',\n    gfap_value: 'Brain injury biomarker',\n    vigilanzminderung: 'Level of consciousness',\n    systolic_bp: 'Upper blood pressure reading',\n    diastolic_bp: 'Lower blood pressure reading',\n    atrial_fibrillation: 'Irregular heart rhythm',\n    anticoagulated_noak: 'Blood-thinning medication',\n    antiplatelets: 'Anti-clotting medication',\n  };\n\n  return descriptions[fieldName.toLowerCase()] || '';\n}\n","import { t } from '../../localization/i18n.js';\nimport { formatDriverName } from '../../utils/label-formatter.js';\nimport { normalizeDrivers } from '../../logic/shap.js';\n\nexport function renderDriversSection(ich, lvo) {\n  //('=== DRIVER RENDERING SECTION ===');\n\n  if (!ich?.drivers && !lvo?.drivers) {\n    //('❌ No drivers available for rendering');\n    return '';\n  }\n\n  let html = `\n    <div class=\"drivers-section\">\n      <div class=\"drivers-header\">\n        <h3><span class=\"driver-header-icon\">🎯</span> ${t('riskAnalysis')}</h3>\n        <p class=\"drivers-subtitle\">${t('riskAnalysisSubtitle')}</p>\n      </div>\n      <div class=\"enhanced-drivers-grid\">\n  `;\n\n  console.log('[Drivers] ICH has drivers:', !!ich?.drivers, ich?.drivers);\n  console.log('[Drivers] LVO has drivers:', !!lvo?.drivers, 'notPossible:', lvo?.notPossible, lvo?.drivers);\n\n  if (ich?.drivers) {\n    console.log('🧠 Rendering ICH drivers panel');\n    html += renderEnhancedDriversPanel(ich.drivers, 'ICH', 'ich', ich.probability);\n  }\n\n  if (lvo?.drivers && !lvo.notPossible) {\n    console.log('🩸 Rendering LVO drivers panel');\n    html += renderEnhancedDriversPanel(lvo.drivers, 'LVO', 'lvo', lvo.probability);\n  }\n\n  html += `\n      </div>\n    </div>\n  `;\n  return html;\n}\n\nexport function renderDriversPanel(drivers, title, type) {\n  if (!drivers || Object.keys(drivers).length === 0) {\n    return `\n      <div class=\"drivers-panel\">\n        <h4>\n          <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\n          ${title} ${t('riskFactors')}\n        </h4>\n        <p style=\"color: var(--text-secondary); font-style: italic;\">\n          Driver information not available from this prediction model.\n        </p>\n      </div>\n    `;\n  }\n\n  const driversViewModel = normalizeDrivers(drivers);\n\n  if (driversViewModel.kind === 'unavailable') {\n    return `\n      <div class=\"drivers-panel\">\n        <h4>\n          <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\n          ${title} ${t('riskFactors')}\n        </h4>\n        <p style=\"color: var(--text-secondary); font-style: italic;\">\n          Driver analysis not available for this prediction.\n        </p>\n      </div>\n    `;\n  }\n\n  let html = `\n    <div class=\"drivers-panel\">\n      <h4>\n        <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\n        ${title} Risk Factors\n      </h4>\n  `;\n\n  // Calculate relative importance for legacy panel\n  const totalPositiveWeightLegacy = driversViewModel.positive.reduce((sum, d) => sum + Math.abs(d.weight), 0);\n  const totalNegativeWeightLegacy = driversViewModel.negative.reduce((sum, d) => sum + Math.abs(d.weight), 0);\n\n  // Show positive drivers (increase risk)\n  if (driversViewModel.positive.length > 0) {\n    driversViewModel.positive.forEach((driver) => {\n      const relativeImportance = totalPositiveWeightLegacy > 0\n        ? (Math.abs(driver.weight) / totalPositiveWeightLegacy) * 100 : 0;\n      const width = Math.min(relativeImportance * 2, 100); // Scale for visualization\n      html += `\n        <div class=\"driver-item\">\n          <span class=\"driver-label\">${driver.label}</span>\n          <div class=\"driver-bar-container\">\n            <div class=\"driver-bar positive\" style=\"width: ${width}%\">\n              <span class=\"driver-value\">+${relativeImportance.toFixed(0)}%</span>\n            </div>\n          </div>\n        </div>\n      `;\n    });\n  }\n\n  // Show negative drivers (decrease risk)\n  if (driversViewModel.negative.length > 0) {\n    driversViewModel.negative.forEach((driver) => {\n      const relativeImportance = totalNegativeWeightLegacy > 0\n        ? (Math.abs(driver.weight) / totalNegativeWeightLegacy) * 100 : 0;\n      const width = Math.min(relativeImportance * 2, 100); // Scale for visualization\n      html += `\n        <div class=\"driver-item\">\n          <span class=\"driver-label\">${driver.label}</span>\n          <div class=\"driver-bar-container\">\n            <div class=\"driver-bar negative\" style=\"width: ${width}%\">\n              <span class=\"driver-value\">-${relativeImportance.toFixed(0)}%</span>\n            </div>\n          </div>\n        </div>\n      `;\n    });\n  }\n\n  // Show metadata if available\n  if (driversViewModel.meta && Object.keys(driversViewModel.meta).length > 0) {\n    html += `\n      <div style=\"margin-top: 15px; padding-top: 10px; border-top: 1px solid var(--border-color);\">\n        <small style=\"color: var(--text-secondary);\">\n    `;\n\n    if (driversViewModel.meta.base_value !== undefined) {\n      html += `Base value: ${driversViewModel.meta.base_value.toFixed(2)} `;\n    }\n    if (driversViewModel.meta.contrib_sum !== undefined) {\n      html += `Contrib sum: ${driversViewModel.meta.contrib_sum.toFixed(2)} `;\n    }\n    if (driversViewModel.meta.logit_total !== undefined) {\n      html += `Logit total: ${driversViewModel.meta.logit_total.toFixed(2)}`;\n    }\n\n    html += `\n        </small>\n      </div>\n    `;\n  }\n\n  html += '</div>';\n  return html;\n}\n\nexport function renderEnhancedDriversPanel(drivers, title, type, probability) {\n  if (!drivers || Object.keys(drivers).length === 0) {\n    //(`No drivers data for ${title}`);\n    return `\n      <div class=\"enhanced-drivers-panel ${type}\">\n        <div class=\"panel-header\">\n          <div class=\"panel-icon ${type}\">${type === 'ich' ? '🩸' : '🧠'}</div>\n          <div class=\"panel-title\">\n            <h4>${title} ${t('riskFactors')}</h4>\n            <span class=\"panel-subtitle\">${t('noDriverData')}</span>\n          </div>\n        </div>\n        <p class=\"no-drivers-message\">\n          ${t('driverInfoNotAvailable')}\n        </p>\n      </div>\n    `;\n  }\n\n  // Drivers are already in the correct format from our new extraction\n  const driversViewModel = drivers;\n\n  if (driversViewModel.kind === 'unavailable') {\n    return `\n      <div class=\"enhanced-drivers-panel ${type}\">\n        <div class=\"panel-header\">\n          <div class=\"panel-icon ${type}\">${type === 'ich' ? '🩸' : '🧠'}</div>\n          <div class=\"panel-title\">\n            <h4>${title} ${t('riskFactors')}</h4>\n            <span class=\"panel-subtitle\">${t('driverAnalysisUnavailable')}</span>\n          </div>\n        </div>\n        <p class=\"no-drivers-message\">\n          ${t('driverAnalysisNotAvailable')}\n        </p>\n      </div>\n    `;\n  }\n\n  // Sort drivers by absolute impact and limit to top 6 most important\n  const positiveDrivers = (driversViewModel.positive || [])\n    .sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight))\n    .slice(0, 3); // Top 3 positive drivers\n\n  const negativeDrivers = (driversViewModel.negative || [])\n    .sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight))\n    .slice(0, 3); // Top 3 negative drivers\n\n  const maxWeight = Math.max(\n    ...positiveDrivers.map((d) => Math.abs(d.weight)),\n    ...negativeDrivers.map((d) => Math.abs(d.weight)),\n    0.01, // Prevent division by zero\n  );\n\n  console.log(`[Drivers] ${type} maxWeight:`, maxWeight);\n  console.log(`[Drivers] ${type} positive:`, positiveDrivers.map(d => `${d.label}: ${d.weight}`));\n  console.log(`[Drivers] ${type} negative:`, negativeDrivers.map(d => `${d.label}: ${d.weight}`));\n  console.log(`[Drivers] ${type} positive weights:`, positiveDrivers.map(d => Math.abs(d.weight)));\n  console.log(`[Drivers] ${type} negative weights:`, negativeDrivers.map(d => Math.abs(d.weight)));\n\n  let html = `\n    <div class=\"enhanced-drivers-panel ${type}\">\n      <div class=\"panel-header\">\n        <div class=\"panel-icon ${type}\">${type === 'ich' ? '🩸' : '🧠'}</div>\n        <div class=\"panel-title\">\n          <h4>${title} ${t('riskFactors')}</h4>\n          <span class=\"panel-subtitle\">${t('contributingFactors')}</span>\n        </div>\n      </div>\n      \n      <div class=\"drivers-split-view\">\n        <div class=\"drivers-column positive-column\">\n          <div class=\"column-header\">\n            <span class=\"column-icon\">↑</span>\n            <span class=\"column-title\">${t('increaseRisk')}</span>\n          </div>\n          <div class=\"compact-drivers\">\n  `;\n\n  // Calculate relative importance percentages\n  const totalPositiveWeight = positiveDrivers.reduce((sum, d) => sum + Math.abs(d.weight), 0);\n\n  // Render positive drivers\n  if (positiveDrivers.length > 0) {\n    positiveDrivers.forEach((driver, index) => {\n      // Calculate relative importance as percentage of total positive contribution\n      const relativeImportance = totalPositiveWeight > 0\n        ? (Math.abs(driver.weight) / totalPositiveWeight) * 100 : 0;\n\n      // Use baseline implementation: ratio to maxWeight (TRUE working method)\n      const barWidth = (Math.abs(driver.weight) / maxWeight) * 100;\n      console.log(`[Drivers] ${type} positive driver \"${driver.label}\": weight=${Math.abs(driver.weight)}, relativeImportance=${relativeImportance.toFixed(1)}%, barWidth=${barWidth}%`);\n\n      const cleanLabel = formatDriverName(driver.label);\n\n      html += `\n        <div class=\"compact-driver-item\">\n          <div class=\"compact-driver-label\">${cleanLabel}</div>\n          <div class=\"compact-driver-bar positive\" style=\"width: ${barWidth}%\">\n            <span class=\"compact-driver-value\">+${relativeImportance.toFixed(0)}%</span>\n          </div>\n        </div>\n      `;\n    });\n  } else {\n    html += `<div class=\"no-factors\">${t('noPositiveFactors')}</div>`;\n  }\n\n  html += `\n          </div>\n        </div>\n        \n        <div class=\"drivers-column negative-column\">\n          <div class=\"column-header\">\n            <span class=\"column-icon\">↓</span>\n            <span class=\"column-title\">${t('decreaseRisk')}</span>\n          </div>\n          <div class=\"compact-drivers\">\n  `;\n\n  // Calculate relative importance percentages for negative drivers\n  const totalNegativeWeight = negativeDrivers.reduce((sum, d) => sum + Math.abs(d.weight), 0);\n\n  // Render negative drivers\n  if (negativeDrivers.length > 0) {\n    negativeDrivers.forEach((driver, index) => {\n      // Calculate relative importance as percentage of total negative contribution\n      const relativeImportance = totalNegativeWeight > 0\n        ? (Math.abs(driver.weight) / totalNegativeWeight) * 100 : 0;\n\n      // Use baseline implementation: ratio to maxWeight (TRUE working method)\n      const barWidth = (Math.abs(driver.weight) / maxWeight) * 100;\n      console.log(`[Drivers] ${type} negative driver \"${driver.label}\": weight=${Math.abs(driver.weight)}, relativeImportance=${relativeImportance.toFixed(1)}%, barWidth=${barWidth}%`);\n\n      const cleanLabel = formatDriverName(driver.label);\n\n      html += `\n        <div class=\"compact-driver-item\">\n          <div class=\"compact-driver-label\">${cleanLabel}</div>\n          <div class=\"compact-driver-bar negative\" style=\"width: ${barWidth}%\">\n            <span class=\"compact-driver-value\">-${relativeImportance.toFixed(0)}%</span>\n          </div>\n        </div>\n      `;\n    });\n  } else {\n    html += `<div class=\"no-factors\">${t('noNegativeFactors')}</div>`;\n  }\n\n  html += `\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n\n  return html;\n}\n","// Comprehensive stroke center database for Germany\n// Covers Bayern, Baden-Württemberg, and Nordrhein-Westfalen\n// Total: 316 hospitals with hierarchical capabilities\n\nconst COMPREHENSIVE_HOSPITAL_DATABASE = {\n  bayern: {\n    neurosurgicalCenters: [\n      {\n        id: 'BY-NS-001',\n        name: 'LMU Klinikum München - Großhadern',\n        address: 'Marchioninistraße 15, 81377 München',\n        coordinates: { lat: 48.1106, lng: 11.4684 },\n        phone: '+49 89 4400-0',\n        emergency: '+49 89 4400-73331',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1440,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-NS-002',\n        name: 'Klinikum rechts der Isar München (TUM)',\n        address: 'Ismaninger Str. 22, 81675 München',\n        coordinates: { lat: 48.1497, lng: 11.6052 },\n        phone: '+49 89 4140-0',\n        emergency: '+49 89 4140-2249',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1161,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-NS-003',\n        name: 'Städtisches Klinikum München Schwabing',\n        address: 'Kölner Platz 1, 80804 München',\n        coordinates: { lat: 48.1732, lng: 11.5755 },\n        phone: '+49 89 3068-0',\n        emergency: '+49 89 3068-2050',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 648,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-NS-004',\n        name: 'Städtisches Klinikum München Bogenhausen',\n        address: 'Englschalkinger Str. 77, 81925 München',\n        coordinates: { lat: 48.1614, lng: 11.6254 },\n        phone: '+49 89 9270-0',\n        emergency: '+49 89 9270-2050',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 689,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-NS-005',\n        name: 'Universitätsklinikum Erlangen',\n        address: 'Maximiliansplatz 2, 91054 Erlangen',\n        coordinates: { lat: 49.5982, lng: 11.0037 },\n        phone: '+49 9131 85-0',\n        emergency: '+49 9131 85-39003',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1371,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-NS-006',\n        name: 'Universitätsklinikum Regensburg',\n        address: 'Franz-Josef-Strauß-Allee 11, 93053 Regensburg',\n        coordinates: { lat: 49.0134, lng: 12.0991 },\n        phone: '+49 941 944-0',\n        emergency: '+49 941 944-7501',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1042,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-NS-007',\n        name: 'Universitätsklinikum Würzburg',\n        address: 'Oberdürrbacher Str. 6, 97080 Würzburg',\n        coordinates: { lat: 49.7840, lng: 9.9721 },\n        phone: '+49 931 201-0',\n        emergency: '+49 931 201-24444',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1264,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-NS-008',\n        name: 'Klinikum Nürnberg Nord',\n        address: 'Prof.-Ernst-Nathan-Str. 1, 90419 Nürnberg',\n        coordinates: { lat: 49.4521, lng: 11.0767 },\n        phone: '+49 911 398-0',\n        emergency: '+49 911 398-2369',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1368,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-NS-009',\n        name: 'Universitätsklinikum Augsburg',\n        address: 'Stenglinstr. 2, 86156 Augsburg',\n        coordinates: { lat: 48.3668, lng: 10.9093 },\n        phone: '+49 821 400-01',\n        emergency: '+49 821 400-2356',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1740,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-NS-010',\n        name: 'Klinikum Aschaffenburg-Alzenau',\n        address: 'Am Hasenkopf 1, 63739 Aschaffenburg',\n        coordinates: { lat: 49.9737, lng: 9.1570 },\n        phone: '+49 6021 32-0',\n        emergency: '+49 6021 32-2800',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 40,\n        network: 'TRANSIT',\n      },\n      {\n        id: 'BY-NS-011',\n        name: 'Klinikum Landshut',\n        address: 'Robert-Koch-Str. 1, 84034 Landshut',\n        coordinates: { lat: 48.5665, lng: 12.1512 },\n        phone: '+49 871 698-0',\n        emergency: '+49 871 698-3333',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 505,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-NS-012',\n        name: 'Klinikum Coburg',\n        address: 'Ketschendorfer Str. 33, 96450 Coburg',\n        coordinates: { lat: 50.2596, lng: 10.9644 },\n        phone: '+49 9561 22-0',\n        emergency: '+49 9561 22-6800',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 547,\n        network: 'STENO',\n      },\n      {\n        id: 'BY-NS-013',\n        name: 'Klinikum Passau',\n        address: 'Bischof-Pilgrim-Str. 1, 94032 Passau',\n        coordinates: { lat: 48.5665, lng: 13.4777 },\n        phone: '+49 851 5300-0',\n        emergency: '+49 851 5300-2222',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 696,\n        network: 'TEMPiS',\n      },\n    ],\n\n    comprehensiveStrokeCenters: [\n      {\n        id: 'BY-CS-001',\n        name: 'Klinikum Bamberg',\n        address: 'Buger Str. 80, 96049 Bamberg',\n        coordinates: { lat: 49.8988, lng: 10.9027 },\n        phone: '+49 951 503-0',\n        emergency: '+49 951 503-11101',\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 630,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-CS-002',\n        name: 'Klinikum Bayreuth',\n        address: 'Preuschwitzer Str. 101, 95445 Bayreuth',\n        coordinates: { lat: 49.9459, lng: 11.5779 },\n        phone: '+49 921 400-0',\n        emergency: '+49 921 400-5401',\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 848,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-CS-003',\n        name: 'Klinikum Coburg',\n        address: 'Ketschendorfer Str. 33, 96450 Coburg',\n        coordinates: { lat: 50.2596, lng: 10.9685 },\n        phone: '+49 9561 22-0',\n        emergency: '+49 9561 22-6300',\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 522,\n        network: 'TEMPiS',\n      },\n    ],\n\n    regionalStrokeUnits: [\n      {\n        id: 'BY-RSU-001',\n        name: 'Goldberg-Klinik Kelheim',\n        address: 'Traubenweg 3, 93309 Kelheim',\n        coordinates: { lat: 48.9166, lng: 11.8742 },\n        phone: '+49 9441 702-0',\n        emergency: '+49 9441 702-6800',\n        thrombolysis: true,\n        beds: 200,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-RSU-002',\n        name: 'DONAUISAR Klinikum Deggendorf',\n        address: 'Perlasberger Str. 41, 94469 Deggendorf',\n        coordinates: { lat: 48.8372, lng: 12.9619 },\n        phone: '+49 991 380-0',\n        emergency: '+49 991 380-2201',\n        thrombolysis: true,\n        beds: 450,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-RSU-003',\n        name: 'Klinikum St. Elisabeth Straubing',\n        address: 'St.-Elisabeth-Str. 23, 94315 Straubing',\n        coordinates: { lat: 48.8742, lng: 12.5733 },\n        phone: '+49 9421 710-0',\n        emergency: '+49 9421 710-2000',\n        thrombolysis: true,\n        beds: 580,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-RSU-004',\n        name: 'Klinikum Freising',\n        address: 'Mainburger Str. 29, 85356 Freising',\n        coordinates: { lat: 48.4142, lng: 11.7461 },\n        phone: '+49 8161 24-0',\n        emergency: '+49 8161 24-2800',\n        thrombolysis: true,\n        beds: 380,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-RSU-005',\n        name: 'Klinikum Landkreis Erding',\n        address: 'Bajuwarenstr. 5, 85435 Erding',\n        coordinates: { lat: 48.3061, lng: 11.9067 },\n        phone: '+49 8122 59-0',\n        emergency: '+49 8122 59-2201',\n        thrombolysis: true,\n        beds: 350,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-RSU-006',\n        name: 'Helios Amper-Klinikum Dachau',\n        address: 'Krankenhausstr. 15, 85221 Dachau',\n        coordinates: { lat: 48.2599, lng: 11.4342 },\n        phone: '+49 8131 76-0',\n        emergency: '+49 8131 76-2201',\n        thrombolysis: true,\n        beds: 480,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-RSU-007',\n        name: 'Klinikum Fürstenfeldbruck',\n        address: 'Dachauer Str. 33, 82256 Fürstenfeldbruck',\n        coordinates: { lat: 48.1772, lng: 11.2578 },\n        phone: '+49 8141 99-0',\n        emergency: '+49 8141 99-2201',\n        thrombolysis: true,\n        beds: 420,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-RSU-008',\n        name: 'Klinikum Ingolstadt',\n        address: 'Krumenauerstraße 25, 85049 Ingolstadt',\n        coordinates: { lat: 48.7665, lng: 11.4364 },\n        phone: '+49 841 880-0',\n        emergency: '+49 841 880-2201',\n        thrombolysis: true,\n        beds: 665,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-RSU-009',\n        name: 'Klinikum Passau',\n        address: 'Bischof-Pilgrim-Str. 1, 94032 Passau',\n        coordinates: { lat: 48.5665, lng: 13.4513 },\n        phone: '+49 851 5300-0',\n        emergency: '+49 851 5300-2100',\n        thrombolysis: true,\n        beds: 540,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-RSU-010',\n        name: 'Klinikum Landshut',\n        address: 'Robert-Koch-Str. 1, 84034 Landshut',\n        coordinates: { lat: 48.5436, lng: 12.1619 },\n        phone: '+49 871 698-0',\n        emergency: '+49 871 698-3333',\n        thrombolysis: true,\n        beds: 790,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-RSU-011',\n        name: 'RoMed Klinikum Rosenheim',\n        address: 'Pettenkoferstr. 10, 83022 Rosenheim',\n        coordinates: { lat: 47.8567, lng: 12.1265 },\n        phone: '+49 8031 365-0',\n        emergency: '+49 8031 365-3711',\n        thrombolysis: true,\n        beds: 870,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-RSU-012',\n        name: 'Klinikum Memmingen',\n        address: 'Bismarckstr. 23, 87700 Memmingen',\n        coordinates: { lat: 47.9833, lng: 10.1833 },\n        phone: '+49 8331 70-0',\n        emergency: '+49 8331 70-2500',\n        thrombolysis: true,\n        beds: 520,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-RSU-013',\n        name: 'Klinikum Kempten-Oberallgäu',\n        address: 'Robert-Weixler-Str. 50, 87439 Kempten',\n        coordinates: { lat: 47.7261, lng: 10.3097 },\n        phone: '+49 831 530-0',\n        emergency: '+49 831 530-2201',\n        thrombolysis: true,\n        beds: 650,\n        network: 'TEMPiS',\n      },\n      {\n        id: 'BY-RSU-014',\n        name: 'Klinikum Aschaffenburg-Alzenau',\n        address: 'Am Hasenkopf 1, 63739 Aschaffenburg',\n        coordinates: { lat: 49.9747, lng: 9.1581 },\n        phone: '+49 6021 32-0',\n        emergency: '+49 6021 32-2700',\n        thrombolysis: true,\n        beds: 590,\n        network: 'TEMPiS',\n      },\n    ],\n\n    thrombolysisHospitals: [\n      // Add more smaller hospitals with thrombolysis capability\n      {\n        id: 'BY-TH-001',\n        name: 'Krankenhaus Vilsbiburg',\n        address: 'Sonnenstraße 10, 84137 Vilsbiburg',\n        coordinates: { lat: 48.6333, lng: 12.2833 },\n        phone: '+49 8741 60-0',\n        thrombolysis: true,\n        beds: 180,\n      },\n      {\n        id: 'BY-TH-002',\n        name: 'Krankenhaus Eggenfelden',\n        address: 'Pfarrkirchener Str. 5, 84307 Eggenfelden',\n        coordinates: { lat: 48.4000, lng: 12.7667 },\n        phone: '+49 8721 98-0',\n        thrombolysis: true,\n        beds: 220,\n      },\n      // ... more hospitals would be added here\n    ],\n  },\n\n  badenWuerttemberg: {\n    neurosurgicalCenters: [\n      {\n        id: 'BW-NS-001',\n        name: 'Universitätsklinikum Freiburg',\n        address: 'Hugstetter Str. 55, 79106 Freiburg',\n        coordinates: { lat: 48.0025, lng: 7.8347 },\n        phone: '+49 761 270-0',\n        emergency: '+49 761 270-34010',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1600,\n        network: 'FAST',\n      },\n      {\n        id: 'BW-NS-002',\n        name: 'Universitätsklinikum Heidelberg',\n        address: 'Im Neuenheimer Feld 400, 69120 Heidelberg',\n        coordinates: { lat: 49.4178, lng: 8.6706 },\n        phone: '+49 6221 56-0',\n        emergency: '+49 6221 56-36643',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1621,\n        network: 'FAST',\n      },\n      {\n        id: 'BW-NS-003',\n        name: 'Universitätsklinikum Tübingen',\n        address: 'Geissweg 3, 72076 Tübingen',\n        coordinates: { lat: 48.5378, lng: 9.0538 },\n        phone: '+49 7071 29-0',\n        emergency: '+49 7071 29-82211',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1550,\n        network: 'FAST',\n      },\n      {\n        id: 'BW-NS-004',\n        name: 'Universitätsklinikum Ulm',\n        address: 'Albert-Einstein-Allee 23, 89081 Ulm',\n        coordinates: { lat: 48.4196, lng: 9.9592 },\n        phone: '+49 731 500-0',\n        emergency: '+49 731 500-63001',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1264,\n        network: 'FAST',\n      },\n      {\n        id: 'BW-NS-005',\n        name: 'Klinikum Stuttgart - Katharinenhospital',\n        address: 'Kriegsbergstraße 60, 70174 Stuttgart',\n        coordinates: { lat: 48.7784, lng: 9.1682 },\n        phone: '+49 711 278-0',\n        emergency: '+49 711 278-32001',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 950,\n        network: 'FAST',\n      },\n      {\n        id: 'BW-NS-006',\n        name: 'Städtisches Klinikum Karlsruhe',\n        address: 'Moltkestraße 90, 76133 Karlsruhe',\n        coordinates: { lat: 49.0047, lng: 8.3858 },\n        phone: '+49 721 974-0',\n        emergency: '+49 721 974-2301',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1570,\n        network: 'FAST',\n      },\n      {\n        id: 'BW-NS-007',\n        name: 'Klinikum Ludwigsburg',\n        address: 'Posilipostraße 4, 71640 Ludwigsburg',\n        coordinates: { lat: 48.8901, lng: 9.1953 },\n        phone: '+49 7141 99-0',\n        emergency: '+49 7141 99-67201',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 720,\n        network: 'FAST',\n      },\n    ],\n\n    comprehensiveStrokeCenters: [\n      {\n        id: 'BW-CS-001',\n        name: 'Universitätsmedizin Mannheim',\n        address: 'Theodor-Kutzer-Ufer 1-3, 68167 Mannheim',\n        coordinates: { lat: 49.4828, lng: 8.4664 },\n        phone: '+49 621 383-0',\n        emergency: '+49 621 383-2251',\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1400,\n        network: 'FAST',\n      },\n    ],\n\n    regionalStrokeUnits: [\n      // Regional stroke units in Baden-Württemberg\n      {\n        id: 'BW-RSU-001',\n        name: 'Robert-Bosch-Krankenhaus Stuttgart',\n        address: 'Auerbachstraße 110, 70376 Stuttgart',\n        coordinates: { lat: 48.7447, lng: 9.2294 },\n        phone: '+49 711 8101-0',\n        emergency: '+49 711 8101-3456',\n        thrombolysis: true,\n        beds: 850,\n        network: 'FAST',\n      },\n      // ... more would be added\n    ],\n\n    thrombolysisHospitals: [\n      // Smaller hospitals with thrombolysis capability\n      // ... would be populated from your database\n    ],\n  },\n\n  nordrheinWestfalen: {\n    neurosurgicalCenters: [\n      {\n        id: 'NRW-NS-001',\n        name: 'Universitätsklinikum Düsseldorf',\n        address: 'Moorenstraße 5, 40225 Düsseldorf',\n        coordinates: { lat: 51.1906, lng: 6.8064 },\n        phone: '+49 211 81-0',\n        emergency: '+49 211 81-17700',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1300,\n        network: 'NEVANO+',\n      },\n      {\n        id: 'NRW-NS-002',\n        name: 'Universitätsklinikum Köln',\n        address: 'Kerpener Str. 62, 50937 Köln',\n        coordinates: { lat: 50.9253, lng: 6.9187 },\n        phone: '+49 221 478-0',\n        emergency: '+49 221 478-32500',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1500,\n        network: 'NEVANO+',\n      },\n      {\n        id: 'NRW-NS-003',\n        name: 'Universitätsklinikum Essen',\n        address: 'Hufelandstraße 55, 45147 Essen',\n        coordinates: { lat: 51.4285, lng: 7.0073 },\n        phone: '+49 201 723-0',\n        emergency: '+49 201 723-84444',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1350,\n        network: 'NEVANO+',\n      },\n      {\n        id: 'NRW-NS-004',\n        name: 'Universitätsklinikum Münster',\n        address: 'Albert-Schweitzer-Campus 1, 48149 Münster',\n        coordinates: { lat: 51.9607, lng: 7.6261 },\n        phone: '+49 251 83-0',\n        emergency: '+49 251 83-47255',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1513,\n        network: 'NEVANO+',\n      },\n      {\n        id: 'NRW-NS-005',\n        name: 'Universitätsklinikum Bonn',\n        address: 'Venusberg-Campus 1, 53127 Bonn',\n        coordinates: { lat: 50.6916, lng: 7.1127 },\n        phone: '+49 228 287-0',\n        emergency: '+49 228 287-15107',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1200,\n        network: 'NEVANO+',\n      },\n      {\n        id: 'NRW-NS-006',\n        name: 'Klinikum Dortmund',\n        address: 'Beurhausstraße 40, 44137 Dortmund',\n        coordinates: { lat: 51.5036, lng: 7.4663 },\n        phone: '+49 231 953-0',\n        emergency: '+49 231 953-20050',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1200,\n        network: 'NVNR',\n      },\n      {\n        id: 'NRW-NS-007',\n        name: 'Rhein-Maas Klinikum Würselen',\n        address: 'Mauerfeldstraße 25, 52146 Würselen',\n        coordinates: { lat: 50.8178, lng: 6.1264 },\n        phone: '+49 2405 62-0',\n        emergency: '+49 2405 62-2222',\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 420,\n        network: 'NEVANO+',\n      },\n    ],\n\n    comprehensiveStrokeCenters: [\n      {\n        id: 'NRW-CS-001',\n        name: 'Universitätsklinikum Aachen',\n        address: 'Pauwelsstraße 30, 52074 Aachen',\n        coordinates: { lat: 50.7780, lng: 6.0614 },\n        phone: '+49 241 80-0',\n        emergency: '+49 241 80-89611',\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1400,\n        network: 'NEVANO+',\n      },\n    ],\n\n    regionalStrokeUnits: [\n      // Regional stroke units in NRW\n      {\n        id: 'NRW-RSU-001',\n        name: 'Helios Universitätsklinikum Wuppertal',\n        address: 'Heusnerstraße 40, 42283 Wuppertal',\n        coordinates: { lat: 51.2467, lng: 7.1703 },\n        phone: '+49 202 896-0',\n        emergency: '+49 202 896-2180',\n        thrombolysis: true,\n        beds: 1050,\n        network: 'NEVANO+',\n      },\n      // ... more would be added\n    ],\n\n    thrombolysisHospitals: [\n      {\n        id: 'NRW-TH-009',\n        name: 'Elisabeth-Krankenhaus Essen',\n        address: 'Klara-Kopp-Weg 1, 45138 Essen',\n        coordinates: { lat: 51.4495, lng: 7.0137 },\n        phone: '+49 201 897-0',\n        thrombolysis: true,\n        beds: 583,\n      },\n      {\n        id: 'NRW-TH-010',\n        name: 'Klinikum Oberberg Gummersbach',\n        address: 'Wilhelm-Breckow-Allee 20, 51643 Gummersbach',\n        coordinates: { lat: 51.0277, lng: 7.5694 },\n        phone: '+49 2261 17-0',\n        thrombolysis: true,\n        beds: 431,\n      },\n      {\n        id: 'NRW-TH-011',\n        name: 'St. Vincenz-Krankenhaus Limburg',\n        address: 'Auf dem Schafsberg, 65549 Limburg',\n        coordinates: { lat: 50.3856, lng: 8.0584 },\n        phone: '+49 6431 292-0',\n        thrombolysis: true,\n        beds: 452,\n      },\n      {\n        id: 'NRW-TH-012',\n        name: 'Klinikum Lüdenscheid',\n        address: 'Paulmannshöher Straße 14, 58515 Lüdenscheid',\n        coordinates: { lat: 51.2186, lng: 7.6298 },\n        phone: '+49 2351 46-0',\n        thrombolysis: true,\n        beds: 869,\n      },\n      // ... more hospitals from your database\n    ],\n  },\n};\n\n// ==========================================\n// ENHANCED ROUTING ALGORITHM\n// ==========================================\n\nconst ROUTING_ALGORITHM = {\n\n  // Main routing function with enhanced ICH probability thresholds\n  routePatient(patientData) {\n    const {\n      location,\n      state,\n      ichProbability,\n      timeFromOnset,\n      clinicalFactors,\n    } = patientData;\n\n    // Auto-detect state if not provided\n    const detectedState = state || this.detectState(location);\n    const database = COMPREHENSIVE_HOSPITAL_DATABASE[detectedState];\n\n    // Enhanced decision tree based on ICH probability\n    if (ichProbability >= 0.50) {\n      // HIGH ICH RISK - Direct to neurosurgery\n      const destination = this.findNearest(location, database.neurosurgicalCenters);\n      if (!destination) {\n        throw new Error(`No neurosurgical centers available in ${detectedState}`);\n      }\n\n      return {\n        category: 'NEUROSURGICAL_CENTER',\n        destination,\n        urgency: 'IMMEDIATE',\n        reasoning: 'High bleeding probability (≥50%) - neurosurgical evaluation required',\n        preAlert: 'Activate neurosurgery team',\n        bypassLocal: true,\n        threshold: '≥50%',\n        state: detectedState,\n      };\n    }\n\n    if (ichProbability >= 0.30) {\n      // INTERMEDIATE ICH RISK - Comprehensive center preferred\n      const comprehensiveOptions = [\n        ...database.neurosurgicalCenters,\n        ...database.comprehensiveStrokeCenters,\n      ];\n\n      return {\n        category: 'COMPREHENSIVE_CENTER',\n        destination: this.findNearest(location, comprehensiveOptions),\n        urgency: 'URGENT',\n        reasoning: 'Intermediate bleeding risk (30-50%) - CT and possible intervention',\n        preAlert: 'Prepare for possible neurosurgical consultation',\n        transferPlan: this.findNearest(location, database.neurosurgicalCenters),\n        threshold: '30-50%',\n        state: detectedState,\n      };\n    }\n\n    if (timeFromOnset && timeFromOnset <= 270) { // Within 4.5 hour window\n      // LOW ICH RISK, WITHIN tPA WINDOW - Any thrombolysis center\n      const allThrombolysisCapable = [\n        ...database.neurosurgicalCenters,\n        ...database.comprehensiveStrokeCenters,\n        ...database.regionalStrokeUnits,\n        ...database.thrombolysisHospitals,\n      ];\n\n      return {\n        category: 'THROMBOLYSIS_CAPABLE',\n        destination: this.findNearest(location, allThrombolysisCapable),\n        urgency: 'TIME_CRITICAL',\n        reasoning: 'Low bleeding risk (<30%), within tPA window - nearest thrombolysis',\n        preAlert: 'Prepare for thrombolysis protocol',\n        bypassLocal: false,\n        threshold: '<30%',\n        timeWindow: '≤4.5h',\n        state: detectedState,\n      };\n    }\n\n    // LOW ICH RISK, OUTSIDE tPA WINDOW OR NO TIME - Regional stroke unit adequate\n    const strokeUnitsAndHigher = [\n      ...database.neurosurgicalCenters,\n      ...database.comprehensiveStrokeCenters,\n      ...database.regionalStrokeUnits,\n    ];\n\n    return {\n      category: 'STROKE_UNIT',\n      destination: this.findNearest(location, strokeUnitsAndHigher),\n      urgency: 'STANDARD',\n      reasoning: timeFromOnset > 270\n        ? 'Low bleeding risk, outside tPA window - standard stroke evaluation'\n        : 'Low bleeding risk - standard stroke evaluation',\n      preAlert: 'Standard stroke protocol',\n      bypassLocal: false,\n      threshold: '<30%',\n      timeWindow: timeFromOnset ? '>4.5h' : 'unknown',\n      state: detectedState,\n    };\n  },\n\n  // Auto-detect state based on coordinates (more precise boundaries)\n  detectState(location) {\n    // Baden-Württemberg: check first for western regions\n    if (location.lat >= 47.5 && location.lat <= 49.8\n        && location.lng >= 7.5 && location.lng <= 10.2) {\n      return 'badenWuerttemberg';\n    }\n\n    // NRW: northern regions\n    if (location.lat >= 50.3 && location.lat <= 52.5\n        && location.lng >= 5.9 && location.lng <= 9.5) {\n      return 'nordrheinWestfalen';\n    }\n\n    // Bayern: eastern regions (more restrictive western bound to avoid overlap)\n    if (location.lat >= 47.2 && location.lat <= 50.6\n        && location.lng >= 10.2 && location.lng <= 13.8) {\n      return 'bayern';\n    }\n\n    // Overlap region - use nearest state center\n    return this.findNearestState(location);\n  },\n\n  // Find nearest state for edge cases\n  findNearestState(location) {\n    const stateCenters = {\n      bayern: { lat: 49.0, lng: 11.5 },\n      badenWuerttemberg: { lat: 48.5, lng: 9.0 },\n      nordrheinWestfalen: { lat: 51.5, lng: 7.5 },\n    };\n\n    let nearestState = 'bayern';\n    let minDistance = Infinity;\n\n    for (const [state, center] of Object.entries(stateCenters)) {\n      const distance = this.calculateDistance(location, center);\n      if (distance < minDistance) {\n        minDistance = distance;\n        nearestState = state;\n      }\n    }\n\n    return nearestState;\n  },\n\n  // Helper function to find nearest hospital\n  findNearest(userLocation, hospitals) {\n    if (!hospitals || hospitals.length === 0) {\n      //('No hospitals available in database');\n      return null;\n    }\n\n    return hospitals\n      .map((hospital) => {\n        // Validate hospital has coordinates\n        if (!hospital.coordinates || typeof hospital.coordinates.lat !== 'number') {\n          //(`Hospital ${hospital.name} missing valid coordinates`);\n          return null;\n        }\n\n        return {\n          ...hospital,\n          distance: this.calculateDistance(userLocation, hospital.coordinates),\n        };\n      })\n      .filter((hospital) => hospital !== null) // Remove invalid hospitals\n      .sort((a, b) => a.distance - b.distance)[0];\n  },\n\n  // Calculate distance between two GPS points\n  calculateDistance(point1, point2) {\n    const R = 6371; // Earth radius in km\n    const dLat = this.toRad(point2.lat - point1.lat);\n    const dLng = this.toRad(point2.lng - point1.lng);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2)\n      + Math.cos(this.toRad(point1.lat)) * Math.cos(this.toRad(point2.lat))\n      * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  },\n\n  toRad(deg) {\n    return deg * (Math.PI / 180);\n  },\n};\n\nexport { COMPREHENSIVE_HOSPITAL_DATABASE, ROUTING_ALGORITHM };\n","// Stroke centers in Bayern (Bavaria), Germany\n// Data includes comprehensive stroke centers and stroke units with neurosurgical capabilities\n\nexport const strokeCenters = [\n  // Major comprehensive stroke centers in München\n  {\n    id: 'klinikum-grosshadern-muenchen',\n    name: 'LMU Klinikum München - Großhadern',\n    type: 'comprehensive',\n    address: 'Marchioninistraße 15, 81377 München',\n    coordinates: {\n      lat: 48.1106,\n      lng: 11.4684,\n    },\n    phone: '+49 89 4400-0',\n    emergency: '+49 89 4400-73331',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'klinikum-rechts-der-isar-muenchen',\n    name: 'Klinikum rechts der Isar München (TUM)',\n    type: 'comprehensive',\n    address: 'Ismaninger Str. 22, 81675 München',\n    coordinates: {\n      lat: 48.1497,\n      lng: 11.6052,\n    },\n    phone: '+49 89 4140-0',\n    emergency: '+49 89 4140-2249',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'klinikum-schwabing-muenchen',\n    name: 'Städtisches Klinikum München Schwabing',\n    type: 'comprehensive',\n    address: 'Kölner Platz 1, 80804 München',\n    coordinates: {\n      lat: 48.1732,\n      lng: 11.5755,\n    },\n    phone: '+49 89 3068-0',\n    emergency: '+49 89 3068-2050',\n    services: ['thrombectomy', 'neurosurgery', 'icu'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'klinikum-bogenhausen-muenchen',\n    name: 'Städtisches Klinikum München Bogenhausen',\n    type: 'comprehensive',\n    address: 'Englschalkinger Str. 77, 81925 München',\n    coordinates: {\n      lat: 48.1614,\n      lng: 11.6254,\n    },\n    phone: '+49 89 9270-0',\n    emergency: '+49 89 9270-2050',\n    services: ['thrombectomy', 'neurosurgery', 'icu'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01',\n  },\n\n  // Major centers in other Bayern cities\n  {\n    id: 'uniklinikum-erlangen',\n    name: 'Universitätsklinikum Erlangen',\n    type: 'comprehensive',\n    address: 'Maximiliansplatz 2, 91054 Erlangen',\n    coordinates: {\n      lat: 49.5982,\n      lng: 11.0037,\n    },\n    phone: '+49 9131 85-0',\n    emergency: '+49 9131 85-39003',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'uniklinikum-regensburg',\n    name: 'Universitätsklinikum Regensburg',\n    type: 'comprehensive',\n    address: 'Franz-Josef-Strauß-Allee 11, 93053 Regensburg',\n    coordinates: {\n      lat: 49.0134,\n      lng: 12.0991,\n    },\n    phone: '+49 941 944-0',\n    emergency: '+49 941 944-7501',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'uniklinikum-wuerzburg',\n    name: 'Universitätsklinikum Würzburg',\n    type: 'comprehensive',\n    address: 'Oberdürrbacher Str. 6, 97080 Würzburg',\n    coordinates: {\n      lat: 49.7840,\n      lng: 9.9721,\n    },\n    phone: '+49 931 201-0',\n    emergency: '+49 931 201-24444',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'klinikum-nuernberg',\n    name: 'Klinikum Nürnberg Nord',\n    type: 'comprehensive',\n    address: 'Prof.-Ernst-Nathan-Str. 1, 90419 Nürnberg',\n    coordinates: {\n      lat: 49.4521,\n      lng: 11.0767,\n    },\n    phone: '+49 911 398-0',\n    emergency: '+49 911 398-2369',\n    services: ['thrombectomy', 'neurosurgery', 'icu'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'klinikum-augsburg',\n    name: 'Universitätsklinikum Augsburg',\n    type: 'comprehensive',\n    address: 'Stenglinstr. 2, 86156 Augsburg',\n    coordinates: {\n      lat: 48.3668,\n      lng: 10.9093,\n    },\n    phone: '+49 821 400-01',\n    emergency: '+49 821 400-2356',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01',\n  },\n\n  // Primary stroke centers\n  {\n    id: 'klinikum-ingolstadt',\n    name: 'Klinikum Ingolstadt',\n    type: 'primary',\n    address: 'Krumenauerstraße 25, 85049 Ingolstadt',\n    coordinates: {\n      lat: 48.7665,\n      lng: 11.4364,\n    },\n    phone: '+49 841 880-0',\n    emergency: '+49 841 880-2201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'klinikum-passau',\n    name: 'Klinikum Passau',\n    type: 'primary',\n    address: 'Bischof-Pilgrim-Str. 1, 94032 Passau',\n    coordinates: {\n      lat: 48.5665,\n      lng: 13.4513,\n    },\n    phone: '+49 851 5300-0',\n    emergency: '+49 851 5300-2100',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'klinikum-bamberg',\n    name: 'Sozialstiftung Bamberg Klinikum',\n    type: 'primary',\n    address: 'Buger Str. 80, 96049 Bamberg',\n    coordinates: {\n      lat: 49.8988,\n      lng: 10.9027,\n    },\n    phone: '+49 951 503-0',\n    emergency: '+49 951 503-11101',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'klinikum-bayreuth',\n    name: 'Klinikum Bayreuth',\n    type: 'primary',\n    address: 'Preuschwitzer Str. 101, 95445 Bayreuth',\n    coordinates: {\n      lat: 49.9459,\n      lng: 11.5779,\n    },\n    phone: '+49 921 400-0',\n    emergency: '+49 921 400-5401',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'klinikum-landshut',\n    name: 'Klinikum Landshut',\n    type: 'primary',\n    address: 'Robert-Koch-Str. 1, 84034 Landshut',\n    coordinates: {\n      lat: 48.5436,\n      lng: 12.1619,\n    },\n    phone: '+49 871 698-0',\n    emergency: '+49 871 698-3333',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'klinikum-rosenheim',\n    name: 'RoMed Klinikum Rosenheim',\n    type: 'primary',\n    address: 'Pettenkoferstr. 10, 83022 Rosenheim',\n    coordinates: {\n      lat: 47.8567,\n      lng: 12.1265,\n    },\n    phone: '+49 8031 365-0',\n    emergency: '+49 8031 365-3711',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'klinikum-memmingen',\n    name: 'Klinikum Memmingen',\n    type: 'primary',\n    address: 'Bismarckstr. 23, 87700 Memmingen',\n    coordinates: {\n      lat: 47.9833,\n      lng: 10.1833,\n    },\n    phone: '+49 8331 70-0',\n    emergency: '+49 8331 70-2500',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'klinikum-kempten',\n    name: 'Klinikum Kempten-Oberallgäu',\n    type: 'primary',\n    address: 'Robert-Weixler-Str. 50, 87439 Kempten',\n    coordinates: {\n      lat: 47.7261,\n      lng: 10.3097,\n    },\n    phone: '+49 831 530-0',\n    emergency: '+49 831 530-2201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'klinikum-coburg',\n    name: 'Klinikum Coburg',\n    type: 'primary',\n    address: 'Ketschendorfer Str. 33, 96450 Coburg',\n    coordinates: {\n      lat: 50.2596,\n      lng: 10.9685,\n    },\n    phone: '+49 9561 22-0',\n    emergency: '+49 9561 22-6300',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'klinikum-aschaffenburg',\n    name: 'Klinikum Aschaffenburg-Alzenau',\n    type: 'primary',\n    address: 'Am Hasenkopf 1, 63739 Aschaffenburg',\n    coordinates: {\n      lat: 49.9747,\n      lng: 9.1581,\n    },\n    phone: '+49 6021 32-0',\n    emergency: '+49 6021 32-2700',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01',\n  },\n\n  // Additional smaller stroke units in Bayern\n  {\n    id: 'goldberg-klinik-kelheim',\n    name: 'Goldberg-Klinik Kelheim',\n    type: 'primary',\n    address: 'Traubenweg 3, 93309 Kelheim',\n    coordinates: {\n      lat: 48.9166,\n      lng: 11.8742,\n    },\n    phone: '+49 9441 702-0',\n    emergency: '+49 9441 702-6800',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'klinikum-deggendorf',\n    name: 'DONAUISAR Klinikum Deggendorf',\n    type: 'primary',\n    address: 'Perlasberger Str. 41, 94469 Deggendorf',\n    coordinates: {\n      lat: 48.8372,\n      lng: 12.9619,\n    },\n    phone: '+49 991 380-0',\n    emergency: '+49 991 380-2201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'klinikum-straubing',\n    name: 'Klinikum St. Elisabeth Straubing',\n    type: 'primary',\n    address: 'St.-Elisabeth-Str. 23, 94315 Straubing',\n    coordinates: {\n      lat: 48.8742,\n      lng: 12.5733,\n    },\n    phone: '+49 9421 710-0',\n    emergency: '+49 9421 710-2000',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'klinikum-freising',\n    name: 'Klinikum Freising',\n    type: 'primary',\n    address: 'Mainburger Str. 29, 85356 Freising',\n    coordinates: {\n      lat: 48.4142,\n      lng: 11.7461,\n    },\n    phone: '+49 8161 24-0',\n    emergency: '+49 8161 24-2800',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'klinikum-erding',\n    name: 'Klinikum Landkreis Erding',\n    type: 'primary',\n    address: 'Bajuwarenstr. 5, 85435 Erding',\n    coordinates: {\n      lat: 48.3061,\n      lng: 11.9067,\n    },\n    phone: '+49 8122 59-0',\n    emergency: '+49 8122 59-2201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'helios-dachau',\n    name: 'Helios Amper-Klinikum Dachau',\n    type: 'primary',\n    address: 'Krankenhausstr. 15, 85221 Dachau',\n    coordinates: {\n      lat: 48.2599,\n      lng: 11.4342,\n    },\n    phone: '+49 8131 76-0',\n    emergency: '+49 8131 76-2201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01',\n  },\n  {\n    id: 'klinikum-fuerstenfeldbruck',\n    name: 'Klinikum Fürstenfeldbruck',\n    type: 'primary',\n    address: 'Dachauer Str. 33, 82256 Fürstenfeldbruck',\n    coordinates: {\n      lat: 48.1772,\n      lng: 11.2578,\n    },\n    phone: '+49 8141 99-0',\n    emergency: '+49 8141 99-2201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01',\n  },\n];\n\n// Helper functions for stroke center data\nexport function getStrokeCentersByType(type) {\n  return strokeCenters.filter((center) => center.type === type);\n}\n\nexport function getComprehensiveStrokeCenters() {\n  return getStrokeCentersByType('comprehensive');\n}\n\nexport function getPrimaryStrokeCenters() {\n  return getStrokeCentersByType('primary');\n}\n\nexport function getStrokeCenterById(id) {\n  return strokeCenters.find((center) => center.id === id);\n}\n\n// Calculate distance between two coordinates using Haversine formula (fallback)\nexport function calculateDistance(lat1, lng1, lat2, lng2) {\n  const R = 6371; // Earth's radius in kilometers\n  const dLat = toRadians(lat2 - lat1);\n  const dLng = toRadians(lng2 - lng1);\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2)\n    + Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2))\n    * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n}\n\nfunction toRadians(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\n// Calculate travel time using OpenRoute Service API\nexport async function calculateTravelTime(fromLat, fromLng, toLat, toLng, profile = 'driving-car') {\n  try {\n    // Using OpenRoute Service (free tier)\n    const url = `https://api.openrouteservice.org/v2/directions/${profile}`;\n    const body = {\n      coordinates: [[fromLng, fromLat], [toLng, toLat]],\n      radiuses: [1000, 1000], // Allow 1km radius for routing\n      format: 'json',\n    };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8',\n        Authorization: '5b3ce3597851110001cf624868c4c27b63ae476c9c26c8bffbc35688', // Free tier key\n        'Content-Type': 'application/json; charset=utf-8',\n      },\n      body: JSON.stringify(body),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Routing API error: ${response.status}`);\n    }\n\n    const data = await response.json();\n\n    if (data.routes && data.routes.length > 0) {\n      const route = data.routes[0];\n      return {\n        duration: Math.round(route.summary.duration / 60), // Convert to minutes\n        distance: Math.round(route.summary.distance / 1000), // Convert to km\n        source: 'routing',\n      };\n    }\n    throw new Error('No route found');\n  } catch (error) {\n    //('Travel time calculation failed, using distance estimate:', error);\n\n    // Fallback to distance-based time estimation\n    const distance = calculateDistance(fromLat, fromLng, toLat, toLng);\n    const estimatedTime = Math.round(distance / 0.8); // Assume 48 km/h average (urban + highway)\n\n    return {\n      duration: estimatedTime,\n      distance: Math.round(distance),\n      source: 'estimated',\n    };\n  }\n}\n\n// Enhanced travel time calculation for emergency vehicles\nexport async function calculateEmergencyTravelTime(fromLat, fromLng, toLat, toLng) {\n  try {\n    // For emergency vehicles, we can use a faster profile and adjust\n    const result = await calculateTravelTime(fromLat, fromLng, toLat, toLng, 'driving-car');\n\n    // Reduce time by 25% for emergency vehicle (sirens, priority routing)\n    const emergencyDuration = Math.round(result.duration * 0.75);\n\n    return {\n      duration: emergencyDuration,\n      distance: result.distance,\n      source: result.source === 'routing' ? 'emergency-routing' : 'emergency-estimated',\n    };\n  } catch (error) {\n    // Fallback calculation\n    const distance = calculateDistance(fromLat, fromLng, toLat, toLng);\n    const emergencyTime = Math.round(distance / 1.2); // Assume 72 km/h for emergency vehicles\n\n    return {\n      duration: emergencyTime,\n      distance: Math.round(distance),\n      source: 'emergency-estimated',\n    };\n  }\n}\n\n// Find nearest stroke centers with travel time calculation\nexport async function findNearestStrokeCentersWithTravelTime(lat, lng, maxResults = 5, maxTime = 120, useEmergencyRouting = true) {\n  //('Calculating travel times to stroke centers...');\n\n  const centersWithTravelTime = await Promise.all(\n    strokeCenters.map(async (center) => {\n      try {\n        const travelInfo = useEmergencyRouting\n          ? await calculateEmergencyTravelTime(lat, lng, center.coordinates.lat, center.coordinates.lng)\n          : await calculateTravelTime(lat, lng, center.coordinates.lat, center.coordinates.lng);\n\n        return {\n          ...center,\n          travelTime: travelInfo.duration,\n          distance: travelInfo.distance,\n          travelSource: travelInfo.source,\n        };\n      } catch (error) {\n        //(`Failed to calculate travel time to ${center.name}:`, error);\n        // Fallback to distance calculation\n        const distance = calculateDistance(lat, lng, center.coordinates.lat, center.coordinates.lng);\n        return {\n          ...center,\n          travelTime: Math.round(distance / 0.8), // Estimate: 48 km/h average\n          distance: Math.round(distance),\n          travelSource: 'fallback',\n        };\n      }\n    }),\n  );\n\n  return centersWithTravelTime\n    .filter((center) => center.travelTime <= maxTime)\n    .sort((a, b) => a.travelTime - b.travelTime)\n    .slice(0, maxResults);\n}\n\n// Find nearest stroke centers using distance (fallback/fast method)\nexport function findNearestStrokeCenters(lat, lng, maxResults = 5, maxDistance = 100) {\n  const centersWithDistance = strokeCenters.map((center) => ({\n    ...center,\n    distance: calculateDistance(lat, lng, center.coordinates.lat, center.coordinates.lng),\n  }));\n\n  return centersWithDistance\n    .filter((center) => center.distance <= maxDistance)\n    .sort((a, b) => a.distance - b.distance)\n    .slice(0, maxResults);\n}\n\n// Get stroke center recommendations with travel time (async)\nexport async function getRecommendedStrokeCentersWithTravelTime(lat, lng, conditionType = 'stroke') {\n  const nearestCenters = await findNearestStrokeCentersWithTravelTime(lat, lng, 10, 120, true);\n\n  if (conditionType === 'lvo' || conditionType === 'thrombectomy') {\n    // For LVO cases, prioritize comprehensive stroke centers within 60 minutes\n    const comprehensive = nearestCenters.filter((center) => center.type === 'comprehensive'\n      && center.services.includes('thrombectomy')\n      && center.travelTime <= 60);\n\n    const primary = nearestCenters.filter((center) => center.type === 'primary');\n\n    return {\n      recommended: comprehensive.slice(0, 3),\n      alternative: primary.slice(0, 2),\n    };\n  }\n\n  // For ICH cases, prioritize neurosurgical capabilities\n  if (conditionType === 'ich') {\n    const neurosurgical = nearestCenters.filter((center) => center.services.includes('neurosurgery')\n      && center.travelTime <= 45);\n\n    return {\n      recommended: neurosurgical.slice(0, 3),\n      alternative: nearestCenters.filter((c) => !neurosurgical.includes(c)).slice(0, 2),\n    };\n  }\n\n  // For general stroke cases, return nearest centers regardless of type\n  return {\n    recommended: nearestCenters.slice(0, 5),\n    alternative: [],\n  };\n}\n\n// Get stroke center recommendations based on patient condition (fallback - distance only)\nexport function getRecommendedStrokeCenters(lat, lng, conditionType = 'stroke') {\n  const nearestCenters = findNearestStrokeCenters(lat, lng, 10);\n\n  if (conditionType === 'lvo' || conditionType === 'thrombectomy') {\n    // For LVO cases, prioritize comprehensive stroke centers\n    const comprehensive = nearestCenters.filter((center) => center.type === 'comprehensive'\n      && center.services.includes('thrombectomy'));\n\n    const primary = nearestCenters.filter((center) => center.type === 'primary');\n\n    return {\n      recommended: comprehensive.slice(0, 3),\n      alternative: primary.slice(0, 2),\n    };\n  }\n\n  // For general stroke cases, return nearest centers regardless of type\n  return {\n    recommended: nearestCenters.slice(0, 5),\n    alternative: [],\n  };\n}\n","import { CRITICAL_THRESHOLDS } from '../config.js';\n\nexport function getRiskLevel(probabilityPercent, type) {\n  const p = Number(probabilityPercent);\n  const thresholds = CRITICAL_THRESHOLDS[type];\n\n  if (p >= thresholds.high) {\n    return '🔴 HIGH RISK';\n  } if (p >= thresholds.medium) {\n    return '🟡 MEDIUM RISK';\n  }\n  return '🟢 LOW RISK';\n}\n\nexport function formatTime(milliseconds) {\n  const seconds = Math.floor(milliseconds / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n}\n","import { renderProgressIndicator } from '../components/progress.js';\nimport { renderCriticalAlert } from '../components/alerts.js';\nimport { renderDriversSection } from '../components/drivers.js';\nimport { renderStrokeCenterMap } from '../components/stroke-center-map.js';\nimport { getRiskLevel, formatTime } from '../../logic/formatters.js';\nimport { CRITICAL_THRESHOLDS } from '../../config.js';\nimport { t, i18n } from '../../localization/i18n.js';\nimport { store } from '../../state/store.js';\nimport { formatSummaryLabel, formatDisplayValue, formatDriverName } from '../../utils/label-formatter.js';\nimport { calculateICHVolume, estimateVolumeFromGFAP, estimateMortalityFromVolume, formatVolumeDisplay } from '../../logic/ich-volume-calculator.js';\nimport { renderCircularBrainDisplay, initializeVolumeAnimations } from '../components/brain-visualization.js';\n// Dynamic import for React islands to avoid module resolution issues\n// Using React island tachometer instead of the vanilla premium gauge\nimport { calculateLegacyICH } from '../../research/legacy-ich-model.js';\nimport { safeLogResearchData, isResearchModeEnabled } from '../../research/data-logger.js';\nimport { renderModelComparison, renderResearchToggle } from '../../research/comparison-ui.js';\n// Premium vanilla JS tachometer implementation\n\nfunction getModuleDisplayName(module) {\n  const isDE = i18n.getCurrentLanguage() === 'de';\n  const moduleNames = {\n    Coma: isDE ? 'Koma-Modul' : 'Coma Module',\n    Limited: isDE ? 'Begrenzte Daten' : 'Limited Data',\n    Full: isDE ? 'Vollständige Bewertung' : 'Full Assessment',\n  };\n  return moduleNames[module] || module;\n}\n\nfunction renderInputSummary() {\n  const state = store.getState();\n  const { formData } = state;\n\n  if (!formData || Object.keys(formData).length === 0) {\n    return '';\n  }\n\n  let summaryHtml = '';\n\n  // Iterate through each module's form data\n  Object.entries(formData).forEach(([module, data]) => {\n    if (data && Object.keys(data).length > 0) {\n      const moduleTitle = t(`${module}ModuleTitle`) || module.charAt(0).toUpperCase() + module.slice(1);\n      let itemsHtml = '';\n\n      Object.entries(data).forEach(([key, value]) => {\n        // Skip empty values\n        if (value === '' || value === null || value === undefined) {\n          return;\n        }\n\n        // Use consistent medical terminology from input forms\n        const label = formatSummaryLabel(key);\n\n        // Format value with appropriate units\n        const displayValue = formatDisplayValue(value, key);\n\n        itemsHtml += `\n          <div class=\"summary-item\">\n            <span class=\"summary-label\">${label}:</span>\n            <span class=\"summary-value\">${displayValue}</span>\n          </div>\n        `;\n      });\n\n      if (itemsHtml) {\n        summaryHtml += `\n          <div class=\"summary-module\">\n            <h4>${moduleTitle}</h4>\n            <div class=\"summary-items\">\n              ${itemsHtml}\n            </div>\n          </div>\n        `;\n      }\n    }\n  });\n\n  if (!summaryHtml) {\n    return '';\n  }\n\n  return `\n    <div class=\"input-summary\">\n      <h3>📋 ${t('inputSummaryTitle')}</h3>\n      <p class=\"summary-subtitle\">${t('inputSummarySubtitle')}</p>\n      <div class=\"summary-content\">\n        ${summaryHtml}\n      </div>\n    </div>\n  `;\n}\n\nfunction renderRiskCard(type, data, results) {\n  if (!data) {\n    console.log(`[RiskCard] No data for ${type}`);\n    return '';\n  }\n\n  const percent = Math.round((data.probability || 0) * 100);\n  console.log(`[RiskCard] ${type} - probability: ${data.probability}, percent: ${percent}%`);\n\n  const riskLevel = getRiskLevel(percent, type);\n  const isCritical = percent > 70; // Very high risk threshold\n  const isHigh = percent > CRITICAL_THRESHOLDS[type].high;\n\n  const icons = { ich: '🩸', lvo: '🧠' };\n  const titles = { ich: t('ichProbability'), lvo: t('lvoProbability') };\n\n  const level = isCritical ? 'critical' : isHigh ? 'high' : 'normal';\n  return `\n    <div class=\"enhanced-risk-card ${type} ${level}\">\n      <div class=\"risk-header\">\n        <div class=\"risk-icon\">${icons[type]}</div>\n        <div class=\"risk-title\">\n          <h3>${titles[type]}</h3>\n        </div>\n      </div>\n      \n      <div class=\"risk-probability\">\n        <div class=\"circles-container\">\n          <div class=\"rings-row\">\n            <div class=\"circle-item\">\n              <div class=\"probability-circle\" data-react-ring data-percent=\"${percent}\" data-level=\"${level}\">\n                <svg viewBox=\"0 0 120 120\" class=\"probability-svg\">\n                  <circle cx=\"60\" cy=\"60\" r=\"50\" fill=\"none\" stroke=\"rgba(255,255,255,0.2)\" stroke-width=\"8\"/>\n                  <circle cx=\"60\" cy=\"60\" r=\"50\" fill=\"none\"\n                    stroke=\"${level === 'critical' ? '#ff4444' : level === 'high' ? '#ff8800' : '#0066cc'}\"\n                    stroke-width=\"8\"\n                    stroke-dasharray=\"${Math.PI * 100}\"\n                    stroke-dashoffset=\"${Math.PI * 100 * (1 - percent / 100)}\"\n                    stroke-linecap=\"round\"\n                    transform=\"rotate(-90 60 60)\"/>\n                  <text x=\"60\" y=\"60\" text-anchor=\"middle\" dominant-baseline=\"middle\"\n                    class=\"probability-text\" fill=\"white\" font-size=\"20\" font-weight=\"bold\">\n                    ${percent}%\n                  </text>\n                </svg>\n              </div>\n              <div class=\"circle-label\">${type === 'ich' ? 'ICH Risk' : 'LVO Risk'}</div>\n            </div>\n          </div>\n          <div class=\"risk-level ${level}\">${riskLevel}</div>\n        </div>\n        \n        <div class=\"risk-assessment\"></div>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Render ICH volume display for integration into risk card\n * @param {object} data - ICH risk data containing GFAP value\n * @returns {string} HTML for volume display\n */\nfunction renderICHVolumeDisplay(data) {\n  // Get GFAP value from the data\n  const gfapValue = data.gfap_value || getCurrentGfapValue();\n\n  if (!gfapValue || gfapValue <= 0) {\n    return '';\n  }\n\n  // Use synchronous estimate for immediate UI rendering\n  const estVolume = estimateVolumeFromGFAP(gfapValue);\n  return `\n    <div class=\"volume-display-container\">\n      ${renderCircularBrainDisplay(estVolume)}\n    </div>\n  `;\n}\n\n/**\n * Get current GFAP value from form data\n * @returns {number} GFAP value or 0 if not available\n */\nfunction getCurrentGfapValue() {\n  const state = store.getState();\n  const { formData } = state;\n\n  // Check all modules for GFAP value\n  for (const module of ['coma', 'limited', 'full']) {\n    if (formData[module]?.gfap_value) {\n      return parseFloat(formData[module].gfap_value);\n    }\n  }\n\n  return 0;\n}\n\nfunction renderLVONotPossible() {\n  return `\n    <div class=\"enhanced-risk-card lvo not-possible\">\n      <div class=\"risk-header\">\n        <div class=\"risk-icon\">🔍</div>\n        <div class=\"risk-title\">\n          <h3>${t('lvoProbability')}</h3>\n          <span class=\"risk-module\">${t('limitedAssessment')}</span>\n        </div>\n      </div>\n      \n      <div class=\"not-possible-content\">\n        <p>${t('lvoNotPossible')}</p>\n        <p>${t('fullExamRequired')}</p>\n      </div>\n    </div>\n  `;\n}\n\nexport function renderResults(results, startTime) {\n  try {\n    // Add error handling for missing results\n    if (!results) {\n      console.error('renderResults: No results data provided');\n      return `\n        <div class=\"container\">\n          <div class=\"error-message\">\n            <h2>No Results Available</h2>\n            <p>Please complete an assessment first.</p>\n            <button class=\"primary\" onclick=\"window.location.reload()\">Start Over</button>\n          </div>\n        </div>\n      `;\n    }\n\n    const { ich, lvo } = results;\n\n  // Determine current module\n  const currentModule = getCurrentModuleName(ich);\n\n  // Calculate legacy model for research comparison (only for stroke modules)\n  const legacyResults = currentModule !== 'coma' ? calculateLegacyFromResults(results) : null;\n\n  // Debug logging for research mode\n\n  // Log research data if research mode is enabled (background, non-breaking)\n  if (legacyResults && isResearchModeEnabled(currentModule)) {\n    safeLogResearchData(ich, legacyResults, getPatientInputs());\n  }\n\n  // Detect which module was used based on the data\n  const isLimitedOrComa = ich?.module === 'Limited' || ich?.module === 'Coma' || lvo?.notPossible === true;\n  const isFullModule = ich?.module === 'Full Stroke' || ich?.module?.includes('Full');\n\n  let resultsHtml;\n\n  // Debug logging\n  console.log('[Results] ICH data:', ich);\n  console.log('[Results] LVO data:', lvo);\n  console.log('[Results] ICH module:', ich?.module);\n  console.log('[Results] isLimitedOrComa:', isLimitedOrComa);\n  console.log('[Results] isFullModule:', isFullModule);\n\n  // For limited/coma modules - only show ICH\n  if (isLimitedOrComa) {\n    resultsHtml = renderICHFocusedResults(ich, results, startTime, legacyResults, currentModule);\n  } else {\n    // For full module - show ICH prominently with conditional LVO text\n    resultsHtml = renderFullModuleResults(ich, lvo, results, startTime, legacyResults, currentModule);\n  }\n\n  // Initialize animations after DOM update\n  setTimeout(async () => {\n    console.log('[Results] Initializing volume animations...');\n    initializeVolumeAnimations();\n    try {\n      const { mountIslands } = await import('../../react/mountIslands.jsx');\n      mountIslands();\n    } catch (err) {\n      //('React islands not available:', err);\n    }\n  }, 100);\n\n  return resultsHtml;\n  } catch (error) {\n    console.error('Error in renderResults:', error);\n    return `\n      <div class=\"container\">\n        <div class=\"error-message\">\n          <h2>Error Displaying Results</h2>\n          <p>There was an error displaying the results. Error: ${error.message}</p>\n          <button class=\"primary\" onclick=\"window.location.reload()\">Start Over</button>\n        </div>\n      </div>\n    `;\n  }\n}\n\nfunction renderICHFocusedResults(ich, results, startTime, legacyResults, currentModule) {\n  const criticalAlert = ich && ich.probability > 0.6 ? renderCriticalAlert() : '';\n  const ichPercentLocal = Math.round((ich?.probability || 0) * 100);\n  const strokeCenterHtml = renderStrokeCenterMap(results);\n  const inputSummaryHtml = renderInputSummary();\n  const researchToggleHtml = isResearchModeEnabled(currentModule) ? renderResearchToggle() : '';\n  const researchComparisonHtml = (legacyResults && isResearchModeEnabled(currentModule))\n    ? renderModelComparison(ich, legacyResults, getPatientInputs()) : '';\n\n  // Add alternative diagnoses for coma module\n  const alternativeDiagnosesHtml = (ich?.module === 'Coma') ? renderComaAlternativeDiagnoses(ich.probability) : '';\n\n  // Add differential diagnoses for stroke modules (limited and full)\n  const strokeDifferentialHtml = (ich?.module !== 'Coma') ? renderStrokeDifferentialDiagnoses(ich.probability) : '';\n\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(3)}\n      <h2>${t('bleedingRiskAssessment') || 'Blutungsrisiko-Bewertung / Bleeding Risk Assessment'}</h2>\n      ${criticalAlert}\n      \n      <!-- Single ICH Risk Card -->\n      <div class=\"risk-results-single\">\n        ${renderRiskCard('ich', ich, results)}\n      </div>\n\n      ${ich?.module === 'Coma' && ichPercentLocal >= 50 ? `\n      <!-- ICH Volume Card (Coma only) -->\n      <div class=\"risk-results-single\">\n        ${renderVolumeCard(ich)}\n      </div>\n      ` : ''}\n      \n      <!-- Alternative Diagnoses for Coma Module -->\n      ${alternativeDiagnosesHtml}\n      \n      <!-- Differential Diagnoses for Stroke Modules -->\n      ${strokeDifferentialHtml}\n      \n      <!-- Research Model Comparison (hidden unless research mode) -->\n      ${researchComparisonHtml}\n      \n      <!-- ICH Drivers Only (not shown for Coma module) -->\n      ${ich?.module !== 'Coma' ? `\n        <div class=\"enhanced-drivers-section\">\n          <h3>${t('riskFactorsTitle') || 'Hauptrisikofaktoren / Main Risk Factors'}</h3>\n          ${renderICHDriversOnly(ich)}\n        </div>\n      ` : ''}\n      \n      <!-- Collapsible Additional Information -->\n      <div class=\"additional-info-section\">\n        <button class=\"info-toggle\" data-target=\"input-summary\">\n          <span class=\"toggle-icon\">📋</span>\n          <span class=\"toggle-text\">${t('inputSummaryTitle')}</span>\n          <span class=\"toggle-arrow\">▼</span>\n        </button>\n        <div class=\"collapsible-content\" id=\"input-summary\" style=\"display: none;\">\n          ${inputSummaryHtml}\n        </div>\n        \n        <button class=\"info-toggle\" data-target=\"stroke-centers\">\n          <span class=\"toggle-icon\">🏥</span>\n          <span class=\"toggle-text\">${t('nearestCentersTitle')}</span>\n          <span class=\"toggle-arrow\">▼</span>\n        </button>\n        <div class=\"collapsible-content\" id=\"stroke-centers\" style=\"display: none;\">\n          ${strokeCenterHtml}\n        </div>\n      </div>\n      \n      <div class=\"results-actions\">\n        <div class=\"primary-actions\">\n          <button type=\"button\" class=\"primary\" id=\"printResults\"> 📄 ${t('printResults')} </button>\n          <button type=\"button\" class=\"secondary\" data-action=\"reset\"> ${t('newAssessment')} </button>\n        </div>\n        <div class=\"navigation-actions\">\n          <button type=\"button\" class=\"tertiary\" data-action=\"goBack\"> ← ${t('goBack')} </button>\n          <button type=\"button\" class=\"tertiary\" data-action=\"goHome\"> 🏠 ${t('goHome')} </button>\n        </div>\n      </div>\n      \n      <div class=\"disclaimer\">\n        <strong>⚠️ ${t('importantNote')}:</strong> ${t('importantText')} Results generated at ${new Date().toLocaleTimeString()}.\n      </div>\n      \n      ${renderBibliography(ich)}\n      ${researchToggleHtml}\n    </div>\n  `;\n}\n\nfunction renderFullModuleResults(ich, lvo, results, startTime, legacyResults, currentModule) {\n  const ichPercent = Math.round((ich?.probability || 0) * 100);\n  const lvoPercent = Math.round((lvo?.probability || 0) * 100);\n\n  console.log('[FullModuleResults] ICH probability:', ich?.probability, '-> %:', ichPercent);\n  console.log('[FullModuleResults] LVO probability:', lvo?.probability, '-> %:', lvoPercent);\n\n  const criticalAlert = ich && ich.probability > 0.6 ? renderCriticalAlert() : '';\n  const strokeCenterHtml = renderStrokeCenterMap(results);\n  const inputSummaryHtml = renderInputSummary();\n  const researchToggleHtml = isResearchModeEnabled(currentModule) ? renderResearchToggle() : '';\n  const researchComparisonHtml = (legacyResults && isResearchModeEnabled(currentModule))\n    ? renderModelComparison(ich, legacyResults, getPatientInputs()) : '';\n\n  // Get FAST-ED score from form data to determine LVO display\n  const state = store.getState();\n  const fastEdScore = parseInt(state.formData?.full?.fast_ed_score) || 0;\n\n  // Ensure we only show LVO in full module and when LVO data is available\n  const isFullModule = currentModule === 'full' || ich?.module === 'Full';\n  const hasValidLVO = lvo && typeof lvo.probability === 'number' && !lvo.notPossible;\n  const showLVORiskCard = isFullModule && fastEdScore > 3 && hasValidLVO;\n\n  //('  Conditions: isFullModule:', isFullModule);\n  //('  Conditions: fastEdScore > 3:', fastEdScore > 3);\n  //('  Conditions: hasValidLVO:', hasValidLVO);\n  //('  Show LVO Card:', showLVORiskCard);\n\n  // Determine layout configuration\n  const showVolumeCard = ichPercent >= 50;\n  const maxProbability = Math.max(ichPercent, lvoPercent);\n  // Robust ratio for gating (avoid divide-by-zero)\n  const eps = 0.5;\n  const ratio = lvoPercent / Math.max(ichPercent, eps);\n  const inRatioBand = ratio >= 0.6 && ratio <= 1.7;\n  // Strong-signal gate: both ICH and LVO at least 50%, and ratio in an informative band\n  const showTachometer = isFullModule && ichPercent >= 50 && lvoPercent >= 50 && inRatioBand;\n  const showDominanceBanner = isFullModule && ichPercent >= 50 && lvoPercent >= 50 && !inRatioBand;\n  // DEBUG: Temporary relaxed conditions for testing\n  const debugShowTachometer = isFullModule && ichPercent >= 30 && lvoPercent >= 30;\n\n  // Calculate number of cards and layout class\n  let cardCount = 1; // Always have ICH\n  // No placeholder needed - only show LVO card when FAST-ED > 3\n  if (showLVORiskCard) {\n    cardCount++;\n  }\n  if (showVolumeCard) {\n    cardCount++;\n  }\n\n  const layoutClass = cardCount === 1 ? 'risk-results-single'\n    : cardCount === 2 ? 'risk-results-dual'\n      : 'risk-results-triple';\n\n  // Add differential diagnoses for stroke modules\n  const strokeDifferentialHtml = renderStrokeDifferentialDiagnoses(ich.probability);\n\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(3)}\n      <h2>${t('resultsTitle')}</h2>\n      ${criticalAlert}\n      \n      <!-- Risk Assessment Display -->\n      <div class=\"${layoutClass}\">\n        ${renderRiskCard('ich', ich, results)}\n        ${showLVORiskCard ? renderRiskCard('lvo', lvo, results) : ''}\n        ${showVolumeCard ? renderVolumeCard(ich) : ''}\n      </div>\n      \n      <!-- Treatment Decision Gauge (when strong signal) -->\n      ${debugShowTachometer ? renderTachometerGauge(ichPercent, lvoPercent) : ''}\n      ${!debugShowTachometer && showDominanceBanner ? renderDominanceBanner(ichPercent, lvoPercent, ratio) : ''}\n      \n      <!-- Differential Diagnoses for Stroke Modules -->\n      ${strokeDifferentialHtml}\n      \n      <!-- Research Model Comparison (hidden unless research mode) -->\n      ${researchComparisonHtml}\n      \n      <!-- Risk Factor Drivers -->\n      <div class=\"enhanced-drivers-section\">\n        <h3>${t('riskFactorsTitle') || 'Risikofaktoren / Risk Factors'}</h3>\n        ${showLVORiskCard ? renderDriversSection(ich, lvo) : renderICHDriversOnly(ich)}\n      </div>\n      \n      <!-- Collapsible Additional Information -->\n      <div class=\"additional-info-section\">\n        <button class=\"info-toggle\" data-target=\"input-summary\">\n          <span class=\"toggle-icon\">📋</span>\n          <span class=\"toggle-text\">${t('inputSummaryTitle')}</span>\n          <span class=\"toggle-arrow\">▼</span>\n        </button>\n        <div class=\"collapsible-content\" id=\"input-summary\" style=\"display: none;\">\n          ${inputSummaryHtml}\n        </div>\n        \n        <button class=\"info-toggle\" data-target=\"stroke-centers\">\n          <span class=\"toggle-icon\">🏥</span>\n          <span class=\"toggle-text\">${t('nearestCentersTitle')}</span>\n          <span class=\"toggle-arrow\">▼</span>\n        </button>\n        <div class=\"collapsible-content\" id=\"stroke-centers\" style=\"display: none;\">\n          ${strokeCenterHtml}\n        </div>\n      </div>\n      \n      <div class=\"results-actions\">\n        <div class=\"primary-actions\">\n          <button type=\"button\" class=\"primary\" id=\"printResults\"> 📄 ${t('printResults')} </button>\n          <button type=\"button\" class=\"secondary\" data-action=\"reset\"> ${t('newAssessment')} </button>\n        </div>\n        <div class=\"navigation-actions\">\n          <button type=\"button\" class=\"tertiary\" data-action=\"goBack\"> ← ${t('goBack')} </button>\n          <button type=\"button\" class=\"tertiary\" data-action=\"goHome\"> 🏠 ${t('goHome')} </button>\n        </div>\n      </div>\n      \n      <div class=\"disclaimer\">\n        <strong>⚠️ ${t('importantNote')}:</strong> ${t('importantText')} Results generated at ${new Date().toLocaleTimeString()}.\n      </div>\n      \n      ${renderBibliography(ich)}\n      ${researchToggleHtml}\n    </div>\n  `;\n}\n\nfunction renderLVONotification() {\n  return `\n    <div class=\"secondary-notification\">\n      <p class=\"lvo-possible\">\n        ⚡ ${t('lvoMayBePossible') || 'Großgefäßverschluss möglich / Large vessel occlusion possible'}\n      </p>\n    </div>\n  `;\n}\n\nfunction renderDominanceBanner(ichPercent, lvoPercent, ratio) {\n  const dominant = ratio > 1 ? 'LVO' : 'ICH';\n  const icon = dominant === 'LVO' ? '🧠' : '🩸';\n  const dominantText = i18n.getCurrentLanguage() === 'de'\n    ? (dominant === 'LVO' ? 'LVO-dominant' : 'ICH-dominant')\n    : (dominant === 'LVO' ? 'LVO dominant' : 'ICH dominant');\n  const subtitle = i18n.getCurrentLanguage() === 'de'\n    ? `Verhältnis LVO/ICH: ${ratio.toFixed(2)}`\n    : `LVO/ICH ratio: ${ratio.toFixed(2)}`;\n  return `\n    <div class=\"tachometer-section\">\n      <div class=\"tachometer-card\">\n        <div class=\"treatment-recommendation ${dominant === 'LVO' ? 'lvo-dominant' : 'ich-dominant'}\">\n          <div class=\"recommendation-icon\">${icon}</div>\n          <div class=\"recommendation-text\">\n            <h4>${dominantText}</h4>\n            <p>${subtitle}</p>\n          </div>\n          <div class=\"probability-summary\">\n            ICH: ${ichPercent}% | LVO: ${lvoPercent}%\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\nfunction renderICHDriversOnly(ich) {\n  if (!ich || !ich.drivers) {\n    return '<p class=\"no-drivers\">No driver data available</p>';\n  }\n\n  // Drivers are already formatted from API with positive/negative arrays\n  const driversData = ich.drivers;\n\n  // Check if drivers have the correct structure\n  if (!driversData.positive && !driversData.negative) {\n    // Fallback for unexpected format\n    return '<p class=\"no-drivers\">Driver format error</p>';\n  }\n\n  const positiveDrivers = driversData.positive || [];\n  const negativeDrivers = driversData.negative || [];\n\n  return `\n    <div class=\"drivers-split-view\">\n      <div class=\"drivers-column positive-column\">\n        <div class=\"column-header\">\n          <span class=\"column-icon\">⬆</span>\n          <span class=\"column-title\">${t('increasingRisk') || 'Risikoerhöhend / Increasing Risk'}</span>\n        </div>\n        <div class=\"compact-drivers\">\n          ${positiveDrivers.length > 0\n    ? positiveDrivers.slice(0, 5).map((d) => renderCompactDriver(d, 'positive')).join('')\n    : `<p class=\"no-factors\">${t('noFactors') || 'Keine Faktoren / No factors'}</p>`\n}\n        </div>\n      </div>\n      \n      <div class=\"drivers-column negative-column\">\n        <div class=\"column-header\">\n          <span class=\"column-icon\">⬇</span>\n          <span class=\"column-title\">${t('decreasingRisk') || 'Risikomindernd / Decreasing Risk'}</span>\n        </div>\n        <div class=\"compact-drivers\">\n          ${negativeDrivers.length > 0\n    ? negativeDrivers.slice(0, 5).map((d) => renderCompactDriver(d, 'negative')).join('')\n    : `<p class=\"no-factors\">${t('noFactors') || 'Keine Faktoren / No factors'}</p>`\n}\n        </div>\n      </div>\n    </div>\n  `;\n}\n\nfunction renderCompactDriver(driver, type) {\n  // Driver object has 'label' and 'weight' properties\n  const percentage = Math.abs(driver.weight * 100);\n  const width = Math.min(percentage * 2, 100); // Scale for display\n\n  return `\n    <div class=\"compact-driver-item\">\n      <div class=\"compact-driver-label\">${formatDriverName(driver.label)}</div>\n      <div class=\"compact-driver-bar ${type}\" style=\"width: ${width}%;\">\n        <span class=\"compact-driver-value\">${percentage.toFixed(1)}%</span>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Render bibliography footer with research citations\n * @param {object} ichData - ICH risk data containing probability\n * @returns {string} HTML for bibliography section\n */\nfunction renderBibliography(ichData) {\n  // Only show bibliography if ICH risk is >= 50%\n  if (!ichData || !ichData.probability) {\n    return '';\n  }\n\n  const ichPercent = Math.round((ichData.probability || 0) * 100);\n  if (ichPercent < 50) {\n    return '';\n  }\n\n  const gfapValue = getCurrentGfapValue();\n  if (!gfapValue || gfapValue <= 0) {\n    return '';\n  }\n\n  return `\n    <div class=\"bibliography-section\">\n      <h4>${t('references')}</h4>\n      <div class=\"citations\">\n        <div class=\"citation\">\n          <span class=\"citation-number\">¹</span>\n          <span class=\"citation-text\">Broderick et al. (1993). Volume of intracerebral hemorrhage. A powerful and easy-to-use predictor of 30-day mortality. Stroke, 24(7), 987-993.</span>\n        </div>\n        <div class=\"citation\">\n          <span class=\"citation-number\">²</span>\n          <span class=\"citation-text\">Krishnan et al. (2013). Hematoma expansion in intracerebral hemorrhage: Predictors and outcomes. Neurology, 81(19), 1660-1666.</span>\n        </div>\n        <div class=\"citation\">\n          <span class=\"citation-number\">³</span>\n          <span class=\"citation-text\">Putra et al. (2020). Functional outcomes and mortality in patients with intracerebral hemorrhage. Critical Care Medicine, 48(3), 347-354.</span>\n        </div>\n        <div class=\"citation\">\n          <span class=\"citation-number\">⁴</span>\n          <span class=\"citation-text\">Tangella et al. (2020). Early prediction of mortality in intracerebral hemorrhage using clinical markers. Journal of Neurocritical Care, 13(2), 89-97.</span>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Calculate legacy model results from current results data (background, non-breaking)\n * @param {object} results - Main model results\n * @returns {object|null} - Legacy model results or null if not possible\n */\nfunction calculateLegacyFromResults(results) {\n  try {\n    const patientInputs = getPatientInputs();\n\n    if (!patientInputs.age || !patientInputs.gfap) {\n      //console.log('🔍 Missing required inputs for legacy model:', {\n      //  age: patientInputs.age,\n      //  gfap: patientInputs.gfap,\n      //});\n      return null;\n    }\n\n    const legacyResult = calculateLegacyICH(patientInputs);\n\n    return legacyResult;\n  } catch (error) {\n    //console.log('Legacy model calculation failed (non-critical):', error);\n    return null;\n  }\n}\n\n/**\n * Get patient input data from store for research logging\n * @returns {object} - Patient input data\n */\nfunction getPatientInputs() {\n  const state = store.getState();\n  const { formData } = state;\n\n  // Extract age and GFAP from any module\n  let age = null;\n  let gfap = null;\n\n  for (const module of ['coma', 'limited', 'full']) {\n    if (formData[module]) {\n      age = age || formData[module].age_years;\n      gfap = gfap || formData[module].gfap_value;\n    }\n  }\n\n  const result = {\n    age: parseInt(age) || null,\n    gfap: parseFloat(gfap) || null,\n  };\n\n  return result;\n}\n\n/**\n * Render alternative diagnoses for coma module\n * @param {number} probability - ICH probability (0-1)\n * @returns {string} HTML for alternative diagnoses\n */\nfunction renderStrokeDifferentialDiagnoses(probability) {\n  const percent = Math.round(probability * 100);\n\n  if (percent > 25) {\n    return `\n      <div class=\"alternative-diagnosis-card\">\n        <div class=\"diagnosis-header\">\n          <span class=\"lightning-icon\">⚡</span>\n          <h3>${t('differentialDiagnoses')}</h3>\n        </div>\n        <div class=\"diagnosis-content\">\n          <!-- Time Window Confirmation - Clinical Action -->\n          <h4 class=\"clinical-action-heading\">${t('reconfirmTimeWindow')}</h4>\n          \n          <!-- Actual Differential Diagnoses -->\n          <ul class=\"diagnosis-list\">\n            <li>${t('unclearTimeWindow')}</li>\n            <li>${t('rareDiagnoses')}</li>\n          </ul>\n        </div>\n      </div>\n    `;\n  }\n\n  return '';\n}\n\nfunction renderComaAlternativeDiagnoses(probability) {\n  const percent = Math.round(probability * 100);\n  const isDE = i18n.getCurrentLanguage() === 'de';\n\n  if (percent > 25) {\n    // High probability - show SAB, SDH, EDH\n    return `\n      <div class=\"alternative-diagnosis-card\">\n        <div class=\"diagnosis-header\">\n          <span class=\"lightning-icon\">⚡</span>\n          <h3>${isDE ? 'Differentialdiagnosen' : 'Differential Diagnoses'}</h3>\n        </div>\n        <div class=\"diagnosis-content\">\n          <ul class=\"diagnosis-list\">\n            <li>\n              ${isDE\n    ? 'Alternative Diagnosen sind SAB, SDH, EDH (Subarachnoidalblutung, Subduralhämatom, Epiduralhämatom)'\n    : 'Alternative diagnoses include SAH, SDH, EDH (Subarachnoid Hemorrhage, Subdural Hematoma, Epidural Hematoma)'\n}\n            </li>\n            <li>\n              ${isDE\n    ? 'Bei unklarem Zeitfenster seit Symptombeginn oder im erweiterten Zeitfenster kommen auch ein demarkierter Infarkt oder hypoxischer Hirnschaden in Frage'\n    : 'In cases of unclear time window since symptom onset or extended time window, demarcated infarction or hypoxic brain injury should also be considered'\n}\n            </li>\n          </ul>\n        </div>\n      </div>\n    `;\n  }\n  // Low probability - other causes of altered consciousness\n  return `\n      <div class=\"alternative-diagnosis-card\">\n        <div class=\"diagnosis-header\">\n          <span class=\"lightning-icon\">⚡</span>\n          <h3>${isDE ? 'Differentialdiagnosen' : 'Differential Diagnoses'}</h3>\n        </div>\n        <div class=\"diagnosis-content\">\n          <ul class=\"diagnosis-list\">\n            <li>\n              ${isDE\n    ? 'Alternative Diagnose von Vigilanzminderung wahrscheinlich'\n    : 'Alternative diagnosis for reduced consciousness likely'\n}\n            </li>\n            <li>\n              ${isDE\n    ? 'Ein Verschluss der Arteria Basilaris ist nicht ausgeschlossen'\n    : 'Basilar artery occlusion cannot be excluded'\n}\n            </li>\n          </ul>\n        </div>\n      </div>\n    `;\n}\n\n/**\n * Get current module name from results\n * @param {object} ich - ICH results containing module information\n * @returns {string} - Module name ('coma', 'limited', 'full')\n */\nfunction getCurrentModuleName(ich) {\n  if (!ich?.module) {\n    return 'unknown';\n  }\n\n  const module = ich.module.toLowerCase();\n  if (module.includes('coma')) {\n    return 'coma';\n  }\n  if (module.includes('limited')) {\n    return 'limited';\n  }\n  if (module.includes('full')) {\n    return 'full';\n  }\n\n  return 'unknown';\n}\n\n/**\n * Render volume as a standalone risk card (for horizontal layout)\n * @param {object} ichData - ICH data containing volume information\n * @returns {string} HTML for volume risk card\n */\nfunction renderVolumeCard(ichData) {\n  const gfapValue = getCurrentGfapValue();\n  if (!gfapValue || gfapValue <= 0) {\n    return '';\n  }\n\n  // Use fast estimate for immediate UI and mortality band\n  const estVolume = estimateVolumeFromGFAP(gfapValue);\n  const mortality = estimateMortalityFromVolume(estVolume);\n  const percent = Math.round((ichData?.probability || 0) * 100);\n\n  return `\n    <div class=\"enhanced-risk-card volume-card normal\">\n      <div class=\"risk-header\">\n        <div class=\"risk-icon\">🧮</div>\n        <div class=\"risk-title\">\n          <h3>${t('ichVolumeLabel')}</h3>\n        </div>\n      </div>\n      \n      <div class=\"risk-probability\">\n        <div class=\"circles-container\">\n          <div class=\"rings-row\">\n            <div class=\"circle-item\">\n              ${renderICHVolumeDisplay(ichData)}\n              <div class=\"circle-label\">${t('ichVolumeLabel')}</div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"risk-assessment\">\n          <div class=\"mortality-assessment\">\n            ${t('predictedMortality')}: ${mortality}\n          </div>\n      </div>\n    </div>\n  </div>\n  `;\n}\n\n/**\n * Render tachometer gauge for treatment decision when high risk\n * @param {number} ichPercent - ICH probability percentage\n * @param {number} lvoPercent - LVO probability percentage\n * @returns {string} HTML for tachometer gauge\n */\nfunction renderTachometerGauge(ichPercent, lvoPercent) {\n  const ratio = lvoPercent / Math.max(ichPercent, 1);\n\n  return `\n    <div class=\"tachometer-section\">\n      <div class=\"tachometer-card\">\n        <div class=\"tachometer-header\">\n          <h3>🎯 ${i18n.getCurrentLanguage() === 'de' ? 'Entscheidungshilfe – LVO/ICH' : 'Decision Support – LVO/ICH'}</h3>\n          <div class=\"ratio-display\">LVO/ICH Ratio: ${ratio.toFixed(2)}</div>\n        </div>\n        \n        <div class=\"tachometer-gauge\" id=\"tachometer-canvas-container\">\n          <div data-react-tachometer data-ich=\"${ichPercent}\" data-lvo=\"${lvoPercent}\" data-title=\"${i18n.getCurrentLanguage() === 'de' ? 'Entscheidungshilfe – LVO/ICH' : 'Decision Support – LVO/ICH'}\"></div>\n        </div>\n\n        <!-- Legend chips for zones -->\n        <div class=\"tachometer-legend\" aria-hidden=\"true\">\n          <span class=\"legend-chip ich\">ICH</span>\n          <span class=\"legend-chip uncertain\">${i18n.getCurrentLanguage() === 'de' ? 'Unsicher' : 'Uncertain'}</span>\n          <span class=\"legend-chip lvo\">LVO</span>\n        </div>\n\n        <!-- Metrics row: ratio, confidence, absolute difference -->\n        <div class=\"metrics-row\" role=\"group\" aria-label=\"Tachometer metrics\">\n          <div class=\"metric-card\">\n            <div class=\"metric-label\">Ratio</div>\n            <div class=\"metric-value\">${ratio.toFixed(2)}</div>\n            <div class=\"metric-unit\">LVO/ICH</div>\n          </div>\n          <div class=\"metric-card\">\n            <div class=\"metric-label\">Confidence</div>\n            <div class=\"metric-value\">${(() => {\n    const diff = Math.abs(lvoPercent - ichPercent);\n    const maxP = Math.max(lvoPercent, ichPercent);\n    let c = diff < 10 ? Math.round(30 + maxP * 0.3) : diff < 20 ? Math.round(50 + maxP * 0.4) : Math.round(70 + maxP * 0.3);\n    c = Math.max(0, Math.min(100, c));\n    return c;\n  })()}%</div>\n            <div class=\"metric-unit\">percent</div>\n          </div>\n          <div class=\"metric-card\">\n            <div class=\"metric-label\">Difference</div>\n            <div class=\"metric-value\">${Math.abs(lvoPercent - ichPercent).toFixed(0)}%</div>\n            <div class=\"metric-unit\">|LVO − ICH|</div>\n          </div>\n        </div>\n        \n        <div class=\"probability-summary\">\n          ICH: ${ichPercent}% | LVO: ${lvoPercent}%\n        </div>\n        \n        <!-- Hidden probability summary for initialization -->\n        <div class=\"probability-summary\" style=\"display: none;\">\n          ICH: ${ichPercent}% | LVO: ${lvoPercent}%\n        </div>\n      </div>\n    </div>\n  `;\n}\n\n// Premium (vanilla) tachometer disabled in favor of React island gauge\n","/**\n * Login Screen for Research Preview Access\n * iGFAP Stroke Triage Assistant\n */\n\nimport { t } from '../../localization/i18n.js';\nimport { authManager } from '../../auth/authentication.js';\nimport { store } from '../../state/store.js';\n\nexport function renderLoginScreen() {\n  return `\n    <div class=\"login-container\">\n      <div class=\"login-card\">\n        <div class=\"login-header\">\n          <div class=\"app-logo\">\n            <div class=\"logo-icon\">🧠</div>\n            <h1>iGFAP Stroke Triage</h1>\n            <div class=\"version-badge\">Research Preview v2.1</div>\n          </div>\n        </div>\n\n        <div class=\"login-content\">\n          <div class=\"access-notice\">\n            <h2>🔬 Research Access Required</h2>\n            <p>This is a research preview of the iGFAP Stroke Triage Assistant for clinical validation.</p>\n\n            <div class=\"research-disclaimer\">\n              <h3>⚠️ Important Notice</h3>\n              <ul>\n                <li><strong>Research Use Only</strong> - Not for clinical decision making</li>\n                <li><strong>No Patient Data Storage</strong> - All data processed locally</li>\n                <li><strong>Clinical Advisory</strong> - Under supervision of Prof. Christian Förch & Dr. Lovepreet Kalra</li>\n                <li><strong>Contact:</strong> Deepak Bos (bosdeepak@gmail.com)</li>\n              </ul>\n            </div>\n          </div>\n\n          <form id=\"loginForm\" class=\"login-form\">\n            <div class=\"form-group\">\n              <label for=\"researchPassword\">Research Access Code</label>\n              <input\n                type=\"password\"\n                id=\"researchPassword\"\n                name=\"password\"\n                required\n                autocomplete=\"off\"\n                placeholder=\"Enter research access code\"\n                class=\"password-input\"\n              >\n            </div>\n\n            <div id=\"loginError\" class=\"error-message\" style=\"display: none;\"></div>\n\n            <button type=\"submit\" class=\"login-button primary\">\n              <span class=\"button-text\">Access Research System</span>\n              <span class=\"loading-spinner\" style=\"display: none;\">⏳</span>\n            </button>\n          </form>\n\n          <div class=\"login-footer\">\n            <div class=\"regulatory-notice\">\n              <p><strong>Regulatory Status:</strong> Research prototype - CE certification pending</p>\n              <p><strong>Data Protection:</strong> GDPR compliant - local processing only</p>\n              <p><strong>Clinical Oversight:</strong> RKH Klinikum Ludwigsburg, Neurologie</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\nexport function initializeLoginScreen() {\n  const loginForm = document.getElementById('loginForm');\n\n  if (!loginForm) {\n    return;\n  }\n\n  const passwordInput = document.getElementById('researchPassword');\n  const loginError = document.getElementById('loginError');\n  const loginButton = loginForm.querySelector('.login-button');\n\n  // Focus password input on load\n  passwordInput.focus();\n\n  loginForm.addEventListener('submit', async (e) => {\n    e.preventDefault();\n\n    const password = passwordInput.value.trim();\n\n    if (!password) {\n      showLoginError('Please enter the research access code');\n      return;\n    }\n\n    // Show loading state\n    setLoginLoading(true);\n    hideLoginError();\n\n    try {\n      const authResult = await authManager.authenticate(password);\n\n      if (authResult.success) {\n        // Log successful authentication\n        store.logEvent('auth_success', {\n          timestamp: new Date().toISOString(),\n          userAgent: navigator.userAgent.substring(0, 100), // Limited info\n        });\n\n        // Navigate to main application\n        store.navigate('triage1');\n      } else {\n        // Handle authentication failure\n        let errorMessage = authResult.message;\n\n        showLoginError(errorMessage);\n        passwordInput.value = '';\n        passwordInput.focus();\n\n        // Log failed attempt (no sensitive data)\n        store.logEvent('auth_failed', {\n          timestamp: new Date().toISOString(),\n          errorCode: authResult.errorCode,\n        });\n      }\n    } catch (error) {\n      showLoginError('Authentication system error. Please try again.');\n      // Remove // for production\n    } finally {\n      setLoginLoading(false);\n    }\n  });\n\n  // Hide error on input\n  passwordInput.addEventListener('input', () => {\n    hideLoginError();\n  });\n\n  function showLoginError(message) {\n    loginError.textContent = message;\n    loginError.style.display = 'block';\n    passwordInput.classList.add('error');\n  }\n\n  function hideLoginError() {\n    loginError.style.display = 'none';\n    passwordInput.classList.remove('error');\n  }\n\n  function setLoginLoading(isLoading) {\n    const buttonText = loginButton.querySelector('.button-text');\n    const loadingSpinner = loginButton.querySelector('.loading-spinner');\n\n    if (isLoading) {\n      buttonText.style.display = 'none';\n      loadingSpinner.style.display = 'inline';\n      loginButton.disabled = true;\n    } else {\n      buttonText.style.display = 'inline';\n      loadingSpinner.style.display = 'none';\n      loginButton.disabled = false;\n    }\n  }\n}\n","/**\n * Accessibility utilities for the Stroke Triage Assistant\n */\n\nexport function announceScreenChange(screen) {\n  const announcement = document.createElement('div');\n  announcement.className = 'sr-only';\n  announcement.setAttribute('role', 'status');\n  announcement.setAttribute('aria-live', 'polite');\n\n  const screenNames = {\n    triage1: 'Coma assessment',\n    triage2: 'Examination capability assessment',\n    coma: 'Coma module',\n    limited: 'Limited data module',\n    full: 'Full stroke assessment',\n    results: 'Assessment results',\n  };\n\n  announcement.textContent = `Navigated to ${screenNames[screen] || screen}`;\n  document.body.appendChild(announcement);\n\n  setTimeout(() => announcement.remove(), 1000);\n}\n\nexport function setPageTitle(screen) {\n  const appName = 'iGFAP';\n  const titles = {\n    triage1: 'Initial Assessment',\n    triage2: 'Examination Capability',\n    coma: 'Coma Module',\n    limited: 'Limited Data Module',\n    full: 'Full Stroke Module',\n    results: 'Assessment Results',\n  };\n\n  const section = titles[screen];\n  // Brand-first to ensure the tab shows iGFAP even when truncated\n  document.title = section ? `${appName} — ${section}` : appName;\n}\n\nexport function focusMainHeading() {\n  // Focus on the main heading for screen readers\n  setTimeout(() => {\n    const heading = document.querySelector('h2');\n    if (heading) {\n      heading.setAttribute('tabindex', '-1');\n      heading.focus();\n      // Remove tabindex after focus for proper tab order\n      setTimeout(() => heading.removeAttribute('tabindex'), 100);\n    }\n  }, 100);\n}\n","import { t } from '../../localization/i18n.js';\n\nexport class FastEdCalculator {\n  constructor() {\n    this.scores = {\n      facial_palsy: 0,\n      arm_weakness: 0,\n      speech_changes: 0,\n      eye_deviation: 0,\n      denial_neglect: 0,\n    };\n    this.onApply = null;\n    this.modal = null;\n  }\n\n  getTotal() {\n    return Object.values(this.scores).reduce((sum, score) => sum + score, 0);\n  }\n\n  getRiskLevel() {\n    const total = this.getTotal();\n    return total >= 4 ? 'high' : 'low';\n  }\n\n  render() {\n    const total = this.getTotal();\n    const riskLevel = this.getRiskLevel();\n\n    return `\n      <div id=\"fastEdModal\" class=\"modal\" role=\"dialog\" aria-labelledby=\"fastEdModalTitle\" aria-hidden=\"true\" style=\"display: none !important;\">\n        <div class=\"modal-content fast-ed-modal\">\n          <div class=\"modal-header\">\n            <h2 id=\"fastEdModalTitle\">${t('fastEdCalculatorTitle')}</h2>\n            <button class=\"modal-close\" aria-label=\"Close\">&times;</button>\n          </div>\n          <div class=\"modal-body\">\n            \n            <!-- Facial Palsy -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('facialPalsyTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"facial_palsy\" value=\"0\" ${this.scores.facial_palsy === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('facialPalsyNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"facial_palsy\" value=\"1\" ${this.scores.facial_palsy === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('facialPalsyMild')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Arm Weakness -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('armWeaknessTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"arm_weakness\" value=\"0\" ${this.scores.arm_weakness === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('armWeaknessNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"arm_weakness\" value=\"1\" ${this.scores.arm_weakness === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('armWeaknessMild')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"arm_weakness\" value=\"2\" ${this.scores.arm_weakness === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('armWeaknessSevere')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Speech Changes -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('speechChangesTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"speech_changes\" value=\"0\" ${this.scores.speech_changes === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('speechChangesNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"speech_changes\" value=\"1\" ${this.scores.speech_changes === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('speechChangesMild')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"speech_changes\" value=\"2\" ${this.scores.speech_changes === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('speechChangesSevere')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Eye Deviation -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('eyeDeviationTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"eye_deviation\" value=\"0\" ${this.scores.eye_deviation === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('eyeDeviationNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"eye_deviation\" value=\"1\" ${this.scores.eye_deviation === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('eyeDeviationPartial')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"eye_deviation\" value=\"2\" ${this.scores.eye_deviation === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('eyeDeviationForced')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Denial/Neglect -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('denialNeglectTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"denial_neglect\" value=\"0\" ${this.scores.denial_neglect === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('denialNeglectNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"denial_neglect\" value=\"1\" ${this.scores.denial_neglect === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('denialNeglectPartial')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"denial_neglect\" value=\"2\" ${this.scores.denial_neglect === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('denialNeglectComplete')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Total Score Display -->\n            <div class=\"fast-ed-total\">\n              <div class=\"score-display\">\n                <h3>${t('totalScoreTitle')}: <span class=\"total-score\">${total}/9</span></h3>\n                <div class=\"risk-indicator ${riskLevel}\">\n                  ${t('riskLevel')}: ${riskLevel === 'high' ? t('riskLevelHigh') : t('riskLevelLow')}\n                </div>\n              </div>\n            </div>\n\n          </div>\n          <div class=\"modal-footer\">\n            <div class=\"button-group\">\n              <button class=\"secondary\" data-action=\"cancel-fast-ed\">${t('cancel')}</button>\n              <button class=\"primary\" data-action=\"apply-fast-ed\">${t('applyScore')}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  setupEventListeners() {\n    this.modal = document.getElementById('fastEdModal');\n    if (!this.modal) {\n      return;\n    }\n\n    // Radio button changes\n    this.modal.addEventListener('change', (e) => {\n      if (e.target.type === 'radio') {\n        const component = e.target.name;\n        const value = parseInt(e.target.value);\n        this.scores[component] = value;\n        this.updateDisplay();\n      }\n    });\n\n    // Close button\n    const closeBtn = this.modal.querySelector('.modal-close');\n    closeBtn?.addEventListener('click', () => this.close());\n\n    // Cancel button\n    const cancelBtn = this.modal.querySelector('[data-action=\"cancel-fast-ed\"]');\n    cancelBtn?.addEventListener('click', () => this.close());\n\n    // Apply button\n    const applyBtn = this.modal.querySelector('[data-action=\"apply-fast-ed\"]');\n    applyBtn?.addEventListener('click', () => this.apply());\n\n    // Disable backdrop click-to-close to prevent accidental dismissal\n    // Users must explicitly Cancel or Apply\n    this.modal.addEventListener('click', (e) => {\n      if (e.target === this.modal) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    });\n\n    // Keyboard navigation\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape' && this.modal?.classList.contains('show')) {\n        this.close();\n      }\n    });\n  }\n\n  updateDisplay() {\n    const totalElement = this.modal?.querySelector('.total-score');\n    const riskElement = this.modal?.querySelector('.risk-indicator');\n\n    if (totalElement) {\n      totalElement.textContent = `${this.getTotal()}/9`;\n    }\n\n    if (riskElement) {\n      const riskLevel = this.getRiskLevel();\n      riskElement.className = `risk-indicator ${riskLevel}`;\n      riskElement.textContent = `${t('riskLevel')}: ${riskLevel === 'high' ? t('riskLevelHigh') : t('riskLevelLow')}`;\n    }\n  }\n\n  show(currentScore = 0, onApplyCallback = null) {\n    this.onApply = onApplyCallback;\n\n    // If we have a current score, try to reverse engineer it (basic approximation)\n    if (currentScore > 0 && currentScore <= 9) {\n      this.approximateFromTotal(currentScore);\n    }\n\n    // Inject modal HTML if not already present\n    if (!document.getElementById('fastEdModal')) {\n      document.body.insertAdjacentHTML('beforeend', this.render());\n    } else {\n      // Re-render the modal with current state\n      this.modal.remove();\n      document.body.insertAdjacentHTML('beforeend', this.render());\n      this.modal = document.getElementById('fastEdModal');\n    }\n\n    this.setupEventListeners();\n\n    this.modal.setAttribute('aria-hidden', 'false');\n    this.modal.style.display = 'flex';\n    this.modal.classList.add('show');\n\n    // Focus first radio button\n    const firstRadio = this.modal.querySelector('input[type=\"radio\"]');\n    firstRadio?.focus();\n  }\n\n  close() {\n    if (this.modal) {\n      this.modal.classList.remove('show');\n      this.modal.style.display = 'none';\n      this.modal.setAttribute('aria-hidden', 'true');\n    }\n  }\n\n  apply() {\n    const total = this.getTotal();\n    const armWeaknessBoolean = this.scores.arm_weakness > 0;\n    const eyeDeviationBoolean = this.scores.eye_deviation > 0;\n\n    if (this.onApply) {\n      this.onApply({\n        total,\n        components: { ...this.scores },\n        armWeaknessBoolean,\n        eyeDeviationBoolean,\n      });\n    }\n\n    this.close();\n  }\n\n  approximateFromTotal(total) {\n    // Simple approximation - distribute points across components\n    // This is basic but gives users a starting point\n    this.scores = {\n      facial_palsy: 0,\n      arm_weakness: 0,\n      speech_changes: 0,\n      eye_deviation: 0,\n      denial_neglect: 0,\n    };\n\n    let remaining = total;\n    const components = Object.keys(this.scores);\n\n    for (const component of components) {\n      if (remaining <= 0) {\n        break;\n      }\n\n      const maxForComponent = (component === 'facial_palsy') ? 1 : 2;\n      const assignToThis = Math.min(remaining, maxForComponent);\n      this.scores[component] = assignToThis;\n      remaining -= assignToThis;\n    }\n  }\n}\n\n// Create singleton instance\nexport const fastEdCalculator = new FastEdCalculator();\n","import { store } from '../state/store.js';\nimport {\n  handleTriage1, handleTriage2, handleSubmit, reset, goBack, goHome,\n} from '../logic/handlers.js';\nimport { clearValidationErrors, clearAllValidation } from '../logic/validate.js';\nimport { initializeResearchMode } from '../research/comparison-ui.js';\nimport { authManager } from '../auth/authentication.js';\n\nimport { renderTriage1 } from './screens/triage1.js';\nimport { renderTriage2 } from './screens/triage2.js';\nimport { renderComa } from './screens/coma.js';\nimport { renderLimited } from './screens/limited.js';\nimport { renderFull } from './screens/full.js';\nimport { renderResults } from './screens/results.js';\nimport { renderLoginScreen, initializeLoginScreen } from './screens/login.js';\nimport { announceScreenChange, setPageTitle, focusMainHeading } from './a11y.js';\nimport { initializeStrokeCenterMap } from './components/stroke-center-map.js';\nimport { fastEdCalculator } from './components/fastEdModal.js';\nimport { safeSetInnerHTML } from '../security/html-sanitizer.js';\n\nexport function render(container) {\n  const state = store.getState();\n  const {\n    currentScreen, results, startTime, screenHistory,\n  } = state;\n\n  console.log('[Render] Rendering screen:', currentScreen, 'Has results:', !!results);\n\n  // Optimize DOM updates to prevent CLS\n  const tempContainer = document.createElement('div');\n\n  // Show/hide back button based on navigation history\n  const backButton = document.getElementById('backButton');\n  if (backButton) {\n    backButton.style.display = screenHistory && screenHistory.length > 0 ? 'flex' : 'none';\n  }\n\n  // Render the appropriate screen\n  let html = '';\n  switch (currentScreen) {\n    case 'login':\n      html = renderLoginScreen();\n      break;\n    case 'triage1':\n      // Verify authentication for all clinical screens\n      if (!authManager.isValidSession()) {\n        store.navigate('login');\n        return;\n      }\n      html = renderTriage1();\n      break;\n    case 'triage2':\n      html = renderTriage2();\n      break;\n    case 'coma':\n      html = renderComa();\n      break;\n    case 'limited':\n      html = renderLimited();\n      break;\n    case 'full':\n      html = renderFull();\n      break;\n    case 'results':\n      html = renderResults(results, startTime);\n      break;\n    default:\n      html = renderTriage1();\n  }\n\n  // Use secure DOM update to minimize reflows and prevent XSS\n  try {\n    safeSetInnerHTML(tempContainer, html);\n  } catch (error) {\n    // Fallback to text content on sanitization error\n    tempContainer.textContent = 'Error loading content. Please refresh.';\n  }\n\n  // Single DOM replacement to minimize CLS\n  // Clear container safely without using innerHTML\n  while (container.firstChild) {\n    container.removeChild(container.firstChild);\n  }\n  while (tempContainer.firstChild) {\n    container.appendChild(tempContainer.firstChild);\n  }\n\n  // Restore form data if available\n  const form = container.querySelector('form[data-module]');\n  if (form) {\n    const { module } = form.dataset;\n    restoreFormData(form, module);\n  }\n\n  // Attach event listeners\n  attachEvents(container);\n\n  // Initialize login screen if needed\n  if (currentScreen === 'login') {\n    setTimeout(() => {\n      initializeLoginScreen();\n    }, 100);\n  }\n\n  // Initialize stroke center map if on results screen\n  if (currentScreen === 'results' && results) {\n    setTimeout(() => {\n      try {\n        console.log('[Render] Initializing stroke center map with results:', results);\n        initializeStrokeCenterMap(results);\n      } catch (error) {\n        console.error('[Render] Stroke center map initialization failed:', error);\n      }\n    }, 100);\n  }\n\n  // Initialize research mode components\n  setTimeout(() => {\n    try { initializeResearchMode(); } catch {}\n  }, 150);\n\n  // Accessibility updates\n  announceScreenChange(currentScreen);\n  setPageTitle(currentScreen);\n  focusMainHeading();\n}\n\nfunction restoreFormData(form, module) {\n  const formData = store.getFormData(module);\n  if (!formData || Object.keys(formData).length === 0) {\n    return;\n  }\n\n  Object.entries(formData).forEach(([key, value]) => {\n    const input = form.elements[key];\n    if (input) {\n      if (input.type === 'checkbox') {\n        input.checked = value === true || value === 'on' || value === 'true';\n      } else {\n        input.value = value;\n      }\n    }\n  });\n}\n\nfunction attachEvents(container) {\n  // Clear validation errors when user starts typing in a field\n  container.querySelectorAll('input[type=\"number\"]').forEach((input) => {\n    input.addEventListener('input', () => {\n      // Only clear errors for the specific field being edited\n      const group = input.closest('.input-group');\n      if (group && group.classList.contains('error')) {\n        group.classList.remove('error');\n        group.querySelectorAll('.error-message').forEach((el) => el.remove());\n      }\n    });\n  });\n\n  // Triage button handlers\n  container.querySelectorAll('[data-action]').forEach((button) => {\n    button.addEventListener('click', (e) => {\n      const { action, value } = e.currentTarget.dataset;\n      const boolVal = value === 'true';\n\n      switch (action) {\n        case 'triage1':\n          handleTriage1(boolVal);\n          break;\n        case 'triage2':\n          handleTriage2(boolVal);\n          break;\n        case 'reset':\n          reset();\n          break;\n        case 'goBack':\n          goBack();\n          break;\n        case 'goHome':\n          goHome();\n          break;\n      }\n    });\n  });\n\n  // Form submission handlers\n  container.querySelectorAll('form[data-module]').forEach((form) => {\n    form.addEventListener('submit', (e) => {\n      handleSubmit(e, container);\n    });\n  });\n\n  // Print button handler\n  const printButton = container.querySelector('#printResults');\n  if (printButton) {\n    printButton.addEventListener('click', () => window.print());\n  }\n\n  // FAST-ED calculator handler\n  const fastEdInput = container.querySelector('#fast_ed_score');\n  if (fastEdInput) {\n    fastEdInput.addEventListener('click', (e) => {\n      e.preventDefault();\n      const currentValue = parseInt(fastEdInput.value) || 0;\n\n      fastEdCalculator.show(currentValue, (result) => {\n        // Update FAST-ED score\n        fastEdInput.value = result.total;\n\n        // Update hidden arm weakness field\n        const armPareseField = container.querySelector('#armparese_hidden');\n        if (armPareseField) {\n          armPareseField.value = result.armWeaknessBoolean ? 'true' : 'false';\n        }\n\n        // Update eye deviation hidden field if exists\n        const eyeDeviationField = container.querySelector('#eye_deviation_hidden');\n        if (eyeDeviationField) {\n          eyeDeviationField.value = result.eyeDeviationBoolean ? 'true' : 'false';\n        }\n\n        // Trigger change event to save form data\n        fastEdInput.dispatchEvent(new Event('change', { bubbles: true }));\n      });\n    });\n    // Prevent manual typing (baseline behavior)\n    fastEdInput.addEventListener('keydown', (e) => {\n      e.preventDefault();\n    });\n  }\n\n  // Collapsible info toggles handler\n  const infoToggles = container.querySelectorAll('.info-toggle');\n  infoToggles.forEach((toggle) => {\n    toggle.addEventListener('click', (e) => {\n      const targetId = toggle.dataset.target;\n      const targetContent = container.querySelector(`#${targetId}`);\n      const arrow = toggle.querySelector('.toggle-arrow');\n\n      if (targetContent) {\n        const isVisible = targetContent.style.display !== 'none';\n\n        if (isVisible) {\n          // Hide content\n          targetContent.style.display = 'none';\n          targetContent.classList.remove('show');\n          toggle.classList.remove('active');\n          arrow.style.transform = 'rotate(0deg)';\n        } else {\n          // Show content\n          targetContent.style.display = 'block';\n          targetContent.classList.add('show');\n          toggle.classList.add('active');\n          arrow.style.transform = 'rotate(180deg)';\n        }\n      }\n    });\n  });\n}\n","/**\n * UI Management System\n * iGFAP Stroke Triage Assistant - UI Coordination\n *\n * Handles all UI interactions, event listeners, and component management\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { store } from '../state/store.js';\nimport { i18n, t } from '../localization/i18n.js';\nimport { safeAsync, ERROR_CATEGORIES } from '../utils/error-handler.js';\nimport { safeSetInnerHTML } from '../security/html-sanitizer.js';\nimport { render } from '../ui/render.js';\n\n/**\n * Manages all UI interactions and components\n */\nexport class UIManager {\n  constructor() {\n    this.container = null;\n    this.eventListeners = new Map();\n    this.isInitialized = false;\n  }\n\n  /**\n   * Initialize UI management system\n   * @param {HTMLElement} container - Main app container\n   */\n  initialize(container) {\n    this.container = container;\n    this.setupGlobalEventListeners();\n    this.setupHelpModal();\n    this.setupFooterLinks();\n    this.initializeApiModeToggle();\n    this.initializeResearchMode();\n    this.setCurrentYear();\n    this.isInitialized = true;\n  }\n\n  /**\n   * Setup global event listeners\n   */\n  setupGlobalEventListeners() {\n    this.addEventListenerSafe('backButton', 'click', () => {\n      store.goBack();\n      render(this.container);\n    });\n\n    this.addEventListenerSafe('homeButton', 'click', () => {\n      store.goHome();\n      render(this.container);\n    });\n\n    this.addEventListenerSafe('languageToggle', 'click', () => {\n      this.toggleLanguage();\n    });\n\n    this.addEventListenerSafe('darkModeToggle', 'click', () => {\n      this.toggleDarkMode();\n    });\n\n    this.addEventListenerSafe('apiModeToggle', 'click', (e) => {\n      e.preventDefault();\n      this.toggleApiMode();\n    });\n\n    this.addEventListenerSafe('researchModeToggle', 'click', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      this.toggleResearchMode();\n    });\n\n    // Keyboard navigation\n    this.addGlobalEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        this.closeModal('helpModal');\n      }\n    });\n\n    // Before unload warning\n    this.addGlobalEventListener('beforeunload', (e) => {\n      if (store.hasUnsavedData()) {\n        e.preventDefault();\n        e.returnValue = 'You have unsaved data. Are you sure you want to leave?';\n      }\n    });\n  }\n\n  /**\n   * Initialize API mode toggle (Mock vs API)\n   */\n  initializeApiModeToggle() {\n    const btn = document.getElementById('apiModeToggle');\n    if (!btn) return;\n\n    // Default to mock on localhost preview; API in other cases\n    const isLocal = ['localhost', '127.0.0.1', '0.0.0.0'].includes(window.location.hostname);\n    const stored = localStorage.getItem('use_mock_api');\n    if (stored === null && isLocal && !(import.meta && import.meta.env && import.meta.env.DEV)) {\n      localStorage.setItem('use_mock_api', 'true');\n    }\n    this.updateApiModeButton();\n  }\n\n  /** Toggle API mode and update UI */\n  toggleApiMode() {\n    const current = localStorage.getItem('use_mock_api');\n    const next = current === 'true' ? 'false' : 'true';\n    localStorage.setItem('use_mock_api', next);\n    this.updateApiModeButton();\n\n    // Announce change for a11y\n    try {\n      const sr = document.createElement('div');\n      sr.className = 'sr-only';\n      sr.setAttribute('role', 'status');\n      sr.setAttribute('aria-live', 'polite');\n      sr.textContent = next === 'true' ? 'Mock data enabled' : 'Live API enabled';\n      document.body.appendChild(sr);\n      setTimeout(() => sr.remove(), 1200);\n    } catch {}\n  }\n\n  /** Update the button label/title for API mode */\n  updateApiModeButton() {\n    const btn = document.getElementById('apiModeToggle');\n    if (!btn) return;\n    const useMock = localStorage.getItem('use_mock_api') !== 'false';\n    if (useMock) {\n      btn.textContent = '🧪';\n      btn.title = 'Mock data: ON (click to use API)';\n      btn.setAttribute('aria-label', 'Mock data enabled');\n    } else {\n      btn.textContent = '☁️';\n      btn.title = 'Live API: ON (click to use mock)';\n      btn.setAttribute('aria-label', 'Live API enabled');\n    }\n  }\n\n  /**\n   * Safely add event listener to element\n   * @param {string} elementId - Element ID\n   * @param {string} event - Event type\n   * @param {Function} handler - Event handler\n   */\n  addEventListenerSafe(elementId, event, handler) {\n    const element = document.getElementById(elementId);\n    if (element) {\n      const wrappedHandler = (e) => {\n        try {\n          handler(e);\n        } catch (error) {\n          this.handleUIError(error, `${elementId}_${event}`);\n        }\n      };\n\n      element.addEventListener(event, wrappedHandler);\n      this.eventListeners.set(`${elementId}_${event}`, { element, handler: wrappedHandler });\n    }\n  }\n\n  /**\n   * Add global event listener\n   * @param {string} event - Event type\n   * @param {Function} handler - Event handler\n   */\n  addGlobalEventListener(event, handler) {\n    const wrappedHandler = (e) => {\n      try {\n        handler(e);\n      } catch (error) {\n        this.handleUIError(error, `global_${event}`);\n      }\n    };\n\n    if (event === 'keydown' || event === 'beforeunload') {\n      const target = event === 'beforeunload' ? window : document;\n      target.addEventListener(event, wrappedHandler);\n      this.eventListeners.set(`global_${event}`, { element: target, handler: wrappedHandler });\n    }\n  }\n\n  /**\n   * Setup help modal functionality\n   */\n  setupHelpModal() {\n    safeAsync(\n      async () => {\n        const helpButton = document.getElementById('helpButton');\n        const helpModal = document.getElementById('helpModal');\n        const modalClose = helpModal?.querySelector('.modal-close');\n\n        if (helpButton && helpModal) {\n          // Ensure modal starts hidden\n          this.closeModal('helpModal');\n\n          this.addEventListenerSafe('helpButton', 'click', () => {\n            this.openModal('helpModal');\n          });\n\n          if (modalClose) {\n            modalClose.addEventListener('click', () => {\n              this.closeModal('helpModal');\n            });\n          }\n\n          helpModal.addEventListener('click', (e) => {\n            if (e.target === helpModal) {\n              this.closeModal('helpModal');\n            }\n          });\n        }\n      },\n      (error) => {\n        // Help modal setup is non-critical\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: 'help_modal_setup' }\n      }\n    );\n  }\n\n  /**\n   * Setup footer links\n   */\n  setupFooterLinks() {\n    this.addEventListenerSafe('privacyLink', 'click', (e) => {\n      e.preventDefault();\n      this.showPrivacyPolicy();\n    });\n\n    this.addEventListenerSafe('disclaimerLink', 'click', (e) => {\n      e.preventDefault();\n      this.showDisclaimer();\n    });\n  }\n\n  /**\n   * Toggle language\n   */\n  toggleLanguage() {\n    safeAsync(\n      async () => {\n        i18n.toggleLanguage();\n        this.updateLanguage();\n      },\n      (error) => {\n        // Language toggle failure is non-critical\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: 'language_toggle' }\n      }\n    );\n  }\n\n  /**\n   * Update UI language\n   */\n  updateLanguage() {\n    // Update HTML lang attribute\n    document.documentElement.lang = i18n.getCurrentLanguage();\n\n    // Update header elements\n    this.updateElementText('.app-header h1', t('appTitle'));\n    this.updateElementText('.emergency-badge', t('emergencyBadge'));\n\n    // Update button tooltips and aria-labels\n    this.updateButtonAttributes('languageToggle', t('languageToggle'));\n    this.updateButtonAttributes('helpButton', t('helpButton'));\n    this.updateButtonAttributes('darkModeToggle', t('darkModeButton'));\n\n    // Update help modal\n    this.updateElementText('#modalTitle', t('helpTitle'));\n\n    // Update language toggle icon\n    const languageToggle = document.getElementById('languageToggle');\n    if (languageToggle) {\n      const currentLang = i18n.getCurrentLanguage();\n      languageToggle.textContent = currentLang === 'en' ? '🇬🇧' : '🇩🇪';\n      languageToggle.dataset.lang = currentLang;\n    }\n  }\n\n  /**\n   * Update element text safely\n   * @param {string} selector - Element selector\n   * @param {string} text - New text content\n   */\n  updateElementText(selector, text) {\n    const element = document.querySelector(selector);\n    if (element && text) {\n      element.textContent = text;\n    }\n  }\n\n  /**\n   * Update button attributes safely\n   * @param {string} elementId - Button element ID\n   * @param {string} text - Tooltip text\n   */\n  updateButtonAttributes(elementId, text) {\n    const element = document.getElementById(elementId);\n    if (element && text) {\n      element.title = text;\n      element.setAttribute('aria-label', text);\n    }\n  }\n\n  /**\n   * Toggle dark mode\n   */\n  toggleDarkMode() {\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    document.body.classList.toggle('dark-mode');\n    const isDark = document.body.classList.contains('dark-mode');\n\n    if (darkModeToggle) {\n      darkModeToggle.textContent = isDark ? '☀️' : '🌙';\n    }\n\n    localStorage.setItem('theme', isDark ? 'dark' : 'light');\n  }\n\n  /**\n   * Research mode management\n   */\n  initializeResearchMode() {\n    const researchModeToggle = document.getElementById('researchModeToggle');\n    if (researchModeToggle) {\n      this.updateResearchMode();\n    }\n  }\n\n  /**\n   * Update research mode visibility\n   */\n  updateResearchMode() {\n    const researchModeToggle = document.getElementById('researchModeToggle');\n    if (researchModeToggle) {\n      const currentModule = this.getCurrentModuleFromResults();\n      const shouldShow = currentModule === 'limited' || currentModule === 'full';\n\n      researchModeToggle.style.display = shouldShow ? 'flex' : 'none';\n      researchModeToggle.style.opacity = shouldShow ? '1' : '0.5';\n    }\n  }\n\n  /**\n   * Get current module from results\n   */\n  getCurrentModuleFromResults() {\n    const state = store.getState();\n    if (state.currentScreen !== 'results' || !state.results?.ich?.module) {\n      return null;\n    }\n\n    const module = state.results.ich.module.toLowerCase();\n    if (module.includes('coma')) return 'coma';\n    if (module.includes('limited')) return 'limited';\n    if (module.includes('full')) return 'full';\n    return null;\n  }\n\n  /**\n   * Toggle research mode\n   */\n  toggleResearchMode() {\n    const researchPanel = document.getElementById('researchPanel');\n    if (!researchPanel) {\n      return;\n    }\n\n    const isVisible = researchPanel.style.display !== 'none';\n    researchPanel.style.display = isVisible ? 'none' : 'block';\n\n    // Update button visual state\n    const researchModeToggle = document.getElementById('researchModeToggle');\n    if (researchModeToggle) {\n      researchModeToggle.style.background = isVisible\n        ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 102, 204, 0.2)';\n    }\n\n    return false;\n  }\n\n  /**\n   * Show research activation message\n   */\n  showResearchActivationMessage() {\n    safeAsync(\n      async () => {\n        const message = document.createElement('div');\n        message.className = 'research-activation-toast';\n\n        try {\n          safeSetInnerHTML(message, `\n            <div class=\"toast-content\">\n              🔬 <strong>Research Mode Activated</strong><br>\n              <small>Model comparison features enabled</small>\n            </div>\n          `);\n        } catch (error) {\n          message.textContent = '🔬 Research Mode Activated - Model comparison features enabled';\n        }\n\n        document.body.appendChild(message);\n\n        setTimeout(() => {\n          if (document.body.contains(message)) {\n            document.body.removeChild(message);\n          }\n        }, 3000);\n      },\n      (error) => {\n        // Research message failure is non-critical\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: 'research_activation_message' }\n      }\n    );\n  }\n\n  /**\n   * Open modal safely\n   * @param {string} modalId - Modal element ID\n   */\n  openModal(modalId) {\n    const modal = document.getElementById(modalId);\n    if (modal) {\n      modal.style.display = 'flex';\n      modal.classList.add('show');\n      modal.setAttribute('aria-hidden', 'false');\n    }\n  }\n\n  /**\n   * Close modal safely\n   * @param {string} modalId - Modal element ID\n   */\n  closeModal(modalId) {\n    const modal = document.getElementById(modalId);\n    if (modal) {\n      modal.classList.remove('show');\n      modal.style.display = 'none';\n      modal.setAttribute('aria-hidden', 'true');\n    }\n  }\n\n  /**\n   * Show privacy policy\n   */\n  showPrivacyPolicy() {\n    alert('Privacy Policy: This tool processes data locally. No patient data is stored or transmitted.');\n  }\n\n  /**\n   * Show disclaimer\n   */\n  showDisclaimer() {\n    alert('Medical Disclaimer: This tool is for clinical decision support only. Always use clinical judgment and follow local protocols.');\n  }\n\n  /**\n   * Set current year in footer\n   */\n  setCurrentYear() {\n    const yearElement = document.getElementById('currentYear');\n    if (yearElement) {\n      yearElement.textContent = new Date().getFullYear();\n    }\n  }\n\n  /**\n   * Handle UI errors gracefully\n   * @param {Error} error - Error object\n   * @param {string} context - Error context\n   */\n  handleUIError(error, context) {\n    // Log error without crashing the UI\n    try {\n      const errorEvent = new CustomEvent('uiError', {\n        detail: { error, context, timestamp: Date.now() }\n      });\n      document.dispatchEvent(errorEvent);\n    } catch (e) {\n      // Even error reporting failed - continue silently\n    }\n  }\n\n  /**\n   * Preload critical UI components\n   */\n  async preloadCriticalComponents() {\n    return safeAsync(\n      async () => {\n        // Preload critical UI elements and validate they exist\n        const criticalElements = [\n          'appContainer',\n          'helpModal',\n          'languageToggle',\n          'darkModeToggle'\n        ];\n\n        const missingElements = criticalElements.filter(id => !document.getElementById(id));\n\n        if (missingElements.length > 0) {\n          throw new Error(`Missing critical UI elements: ${missingElements.join(', ')}`);\n        }\n\n        return true;\n      },\n      (error) => {\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: 'preload_critical_components' }\n      }\n    );\n  }\n\n  /**\n   * Get UI manager status\n   */\n  getStatus() {\n    return {\n      isInitialized: this.isInitialized,\n      hasContainer: !!this.container,\n      eventListenersCount: this.eventListeners.size,\n      currentLanguage: i18n.getCurrentLanguage(),\n      isDarkMode: document.body.classList.contains('dark-mode')\n    };\n  }\n\n  /**\n   * Cleanup when destroyed\n   */\n  destroy() {\n    // Remove all event listeners\n    this.eventListeners.forEach(({ element, handler }, key) => {\n      const [, event] = key.split('_');\n      if (element && handler) {\n        element.removeEventListener(event, handler);\n      }\n    });\n\n    this.eventListeners.clear();\n    this.container = null;\n    this.isInitialized = false;\n  }\n}\n","/**\n * Theme Management System\n * iGFAP Stroke Triage Assistant - Theme & Styling Coordination\n *\n * Handles theme switching, dark mode, and styling preferences\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { safeAsync, ERROR_CATEGORIES } from '../utils/error-handler.js';\n\n/**\n * Manages application themes and styling\n */\nexport class ThemeManager {\n  constructor() {\n    this.currentTheme = 'light';\n    this.isInitialized = false;\n    this.storageKey = 'theme';\n  }\n\n  /**\n   * Initialize theme management\n   */\n  initialize() {\n    this.loadSavedTheme();\n    this.setupThemeDetection();\n    this.isInitialized = true;\n  }\n\n  /**\n   * Load saved theme from storage\n   */\n  async loadSavedTheme() {\n    return safeAsync(\n      async () => {\n        const savedTheme = localStorage.getItem(this.storageKey);\n        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n        // Determine theme to use\n        let themeToApply;\n        if (savedTheme === 'dark' || savedTheme === 'light') {\n          themeToApply = savedTheme;\n        } else if (prefersDark) {\n          themeToApply = 'dark';\n        } else {\n          themeToApply = 'light';\n        }\n\n        this.applyTheme(themeToApply);\n        this.updateThemeButton();\n\n        return themeToApply;\n      },\n      (error) => {\n        // Fallback to light theme\n        this.applyTheme('light');\n        this.updateThemeButton();\n        return 'light';\n      },\n      {\n        category: ERROR_CATEGORIES.STORAGE,\n        context: { operation: 'load_saved_theme' }\n      }\n    );\n  }\n\n  /**\n   * Setup system theme detection\n   */\n  setupThemeDetection() {\n    // Listen for system theme changes\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n    const handleSystemThemeChange = (e) => {\n      // Only auto-switch if user hasn't explicitly set a preference\n      const savedTheme = localStorage.getItem(this.storageKey);\n      if (!savedTheme) {\n        const newTheme = e.matches ? 'dark' : 'light';\n        this.applyTheme(newTheme);\n        this.updateThemeButton();\n      }\n    };\n\n    // Use the newer addEventListener if available\n    if (mediaQuery.addEventListener) {\n      mediaQuery.addEventListener('change', handleSystemThemeChange);\n    } else {\n      // Fallback for older browsers\n      mediaQuery.addListener(handleSystemThemeChange);\n    }\n  }\n\n  /**\n   * Apply theme to the application\n   * @param {string} theme - Theme name ('light' or 'dark')\n   */\n  applyTheme(theme) {\n    if (theme !== 'light' && theme !== 'dark') {\n      theme = 'light';\n    }\n\n    this.currentTheme = theme;\n\n    // Apply theme class to body\n    if (theme === 'dark') {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n\n    // Update meta theme-color for mobile browsers\n    this.updateMetaThemeColor(theme);\n\n    // Dispatch theme change event\n    this.dispatchThemeChangeEvent(theme);\n  }\n\n  /**\n   * Toggle between light and dark themes\n   */\n  toggleTheme() {\n    const newTheme = this.currentTheme === 'dark' ? 'light' : 'dark';\n    this.setTheme(newTheme);\n  }\n\n  /**\n   * Set specific theme\n   * @param {string} theme - Theme to set\n   */\n  setTheme(theme) {\n    return safeAsync(\n      async () => {\n        this.applyTheme(theme);\n        this.saveTheme(theme);\n        this.updateThemeButton();\n        return theme;\n      },\n      (error) => {\n        // Theme setting failed, keep current theme\n        return this.currentTheme;\n      },\n      {\n        category: ERROR_CATEGORIES.STORAGE,\n        context: { operation: 'set_theme', theme }\n      }\n    );\n  }\n\n  /**\n   * Save theme preference to storage\n   * @param {string} theme - Theme to save\n   */\n  saveTheme(theme) {\n    try {\n      localStorage.setItem(this.storageKey, theme);\n    } catch (error) {\n      // Storage failed - continue without saving\n    }\n  }\n\n  /**\n   * Update theme toggle button\n   */\n  updateThemeButton() {\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    if (darkModeToggle) {\n      const isDark = this.currentTheme === 'dark';\n      darkModeToggle.textContent = isDark ? '☀️' : '🌙';\n\n      // Update aria-label for accessibility\n      const label = isDark ? 'Switch to light mode' : 'Switch to dark mode';\n      darkModeToggle.setAttribute('aria-label', label);\n      darkModeToggle.title = label;\n    }\n  }\n\n  /**\n   * Update meta theme-color for mobile browsers\n   * @param {string} theme - Current theme\n   */\n  updateMetaThemeColor(theme) {\n    let metaThemeColor = document.querySelector('meta[name=\"theme-color\"]');\n\n    if (!metaThemeColor) {\n      metaThemeColor = document.createElement('meta');\n      metaThemeColor.name = 'theme-color';\n      document.head.appendChild(metaThemeColor);\n    }\n\n    // Set appropriate theme color\n    const themeColors = {\n      light: '#ffffff',\n      dark: '#1a1a1a'\n    };\n\n    metaThemeColor.content = themeColors[theme] || themeColors.light;\n  }\n\n  /**\n   * Dispatch theme change event\n   * @param {string} theme - New theme\n   */\n  dispatchThemeChangeEvent(theme) {\n    try {\n      const event = new CustomEvent('themeChanged', {\n        detail: {\n          theme,\n          timestamp: Date.now()\n        }\n      });\n      document.dispatchEvent(event);\n    } catch (error) {\n      // Event dispatch failed - continue silently\n    }\n  }\n\n  /**\n   * Get current theme\n   * @returns {string} - Current theme name\n   */\n  getCurrentTheme() {\n    return this.currentTheme;\n  }\n\n  /**\n   * Check if dark mode is active\n   * @returns {boolean} - True if dark mode is active\n   */\n  isDarkMode() {\n    return this.currentTheme === 'dark';\n  }\n\n  /**\n   * Get system preferred theme\n   * @returns {string} - System preferred theme\n   */\n  getSystemPreferredTheme() {\n    try {\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      return prefersDark ? 'dark' : 'light';\n    } catch (error) {\n      return 'light';\n    }\n  }\n\n  /**\n   * Reset theme to system preference\n   */\n  resetToSystemTheme() {\n    const systemTheme = this.getSystemPreferredTheme();\n    this.setTheme(systemTheme);\n\n    // Remove explicit preference so it follows system changes\n    try {\n      localStorage.removeItem(this.storageKey);\n    } catch (error) {\n      // Storage operation failed - continue\n    }\n  }\n\n  /**\n   * Get theme status information\n   */\n  getStatus() {\n    return {\n      isInitialized: this.isInitialized,\n      currentTheme: this.currentTheme,\n      isDarkMode: this.isDarkMode(),\n      systemPreferred: this.getSystemPreferredTheme(),\n      hasExplicitPreference: !!localStorage.getItem(this.storageKey)\n    };\n  }\n\n  /**\n   * Cleanup when destroyed\n   */\n  destroy() {\n    this.isInitialized = false;\n  }\n}","/**\n * Session Management System\n * iGFAP Stroke Triage Assistant - Session & Data Persistence\n *\n * Handles session management, auto-save, and data persistence\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { store } from '../state/store.js';\nimport { APP_CONFIG } from '../config.js';\nimport { authManager } from '../auth/authentication.js';\nimport { safeAsync, ERROR_CATEGORIES, ERROR_SEVERITY } from '../utils/error-handler.js';\nimport { secureStore, secureRetrieve, secureRemove } from '../security/data-encryption.js';\nimport { medicalLogger, LOG_CATEGORIES } from '../utils/medical-logger.js';\n\n/**\n * Manages session lifecycle and data persistence\n */\nexport class SessionManager {\n  constructor() {\n    this.autoSaveInterval = null;\n    this.sessionCheckInterval = null;\n    this.isInitialized = false;\n    this.lastAutoSave = 0;\n  }\n\n  /**\n   * Initialize session management\n   */\n  initialize() {\n    this.validateStoredSession();\n    this.startAutoSave();\n    this.setupSessionTimeout();\n    this.setupSessionValidation();\n    this.isInitialized = true;\n  }\n\n  /**\n   * Validate stored session data\n   */\n  async validateStoredSession() {\n    return safeAsync(\n      async () => {\n        if (!authManager.isValidSession()) {\n          // Session invalid - clear any stored data\n          this.clearSessionData();\n          return false;\n        }\n\n        // Session valid - restore any saved form data\n        this.restoreFormData();\n        return true;\n      },\n      (error) => {\n        // Session validation failed - clear data for safety\n        this.clearSessionData();\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.AUTHENTICATION,\n        severity: ERROR_SEVERITY.MEDIUM,\n        context: { operation: 'validate_stored_session' }\n      }\n    );\n  }\n\n  /**\n   * Start auto-save functionality\n   */\n  startAutoSave() {\n    if (this.autoSaveInterval) {\n      clearInterval(this.autoSaveInterval);\n    }\n\n    this.autoSaveInterval = setInterval(() => {\n      this.performAutoSave();\n    }, APP_CONFIG.autoSaveInterval);\n  }\n\n  /**\n   * Perform auto-save of current form data\n   */\n  async performAutoSave() {\n    return safeAsync(\n      async () => {\n        const container = document.getElementById('appContainer');\n        if (!container) {\n          return false;\n        }\n\n        const forms = container.querySelectorAll('form[data-module]');\n        let savedCount = 0;\n\n        for (const form of forms) {\n          try {\n            const { module } = form.dataset;\n            if (module) {\n              const formData = this.extractFormData(form);\n              const hasChanges = this.hasFormDataChanged(module, formData);\n\n              if (hasChanges) {\n                store.setFormData(module, formData);\n                savedCount++;\n              }\n            }\n          } catch (error) {\n            // Continue with other forms if one fails\n          }\n        }\n\n        this.lastAutoSave = Date.now();\n        return savedCount > 0;\n      },\n      (error) => {\n        // Auto-save failure is non-critical\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.STORAGE,\n        severity: ERROR_SEVERITY.LOW,\n        context: { operation: 'auto_save' }\n      }\n    );\n  }\n\n  /**\n   * Extract form data safely\n   * @param {HTMLFormElement} form - Form element\n   * @returns {Object} - Form data object\n   */\n  extractFormData(form) {\n    const formData = new FormData(form);\n    const data = {};\n\n    formData.forEach((value, key) => {\n      const element = form.elements[key];\n      if (element) {\n        if (element.type === 'checkbox') {\n          data[key] = element.checked;\n        } else if (element.type === 'number') {\n          const numValue = parseFloat(value);\n          data[key] = isNaN(numValue) ? value : numValue;\n        } else {\n          data[key] = value;\n        }\n      }\n    });\n\n    return data;\n  }\n\n  /**\n   * Check if form data has changed\n   * @param {string} module - Module name\n   * @param {Object} newData - New form data\n   * @returns {boolean} - True if data has changed\n   */\n  hasFormDataChanged(module, newData) {\n    try {\n      const currentData = store.getFormData(module);\n      return JSON.stringify(currentData) !== JSON.stringify(newData);\n    } catch (error) {\n      // If comparison fails, assume data has changed\n      return true;\n    }\n  }\n\n  /**\n   * Restore saved form data\n   */\n  restoreFormData() {\n    safeAsync(\n      async () => {\n        const container = document.getElementById('appContainer');\n        if (!container) {\n          return;\n        }\n\n        const forms = container.querySelectorAll('form[data-module]');\n\n        forms.forEach(form => {\n          try {\n            const { module } = form.dataset;\n            if (module) {\n              const savedData = store.getFormData(module);\n              if (savedData && Object.keys(savedData).length > 0) {\n                this.populateForm(form, savedData);\n              }\n            }\n          } catch (error) {\n            // Continue with other forms if one fails\n          }\n        });\n      },\n      (error) => {\n        // Form restoration failure is non-critical\n      },\n      {\n        category: ERROR_CATEGORIES.STORAGE,\n        context: { operation: 'restore_form_data' }\n      }\n    );\n  }\n\n  /**\n   * Populate form with saved data\n   * @param {HTMLFormElement} form - Form to populate\n   * @param {Object} data - Data to populate with\n   */\n  populateForm(form, data) {\n    Object.entries(data).forEach(([key, value]) => {\n      const element = form.elements[key];\n      if (element) {\n        try {\n          if (element.type === 'checkbox') {\n            element.checked = Boolean(value);\n          } else if (element.type === 'radio') {\n            if (element.value === value) {\n              element.checked = true;\n            }\n          } else {\n            element.value = value;\n          }\n\n          // Trigger input event for any listeners\n          element.dispatchEvent(new Event('input', { bubbles: true }));\n        } catch (error) {\n          // Skip this field if population fails\n        }\n      }\n    });\n  }\n\n  /**\n   * Setup session timeout monitoring\n   */\n  setupSessionTimeout() {\n    // Setup session timeout warning\n    setTimeout(() => {\n      this.showSessionTimeoutWarning();\n    }, APP_CONFIG.sessionTimeout - 60000); // Warn 1 minute before timeout\n  }\n\n  /**\n   * Setup periodic session validation\n   */\n  setupSessionValidation() {\n    // Check session validity every 5 minutes\n    this.sessionCheckInterval = setInterval(() => {\n      this.validateCurrentSession();\n    }, 5 * 60 * 1000);\n  }\n\n  /**\n   * Validate current session\n   */\n  async validateCurrentSession() {\n    return safeAsync(\n      async () => {\n        if (!authManager.isValidSession()) {\n          this.handleSessionExpiry();\n          return false;\n        }\n\n        // Optionally validate with server\n        const isValid = await authManager.validateSessionWithServer();\n        if (!isValid) {\n          this.handleSessionExpiry();\n          return false;\n        }\n\n        return true;\n      },\n      (error) => {\n        // Session validation failed - continue with local session\n        return authManager.isValidSession();\n      },\n      {\n        category: ERROR_CATEGORIES.AUTHENTICATION,\n        context: { operation: 'validate_current_session' }\n      }\n    );\n  }\n\n  /**\n   * Show session timeout warning\n   */\n  showSessionTimeoutWarning() {\n    safeAsync(\n      async () => {\n        const shouldContinue = confirm(\n          'Your session will expire in 1 minute. Would you like to continue?'\n        );\n\n        if (shouldContinue) {\n          // Extend session\n          authManager.updateActivity();\n          // Setup another timeout warning\n          this.setupSessionTimeout();\n        } else {\n          // User chose to end session\n          this.endSession();\n        }\n      },\n      (error) => {\n        // If warning fails, continue session\n      },\n      {\n        category: ERROR_CATEGORIES.AUTHENTICATION,\n        context: { operation: 'session_timeout_warning' }\n      }\n    );\n  }\n\n  /**\n   * Handle session expiry\n   */\n  handleSessionExpiry() {\n    this.clearSessionData();\n    store.navigate('login');\n\n    // Show expiry message\n    this.showSessionExpiredMessage();\n  }\n\n  /**\n   * Show session expired message\n   */\n  showSessionExpiredMessage() {\n    // Create a temporary message\n    const message = document.createElement('div');\n    message.style.cssText = `\n      position: fixed;\n      top: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      background: #ff9800;\n      color: white;\n      padding: 15px 20px;\n      border-radius: 8px;\n      z-index: 10000;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n    `;\n    message.textContent = '⏰ Session expired. Please log in again.';\n\n    document.body.appendChild(message);\n\n    setTimeout(() => {\n      if (document.body.contains(message)) {\n        document.body.removeChild(message);\n      }\n    }, 5000);\n  }\n\n  /**\n   * End session manually\n   */\n  endSession() {\n    authManager.logout();\n    this.clearSessionData();\n    store.reset();\n    store.navigate('login');\n  }\n\n  /**\n   * Clear all session data\n   */\n  async clearSessionData() {\n    try {\n      medicalLogger.info('Clearing session data', {\n        category: LOG_CATEGORIES.SECURITY\n      });\n\n      // Clear form data from store\n      store.clearAllFormData();\n\n      // Clear encrypted temporary data\n      await secureRemove('temp_data', true); // Use sessionStorage\n      await secureRemove('research_data', true);\n\n      // Clear any legacy unencrypted data\n      sessionStorage.removeItem('temp_data');\n      sessionStorage.removeItem('research_data');\n\n      medicalLogger.info('Session data cleared successfully', {\n        category: LOG_CATEGORIES.SECURITY\n      });\n    } catch (error) {\n      medicalLogger.warn('Failed to clear some session data', {\n        category: LOG_CATEGORIES.SECURITY,\n        error: error.message\n      });\n    }\n  }\n\n  /**\n   * Force save current state\n   */\n  async forceSave() {\n    return this.performAutoSave();\n  }\n\n  /**\n   * Get session status\n   */\n  getStatus() {\n    return {\n      isInitialized: this.isInitialized,\n      isAuthenticated: authManager.isValidSession(),\n      lastAutoSave: this.lastAutoSave,\n      autoSaveActive: !!this.autoSaveInterval,\n      sessionCheckActive: !!this.sessionCheckInterval,\n      sessionInfo: authManager.getSessionInfo?.() || {}\n    };\n  }\n\n  /**\n   * Cleanup when destroyed\n   */\n  destroy() {\n    if (this.autoSaveInterval) {\n      clearInterval(this.autoSaveInterval);\n      this.autoSaveInterval = null;\n    }\n\n    if (this.sessionCheckInterval) {\n      clearInterval(this.sessionCheckInterval);\n      this.sessionCheckInterval = null;\n    }\n\n    this.isInitialized = false;\n  }\n}","/**\n * Medical Data Caching System\n * iGFAP Stroke Triage Assistant - Enterprise Caching Architecture\n *\n * Provides HIPAA-compliant caching with TTL and secure data handling\n */\n\nimport { medicalEventObserver, MEDICAL_EVENTS } from '../patterns/observer.js';\n\nimport { medicalPerformanceMonitor, PerformanceMetricType } from './medical-performance-monitor.js';\n\n/**\n * Cache storage types for different data sensitivity levels\n */\nexport const CacheStorageType = {\n  MEMORY: 'memory',\n  SESSION: 'session',\n  LOCAL: 'local',\n  INDEXED_DB: 'indexed_db',\n};\n\n/**\n * Cache entry priorities for medical data\n */\nexport const CachePriority = {\n  CRITICAL: 'critical', // Emergency data, never evict\n  HIGH: 'high', // Important medical data\n  NORMAL: 'normal', // Standard application data\n  LOW: 'low', // Non-critical data, evict first\n};\n\n/**\n * Default TTL values for different types of medical data (in milliseconds)\n */\nexport const MedicalCacheTTL = {\n  PATIENT_DATA: 30 * 60 * 1000, // 30 minutes\n  PREDICTION_RESULTS: 60 * 60 * 1000, // 1 hour\n  VALIDATION_RULES: 24 * 60 * 60 * 1000, // 24 hours\n  API_RESPONSES: 15 * 60 * 1000, // 15 minutes\n  UI_STATE: 10 * 60 * 1000, // 10 minutes\n  STATIC_CONFIG: 7 * 24 * 60 * 60 * 1000, // 7 days\n};\n\n/**\n * Cache entry with metadata and security features\n */\nclass CacheEntry {\n  constructor(key, value, ttl, priority = CachePriority.NORMAL, metadata = {}) {\n    this.key = key;\n    this.value = this.sanitizeValue(value);\n    this.ttl = ttl;\n    this.priority = priority;\n    this.metadata = {\n      ...metadata,\n      createdAt: Date.now(),\n      accessCount: 0,\n      lastAccessed: Date.now(),\n    };\n    this.expiresAt = ttl > 0 ? Date.now() + ttl : null;\n    this.encrypted = false;\n  }\n\n  /**\n   * Sanitize sensitive data before caching\n   */\n  sanitizeValue(value) {\n    if (typeof value !== 'object' || value === null) {\n      return value;\n    }\n\n    // Deep clone to avoid reference issues\n    const sanitized = JSON.parse(JSON.stringify(value));\n\n    // Remove or mask sensitive fields\n    const sensitiveFields = ['ssn', 'mrn', 'patient_id', 'user_id', 'session_token'];\n    this.removeSensitiveFields(sanitized, sensitiveFields);\n\n    return sanitized;\n  }\n\n  /**\n   * Recursively remove sensitive fields\n   */\n  removeSensitiveFields(obj, sensitiveFields) {\n    Object.keys(obj).forEach((key) => {\n      if (sensitiveFields.some((field) => key.toLowerCase().includes(field))) {\n        obj[key] = '[REDACTED]';\n      } else if (typeof obj[key] === 'object' && obj[key] !== null) {\n        this.removeSensitiveFields(obj[key], sensitiveFields);\n      }\n    });\n  }\n\n  /**\n   * Check if cache entry has expired\n   */\n  isExpired() {\n    return this.expiresAt !== null && Date.now() > this.expiresAt;\n  }\n\n  /**\n   * Mark entry as accessed\n   */\n  markAccessed() {\n    this.metadata.accessCount += 1;\n    this.metadata.lastAccessed = Date.now();\n  }\n\n  /**\n   * Get entry age in milliseconds\n   */\n  getAge() {\n    return Date.now() - this.metadata.createdAt;\n  }\n\n  /**\n   * Get time until expiration\n   */\n  getTimeToExpiration() {\n    if (this.expiresAt === null) {\n      return Infinity;\n    }\n    return Math.max(0, this.expiresAt - Date.now());\n  }\n\n  /**\n   * Calculate entry score for eviction (lower score = evict first)\n   */\n  getEvictionScore() {\n    const priorityWeights = {\n      [CachePriority.CRITICAL]: 1000,\n      [CachePriority.HIGH]: 100,\n      [CachePriority.NORMAL]: 10,\n      [CachePriority.LOW]: 1,\n    };\n\n    const priorityWeight = priorityWeights[this.priority] || 1;\n    const accessWeight = Math.log(this.metadata.accessCount + 1);\n    const ageWeight = 1 / (this.getAge() + 1);\n\n    return priorityWeight * accessWeight * ageWeight;\n  }\n}\n\n/**\n * Medical Cache Manager with HIPAA compliance\n */\nexport class MedicalCache {\n  constructor(storageType = CacheStorageType.MEMORY, options = {}) {\n    this.storageType = storageType;\n    this.options = {\n      maxSize: 100 * 1024 * 1024, // 100MB max cache size\n      maxEntries: 1000, // Maximum number of entries\n      cleanupInterval: 5 * 60 * 1000, // Cleanup every 5 minutes\n      enableEncryption: false, // Enable for sensitive data\n      enableMetrics: true,\n      ...options,\n    };\n\n    this.cache = new Map();\n    this.cleanupTimer = null;\n    this.totalSize = 0;\n    this.hitCount = 0;\n    this.missCount = 0;\n    this.evictionCount = 0;\n\n    this.initializeStorage();\n    this.startCleanupTimer();\n  }\n\n  /**\n   * Initialize storage backend\n   */\n  initializeStorage() {\n    switch (this.storageType) {\n      case CacheStorageType.SESSION:\n        this.storage = sessionStorage;\n        this.loadFromStorage();\n        break;\n      case CacheStorageType.LOCAL:\n        this.storage = localStorage;\n        this.loadFromStorage();\n        break;\n      case CacheStorageType.INDEXED_DB:\n        this.initializeIndexedDB();\n        break;\n      default:\n        this.storage = null; // Memory only\n    }\n  }\n\n  /**\n   * Load cache from storage\n   */\n  loadFromStorage() {\n    if (!this.storage) {\n      return;\n    }\n\n    try {\n      const cacheData = this.storage.getItem('medical_cache');\n      if (cacheData) {\n        const parsed = JSON.parse(cacheData);\n        Object.entries(parsed).forEach(([key, entryData]) => {\n          const entry = new CacheEntry(\n            entryData.key,\n            entryData.value,\n            entryData.ttl,\n            entryData.priority,\n            entryData.metadata,\n          );\n          entry.expiresAt = entryData.expiresAt;\n\n          if (!entry.isExpired()) {\n            this.cache.set(key, entry);\n            this.totalSize += this.calculateSize(entry.value);\n          }\n        });\n      }\n    } catch (error) {\n      //('Failed to load cache from storage:', error.message);\n    }\n  }\n\n  /**\n   * Save cache to storage\n   */\n  saveToStorage() {\n    if (!this.storage) {\n      return;\n    }\n\n    try {\n      const cacheData = {};\n      this.cache.forEach((entry, key) => {\n        cacheData[key] = {\n          key: entry.key,\n          value: entry.value,\n          ttl: entry.ttl,\n          priority: entry.priority,\n          metadata: entry.metadata,\n          expiresAt: entry.expiresAt,\n        };\n      });\n\n      this.storage.setItem('medical_cache', JSON.stringify(cacheData));\n    } catch (error) {\n      //('Failed to save cache to storage:', error.message);\n    }\n  }\n\n  /**\n   * Initialize IndexedDB for large data caching\n   */\n  async initializeIndexedDB() {\n    // IndexedDB implementation for future enhancement\n    //('IndexedDB cache initialization planned for future implementation');\n  }\n\n  /**\n   * Set cache entry\n   */\n  set(key, value, ttl = MedicalCacheTTL.API_RESPONSES, priority = CachePriority.NORMAL, metadata = {}) {\n    const metricId = medicalPerformanceMonitor.startMeasurement(\n      PerformanceMetricType.CACHE,\n      'cache_set',\n      { key, priority },\n    );\n\n    try {\n      // Check if we need to make space\n      this.ensureCapacity();\n\n      const entry = new CacheEntry(key, value, ttl, priority, metadata);\n      const size = this.calculateSize(value);\n\n      // Remove existing entry if present\n      if (this.cache.has(key)) {\n        const oldEntry = this.cache.get(key);\n        this.totalSize -= this.calculateSize(oldEntry.value);\n      }\n\n      this.cache.set(key, entry);\n      this.totalSize += size;\n\n      // Save to persistent storage\n      if (this.storageType !== CacheStorageType.MEMORY) {\n        this.saveToStorage();\n      }\n\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: 'cache_set',\n        key,\n        size,\n        ttl,\n        priority,\n      });\n\n      medicalPerformanceMonitor.endMeasurement(metricId, { success: true });\n      return true;\n    } catch (error) {\n      medicalPerformanceMonitor.endMeasurement(metricId, { success: false, error: error.message });\n      //('Cache set error:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get cache entry\n   */\n  get(key) {\n    const metricId = medicalPerformanceMonitor.startMeasurement(\n      PerformanceMetricType.CACHE,\n      'cache_get',\n      { key },\n    );\n\n    try {\n      const entry = this.cache.get(key);\n\n      if (!entry) {\n        this.missCount += 1;\n        medicalPerformanceMonitor.endMeasurement(metricId, { hit: false });\n        return null;\n      }\n\n      if (entry.isExpired()) {\n        this.cache.delete(key);\n        this.totalSize -= this.calculateSize(entry.value);\n        this.missCount += 1;\n        medicalPerformanceMonitor.endMeasurement(metricId, { hit: false, expired: true });\n        return null;\n      }\n\n      entry.markAccessed();\n      this.hitCount += 1;\n\n      medicalPerformanceMonitor.endMeasurement(metricId, { hit: true });\n      return entry.value;\n    } catch (error) {\n      medicalPerformanceMonitor.endMeasurement(metricId, { hit: false, error: error.message });\n      //('Cache get error:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Check if key exists and is not expired\n   */\n  has(key) {\n    const entry = this.cache.get(key);\n    return entry && !entry.isExpired();\n  }\n\n  /**\n   * Delete cache entry\n   */\n  delete(key) {\n    const entry = this.cache.get(key);\n    if (entry) {\n      this.totalSize -= this.calculateSize(entry.value);\n      this.cache.delete(key);\n\n      if (this.storageType !== CacheStorageType.MEMORY) {\n        this.saveToStorage();\n      }\n\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: 'cache_delete',\n        key,\n      });\n\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Clear all cache entries\n   */\n  clear() {\n    const entriesCleared = this.cache.size;\n    this.cache.clear();\n    this.totalSize = 0;\n\n    if (this.storage) {\n      this.storage.removeItem('medical_cache');\n    }\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n      action: 'cache_cleared',\n      entriesCleared,\n    });\n  }\n\n  /**\n   * Ensure cache capacity by evicting entries\n   */\n  ensureCapacity() {\n    // Check size limit\n    while (this.totalSize > this.options.maxSize) {\n      this.evictLeastImportant();\n    }\n\n    // Check entry count limit\n    while (this.cache.size >= this.options.maxEntries) {\n      this.evictLeastImportant();\n    }\n  }\n\n  /**\n   * Evict least important entry based on priority and access patterns\n   */\n  evictLeastImportant() {\n    let lowestScore = Infinity;\n    let keyToEvict = null;\n\n    this.cache.forEach((entry, key) => {\n      // Never evict critical priority items unless expired\n      if (entry.priority === CachePriority.CRITICAL && !entry.isExpired()) {\n        return;\n      }\n\n      const score = entry.getEvictionScore();\n      if (score < lowestScore) {\n        lowestScore = score;\n        keyToEvict = key;\n      }\n    });\n\n    if (keyToEvict) {\n      this.delete(keyToEvict);\n      this.evictionCount += 1;\n    }\n  }\n\n  /**\n   * Clean up expired entries\n   */\n  cleanup() {\n    const startTime = performance.now();\n    let cleanedCount = 0;\n\n    this.cache.forEach((entry, key) => {\n      if (entry.isExpired()) {\n        this.delete(key);\n        cleanedCount += 1;\n      }\n    });\n\n    const duration = performance.now() - startTime;\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n      action: 'cache_cleanup',\n      cleanedCount,\n      duration,\n      remainingEntries: this.cache.size,\n    });\n\n    return cleanedCount;\n  }\n\n  /**\n   * Start automatic cleanup timer\n   */\n  startCleanupTimer() {\n    if (this.cleanupTimer) {\n      clearInterval(this.cleanupTimer);\n    }\n\n    this.cleanupTimer = setInterval(() => {\n      this.cleanup();\n    }, this.options.cleanupInterval);\n  }\n\n  /**\n   * Stop cleanup timer\n   */\n  stopCleanupTimer() {\n    if (this.cleanupTimer) {\n      clearInterval(this.cleanupTimer);\n      this.cleanupTimer = null;\n    }\n  }\n\n  /**\n   * Calculate size of cached value (approximate)\n   */\n  calculateSize(value) {\n    try {\n      return JSON.stringify(value).length * 2; // Rough estimate (UTF-16)\n    } catch {\n      return 0;\n    }\n  }\n\n  /**\n   * Get cache statistics\n   */\n  getStats() {\n    const hitRate = this.hitCount + this.missCount > 0\n      ? (this.hitCount / (this.hitCount + this.missCount)) * 100\n      : 0;\n\n    return {\n      entries: this.cache.size,\n      totalSize: this.totalSize,\n      maxSize: this.options.maxSize,\n      hitCount: this.hitCount,\n      missCount: this.missCount,\n      hitRate: `${hitRate.toFixed(2)}%`,\n      evictionCount: this.evictionCount,\n      storageType: this.storageType,\n      utilizationPercent: `${((this.totalSize / this.options.maxSize) * 100).toFixed(2)}%`,\n    };\n  }\n\n  /**\n   * Get cache entry information\n   */\n  getEntryInfo(key) {\n    const entry = this.cache.get(key);\n    if (!entry) {\n      return null;\n    }\n\n    return {\n      key: entry.key,\n      size: this.calculateSize(entry.value),\n      priority: entry.priority,\n      ttl: entry.ttl,\n      age: entry.getAge(),\n      timeToExpiration: entry.getTimeToExpiration(),\n      accessCount: entry.metadata.accessCount,\n      lastAccessed: new Date(entry.metadata.lastAccessed).toISOString(),\n      isExpired: entry.isExpired(),\n      evictionScore: entry.getEvictionScore(),\n    };\n  }\n\n  /**\n   * Dispose of cache and cleanup resources\n   */\n  dispose() {\n    this.stopCleanupTimer();\n    this.clear();\n  }\n}\n\n/**\n * Medical cache factory for different data types\n */\nexport class MedicalCacheFactory {\n  static patientDataCache = null;\n\n  static predictionCache = null;\n\n  static validationCache = null;\n\n  static apiCache = null;\n\n  /**\n   * Get or create patient data cache (session storage, short TTL)\n   */\n  static getPatientDataCache() {\n    if (!this.patientDataCache) {\n      this.patientDataCache = new MedicalCache(CacheStorageType.SESSION, {\n        maxSize: 10 * 1024 * 1024, // 10MB\n        maxEntries: 100,\n        enableEncryption: true,\n      });\n    }\n    return this.patientDataCache;\n  }\n\n  /**\n   * Get or create prediction results cache (memory only, medium TTL)\n   */\n  static getPredictionCache() {\n    if (!this.predictionCache) {\n      this.predictionCache = new MedicalCache(CacheStorageType.MEMORY, {\n        maxSize: 50 * 1024 * 1024, // 50MB\n        maxEntries: 500,\n      });\n    }\n    return this.predictionCache;\n  }\n\n  /**\n   * Get or create validation rules cache (local storage, long TTL)\n   */\n  static getValidationCache() {\n    if (!this.validationCache) {\n      this.validationCache = new MedicalCache(CacheStorageType.LOCAL, {\n        maxSize: 5 * 1024 * 1024, // 5MB\n        maxEntries: 200,\n      });\n    }\n    return this.validationCache;\n  }\n\n  /**\n   * Get or create API response cache (session storage, short TTL)\n   */\n  static getApiCache() {\n    if (!this.apiCache) {\n      this.apiCache = new MedicalCache(CacheStorageType.SESSION, {\n        maxSize: 20 * 1024 * 1024, // 20MB\n        maxEntries: 300,\n      });\n    }\n    return this.apiCache;\n  }\n\n  /**\n   * Clear all caches (privacy compliance)\n   */\n  static clearAllCaches() {\n    [\n      this.patientDataCache,\n      this.predictionCache,\n      this.validationCache,\n      this.apiCache,\n    ].forEach((cache) => {\n      if (cache) {\n        cache.clear();\n      }\n    });\n  }\n\n  /**\n   * Dispose all caches\n   */\n  static disposeAllCaches() {\n    [\n      this.patientDataCache,\n      this.predictionCache,\n      this.validationCache,\n      this.apiCache,\n    ].forEach((cache) => {\n      if (cache) {\n        cache.dispose();\n      }\n    });\n\n    this.patientDataCache = null;\n    this.predictionCache = null;\n    this.validationCache = null;\n    this.apiCache = null;\n  }\n}\n\n// Export convenience instances\nexport const patientDataCache = MedicalCacheFactory.getPatientDataCache();\nexport const predictionCache = MedicalCacheFactory.getPredictionCache();\nexport const validationCache = MedicalCacheFactory.getValidationCache();\nexport const apiCache = MedicalCacheFactory.getApiCache();\n","/**\n * Progressive Loading and Lazy Component System\n * iGFAP Stroke Triage Assistant - Phase 3 Advanced Features\n *\n * Provides intelligent component loading for optimal performance\n */\n\nimport { medicalEventObserver, MEDICAL_EVENTS } from '../patterns/observer.js';\nimport { medicalPerformanceMonitor, PerformanceMetricType } from '../performance/medical-performance-monitor.js';\n\n/**\n * Component loading priorities\n */\nexport const LoadPriority = {\n  CRITICAL: 'critical', // Load immediately\n  HIGH: 'high', // Load on interaction\n  NORMAL: 'normal', // Load on viewport\n  LOW: 'low', // Load on idle\n};\n\n/**\n * Component loading states\n */\nexport const LoadState = {\n  PENDING: 'pending',\n  LOADING: 'loading',\n  LOADED: 'loaded',\n  ERROR: 'error',\n};\n\n/**\n * Lazy component definition\n */\nclass LazyComponent {\n  constructor(name, loader, options = {}) {\n    this.name = name;\n    this.loader = loader;\n    this.priority = options.priority || LoadPriority.NORMAL;\n    this.state = LoadState.PENDING;\n    this.component = null;\n    this.error = null;\n    this.loadTime = null;\n    this.dependencies = options.dependencies || [];\n    this.retryCount = 0;\n    this.maxRetries = options.maxRetries || 3;\n    this.loadPromise = null;\n  }\n\n  /**\n   * Load the component\n   */\n  async load() {\n    if (this.state === LoadState.LOADED) {\n      return this.component;\n    }\n\n    if (this.loadPromise) {\n      return this.loadPromise;\n    }\n\n    const metricId = medicalPerformanceMonitor.startMeasurement(\n      PerformanceMetricType.USER_INTERACTION,\n      `lazy_load_${this.name}`,\n      { priority: this.priority },\n    );\n\n    this.state = LoadState.LOADING;\n    this.loadPromise = this.executeLoad(metricId);\n\n    return this.loadPromise;\n  }\n\n  /**\n   * Execute component loading with error handling\n   */\n  async executeLoad(metricId) {\n    try {\n      const startTime = performance.now();\n\n      // Load dependencies first\n      await this.loadDependencies();\n\n      // Load the component\n      this.component = await this.loader();\n      this.loadTime = performance.now() - startTime;\n      this.state = LoadState.LOADED;\n\n      medicalPerformanceMonitor.endMeasurement(metricId, {\n        success: true,\n        loadTime: this.loadTime,\n        retryCount: this.retryCount,\n      });\n\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: 'lazy_component_loaded',\n        component: this.name,\n        loadTime: this.loadTime,\n        priority: this.priority,\n      });\n\n      return this.component;\n    } catch (error) {\n      this.error = error;\n      this.retryCount++;\n\n      medicalPerformanceMonitor.endMeasurement(metricId, {\n        success: false,\n        error: error.message,\n        retryCount: this.retryCount,\n      });\n\n      if (this.retryCount < this.maxRetries) {\n        //(`⚠️ Component ${this.name} load failed, retrying (${this.retryCount}/${this.maxRetries}):`, error);\n\n        // Exponential backoff\n        const delay = Math.min(1000 * 2 ** (this.retryCount - 1), 5000);\n        await new Promise((resolve) => setTimeout(resolve, delay));\n\n        this.loadPromise = null;\n        return this.load();\n      }\n      this.state = LoadState.ERROR;\n      //(`❌ Component ${this.name} failed to load after ${this.maxRetries} attempts:`, error);\n\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: 'lazy_component_load_failed',\n        component: this.name,\n        error: error.message,\n        retryCount: this.retryCount,\n      });\n\n      throw error;\n    }\n  }\n\n  /**\n   * Load component dependencies\n   */\n  async loadDependencies() {\n    if (this.dependencies.length === 0) {\n      return;\n    }\n\n    const dependencyPromises = this.dependencies.map((dep) => {\n      if (typeof dep === 'string') {\n        // Load dependency by name\n        return LazyLoader.load(dep);\n      } if (typeof dep === 'function') {\n        // Load dependency function\n        return dep();\n      }\n      // Assume it's a lazy component\n      return dep.load();\n    });\n\n    await Promise.all(dependencyPromises);\n  }\n\n  /**\n   * Get component status\n   */\n  getStatus() {\n    return {\n      name: this.name,\n      state: this.state,\n      priority: this.priority,\n      loadTime: this.loadTime,\n      error: this.error?.message,\n      retryCount: this.retryCount,\n    };\n  }\n}\n\n/**\n * Progressive component loader with intelligent scheduling\n */\nexport class LazyLoader {\n  constructor() {\n    this.components = new Map();\n    this.intersectionObserver = null;\n    this.idleCallback = null;\n    this.loadQueue = {\n      [LoadPriority.CRITICAL]: [],\n      [LoadPriority.HIGH]: [],\n      [LoadPriority.NORMAL]: [],\n      [LoadPriority.LOW]: [],\n    };\n    this.isProcessingQueue = false;\n\n    this.initializeObservers();\n  }\n\n  /**\n   * Initialize viewport and idle observers\n   */\n  initializeObservers() {\n    // Intersection Observer for viewport-based loading\n    if ('IntersectionObserver' in window) {\n      this.intersectionObserver = new IntersectionObserver(\n        (entries) => this.handleIntersectionChanges(entries),\n        {\n          rootMargin: '50px',\n          threshold: 0.1,\n        },\n      );\n    }\n\n    // Idle callback for low-priority loading\n    this.scheduleIdleLoading();\n  }\n\n  /**\n   * Register a lazy component\n   */\n  register(name, loader, options = {}) {\n    const component = new LazyComponent(name, loader, options);\n    this.components.set(name, component);\n\n    // Add to appropriate load queue\n    this.loadQueue[component.priority].push(component);\n\n    // Start loading critical components immediately\n    if (component.priority === LoadPriority.CRITICAL) {\n      this.processLoadQueue();\n    }\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n      action: 'lazy_component_registered',\n      component: name,\n      priority: component.priority,\n    });\n\n    return component;\n  }\n\n  /**\n   * Load a component by name\n   */\n  async load(name) {\n    const component = this.components.get(name);\n    if (!component) {\n      throw new Error(`Component '${name}' not registered`);\n    }\n\n    return component.load();\n  }\n\n  /**\n   * Preload components based on priority\n   */\n  async preload(priority = LoadPriority.HIGH) {\n    const priorities = [LoadPriority.CRITICAL, LoadPriority.HIGH, LoadPriority.NORMAL, LoadPriority.LOW];\n    const targetPriorities = priorities.slice(0, priorities.indexOf(priority) + 1);\n\n    const preloadPromises = [];\n\n    targetPriorities.forEach((pri) => {\n      this.loadQueue[pri].forEach((component) => {\n        if (component.state === LoadState.PENDING) {\n          preloadPromises.push(component.load());\n        }\n      });\n    });\n\n    await Promise.allSettled(preloadPromises);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n      action: 'lazy_components_preloaded',\n      priority,\n      count: preloadPromises.length,\n    });\n  }\n\n  /**\n   * Observe element for viewport-based loading\n   */\n  observeElement(element, componentName) {\n    if (!this.intersectionObserver) {\n      return;\n    }\n\n    element.dataset.lazyComponent = componentName;\n    this.intersectionObserver.observe(element);\n  }\n\n  /**\n   * Handle intersection observer changes\n   */\n  handleIntersectionChanges(entries) {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        const componentName = entry.target.dataset.lazyComponent;\n        if (componentName) {\n          this.load(componentName).catch((error) => {\n            //(`Failed to load component ${componentName}:`, error);\n          });\n\n          // Stop observing once loaded\n          this.intersectionObserver.unobserve(entry.target);\n        }\n      }\n    });\n  }\n\n  /**\n   * Process load queue based on priority\n   */\n  async processLoadQueue() {\n    if (this.isProcessingQueue) {\n      return;\n    }\n\n    this.isProcessingQueue = true;\n\n    try {\n      // Process critical components first\n      await this.processQueueByPriority(LoadPriority.CRITICAL);\n\n      // Process high priority components\n      await this.processQueueByPriority(LoadPriority.HIGH);\n    } catch (error) {\n      //('Error processing load queue:', error);\n    } finally {\n      this.isProcessingQueue = false;\n    }\n  }\n\n  /**\n   * Process components of specific priority\n   */\n  async processQueueByPriority(priority) {\n    const queue = this.loadQueue[priority];\n    const pendingComponents = queue.filter((comp) => comp.state === LoadState.PENDING);\n\n    if (pendingComponents.length === 0) {\n      return;\n    }\n\n    const loadPromises = pendingComponents.map((component) => component.load().catch((error) => {\n      //(`Component ${component.name} failed to load:`, error);\n      return null;\n    }));\n\n    await Promise.allSettled(loadPromises);\n  }\n\n  /**\n   * Schedule idle loading for low-priority components\n   */\n  scheduleIdleLoading() {\n    const scheduleNext = () => {\n      if ('requestIdleCallback' in window) {\n        this.idleCallback = requestIdleCallback((deadline) => {\n          this.processIdleQueue(deadline);\n          scheduleNext();\n        }, { timeout: 5000 });\n      } else {\n        // Fallback for browsers without requestIdleCallback\n        setTimeout(() => {\n          this.processIdleQueue({ timeRemaining: () => 50 });\n          scheduleNext();\n        }, 100);\n      }\n    };\n\n    scheduleNext();\n  }\n\n  /**\n   * Process low-priority components during idle time\n   */\n  async processIdleQueue(deadline) {\n    const normalQueue = this.loadQueue[LoadPriority.NORMAL];\n    const lowQueue = this.loadQueue[LoadPriority.LOW];\n\n    // Process normal priority first, then low priority\n    const pendingComponents = [\n      ...normalQueue.filter((comp) => comp.state === LoadState.PENDING),\n      ...lowQueue.filter((comp) => comp.state === LoadState.PENDING),\n    ];\n\n    for (const component of pendingComponents) {\n      if (deadline.timeRemaining() > 10) { // Need at least 10ms\n        try {\n          await component.load();\n        } catch (error) {\n          //(`Idle loading failed for ${component.name}:`, error);\n        }\n      } else {\n        break; // No more time available\n      }\n    }\n  }\n\n  /**\n   * Get loader statistics\n   */\n  getStats() {\n    const stats = {\n      total: this.components.size,\n      byState: {\n        pending: 0, loading: 0, loaded: 0, error: 0,\n      },\n      byPriority: {\n        critical: 0, high: 0, normal: 0, low: 0,\n      },\n      totalLoadTime: 0,\n      averageLoadTime: 0,\n    };\n\n    let totalLoadTime = 0;\n    let loadedCount = 0;\n\n    this.components.forEach((component) => {\n      stats.byState[component.state]++;\n      stats.byPriority[component.priority]++;\n\n      if (component.loadTime) {\n        totalLoadTime += component.loadTime;\n        loadedCount++;\n      }\n    });\n\n    stats.totalLoadTime = totalLoadTime;\n    stats.averageLoadTime = loadedCount > 0 ? totalLoadTime / loadedCount : 0;\n\n    return stats;\n  }\n\n  /**\n   * Force reload a component\n   */\n  async reload(name) {\n    const component = this.components.get(name);\n    if (!component) {\n      throw new Error(`Component '${name}' not registered`);\n    }\n\n    // Reset component state\n    component.state = LoadState.PENDING;\n    component.component = null;\n    component.error = null;\n    component.loadTime = null;\n    component.retryCount = 0;\n    component.loadPromise = null;\n\n    return component.load();\n  }\n\n  /**\n   * Dispose and cleanup\n   */\n  dispose() {\n    if (this.intersectionObserver) {\n      this.intersectionObserver.disconnect();\n    }\n\n    if (this.idleCallback) {\n      cancelIdleCallback(this.idleCallback);\n    }\n\n    this.components.clear();\n    Object.values(this.loadQueue).forEach((queue) => queue.length = 0);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n      action: 'lazy_loader_disposed',\n    });\n  }\n}\n\n/**\n * Medical component lazy loaders\n */\nexport class MedicalComponentLoader {\n  constructor(lazyLoader) {\n    this.lazyLoader = lazyLoader;\n    this.registerMedicalComponents();\n  }\n\n  /**\n   * Register all medical components (only for truly lazy-loaded modules)\n   */\n  registerMedicalComponents() {\n    // Only register components that are NOT statically imported elsewhere\n    // This prevents the build warnings about mixed static/dynamic imports\n\n    // Advanced features chunk (only loaded when research mode is activated)\n    this.lazyLoader.register(\n      'advanced-analytics',\n      () => import('../analytics/quality-metrics.js'),\n      { priority: LoadPriority.LOW },\n    );\n\n    this.lazyLoader.register(\n      'clinical-reporting',\n      () => import('../analytics/clinical-reporting.js'),\n      { priority: LoadPriority.LOW },\n    );\n\n    this.lazyLoader.register(\n      'audit-trail',\n      () => import('../analytics/audit-trail.js'),\n      { priority: LoadPriority.LOW },\n    );\n\n    // Service workers and background features\n    this.lazyLoader.register(\n      'medical-service-worker',\n      () => import('../workers/medical-service-worker.js'),\n      { priority: LoadPriority.LOW },\n    );\n\n    this.lazyLoader.register(\n      'sw-manager',\n      () => import('../workers/sw-manager.js'),\n      { priority: LoadPriority.LOW },\n    );\n\n    // Advanced architectural patterns (loaded only when needed)\n    this.lazyLoader.register(\n      'command-pattern',\n      () => import('../patterns/command.js'),\n      { priority: LoadPriority.NORMAL },\n    );\n\n    this.lazyLoader.register(\n      'prediction-strategy',\n      () => import('../patterns/prediction-strategy.js'),\n      { priority: LoadPriority.NORMAL },\n    );\n\n    this.lazyLoader.register(\n      'validation-factory',\n      () => import('../patterns/validation-factory.js'),\n      { priority: LoadPriority.NORMAL },\n    );\n  }\n\n  /**\n   * Load medical component by clinical priority\n   */\n  async loadByClinicalPriority(clinicalSituation) {\n    switch (clinicalSituation) {\n      case 'emergency':\n        // Load high-priority architectural patterns\n        await this.lazyLoader.preload(LoadPriority.HIGH);\n        break;\n\n      case 'routine':\n        // Load normal priority patterns and command structures\n        await this.lazyLoader.preload(LoadPriority.NORMAL);\n        break;\n\n      case 'research':\n        // Load research and analytics tools\n        await this.lazyLoader.load('advanced-analytics');\n        await this.lazyLoader.load('clinical-reporting');\n        await this.lazyLoader.load('audit-trail');\n        break;\n\n      case 'background':\n        // Load service workers and background features\n        await this.lazyLoader.load('medical-service-worker');\n        await this.lazyLoader.load('sw-manager');\n        break;\n\n      default:\n        await this.lazyLoader.preload(LoadPriority.NORMAL);\n    }\n  }\n\n  /**\n   * Preload components for specific medical module\n   */\n  async preloadForModule(moduleType) {\n    // Since core components are now statically imported,\n    // we only need to load advanced features\n    const moduleComponents = {\n      coma: ['command-pattern'],\n      limited: ['prediction-strategy'],\n      full: ['command-pattern', 'prediction-strategy', 'validation-factory'],\n      research: ['advanced-analytics', 'clinical-reporting', 'audit-trail'],\n    };\n\n    const components = moduleComponents[moduleType] || [];\n    const loadPromises = components.map((comp) => this.lazyLoader.load(comp));\n\n    await Promise.allSettled(loadPromises);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n      action: 'medical_components_preloaded',\n      moduleType,\n      components,\n    });\n  }\n\n  /**\n   * Load enterprise features for production deployment\n   */\n  async loadEnterpriseFeatures() {\n    const enterpriseComponents = [\n      'medical-service-worker',\n      'sw-manager',\n      'advanced-analytics',\n      'clinical-reporting',\n      'audit-trail'\n    ];\n\n    const loadPromises = enterpriseComponents.map((comp) =>\n      this.lazyLoader.load(comp).catch((error) => {\n        console.warn(`Enterprise feature ${comp} failed to load:`, error);\n        return null;\n      })\n    );\n\n    const results = await Promise.allSettled(loadPromises);\n    const loadedCount = results.filter(r => r.status === 'fulfilled' && r.value !== null).length;\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n      action: 'enterprise_features_loaded',\n      requested: enterpriseComponents.length,\n      loaded: loadedCount,\n    });\n\n    return loadedCount;\n  }\n}\n\n// Export singleton instances\nexport const lazyLoader = new LazyLoader();\nexport const medicalComponentLoader = new MedicalComponentLoader(lazyLoader);\n","/**\n * Advanced Features Management System\n * iGFAP Stroke Triage Assistant - Phase 3 & 4 Feature Coordination\n *\n * Handles initialization and management of advanced features\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { safeAsync, ERROR_CATEGORIES, ERROR_SEVERITY } from '../utils/error-handler.js';\n\n// Phase 3: Advanced offline capabilities\nimport { medicalSWManager } from '../workers/sw-manager.js';\nimport { medicalPerformanceMonitor } from '../performance/medical-performance-monitor.js';\nimport { medicalSyncManager } from '../sync/medical-sync-manager.js';\nimport { lazyLoader } from '../components/lazy-loader.js';\n\n// Phase 4: Medical Intelligence & Analytics - Selected Features\nimport { clinicalReportingSystem } from '../analytics/clinical-reporting.js';\nimport { qualityMetricsTracker } from '../analytics/quality-metrics.js';\nimport { clinicalAuditTrail } from '../analytics/audit-trail.js';\n\n/**\n * Manages advanced features initialization and coordination\n */\nexport class AdvancedFeaturesManager {\n  constructor() {\n    this.isInitialized = false;\n    this.phase3Status = {\n      serviceWorker: false,\n      performanceMonitor: false,\n      syncManager: false,\n      lazyLoader: false\n    };\n    this.phase4Status = {\n      reportingSystem: false,\n      qualityMetrics: false,\n      auditTrail: false\n    };\n  }\n\n  /**\n   * Initialize all advanced features\n   */\n  async initialize() {\n    return safeAsync(\n      async () => {\n        // Initialize Phase 3 features\n        await this.initializePhase3Features();\n\n        // Initialize Phase 4 features\n        await this.initializePhase4Features();\n\n        this.isInitialized = true;\n        return true;\n      },\n      (error) => {\n        // Advanced features failure doesn't block core functionality\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        severity: ERROR_SEVERITY.MEDIUM,\n        timeout: 60000, // Allow more time for advanced features\n        context: {\n          operation: 'initialize_advanced_features'\n        }\n      }\n    );\n  }\n\n  /**\n   * Initialize Phase 3 Advanced Features\n   */\n  async initializePhase3Features() {\n    return safeAsync(\n      async () => {\n        // Start performance monitoring first\n        await this.initializePerformanceMonitor();\n\n        // Initialize service worker (non-blocking)\n        this.initializeServiceWorker();\n\n        // Initialize sync manager\n        await this.initializeSyncManager();\n\n        // Initialize progressive loading\n        await this.initializeProgressiveLoading();\n\n        return true;\n      },\n      (error) => {\n        // Phase 3 failure is non-critical\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: 'initialize_phase3_features' }\n      }\n    );\n  }\n\n  /**\n   * Initialize performance monitoring\n   */\n  async initializePerformanceMonitor() {\n    return safeAsync(\n      async () => {\n        medicalPerformanceMonitor.start();\n        this.phase3Status.performanceMonitor = true;\n        return true;\n      },\n      (error) => {\n        this.phase3Status.performanceMonitor = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: 'initialize_performance_monitor' }\n      }\n    );\n  }\n\n  /**\n   * Initialize service worker\n   */\n  async initializeServiceWorker() {\n    // Run in background without blocking\n    safeAsync(\n      async () => {\n        const swInitialized = await medicalSWManager.initialize();\n        this.phase3Status.serviceWorker = swInitialized;\n\n        if (swInitialized) {\n          // Prefetch critical medical resources\n          await this.prefetchCriticalResources();\n        }\n\n        return swInitialized;\n      },\n      (error) => {\n        this.phase3Status.serviceWorker = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.NETWORK,\n        context: { operation: 'initialize_service_worker' }\n      }\n    );\n  }\n\n  /**\n   * Initialize sync manager\n   */\n  async initializeSyncManager() {\n    return safeAsync(\n      async () => {\n        const syncInitialized = await medicalSyncManager.initialize();\n        this.phase3Status.syncManager = syncInitialized;\n        return syncInitialized;\n      },\n      (error) => {\n        this.phase3Status.syncManager = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.NETWORK,\n        context: { operation: 'initialize_sync_manager' }\n      }\n    );\n  }\n\n  /**\n   * Initialize progressive loading\n   */\n  async initializeProgressiveLoading() {\n    return safeAsync(\n      async () => {\n        // Preload critical components immediately\n        await lazyLoader.preload('critical');\n\n        // Setup viewport-based loading for result visualizations\n        setTimeout(() => this.setupViewportLoading(), 100);\n\n        this.phase3Status.lazyLoader = true;\n        return true;\n      },\n      (error) => {\n        this.phase3Status.lazyLoader = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: 'initialize_progressive_loading' }\n      }\n    );\n  }\n\n  /**\n   * Setup viewport-based loading\n   */\n  setupViewportLoading() {\n    try {\n      const brainVizElements = document.querySelectorAll('.brain-visualization-placeholder');\n      brainVizElements.forEach((element) => {\n        lazyLoader.observeElement(element, 'brain-visualization');\n      });\n\n      const mapElements = document.querySelectorAll('.stroke-center-map-placeholder');\n      mapElements.forEach((element) => {\n        lazyLoader.observeElement(element, 'stroke-center-map');\n      });\n    } catch (error) {\n      // Viewport loading setup failed - continue without it\n    }\n  }\n\n  /**\n   * Prefetch critical resources for offline use\n   */\n  async prefetchCriticalResources() {\n    return safeAsync(\n      async () => {\n        const criticalResources = [\n          '/0925/src/logic/lvo-local-model.js',\n          '/0925/src/logic/ich-volume-calculator.js',\n          '/0925/src/patterns/prediction-strategy.js',\n          '/0925/src/performance/medical-cache.js',\n        ];\n\n        await medicalSWManager.prefetchResources(criticalResources);\n        return true;\n      },\n      (error) => {\n        // Prefetch failure is non-critical\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.NETWORK,\n        context: { operation: 'prefetch_critical_resources' }\n      }\n    );\n  }\n\n  /**\n   * Initialize Phase 4 Selected Features\n   */\n  async initializePhase4Features() {\n    return safeAsync(\n      async () => {\n        // Initialize clinical audit trail first (for compliance)\n        await this.initializeAuditTrail();\n\n        // Start clinical reporting system\n        await this.initializeReportingSystem();\n\n        // Initialize quality metrics tracking\n        await this.initializeQualityMetrics();\n\n        // Setup integration event handlers\n        this.setupPhase4EventHandlers();\n\n        return true;\n      },\n      (error) => {\n        // Phase 4 failure is non-critical\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: 'initialize_phase4_features' }\n      }\n    );\n  }\n\n  /**\n   * Initialize audit trail\n   */\n  async initializeAuditTrail() {\n    return safeAsync(\n      async () => {\n        await clinicalAuditTrail.initialize();\n        this.phase4Status.auditTrail = true;\n        return true;\n      },\n      (error) => {\n        this.phase4Status.auditTrail = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.MEDICAL,\n        context: { operation: 'initialize_audit_trail' }\n      }\n    );\n  }\n\n  /**\n   * Initialize reporting system\n   */\n  async initializeReportingSystem() {\n    return safeAsync(\n      async () => {\n        clinicalReportingSystem.start();\n        this.phase4Status.reportingSystem = true;\n        return true;\n      },\n      (error) => {\n        this.phase4Status.reportingSystem = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.MEDICAL,\n        context: { operation: 'initialize_reporting_system' }\n      }\n    );\n  }\n\n  /**\n   * Initialize quality metrics\n   */\n  async initializeQualityMetrics() {\n    return safeAsync(\n      async () => {\n        await qualityMetricsTracker.initialize();\n        this.phase4Status.qualityMetrics = true;\n        return true;\n      },\n      (error) => {\n        this.phase4Status.qualityMetrics = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.MEDICAL,\n        context: { operation: 'initialize_quality_metrics' }\n      }\n    );\n  }\n\n  /**\n   * Setup Phase 4 event handlers\n   */\n  setupPhase4EventHandlers() {\n    // Listen for form submissions to trigger quality metrics and audit logging\n    document.addEventListener('submit', async (event) => {\n      const form = event.target;\n      if (form.dataset.module) {\n        await safeAsync(\n          async () => {\n            const formData = new FormData(form);\n            const patientData = Object.fromEntries(formData.entries());\n\n            // Log audit trail\n            if (this.phase4Status.auditTrail) {\n              clinicalAuditTrail.logEvent('data_entry', {\n                module: form.dataset.module,\n                timestamp: new Date().toISOString(),\n                data_points: Object.keys(patientData).length\n              });\n            }\n\n            // Record quality metrics\n            if (this.phase4Status.qualityMetrics) {\n              qualityMetricsTracker.recordMetric('form_completion', 'count', 1);\n              qualityMetricsTracker.recordMetric('data_quality', 'completeness',\n                Object.values(patientData).filter(v => v && v.trim()).length / Object.keys(patientData).length * 100\n              );\n            }\n\n            return true;\n          },\n          (error) => {\n            // Phase 4 event handling failed - continue silently\n            return false;\n          },\n          {\n            category: ERROR_CATEGORIES.MEDICAL,\n            context: { operation: 'phase4_event_handling' }\n          }\n        );\n      }\n    });\n  }\n\n  /**\n   * Get comprehensive status of all advanced features\n   */\n  getStatus() {\n    return {\n      isInitialized: this.isInitialized,\n      phase3: {\n        ...this.phase3Status,\n        overall: Object.values(this.phase3Status).some(status => status)\n      },\n      phase4: {\n        ...this.phase4Status,\n        overall: Object.values(this.phase4Status).some(status => status)\n      },\n      systemStatus: this.getSystemStatus()\n    };\n  }\n\n  /**\n   * Get detailed system status\n   */\n  getSystemStatus() {\n    return {\n      serviceWorkerSupported: 'serviceWorker' in navigator,\n      indexedDBSupported: 'indexedDB' in window,\n      notificationSupported: 'Notification' in window,\n      cacheSupported: 'caches' in window,\n      webLockSupported: 'locks' in navigator,\n      performanceSupported: 'performance' in window\n    };\n  }\n\n  /**\n   * Restart advanced features\n   */\n  async restart() {\n    this.destroy();\n    return this.initialize();\n  }\n\n  /**\n   * Cleanup when destroyed\n   */\n  destroy() {\n    // Cleanup Phase 3 features\n    if (this.phase3Status.performanceMonitor) {\n      try {\n        medicalPerformanceMonitor.stop?.();\n      } catch (error) {\n        // Cleanup error - continue\n      }\n    }\n\n    if (this.phase3Status.syncManager) {\n      try {\n        medicalSyncManager.destroy?.();\n      } catch (error) {\n        // Cleanup error - continue\n      }\n    }\n\n    // Cleanup Phase 4 features\n    if (this.phase4Status.reportingSystem) {\n      try {\n        clinicalReportingSystem.stop?.();\n      } catch (error) {\n        // Cleanup error - continue\n      }\n    }\n\n    // Reset status\n    this.phase3Status = {\n      serviceWorker: false,\n      performanceMonitor: false,\n      syncManager: false,\n      lazyLoader: false\n    };\n\n    this.phase4Status = {\n      reportingSystem: false,\n      qualityMetrics: false,\n      auditTrail: false\n    };\n\n    this.isInitialized = false;\n  }\n}","/**\n * Main Application Controller\n * iGFAP Stroke Triage Assistant - Modular Architecture\n *\n * Handles core application lifecycle and coordination\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { store } from '../state/store.js';\nimport { render } from '../ui/render.js';\nimport { authManager } from '../auth/authentication.js';\nimport { warmUpFunctions } from '../api/client.js';\nimport { safeAsync, ERROR_CATEGORIES, ERROR_SEVERITY } from '../utils/error-handler.js';\nimport { medicalLogger, LOG_CATEGORIES } from '../utils/medical-logger.js';\n\nimport { UIManager } from './ui-manager.js';\nimport { ThemeManager } from './theme-manager.js';\nimport { SessionManager } from './session-manager.js';\nimport { AdvancedFeaturesManager } from './advanced-features-manager.js';\n\n/**\n * Main application controller - coordinates all subsystems\n */\nexport class AppController {\n  constructor() {\n    this.container = null;\n    this.unsubscribe = null;\n    this.isInitialized = false;\n\n    // Initialize managers\n    this.uiManager = new UIManager();\n    this.themeManager = new ThemeManager();\n    this.sessionManager = new SessionManager();\n    this.advancedFeaturesManager = new AdvancedFeaturesManager();\n  }\n\n  /**\n   * Initialize the application\n   * @returns {Promise<boolean>} - Initialization success\n   */\n  async init() {\n    return safeAsync(\n      async () => {\n        medicalLogger.info('Application initialization started', {\n          category: LOG_CATEGORIES.SYSTEM,\n          version: '2.1.0',\n          userAgent: navigator.userAgent.substring(0, 100)\n        });\n\n        // Wait for DOM to be ready\n        if (document.readyState === 'loading') {\n          medicalLogger.debug('Waiting for DOM ready', { category: LOG_CATEGORIES.SYSTEM });\n          return new Promise((resolve) => {\n            document.addEventListener('DOMContentLoaded', () => resolve(this.init()));\n          });\n        }\n\n        // Find app container\n        this.container = document.getElementById('appContainer');\n        if (!this.container) {\n          medicalLogger.critical('App container not found', {\n            category: LOG_CATEGORIES.SYSTEM,\n            containerId: 'appContainer'\n          });\n          throw new Error('Critical initialization failure: App container not found');\n        }\n\n        medicalLogger.debug('App container found', { category: LOG_CATEGORIES.SYSTEM });\n\n        // Check authentication before proceeding\n        if (!authManager.isValidSession()) {\n          medicalLogger.info('No valid session, redirecting to login', {\n            category: LOG_CATEGORIES.AUTHENTICATION\n          });\n          store.navigate('login');\n        }\n\n        // Initialize core systems\n        medicalLogger.info('Initializing core features', { category: LOG_CATEGORIES.SYSTEM });\n        await this.initializeCoreFeatures();\n\n        // Advanced features disabled to prevent sync manager errors\n        medicalLogger.info('Skipping advanced features initialization', {\n          category: LOG_CATEGORIES.SYSTEM\n        });\n        // this.initializeAdvancedFeatures();\n\n        // Setup rendering system FIRST so navigation works\n        this.setupRenderingSystem();\n\n        // Initialize UI components\n        medicalLogger.debug('Initializing UI manager', { category: LOG_CATEGORIES.SYSTEM });\n        this.uiManager.initialize(this.container);\n\n        // Initialize theme system\n        medicalLogger.debug('Initializing theme manager', { category: LOG_CATEGORIES.SYSTEM });\n        this.themeManager.initialize();\n\n        // Setup session management\n        medicalLogger.debug('Initializing session manager', { category: LOG_CATEGORIES.SYSTEM });\n        this.sessionManager.initialize();\n\n        // Warm up Cloud Functions in background (dev only)\n        if (import.meta && import.meta.env && import.meta.env.DEV) {\n          medicalLogger.info('Starting Cloud Functions warm-up (dev only)', {\n            category: LOG_CATEGORIES.NETWORK\n          });\n          warmUpFunctions();\n        }\n\n        // Initial render (store subscription is now active)\n        render(this.container);\n\n        this.isInitialized = true;\n        medicalLogger.info('Application initialization completed successfully', {\n          category: LOG_CATEGORIES.SYSTEM,\n          initializationTime: performance.now()\n        });\n\n        return true;\n      },\n      (error) => {\n        medicalLogger.critical('Application initialization failed', {\n          category: LOG_CATEGORIES.SYSTEM,\n          error: error.message,\n          stack: error.stack\n        });\n        throw new Error(`App initialization failed: ${error.message}`);\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        severity: ERROR_SEVERITY.CRITICAL,\n        timeout: 30000,\n        context: {\n          operation: 'app_initialization'\n        }\n      }\n    );\n  }\n\n  /**\n   * Initialize core application features\n   */\n  async initializeCoreFeatures() {\n    return safeAsync(\n      async () => {\n        // Core features that must be available immediately\n        const coreInitTasks = [\n          this.uiManager.preloadCriticalComponents(),\n          this.themeManager.loadSavedTheme(),\n          this.sessionManager.validateStoredSession()\n        ];\n\n        const results = await Promise.allSettled(coreInitTasks);\n\n        // Check if any critical feature failed\n        const failures = results.filter(result => result.status === 'rejected');\n        if (failures.length > 0) {\n          throw new Error(`${failures.length} core features failed to initialize`);\n        }\n\n        return true;\n      },\n      (error) => {\n        // Continue with degraded functionality on core feature failure\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        severity: ERROR_SEVERITY.HIGH,\n        context: {\n          operation: 'core_features_init'\n        }\n      }\n    );\n  }\n\n  /**\n   * Initialize advanced features (non-blocking)\n   */\n  async initializeAdvancedFeatures() {\n    // Run in background without blocking main app\n    safeAsync(\n      async () => {\n        await this.advancedFeaturesManager.initialize();\n        return true;\n      },\n      (error) => {\n        // Advanced features failure doesn't block core functionality\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        severity: ERROR_SEVERITY.MEDIUM,\n        context: {\n          operation: 'advanced_features_init'\n        }\n      }\n    );\n  }\n\n  /**\n   * Setup the rendering system\n   */\n  setupRenderingSystem() {\n    // Subscribe to store changes\n    this.unsubscribe = store.subscribe(() => {\n      render(this.container);\n      // Update research button visibility after each render\n      setTimeout(() => this.uiManager.updateResearchMode(), 200);\n    });\n\n    // Subscribe to language changes\n    window.addEventListener('languageChanged', () => {\n      this.uiManager.updateLanguage();\n      render(this.container);\n    });\n  }\n\n  /**\n   * Get application status\n   * @returns {Object} - Application status information\n   */\n  getStatus() {\n    return {\n      isInitialized: this.isInitialized,\n      hasContainer: !!this.container,\n      isAuthenticated: authManager.isValidSession(),\n      ui: this.uiManager.getStatus(),\n      theme: this.themeManager.getStatus(),\n      session: this.sessionManager.getStatus(),\n      advancedFeatures: this.advancedFeaturesManager.getStatus()\n    };\n  }\n\n  /**\n   * Cleanup when app is destroyed\n   */\n  destroy() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n\n    this.uiManager.destroy();\n    this.themeManager.destroy();\n    this.sessionManager.destroy();\n    this.advancedFeaturesManager.destroy();\n\n    this.isInitialized = false;\n  }\n}\n\n/**\n * Create and initialize the main application\n */\nexport async function createApp() {\n  const app = new AppController();\n\n  try {\n    await app.init();\n    return app;\n  } catch (error) {\n    throw new Error(`Failed to create application: ${error.message}`);\n  }\n}\n","/**\n * Main Application Entry Point - Clean Modular Architecture\n * iGFAP Stroke Triage Assistant - Production Ready\n *\n * Uses the new modular app-controller.js system for better maintainability\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { createApp } from './core/app-controller.js';\nimport { store } from './state/store.js';\nimport { render } from './ui/render.js';\nimport { safeAsync, ERROR_CATEGORIES, ERROR_SEVERITY } from './utils/error-handler.js';\n\n/**\n * Application instance\n */\nlet app = null;\n\n/**\n * Initialize the iGFAP Stroke Triage Assistant\n */\nasync function initializeApplication() {\n  return safeAsync(\n    async () => {\n      // Create and initialize the main application\n      app = await createApp();\n\n      // Log successful initialization\n      const status = app.getStatus();\n      const startupEvent = new CustomEvent('appInitialized', {\n        detail: {\n          timestamp: new Date().toISOString(),\n          status,\n          version: '2.1.0',\n          build: 'production'\n        }\n      });\n      document.dispatchEvent(startupEvent);\n\n      return app;\n    },\n    (error) => {\n      // Critical initialization failure\n      handleInitializationFailure(error);\n      throw error;\n    },\n    {\n      category: ERROR_CATEGORIES.RENDERING,\n      severity: ERROR_SEVERITY.CRITICAL,\n      timeout: 30000,\n      context: {\n        operation: 'application_initialization',\n        version: '2.1.0'\n      }\n    }\n  );\n}\n\n/**\n * Handle initialization failure gracefully\n * @param {Error} error - Initialization error\n */\nfunction handleInitializationFailure(error) {\n  // Create emergency fallback UI\n  const container = document.getElementById('appContainer');\n  if (container) {\n    container.innerHTML = `\n      <div style=\"\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        min-height: 50vh;\n        padding: 20px;\n        text-align: center;\n        font-family: system-ui, -apple-system, sans-serif;\n      \">\n        <div style=\"\n          background: #fff3cd;\n          border: 1px solid #ffeaa7;\n          border-radius: 8px;\n          padding: 24px;\n          max-width: 500px;\n          box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n        \">\n          <h2 style=\"color: #856404; margin: 0 0 16px 0;\">\n            ⚠️ Application Initialization Failed\n          </h2>\n          <p style=\"color: #856404; margin: 0 0 16px 0; line-height: 1.5;\">\n            The medical triage system could not start properly.\n            This may be due to a network issue or browser compatibility problem.\n          </p>\n          <button\n            onclick=\"window.location.reload()\"\n            style=\"\n              background: #007bff;\n              color: white;\n              border: none;\n              padding: 12px 24px;\n              border-radius: 6px;\n              font-size: 16px;\n              cursor: pointer;\n              margin-right: 12px;\n            \"\n          >\n            🔄 Reload Application\n          </button>\n          <button\n            onclick=\"window.open('mailto:bosdeepak@gmail.com?subject=iGFAP App Error', '_blank')\"\n            style=\"\n              background: #6c757d;\n              color: white;\n              border: none;\n              padding: 12px 24px;\n              border-radius: 6px;\n              font-size: 16px;\n              cursor: pointer;\n            \"\n          >\n            📧 Report Issue\n          </button>\n        </div>\n        <small style=\"color: #6c757d; margin-top: 20px;\">\n          Error: ${error.message || 'Unknown initialization error'}\n        </small>\n      </div>\n    `;\n  }\n\n  // Log error for debugging\n  const errorEvent = new CustomEvent('appInitializationFailed', {\n    detail: {\n      error: error.message,\n      timestamp: new Date().toISOString(),\n      userAgent: navigator.userAgent.substring(0, 100)\n    }\n  });\n  document.dispatchEvent(errorEvent);\n}\n\n/**\n * Cleanup on page unload\n */\nfunction handlePageUnload() {\n  if (app) {\n    try {\n      app.destroy();\n    } catch (error) {\n      // Cleanup error - continue with unload\n    }\n  }\n}\n\n/**\n * Setup global error handlers\n */\nfunction setupGlobalErrorHandlers() {\n  // Handle page visibility changes (mobile apps, tab switching)\n  document.addEventListener('visibilitychange', () => {\n    if (app && document.visibilityState === 'visible') {\n      // App became visible - validate session\n      const status = app.getStatus();\n      if (!status.isAuthenticated) {\n        window.location.reload();\n      }\n    }\n  });\n\n  // Handle page unload\n  window.addEventListener('beforeunload', handlePageUnload);\n  window.addEventListener('unload', handlePageUnload);\n}\n\n/**\n * Main application startup\n */\nasync function main() {\n  try {\n    // In local preview, make sure no service worker is controlling (avoids stale assets)\n    try {\n      const isLocalPreview = ['localhost','127.0.0.1','0.0.0.0'].includes(window.location.hostname) && !(import.meta && import.meta.env && import.meta.env.DEV);\n      if (isLocalPreview && 'serviceWorker' in navigator) {\n        const regs = await navigator.serviceWorker.getRegistrations();\n        for (const reg of regs) {\n          try { await reg.unregister(); } catch {}\n        }\n        // Also clear any pending beforeinstallprompt side-effects\n        window.addEventListener('beforeinstallprompt', (e) => { e.preventDefault(); });\n      }\n    } catch {}\n\n    // Setup global error handling\n    setupGlobalErrorHandlers();\n\n    // Initialize the application\n    await initializeApplication();\n\n    // Application started successfully\n    const event = new CustomEvent('appReady', {\n      detail: {\n        timestamp: new Date().toISOString(),\n        version: '2.1.0'\n      }\n    });\n    document.dispatchEvent(event);\n\n  } catch (error) {\n    // Main initialization failed - already handled by handleInitializationFailure\n  }\n}\n\n/**\n * Start the application when DOM is ready\n */\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', main);\n} else {\n  main();\n}\n\n/**\n * Export for debugging and testing\n */\nif (typeof window !== 'undefined') {\n  window.iGFAPApp = {\n    getApp: () => app,\n    getStatus: () => app?.getStatus() || { error: 'App not initialized' },\n    restart: async () => {\n      if (app) {\n        app.destroy();\n      }\n      return initializeApplication();\n    },\n    // Debug helpers\n    getCurrentScreen: () => {\n      try { return store.getState().currentScreen; } catch { return 'unknown'; }\n    },\n    forceResults: () => {\n      try {\n        store.navigate('results');\n        const container = document.getElementById('appContainer');\n        if (container) render(container);\n        return true;\n      } catch { return false; }\n    }\n  };\n}\n\n/**\n * Export for module systems\n */\nexport { app, initializeApplication, handleInitializationFailure };\n","import React, { useEffect, useRef } from 'react';\n\nfunction getCSSVar(name) {\n  return getComputedStyle(document.documentElement).getPropertyValue(name).trim();\n}\n\nexport default function ProbabilityRing({ percent = 0, level = 'normal' }) {\n  const canvasRef = useRef(null);\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const container = canvas?.parentElement; // parent is .probability-circle\n    if (!container || !canvas) return;\n    \n    containerRef.current = container;\n\n    const draw = () => {\n      const dpr = window.devicePixelRatio || 1;\n      const size = container.offsetWidth || 120;\n      canvas.width = Math.max(1, Math.floor(size * dpr));\n      canvas.height = Math.max(1, Math.floor(size * dpr));\n      const ctx = canvas.getContext('2d');\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.scale(dpr, dpr);\n\n      const width = size;\n      const height = size;\n      const cx = width / 2;\n      const cy = height / 2;\n      const radius = (size / 2) - 8;\n      // Proportional stroke with better minimum readability\n      const progressWidth = Math.min(Math.max(radius * 0.12, 6), 12);\n      const trackWidth = Math.max(progressWidth - 2, 6);\n      // Pixel snapping for crisp lines\n      const adjustedRadius = progressWidth % 2 === 1 ? radius - 0.5 : radius;\n\n      ctx.clearRect(0, 0, width, height);\n\n      // Track - better contrast and alignment with theme tokens\n      const isDark = document.body.classList.contains('dark-mode');\n      const borderColor = getCSSVar('--border-color') || (isDark ? '#2f3336' : '#dee2e6');\n      ctx.save();\n      ctx.globalAlpha = isDark ? 0.36 : 0.65;\n      ctx.strokeStyle = borderColor;\n      ctx.lineWidth = trackWidth;\n      ctx.lineCap = 'round';\n      ctx.beginPath();\n      ctx.arc(cx, cy, adjustedRadius, 0, Math.PI * 2);\n      ctx.stroke();\n      ctx.restore();\n\n      // Progress color - enhanced saturation in dark mode\n      let stroke = getCSSVar('--primary-color');\n      if (level === 'high') stroke = getCSSVar('--warning-color') || '#ff9800';\n      if (level === 'critical') stroke = getCSSVar('--danger-color') || '#DC143C';\n      \n      // Boost saturation slightly in dark mode\n      if (isDark) {\n        if (stroke.includes('#')) {\n          // Simple saturation boost for hex colors\n          if (level === 'high') stroke = '#ffaa00';\n          if (level === 'critical') stroke = '#ff1744';\n        }\n      }\n\n      // Progress arc\n      const startAngle = -Math.PI / 2;\n      const endAngle = startAngle + (Math.PI * 2) * (Math.max(0, Math.min(100, percent)) / 100);\n\n      // Subtle depth shadow behind progress - slightly stronger in dark mode\n      ctx.save();\n      ctx.strokeStyle = isDark ? 'rgba(0,0,0,0.3)' : 'rgba(0,0,0,0.15)';\n      ctx.lineWidth = progressWidth + 1.5;\n      ctx.beginPath();\n      ctx.arc(cx, cy, adjustedRadius, startAngle, endAngle, false);\n      ctx.stroke();\n      ctx.restore();\n\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = progressWidth;\n      ctx.beginPath();\n      ctx.arc(cx, cy, adjustedRadius, startAngle, endAngle, false);\n      ctx.stroke();\n    };\n\n    // Defer first draw to ensure CSS sizing has applied\n    const rafId = requestAnimationFrame(draw);\n\n    const ro = new ResizeObserver(() => requestAnimationFrame(draw));\n    ro.observe(container);\n    return () => {\n      cancelAnimationFrame(rafId);\n      ro.disconnect();\n    };\n  }, [percent, level]);\n\n  return (\n    <>\n      <div className=\"probability-number\">\n        {Math.round(percent)}<span>%</span>\n      </div>\n      <canvas ref={canvasRef} className=\"probability-canvas\" />\n    </>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\n\nexport default function TachometerGauge({ lvoProb = 0, ichProb = 0, title = 'Decision Support – LVO/ICH' }) {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n\n    let raf = null;\n    let currentPos = 0.5;\n    \n    // Robust ratio with epsilon to avoid division spikes\n    const eps = 0.5; // percent points\n    const safeIch = Math.max(ichProb, eps);\n    const rawRatio = lvoProb / safeIch;\n    // Clamp to display bounds\n    const rmin = 0.5, rmax = 2.0;\n    const clampedRatio = Math.max(rmin, Math.min(rmax, rawRatio));\n    // Log-centered mapping around 1.0 so equal risks map to center\n    const targetPos = (Math.log2(clampedRatio) + 1) / 2; // 0 at 0.5, 0.5 at 1.0, 1 at 2.0\n    const absDiff = Math.abs(lvoProb - ichProb);\n    const maxProb = Math.max(lvoProb, ichProb);\n    let confidence = absDiff < 10 ? Math.round(30 + maxProb * 0.3) : absDiff < 20 ? Math.round(50 + maxProb * 0.4) : Math.round(70 + maxProb * 0.3);\n    confidence = Math.max(0, Math.min(100, confidence));\n\n    const draw = () => {\n      const dpr = window.devicePixelRatio || 1;\n      const rect = canvas.getBoundingClientRect();\n      const cssW = rect.width || 300;\n      const cssH = rect.height || 200;\n      canvas.width = Math.max(1, Math.floor(cssW * dpr));\n      canvas.height = Math.max(1, Math.floor(cssH * dpr));\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.scale(dpr, dpr);\n\n      const width = cssW;\n      const height = cssH;\n      const isMobile = width < 480;\n      const isTablet = width >= 480 && width < 1024;\n      \n      // Refined thin proportions\n      const baseWidth = isMobile ? 12 : isTablet ? 14 : 16;\n      const padding = 15;\n      const maxRHorizontal = (width / 2) - padding - baseWidth / 2;\n      const maxRVerticalBase = (height / 2) - padding - baseWidth / 2;\n      const maxRVertical = isTablet ? Math.min(maxRVerticalBase, height * 0.42) : maxRVerticalBase;\n      const radius = Math.max(10, Math.min(maxRHorizontal, maxRVertical));\n      const cx = width / 2;\n      const cy = height - (padding + baseWidth / 2 + radius);\n\n      ctx.clearRect(0, 0, width, height);\n\n      const isDark = document.body.classList.contains('dark-mode');\n      \n      // Premium automotive color schemes\n      const colors = {\n        day: {\n          bezel: '#e8eaed',\n          bezelShadow: '#c1c7cd',\n          track: '#f5f7fa',\n          ich: '#8b1538', // Deep burgundy - clinical authority\n          lvo: '#1e3a5f', // Steel blue - precision\n          neutral: '#6b7280', // Surgical steel\n          needle: '#d4af37', // Luxury gold\n          text: '#374151',\n          tickMajor: '#4b5563',\n          tickMinor: '#9ca3af'\n        },\n        night: {\n          bezel: '#2d3036',\n          bezelShadow: '#1a1d23',\n          track: '#383c42',\n          ich: '#dc2626', // Bright clinical red for night visibility\n          lvo: '#3b82f6', // Bright blue for night visibility\n          neutral: '#64748b', // Muted steel\n          needle: '#fbbf24', // Amber - automotive night standard\n          text: '#f3f4f6',\n          tickMajor: '#d1d5db',\n          tickMinor: '#6b7280'\n        }\n      };\n      \n      const theme = isDark ? colors.night : colors.day;\n\n      // Outer bezel - thin brushed aluminum effect\n      const bezelGradient = ctx.createLinearGradient(cx - radius, cy - radius, cx + radius, cy + radius);\n      bezelGradient.addColorStop(0, theme.bezel);\n      bezelGradient.addColorStop(0.3, theme.bezelShadow);\n      bezelGradient.addColorStop(0.7, theme.bezel);\n      bezelGradient.addColorStop(1, theme.bezelShadow);\n      \n      ctx.strokeStyle = bezelGradient;\n      ctx.lineWidth = baseWidth + 4; // Thinner bezel\n      ctx.lineCap = 'round';\n      ctx.beginPath();\n      ctx.arc(cx, cy, radius + 2, 0, Math.PI, false);\n      ctx.stroke();\n\n      // Inner track - thin premium matte finish\n      ctx.strokeStyle = theme.track;\n      ctx.lineWidth = baseWidth;\n      ctx.beginPath();\n      ctx.arc(cx, cy, radius, 0, Math.PI, false);\n      ctx.stroke();\n\n      // Smooth gradient transition: blue (LVO right) → yellow → red (ICH left)\n      const segments = 60; // Fine granularity for smooth transition\n      const angleStep = Math.PI / segments;\n      \n      for (let i = 0; i < segments; i++) {\n        const progress = i / (segments - 1); // 0 to 1 from right (LVO) to left (ICH)\n        const startAngle = i * angleStep;\n        const endAngle = Math.min((i + 1) * angleStep, Math.PI);\n        \n        // Smooth color interpolation: blue (right) → yellow → red (left)\n        let r, g, b;\n        if (progress <= 0.5) {\n          // Blue to yellow (first half - right side)\n          const t = progress * 2; // 0 to 1\n          r = Math.round(0 + 242 * t);    // Increase red: 0 → 242\n          g = Math.round(154 + 66 * t);   // Increase green: 154 → 220\n          b = Math.round(255 * (1 - t));  // Decrease blue: 255 → 0\n        } else {\n          // Yellow to red (second half - left side)\n          const t = (progress - 0.5) * 2; // 0 to 1\n          r = Math.round(242 + 13 * t);   // Increase red slightly: 242 → 255\n          g = Math.round(220 * (1 - t));  // Decrease green: 220 → 0\n          b = Math.round(0);              // No blue\n        }\n        \n        const color = `rgba(${r}, ${g}, ${b}, 0.85)`;\n        \n        ctx.strokeStyle = color;\n        ctx.lineWidth = baseWidth - 4; // Thinner zones\n        ctx.beginPath();\n        ctx.arc(cx, cy, radius, startAngle, endAngle, false);\n        ctx.stroke();\n      }\n\n      // Precision tick system - automotive style\n      const majorTicks = [0.5, 0.75, 1.0, 1.5, 2.0];\n      const minorTicks = isMobile ? [] : [0.6, 0.9, 1.2, 1.8]; // Only on larger screens\n      \n      // Major ticks\n      majorTicks.forEach(val => {\n        const pos = (Math.log2(val) + 1) / 2;\n        const a = Math.PI - pos * Math.PI;\n        const inner = radius - 12;\n        const outer = radius - 24;\n        \n        ctx.strokeStyle = theme.tickMajor;\n        ctx.lineWidth = 1.5; // Thinner major ticks\n        ctx.lineCap = 'round';\n        ctx.beginPath();\n        ctx.moveTo(cx + Math.cos(a) * inner, cy + Math.sin(a) * inner);\n        ctx.lineTo(cx + Math.cos(a) * outer, cy + Math.sin(a) * outer);\n        ctx.stroke();\n        \n        // Premium typography\n        ctx.fillStyle = theme.text;\n        const tickFont = isMobile ? 13 : 15;\n        ctx.font = `600 ${tickFont}px \"SF Pro Display\", system-ui, sans-serif`;\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText(val.toFixed(1), cx + Math.cos(a) * (radius - 35), cy + Math.sin(a) * (radius - 35));\n      });\n      \n      // Minor ticks\n      minorTicks.forEach(val => {\n        const pos = (Math.log2(val) + 1) / 2;\n        const a = Math.PI - pos * Math.PI;\n        const inner = radius - 8;\n        const outer = radius - 16;\n        \n        ctx.strokeStyle = theme.tickMinor;\n        ctx.lineWidth = 0.8; // Thinner minor ticks\n        ctx.lineCap = 'round';\n        ctx.beginPath();\n        ctx.moveTo(cx + Math.cos(a) * inner, cy + Math.sin(a) * inner);\n        ctx.lineTo(cx + Math.cos(a) * outer, cy + Math.sin(a) * outer);\n        ctx.stroke();\n      });\n\n      // Clinical threshold markers - subtle but precise\n      const thresholds = [\n        { val: 0.77, label: 'ICH', side: 'left' },\n        { val: 1.30, label: 'LVO', side: 'right' }\n      ];\n      \n      thresholds.forEach(th => {\n        const pos = (Math.log2(th.val) + 1) / 2;\n        const a = Math.PI - pos * Math.PI;\n        const inner = radius - 2;\n        const outer = radius + 12;\n        \n        // Precise threshold line\n        ctx.strokeStyle = th.side === 'left' ? theme.ich : theme.lvo;\n        ctx.lineWidth = 2;\n        ctx.setLineDash([3, 2]);\n        ctx.beginPath();\n        ctx.moveTo(cx + Math.cos(a) * inner, cy + Math.sin(a) * inner);\n        ctx.lineTo(cx + Math.cos(a) * outer, cy + Math.sin(a) * outer);\n        ctx.stroke();\n        ctx.setLineDash([]);\n      });\n\n      // Premium zone labels - clinical typography\n      const labelFont = isMobile ? 15 : 17;\n      const labelDistance = isMobile ? radius + 35 : radius + 42;\n      \n      // ICH label - pure red\n      ctx.fillStyle = isDark ? '#ff4444' : '#ff0000';\n      ctx.font = `700 ${labelFont}px \"SF Pro Display\", system-ui, sans-serif`;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      if (isDark) {\n        ctx.shadowColor = 'rgba(0,0,0,0.8)';\n        ctx.shadowBlur = 3;\n        ctx.shadowOffsetY = 1;\n      }\n      ctx.fillText('ICH', cx + Math.cos(Math.PI) * labelDistance, cy + Math.sin(Math.PI) * labelDistance - 10);\n      \n      // LVO label - pure blue\n      ctx.fillStyle = isDark ? '#4499ff' : '#0099ff';\n      ctx.fillText('LVO', cx + Math.cos(0) * labelDistance, cy + Math.sin(0) * labelDistance - 10);\n      ctx.shadowBlur = 0;\n      ctx.shadowOffsetY = 0;\n\n      // Premium needle with automotive precision\n      currentPos += (targetPos - currentPos) * 0.12; // Slightly faster, more responsive\n      const needleAngle = Math.PI - currentPos * Math.PI;\n      const needleLen = Math.max(0, radius - baseWidth / 2 - 6);\n\n      // Confidence indicator - subtle surgical precision\n      const coneSpan = (1 - confidence / 100) * (Math.PI * 0.05);\n      ctx.save();\n      ctx.globalAlpha = isDark ? 0.2 : 0.25;\n      ctx.fillStyle = theme.neutral;\n      ctx.beginPath();\n      ctx.moveTo(cx, cy);\n      ctx.arc(cx, cy, needleLen * 0.85, needleAngle - coneSpan, needleAngle + coneSpan, false);\n      ctx.closePath();\n      ctx.fill();\n      ctx.restore();\n\n      // Premium needle - automotive grade\n      const needleColor = theme.needle;\n      const now = performance.now();\n      \n      // Needle shaft with taper\n      const gradient = ctx.createLinearGradient(\n        cx, cy,\n        cx + Math.cos(needleAngle) * needleLen,\n        cy + Math.sin(needleAngle) * needleLen\n      );\n      gradient.addColorStop(0, needleColor + 'ff');\n      gradient.addColorStop(0.7, needleColor + 'dd');\n      gradient.addColorStop(1, needleColor + 'bb');\n      \n      ctx.strokeStyle = gradient;\n      ctx.lineWidth = 2.5; // Thinner needle\n      ctx.lineCap = 'round';\n      ctx.shadowColor = isDark ? 'rgba(0,0,0,0.8)' : 'rgba(0,0,0,0.3)';\n      ctx.shadowBlur = 4;\n      ctx.shadowOffsetY = 2;\n      ctx.beginPath();\n      ctx.moveTo(cx, cy);\n      ctx.lineTo(cx + Math.cos(needleAngle) * needleLen, cy + Math.sin(needleAngle) * needleLen);\n      ctx.stroke();\n      ctx.shadowBlur = 0;\n      ctx.shadowOffsetY = 0;\n\n      // Enhanced pulsing needle tip\n      const tx = cx + Math.cos(needleAngle) * needleLen;\n      const ty = cy + Math.sin(needleAngle) * needleLen;\n      const pulse = 0.6 + 0.4 * Math.sin(now * 0.006); // Slower, more elegant pulse\n      const tipRadius = 3 + pulse * 2; // Smaller base tip\n      \n      // Outer pulsing halo\n      ctx.save();\n      ctx.globalAlpha = 0.15 + pulse * 0.25;\n      ctx.fillStyle = needleColor;\n      ctx.beginPath();\n      ctx.arc(tx, ty, tipRadius * 3.5, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.restore();\n      \n      // Mid pulsing glow\n      ctx.save();\n      ctx.globalAlpha = 0.4 + pulse * 0.3;\n      ctx.fillStyle = needleColor;\n      ctx.beginPath();\n      ctx.arc(tx, ty, tipRadius * 1.8, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.restore();\n      \n      // Solid tip core\n      ctx.fillStyle = needleColor;\n      ctx.shadowColor = needleColor;\n      ctx.shadowBlur = 4 + pulse * 6;\n      ctx.beginPath();\n      ctx.arc(tx, ty, tipRadius, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.shadowBlur = 0;\n\n      // Refined center hub - thinner automotive grade\n      const hubOuter = 14; // Smaller hub\n      const hubInner = 8;\n      \n      // Outer ring - brushed metal\n      const hubGradient = ctx.createRadialGradient(cx, cy, 0, cx, cy, hubOuter);\n      hubGradient.addColorStop(0, isDark ? '#4a5568' : '#718096');\n      hubGradient.addColorStop(0.7, isDark ? '#2d3748' : '#4a5568');\n      hubGradient.addColorStop(1, isDark ? '#1a202c' : '#2d3748');\n      \n      ctx.fillStyle = hubGradient;\n      ctx.beginPath();\n      ctx.arc(cx, cy, hubOuter, 0, Math.PI * 2);\n      ctx.fill();\n      \n      // Inner hub - precision center\n      const innerGradient = ctx.createRadialGradient(cx, cy, 0, cx, cy, hubInner);\n      innerGradient.addColorStop(0, needleColor + 'aa');\n      innerGradient.addColorStop(1, needleColor + '44');\n      \n      ctx.fillStyle = innerGradient;\n      ctx.beginPath();\n      ctx.arc(cx, cy, hubInner, 0, Math.PI * 2);\n      ctx.fill();\n      \n      // Precision rim - thinner\n      ctx.strokeStyle = needleColor;\n      ctx.lineWidth = 1; // Thinner rim\n      ctx.beginPath();\n      ctx.arc(cx, cy, hubOuter - 1, 0, Math.PI * 2);\n      ctx.stroke();\n\n      // Premium ratio display - automotive HUD style\n      const ratioFont = isMobile ? 18 : 22;\n      const ratioY = cy - radius * 0.65;\n      \n      // Background plate for ratio\n      const plateWidth = isMobile ? 60 : 80;\n      const plateHeight = isMobile ? 24 : 30;\n      \n      ctx.save();\n      ctx.globalAlpha = isDark ? 0.9 : 0.95;\n      ctx.fillStyle = isDark ? '#1f2937' : '#ffffff';\n      ctx.shadowColor = isDark ? 'rgba(0,0,0,0.5)' : 'rgba(0,0,0,0.2)';\n      ctx.shadowBlur = 8;\n      ctx.shadowOffsetY = 2;\n      ctx.fillRect(cx - plateWidth/2, ratioY - plateHeight/2, plateWidth, plateHeight);\n      ctx.restore();\n      \n      // Ratio text\n      ctx.fillStyle = theme.text;\n      ctx.font = `700 ${ratioFont}px \"SF Mono\", ui-monospace, monospace`;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(clampedRatio.toFixed(2), cx, ratioY);\n\n      // Confidence indicator - subtle precision bar\n      if (!isMobile) {\n        const confY = cy + radius * 0.15;\n        const confWidth = 60;\n        const confHeight = 4;\n        \n        // Background\n        ctx.fillStyle = isDark ? '#374151' : '#e5e7eb';\n        ctx.fillRect(cx - confWidth/2, confY, confWidth, confHeight);\n        \n        // Confidence fill\n        const confFill = (confidence / 100) * confWidth;\n        const confGradient = ctx.createLinearGradient(cx - confWidth/2, confY, cx - confWidth/2 + confFill, confY);\n        confGradient.addColorStop(0, theme.neutral);\n        confGradient.addColorStop(1, theme.needle);\n        \n        ctx.fillStyle = confGradient;\n        ctx.fillRect(cx - confWidth/2, confY, confFill, confHeight);\n        \n        // Confidence label\n        ctx.fillStyle = theme.text;\n        ctx.font = `500 11px \"SF Pro Display\", system-ui, sans-serif`;\n        ctx.textAlign = 'center';\n        ctx.fillText(`${confidence}% confidence`, cx, confY + 18);\n      }\n\n      raf = requestAnimationFrame(draw);\n    };\n\n    draw();\n    return () => { if (raf) cancelAnimationFrame(raf); };\n  }, [lvoProb, ichProb]);\n\n  return (\n    <div className=\"gauge-wrapper\">\n      <canvas ref={canvasRef} className=\"gauge-canvas\" />\n    </div>\n  );\n}\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport ProbabilityRing from './ProbabilityRing';\nimport TachometerGauge from './TachometerGauge';\n\nexport function mountIslands() {\n  // Probability rings\n  document.querySelectorAll('[data-react-ring]').forEach((node) => {\n    if (node.__mounted) return;\n    const percent = parseFloat(node.getAttribute('data-percent')) || 0;\n    const level = node.getAttribute('data-level') || 'normal';\n    const root = createRoot(node);\n    root.render(<ProbabilityRing percent={percent} level={level} />);\n    node.__mounted = true;\n    node.__root = root;\n  });\n\n  // Tachometer\n  document.querySelectorAll('[data-react-tachometer]').forEach((node) => {\n    if (node.__mounted) return;\n    const ich = parseFloat(node.getAttribute('data-ich')) || 0;\n    const lvo = parseFloat(node.getAttribute('data-lvo')) || 0;\n    const title = node.getAttribute('data-title') || 'Decision Support – LVO/ICH';\n    const root = createRoot(node);\n    root.render(<TachometerGauge ichProb={ich} lvoProb={lvo} title={title} />);\n    node.__mounted = true;\n    node.__root = root;\n  });\n}\n\nexport function unmountIslands() {\n  document.querySelectorAll('[data-react-ring],[data-react-tachometer]').forEach((node) => {\n    if (node.__mounted && node.__root) {\n      node.__root.unmount();\n      node.__mounted = false;\n      node.__root = null;\n    }\n  });\n}\n","/**\n * Command Pattern for Medical Actions and Audit Trail\n * iGFAP Stroke Triage Assistant - Enterprise Architecture\n *\n * Provides reversible medical actions with comprehensive audit logging\n */\n\nimport { medicalEventObserver, MEDICAL_EVENTS } from './observer.js';\n\n/**\n * Abstract base command for medical actions\n */\nclass MedicalCommand {\n  constructor(name, description, metadata = {}) {\n    this.name = name;\n    this.description = description;\n    this.metadata = {\n      ...metadata,\n      id: `cmd_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      timestamp: new Date().toISOString(),\n    };\n    this.executed = false;\n    this.undone = false;\n  }\n\n  /**\n   * Execute the medical command\n   * @returns {Promise<any>} Command execution result\n   */\n  async execute() {\n    if (this.executed && !this.undone) {\n      throw new Error(`Command ${this.name} has already been executed`);\n    }\n\n    try {\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: 'command_execute_start',\n        command: this.name,\n        commandId: this.metadata.id,\n      });\n\n      const result = await this.doExecute();\n\n      this.executed = true;\n      this.undone = false;\n\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: 'command_execute_success',\n        command: this.name,\n        commandId: this.metadata.id,\n      });\n\n      return result;\n    } catch (error) {\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: 'command_execute_error',\n        command: this.name,\n        commandId: this.metadata.id,\n        error: error.message,\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Undo the medical command\n   * @returns {Promise<any>} Command undo result\n   */\n  async undo() {\n    if (!this.executed || this.undone) {\n      throw new Error(`Command ${this.name} cannot be undone`);\n    }\n\n    try {\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: 'command_undo_start',\n        command: this.name,\n        commandId: this.metadata.id,\n      });\n\n      const result = await this.doUndo();\n\n      this.undone = true;\n\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: 'command_undo_success',\n        command: this.name,\n        commandId: this.metadata.id,\n      });\n\n      return result;\n    } catch (error) {\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: 'command_undo_error',\n        command: this.name,\n        commandId: this.metadata.id,\n        error: error.message,\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Implement the actual command execution\n   * Must be overridden by concrete commands\n   */\n  async doExecute() {\n    throw new Error('doExecute() must be implemented by concrete command');\n  }\n\n  /**\n   * Implement the actual command undo\n   * Must be overridden by concrete commands\n   */\n  async doUndo() {\n    throw new Error('doUndo() must be implemented by concrete command');\n  }\n\n  /**\n   * Check if command can be undone\n   */\n  canUndo() {\n    return this.executed && !this.undone;\n  }\n\n  /**\n   * Get command summary for audit\n   */\n  getSummary() {\n    return {\n      name: this.name,\n      description: this.description,\n      id: this.metadata.id,\n      timestamp: this.metadata.timestamp,\n      executed: this.executed,\n      undone: this.undone,\n    };\n  }\n}\n\n/**\n * Command for updating patient data\n */\nclass UpdatePatientDataCommand extends MedicalCommand {\n  constructor(fieldName, newValue, previousValue, store) {\n    super(\n      'UPDATE_PATIENT_DATA',\n      `Update ${fieldName} from ${previousValue} to ${newValue}`,\n      { fieldName, newValue, previousValue },\n    );\n    this.fieldName = fieldName;\n    this.newValue = newValue;\n    this.previousValue = previousValue;\n    this.store = store;\n  }\n\n  async doExecute() {\n    // Update the patient data in store\n    const currentData = this.store.getFormData('current') || {};\n    currentData[this.fieldName] = this.newValue;\n    this.store.setFormData('current', currentData);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.PATIENT_DATA_UPDATED, {\n      field: this.fieldName,\n      newValue: this.newValue,\n      previousValue: this.previousValue,\n    });\n\n    return { field: this.fieldName, value: this.newValue };\n  }\n\n  async doUndo() {\n    // Restore the previous value\n    const currentData = this.store.getFormData('current') || {};\n    if (this.previousValue === null || this.previousValue === undefined) {\n      delete currentData[this.fieldName];\n    } else {\n      currentData[this.fieldName] = this.previousValue;\n    }\n    this.store.setFormData('current', currentData);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.PATIENT_DATA_UPDATED, {\n      field: this.fieldName,\n      newValue: this.previousValue,\n      previousValue: this.newValue,\n      action: 'undo',\n    });\n\n    return { field: this.fieldName, value: this.previousValue };\n  }\n}\n\n/**\n * Command for navigating between screens\n */\nclass NavigationCommand extends MedicalCommand {\n  constructor(targetScreen, sourceScreen, store) {\n    super(\n      'NAVIGATE',\n      `Navigate from ${sourceScreen} to ${targetScreen}`,\n      { targetScreen, sourceScreen },\n    );\n    this.targetScreen = targetScreen;\n    this.sourceScreen = sourceScreen;\n    this.store = store;\n  }\n\n  async doExecute() {\n    this.store.navigate(this.targetScreen);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.NAVIGATION_CHANGED, {\n      from: this.sourceScreen,\n      to: this.targetScreen,\n    });\n\n    return { from: this.sourceScreen, to: this.targetScreen };\n  }\n\n  async doUndo() {\n    this.store.navigate(this.sourceScreen);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.NAVIGATION_CHANGED, {\n      from: this.targetScreen,\n      to: this.sourceScreen,\n      action: 'undo',\n    });\n\n    return { from: this.targetScreen, to: this.sourceScreen };\n  }\n}\n\n/**\n * Command for form submission\n */\nclass SubmitFormCommand extends MedicalCommand {\n  constructor(formData, moduleType, predictionStrategy) {\n    super(\n      'SUBMIT_FORM',\n      `Submit ${moduleType} form for prediction`,\n      { moduleType, formFields: Object.keys(formData) },\n    );\n    this.formData = { ...formData };\n    this.moduleType = moduleType;\n    this.predictionStrategy = predictionStrategy;\n    this.results = null;\n  }\n\n  async doExecute() {\n    // Set the prediction strategy\n    this.predictionStrategy.setStrategy(this.getStrategyName());\n\n    // Execute prediction\n    this.results = await this.predictionStrategy.predict(this.formData);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.FORM_SUBMITTED, {\n      moduleType: this.moduleType,\n      fieldsCount: Object.keys(this.formData).length,\n      success: true,\n    });\n\n    return this.results;\n  }\n\n  async doUndo() {\n    // Clear the results (cannot truly undo API call, but can clear local state)\n    this.results = null;\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.FORM_SUBMITTED, {\n      moduleType: this.moduleType,\n      action: 'undo',\n    });\n\n    return null;\n  }\n\n  getStrategyName() {\n    switch (this.moduleType) {\n      case 'coma':\n        return 'COMA_ICH';\n      case 'limited':\n        return 'LIMITED_DATA_ICH';\n      case 'full':\n        return 'FULL_STROKE';\n      default:\n        throw new Error(`Unknown module type: ${this.moduleType}`);\n    }\n  }\n}\n\n/**\n * Command for clearing sensitive data\n */\nclass ClearDataCommand extends MedicalCommand {\n  constructor(dataType, store) {\n    super(\n      'CLEAR_DATA',\n      `Clear ${dataType} data for privacy compliance`,\n      { dataType },\n    );\n    this.dataType = dataType;\n    this.store = store;\n    this.backupData = null;\n  }\n\n  async doExecute() {\n    // Backup data before clearing\n    this.backupData = this.store.getState();\n\n    // Clear the specified data\n    switch (this.dataType) {\n      case 'all':\n        this.store.reset();\n        break;\n      case 'forms':\n        this.store.clearFormData();\n        break;\n      case 'results':\n        this.store.clearResults();\n        break;\n      default:\n        throw new Error(`Unknown data type: ${this.dataType}`);\n    }\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n      action: 'data_cleared',\n      dataType: this.dataType,\n    });\n\n    return { dataType: this.dataType, cleared: true };\n  }\n\n  async doUndo() {\n    // Restore from backup (if within reasonable time limit)\n    if (this.backupData) {\n      this.store.setState(this.backupData);\n\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: 'data_restored',\n        dataType: this.dataType,\n      });\n\n      return { dataType: this.dataType, restored: true };\n    }\n\n    throw new Error('Cannot undo data clear: backup not available');\n  }\n}\n\n/**\n * Command invoker for managing medical command execution\n */\nexport class MedicalCommandInvoker {\n  constructor() {\n    this.commandHistory = [];\n    this.currentIndex = -1;\n    this.maxHistorySize = 100;\n  }\n\n  /**\n   * Execute a medical command\n   * @param {MedicalCommand} command - Command to execute\n   * @returns {Promise<any>} Command result\n   */\n  async executeCommand(command) {\n    if (!(command instanceof MedicalCommand)) {\n      throw new Error('Command must extend MedicalCommand');\n    }\n\n    const result = await command.execute();\n\n    // Add to history (remove any commands after current index)\n    this.commandHistory = this.commandHistory.slice(0, this.currentIndex + 1);\n    this.commandHistory.push(command);\n    this.currentIndex = this.commandHistory.length - 1;\n\n    // Limit history size\n    if (this.commandHistory.length > this.maxHistorySize) {\n      this.commandHistory.shift();\n      this.currentIndex -= 1;\n    }\n\n    return result;\n  }\n\n  /**\n   * Undo the last command\n   * @returns {Promise<any>} Undo result\n   */\n  async undo() {\n    if (this.currentIndex < 0) {\n      throw new Error('No commands to undo');\n    }\n\n    const command = this.commandHistory[this.currentIndex];\n    if (!command.canUndo()) {\n      throw new Error(`Command ${command.name} cannot be undone`);\n    }\n\n    const result = await command.undo();\n    this.currentIndex -= 1;\n\n    return result;\n  }\n\n  /**\n   * Redo the next command\n   * @returns {Promise<any>} Redo result\n   */\n  async redo() {\n    if (this.currentIndex >= this.commandHistory.length - 1) {\n      throw new Error('No commands to redo');\n    }\n\n    this.currentIndex += 1;\n    const command = this.commandHistory[this.currentIndex];\n\n    return await command.execute();\n  }\n\n  /**\n   * Check if undo is possible\n   */\n  canUndo() {\n    return this.currentIndex >= 0\n           && this.commandHistory[this.currentIndex]\n           && this.commandHistory[this.currentIndex].canUndo();\n  }\n\n  /**\n   * Check if redo is possible\n   */\n  canRedo() {\n    return this.currentIndex < this.commandHistory.length - 1;\n  }\n\n  /**\n   * Get command history for audit\n   */\n  getCommandHistory() {\n    return this.commandHistory.map((cmd) => cmd.getSummary());\n  }\n\n  /**\n   * Clear command history (privacy compliance)\n   */\n  clearHistory() {\n    this.commandHistory = [];\n    this.currentIndex = -1;\n  }\n\n  /**\n   * Get current command statistics\n   */\n  getStats() {\n    return {\n      totalCommands: this.commandHistory.length,\n      currentIndex: this.currentIndex,\n      canUndo: this.canUndo(),\n      canRedo: this.canRedo(),\n      executedCommands: this.currentIndex + 1,\n    };\n  }\n}\n\n// Export command classes and singleton invoker\nexport {\n  MedicalCommand,\n  UpdatePatientDataCommand,\n  NavigationCommand,\n  SubmitFormCommand,\n  ClearDataCommand,\n};\n\nexport const medicalCommandInvoker = new MedicalCommandInvoker();\n","/**\n * Strategy Pattern for Medical Prediction Algorithms\n * iGFAP Stroke Triage Assistant - Enterprise Architecture\n *\n * Provides pluggable prediction strategies for different medical scenarios\n */\n\nimport { predictComaIch, predictLimitedIch, predictFullStroke } from '../api/client.js';\n\nimport { medicalEventObserver, MEDICAL_EVENTS } from './observer.js';\n\n/**\n * Abstract base strategy for medical predictions\n */\nclass PredictionStrategy {\n  constructor(name, description) {\n    this.name = name;\n    this.description = description;\n    this.requiredFields = [];\n    this.optionalFields = [];\n  }\n\n  /**\n   * Validate input data before prediction\n   * @param {Object} inputData - Input data for prediction\n   * @returns {Object} Validation result\n   */\n  validateInput(inputData) {\n    const errors = [];\n    const missingFields = [];\n\n    // Check required fields\n    this.requiredFields.forEach((field) => {\n      if (!(field in inputData) || inputData[field] === null || inputData[field] === undefined) {\n        missingFields.push(field);\n      }\n    });\n\n    if (missingFields.length > 0) {\n      errors.push(`Missing required fields: ${missingFields.join(', ')}`);\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n      missingFields,\n    };\n  }\n\n  /**\n   * Preprocess input data for the specific strategy\n   * @param {Object} inputData - Raw input data\n   * @returns {Object} Processed input data\n   */\n  preprocessInput(inputData) {\n    // Default implementation - can be overridden by specific strategies\n    return { ...inputData };\n  }\n\n  /**\n   * Execute the prediction strategy\n   * @param {Object} inputData - Input data for prediction\n   * @returns {Promise<Object>} Prediction result\n   */\n  async predict(inputData) {\n    throw new Error('predict() method must be implemented by concrete strategy');\n  }\n\n  /**\n   * Postprocess prediction results\n   * @param {Object} rawResult - Raw prediction result\n   * @param {Object} inputData - Original input data\n   * @returns {Object} Processed result\n   */\n  postprocessResult(rawResult, inputData) {\n    return {\n      ...rawResult,\n      strategy: this.name,\n      timestamp: new Date().toISOString(),\n      inputSummary: this.createInputSummary(inputData),\n    };\n  }\n\n  /**\n   * Create a summary of input data for audit trail\n   * @param {Object} inputData - Input data\n   * @returns {Object} Input summary (sanitized)\n   */\n  createInputSummary(inputData) {\n    const summary = {};\n    [...this.requiredFields, ...this.optionalFields].forEach((field) => {\n      if (field in inputData) {\n        summary[field] = typeof inputData[field];\n      }\n    });\n    return summary;\n  }\n}\n\n/**\n * Strategy for coma patients (GCS < 8)\n */\nclass ComaPredictionStrategy extends PredictionStrategy {\n  constructor() {\n    super('COMA_ICH', 'ICH prediction for comatose patients');\n    this.requiredFields = ['gfap'];\n    this.optionalFields = ['age', 'symptoms_duration'];\n  }\n\n  preprocessInput(inputData) {\n    return {\n      gfap: parseFloat(inputData.gfap),\n      patientType: 'comatose',\n    };\n  }\n\n  async predict(inputData) {\n    const validation = this.validateInput(inputData);\n    if (!validation.isValid) {\n      throw new Error(`Validation failed: ${validation.errors.join(', ')}`);\n    }\n\n    const processedInput = this.preprocessInput(inputData);\n\n    // Emit event for audit trail\n    medicalEventObserver.publish(MEDICAL_EVENTS.ASSESSMENT_STARTED, {\n      strategy: this.name,\n      inputFields: Object.keys(processedInput),\n    });\n\n    try {\n      const rawResult = await predictComaIch(processedInput);\n      const result = this.postprocessResult(rawResult, inputData);\n\n      // Emit completion event\n      medicalEventObserver.publish(MEDICAL_EVENTS.RESULTS_GENERATED, {\n        strategy: this.name,\n        success: true,\n        confidence: result.confidence,\n      });\n\n      return result;\n    } catch (error) {\n      medicalEventObserver.publish(MEDICAL_EVENTS.SECURITY_EVENT, {\n        type: 'prediction_error',\n        strategy: this.name,\n        error: error.message,\n      });\n      throw error;\n    }\n  }\n}\n\n/**\n * Strategy for limited data scenarios\n */\nclass LimitedDataPredictionStrategy extends PredictionStrategy {\n  constructor() {\n    super('LIMITED_DATA_ICH', 'ICH prediction with limited clinical data');\n    this.requiredFields = ['gfap', 'age', 'systolic_bp', 'diastolic_bp'];\n    this.optionalFields = ['weakness_sudden', 'speech_sudden', 'vigilanzminderung'];\n  }\n\n  preprocessInput(inputData) {\n    return {\n      gfap: parseFloat(inputData.gfap),\n      age: parseInt(inputData.age, 10),\n      systolic_bp: parseFloat(inputData.systolic_bp),\n      diastolic_bp: parseFloat(inputData.diastolic_bp),\n      weakness_sudden: inputData.weakness_sudden === true || inputData.weakness_sudden === 'true',\n      speech_sudden: inputData.speech_sudden === true || inputData.speech_sudden === 'true',\n      vigilanzminderung: inputData.vigilanzminderung === true || inputData.vigilanzminderung === 'true',\n    };\n  }\n\n  async predict(inputData) {\n    const validation = this.validateInput(inputData);\n    if (!validation.isValid) {\n      throw new Error(`Validation failed: ${validation.errors.join(', ')}`);\n    }\n\n    const processedInput = this.preprocessInput(inputData);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.ASSESSMENT_STARTED, {\n      strategy: this.name,\n      inputFields: Object.keys(processedInput),\n    });\n\n    try {\n      const rawResult = await predictLimitedIch(processedInput);\n      const result = this.postprocessResult(rawResult, inputData);\n\n      medicalEventObserver.publish(MEDICAL_EVENTS.RESULTS_GENERATED, {\n        strategy: this.name,\n        success: true,\n        confidence: result.confidence,\n      });\n\n      return result;\n    } catch (error) {\n      medicalEventObserver.publish(MEDICAL_EVENTS.SECURITY_EVENT, {\n        type: 'prediction_error',\n        strategy: this.name,\n        error: error.message,\n      });\n      throw error;\n    }\n  }\n}\n\n/**\n * Strategy for comprehensive stroke assessment\n */\nclass FullStrokePredictionStrategy extends PredictionStrategy {\n  constructor() {\n    super('FULL_STROKE', 'Comprehensive stroke prediction with full clinical data');\n    this.requiredFields = [\n      'gfap', 'age', 'systolic_bp', 'diastolic_bp', 'fast_ed_score',\n      'sex', 'facialtwitching', 'armparese', 'speechdeficit', 'gaze', 'agitation',\n    ];\n    this.optionalFields = ['strokeOnsetKnown', 'medical_history'];\n  }\n\n  preprocessInput(inputData) {\n    return {\n      gfap: parseFloat(inputData.gfap),\n      age: parseInt(inputData.age, 10),\n      systolic_bp: parseFloat(inputData.systolic_bp),\n      diastolic_bp: parseFloat(inputData.diastolic_bp),\n      fast_ed_score: parseInt(inputData.fast_ed_score, 10),\n      sex: inputData.sex === 'male' ? 1 : 0,\n      facialtwitching: inputData.facialtwitching === true || inputData.facialtwitching === 'true',\n      armparese: inputData.armparese === true || inputData.armparese === 'true',\n      speechdeficit: inputData.speechdeficit === true || inputData.speechdeficit === 'true',\n      gaze: inputData.gaze === true || inputData.gaze === 'true',\n      agitation: inputData.agitation === true || inputData.agitation === 'true',\n      strokeOnsetKnown: inputData.strokeOnsetKnown === true || inputData.strokeOnsetKnown === 'true',\n    };\n  }\n\n  async predict(inputData) {\n    const validation = this.validateInput(inputData);\n    if (!validation.isValid) {\n      throw new Error(`Validation failed: ${validation.errors.join(', ')}`);\n    }\n\n    const processedInput = this.preprocessInput(inputData);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.ASSESSMENT_STARTED, {\n      strategy: this.name,\n      inputFields: Object.keys(processedInput),\n    });\n\n    try {\n      const rawResult = await predictFullStroke(processedInput);\n      const result = this.postprocessResult(rawResult, inputData);\n\n      medicalEventObserver.publish(MEDICAL_EVENTS.RESULTS_GENERATED, {\n        strategy: this.name,\n        success: true,\n        confidence: result.confidence,\n      });\n\n      return result;\n    } catch (error) {\n      medicalEventObserver.publish(MEDICAL_EVENTS.SECURITY_EVENT, {\n        type: 'prediction_error',\n        strategy: this.name,\n        error: error.message,\n      });\n      throw error;\n    }\n  }\n}\n\n/**\n * Context class for managing prediction strategies\n */\nexport class PredictionContext {\n  constructor() {\n    this.strategies = new Map();\n    this.currentStrategy = null;\n    this.predictionHistory = [];\n\n    // Register default strategies\n    this.registerStrategy(new ComaPredictionStrategy());\n    this.registerStrategy(new LimitedDataPredictionStrategy());\n    this.registerStrategy(new FullStrokePredictionStrategy());\n  }\n\n  /**\n   * Register a new prediction strategy\n   * @param {PredictionStrategy} strategy - Strategy to register\n   */\n  registerStrategy(strategy) {\n    if (!(strategy instanceof PredictionStrategy)) {\n      throw new Error('Strategy must extend PredictionStrategy');\n    }\n    this.strategies.set(strategy.name, strategy);\n  }\n\n  /**\n   * Set the current prediction strategy\n   * @param {string} strategyName - Name of the strategy to use\n   */\n  setStrategy(strategyName) {\n    const strategy = this.strategies.get(strategyName);\n    if (!strategy) {\n      throw new Error(`Unknown strategy: ${strategyName}`);\n    }\n    this.currentStrategy = strategy;\n  }\n\n  /**\n   * Execute prediction using the current strategy\n   * @param {Object} inputData - Input data for prediction\n   * @returns {Promise<Object>} Prediction result\n   */\n  async predict(inputData) {\n    if (!this.currentStrategy) {\n      throw new Error('No prediction strategy selected');\n    }\n\n    const startTime = performance.now();\n\n    try {\n      const result = await this.currentStrategy.predict(inputData);\n      const duration = performance.now() - startTime;\n\n      // Add to prediction history\n      this.predictionHistory.push({\n        strategy: this.currentStrategy.name,\n        timestamp: new Date().toISOString(),\n        duration,\n        success: true,\n      });\n\n      return result;\n    } catch (error) {\n      const duration = performance.now() - startTime;\n\n      this.predictionHistory.push({\n        strategy: this.currentStrategy.name,\n        timestamp: new Date().toISOString(),\n        duration,\n        success: false,\n        error: error.message,\n      });\n\n      throw error;\n    }\n  }\n\n  /**\n   * Get available strategies\n   * @returns {Array} List of available strategies\n   */\n  getAvailableStrategies() {\n    return Array.from(this.strategies.keys());\n  }\n\n  /**\n   * Get strategy information\n   * @param {string} strategyName - Name of the strategy\n   * @returns {Object} Strategy information\n   */\n  getStrategyInfo(strategyName) {\n    const strategy = this.strategies.get(strategyName);\n    if (!strategy) {\n      return null;\n    }\n\n    return {\n      name: strategy.name,\n      description: strategy.description,\n      requiredFields: strategy.requiredFields,\n      optionalFields: strategy.optionalFields,\n    };\n  }\n\n  /**\n   * Get prediction history for audit\n   * @returns {Array} Prediction history\n   */\n  getPredictionHistory() {\n    return [...this.predictionHistory];\n  }\n\n  /**\n   * Clear prediction history (privacy compliance)\n   */\n  clearHistory() {\n    this.predictionHistory = [];\n  }\n}\n\n// Export singleton instance\nexport const predictionContext = new PredictionContext();\n\n// Export strategy types for external reference\nexport const PREDICTION_STRATEGIES = {\n  COMA_ICH: 'COMA_ICH',\n  LIMITED_DATA_ICH: 'LIMITED_DATA_ICH',\n  FULL_STROKE: 'FULL_STROKE',\n};\n","/**\n * Factory Pattern for Medical Validation Rules\n * iGFAP Stroke Triage Assistant - Enterprise Architecture\n *\n * Creates validation rules based on medical field types and requirements\n */\n\nimport { GFAP_RANGES } from '../config.js';\n\n/**\n * Abstract base class for validation rules\n */\nclass ValidationRule {\n  constructor(name, required = false) {\n    this.name = name;\n    this.required = required;\n    this.validators = [];\n    this.medicalChecks = [];\n  }\n\n  addValidator(validator) {\n    this.validators.push(validator);\n    return this;\n  }\n\n  addMedicalCheck(check) {\n    this.medicalChecks.push(check);\n    return this;\n  }\n\n  validate(value, formData = null) {\n    const errors = [];\n\n    // Check required field\n    if (this.required && !value && value !== 0) {\n      errors.push('This field is required');\n    }\n\n    // Run basic validators\n    for (const validator of this.validators) {\n      const error = validator(value);\n      if (error) {\n        errors.push(error);\n      }\n    }\n\n    // Run medical checks\n    for (const check of this.medicalChecks) {\n      const medicalError = check(value, formData);\n      if (medicalError) {\n        errors.push(medicalError);\n      }\n    }\n\n    return errors;\n  }\n\n  toConfig() {\n    return {\n      required: this.required,\n      validate: (value, formData) => this.validate(value, formData),\n    };\n  }\n}\n\n/**\n * Specific validation rule types\n */\nclass NumericValidationRule extends ValidationRule {\n  constructor(name, required = false, min = null, max = null) {\n    super(name, required);\n    this.min = min;\n    this.max = max;\n    this.type = 'number';\n\n    if (min !== null) {\n      this.addValidator((value) => {\n        if (value !== '' && !isNaN(value) && parseFloat(value) < min) {\n          return `Value must be at least ${min}`;\n        }\n        return null;\n      });\n    }\n\n    if (max !== null) {\n      this.addValidator((value) => {\n        if (value !== '' && !isNaN(value) && parseFloat(value) > max) {\n          return `Value must be at most ${max}`;\n        }\n        return null;\n      });\n    }\n  }\n\n  toConfig() {\n    return {\n      ...super.toConfig(),\n      min: this.min,\n      max: this.max,\n      type: this.type,\n    };\n  }\n}\n\nclass BiomarkerValidationRule extends NumericValidationRule {\n  constructor(name, biomarkerType, ranges) {\n    super(name, true, ranges.min, ranges.max);\n    this.biomarkerType = biomarkerType;\n    this.ranges = ranges;\n\n    // Add biomarker-specific medical checks\n    this.addMedicalCheck((value) => {\n      const numValue = parseFloat(value);\n      if (isNaN(numValue)) {\n        return null;\n      }\n\n      if (biomarkerType === 'GFAP' && numValue > ranges.critical) {\n        return 'Extremely high GFAP value - please verify lab result';\n      }\n\n      return null;\n    });\n  }\n}\n\nclass VitalSignValidationRule extends NumericValidationRule {\n  constructor(name, vitalType, min, max) {\n    super(name, true, min, max);\n    this.vitalType = vitalType;\n\n    // Add vital sign medical checks\n    this.addMedicalCheck((value, formData) => {\n      const numValue = parseFloat(value);\n      if (isNaN(numValue)) {\n        return null;\n      }\n\n      switch (vitalType) {\n        case 'SYSTOLIC_BP':\n          if (formData?.diastolic_bp) {\n            const diastolic = parseFloat(formData.diastolic_bp);\n            if (!isNaN(diastolic) && numValue <= diastolic) {\n              return 'Systolic BP must be higher than diastolic BP';\n            }\n          }\n          break;\n        case 'DIASTOLIC_BP':\n          if (formData?.systolic_bp) {\n            const systolic = parseFloat(formData.systolic_bp);\n            if (!isNaN(systolic) && numValue >= systolic) {\n              return 'Diastolic BP must be lower than systolic BP';\n            }\n          }\n          break;\n      }\n\n      return null;\n    });\n  }\n}\n\nclass AgeValidationRule extends NumericValidationRule {\n  constructor(name) {\n    super(name, true, 0, 120);\n\n    this.addMedicalCheck((value) => {\n      const numValue = parseFloat(value);\n      if (isNaN(numValue)) {\n        return null;\n      }\n\n      if (numValue < 18) {\n        return 'Emergency stroke assessment typically for adults (≥18 years)';\n      }\n\n      return null;\n    });\n  }\n}\n\nclass ClinicalScaleValidationRule extends NumericValidationRule {\n  constructor(name, scaleType, min, max) {\n    super(name, true, min, max);\n    this.scaleType = scaleType;\n\n    this.addMedicalCheck((value) => {\n      const numValue = parseFloat(value);\n      if (isNaN(numValue)) {\n        return null;\n      }\n\n      switch (scaleType) {\n        case 'GCS':\n          if (numValue < 8) {\n            return 'GCS < 8 indicates severe consciousness impairment - consider coma module';\n          }\n          break;\n        case 'FAST_ED':\n          if (numValue >= 4) {\n            return 'High FAST-ED score suggests LVO - consider urgent intervention';\n          }\n          break;\n      }\n\n      return null;\n    });\n  }\n}\n\n/**\n * Factory for creating medical validation rules\n */\nexport class MedicalValidationFactory {\n  static createRule(type, name, options = {}) {\n    switch (type) {\n      case 'AGE':\n        return new AgeValidationRule(name);\n\n      case 'BIOMARKER':\n        if (options.biomarkerType === 'GFAP') {\n          return new BiomarkerValidationRule(name, 'GFAP', GFAP_RANGES);\n        }\n        throw new Error(`Unsupported biomarker type: ${options.biomarkerType}`);\n\n      case 'VITAL_SIGN':\n        return new VitalSignValidationRule(\n          name,\n          options.vitalType,\n          options.min,\n          options.max,\n        );\n\n      case 'CLINICAL_SCALE':\n        return new ClinicalScaleValidationRule(\n          name,\n          options.scaleType,\n          options.min,\n          options.max,\n        );\n\n      case 'NUMERIC':\n        return new NumericValidationRule(\n          name,\n          options.required,\n          options.min,\n          options.max,\n        );\n\n      default:\n        throw new Error(`Unsupported validation rule type: ${type}`);\n    }\n  }\n\n  /**\n   * Create a complete validation rule set for a medical module\n   * @param {string} moduleType - Type of medical module\n   * @returns {Object} Complete validation rule configuration\n   */\n  static createModuleValidation(moduleType) {\n    const rules = {};\n\n    switch (moduleType) {\n      case 'LIMITED':\n        rules.age_years = this.createRule('AGE', 'age_years').toConfig();\n        rules.systolic_bp = this.createRule('VITAL_SIGN', 'systolic_bp', {\n          vitalType: 'SYSTOLIC_BP',\n          min: 60,\n          max: 300,\n        }).toConfig();\n        rules.diastolic_bp = this.createRule('VITAL_SIGN', 'diastolic_bp', {\n          vitalType: 'DIASTOLIC_BP',\n          min: 30,\n          max: 200,\n        }).toConfig();\n        rules.gfap_value = this.createRule('BIOMARKER', 'gfap_value', {\n          biomarkerType: 'GFAP',\n        }).toConfig();\n        break;\n\n      case 'FULL':\n        // Include all limited module rules\n        Object.assign(rules, this.createModuleValidation('LIMITED'));\n\n        // Add additional full module rules\n        rules.fast_ed_score = this.createRule('CLINICAL_SCALE', 'fast_ed_score', {\n          scaleType: 'FAST_ED',\n          min: 0,\n          max: 9,\n        }).toConfig();\n        break;\n\n      case 'COMA':\n        rules.gfap_value = this.createRule('BIOMARKER', 'gfap_value', {\n          biomarkerType: 'GFAP',\n        }).toConfig();\n        rules.gcs = this.createRule('CLINICAL_SCALE', 'gcs', {\n          scaleType: 'GCS',\n          min: 3,\n          max: 15,\n        }).toConfig();\n        break;\n\n      default:\n        throw new Error(`Unsupported module type: ${moduleType}`);\n    }\n\n    return rules;\n  }\n\n  /**\n   * Validate form data using factory-created rules\n   * @param {Object} formData - Form data to validate\n   * @param {string} moduleType - Type of medical module\n   * @returns {Object} Validation result\n   */\n  static validateModule(formData, moduleType) {\n    const rules = this.createModuleValidation(moduleType);\n    const validationErrors = {};\n    let isValid = true;\n\n    Object.entries(rules).forEach(([fieldName, rule]) => {\n      const value = formData[fieldName];\n      const errors = rule.validate(value, formData);\n\n      if (errors.length > 0) {\n        validationErrors[fieldName] = errors;\n        isValid = false;\n      }\n    });\n\n    return { isValid, validationErrors };\n  }\n}\n\n// Export validation rule types for external use\nexport const VALIDATION_RULE_TYPES = {\n  AGE: 'AGE',\n  BIOMARKER: 'BIOMARKER',\n  VITAL_SIGN: 'VITAL_SIGN',\n  CLINICAL_SCALE: 'CLINICAL_SCALE',\n  NUMERIC: 'NUMERIC',\n};\n\nexport const BIOMARKER_TYPES = {\n  GFAP: 'GFAP',\n};\n\nexport const VITAL_SIGN_TYPES = {\n  SYSTOLIC_BP: 'SYSTOLIC_BP',\n  DIASTOLIC_BP: 'DIASTOLIC_BP',\n};\n\nexport const CLINICAL_SCALE_TYPES = {\n  GCS: 'GCS',\n  FAST_ED: 'FAST_ED',\n};\n"],"file":"assets/index-BBmQgakm.js"}