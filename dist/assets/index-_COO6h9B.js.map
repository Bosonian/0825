{"version":3,"mappings":"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","names":["Store","listener","updates","screen","history","previousScreen","module","data","formData","errors","results","newState","eventName","event","store","renderProgressIndicator","currentStep","steps","html","step","index","isActive","isCompleted","messages","I18n","savedLanguage","language","key","newLanguage","lang","date","locale","i18n","t","renderTriage1","renderTriage2","API_URLS","CRITICAL_THRESHOLDS","GFAP_RANGES","APP_CONFIG","VALIDATION_RULES","renderComa","renderLimited","renderFull","renderCriticalAlert","FIELD_LABEL_MAP","PATTERN_REPLACEMENTS","formatDriverName","fieldName","mappedKey","translated","formatted","pattern","replacement","l","formatSummaryLabel","formatDisplayValue","value","renderDriversSection","ich","lvo","renderEnhancedDriversPanel","drivers","title","type","probability","driversViewModel","positiveDrivers","a","b","negativeDrivers","d","maxWeight","driver","percentage","barWidth","cleanLabel","COMPREHENSIVE_HOSPITAL_DATABASE","ROUTING_ALGORITHM","patientData","location","state","ichProbability","timeFromOnset","clinicalFactors","detectedState","database","destination","comprehensiveOptions","allThrombolysisCapable","strokeUnitsAndHigher","stateCenters","nearestState","minDistance","center","distance","userLocation","hospitals","hospital","point1","point2","dLat","dLng","deg","calculateDistance","lat1","lng1","lat2","lng2","toRadians","degrees","calculateTravelTime","fromLat","fromLng","toLat","toLng","profile","url","response","route","error","calculateEmergencyTravelTime","result","renderStrokeCenterMap","initializeStrokeCenterMap","useGpsButton","manualLocationButton","locationManual","locationInput","searchLocationButton","resultsContainer","requestUserLocation","geocodeLocation","e","showLocationError","position","latitude","longitude","showNearestCenters","errorMessage","locationString","coordPattern","coordMatch","lat","lng","searchLocation","supportedStates","locationName","routing","_a","routingExplanation","getEnhancedRoutingExplanation","getStateName","allHospitals","travelInfo","alternatives","h","alt","renderEnhancedStrokeCenterCard","_b","stateCode","ichPercent","urgencyIcon","isRecommended","capabilities","networkBadge","message","container","getRiskLevel","probabilityPercent","p","thresholds","VOLUME_THRESHOLDS","calculateICHVolume","gfapValue","cappedGfap","logVolume","calculatedVolume","volumeRange","riskLevel","getVolumeRiskLevel","mortalityRate","getMortalityRate","displayVolume","volume","formatVolumeDisplay","renderCircularBrainDisplay","formattedVolume","canvasId","initializeVolumeAnimations","canvas","cssWidth","cssHeight","drawVolumeFluid","ctx","centerX","centerY","radius","animationFrame","isAnimating","isDarkMode","draw","drawFluidLayer","fillHeight","baseLevel","startX","x","waveOffset1","waveOffset2","y","borderColor","volumePercent","progressColor","observer","LegacyICHModel","age","scaledAge","scaledGfap","logit","rawProbability","confidence","riskCategory","mainResults","legacyResults","mainProb","legacyProb","absoluteDifference","relativeDifference","higherRiskModel","agreement","absDiff","difference","testCase","passedTests","r","totalTests","__publicField","calculateLegacyICH","gfap","ResearchDataLogger","comparisonData","entry","stored","headers","rows","_c","_d","_e","_f","_h","_g","_j","_i","_l","_k","_n","_m","format","filename","blob","link","entries","differences","avgDifference","sum","sessionId","safeLogResearchData","inputs","isResearchModeEnabled","renderResearchToggle","renderModelComparison","comparison","renderProbabilityBars","renderDifferenceAnalysis","renderCalculationDetails","renderModelMetrics","metadata","initializeResearchMode","closeResearch","panel","exportButton","detailsToggle","details","clearButton","summary","renderInputSummary","summaryHtml","moduleTitle","itemsHtml","label","displayValue","renderRiskCard","percent","isCritical","isHigh","icons","titles","level","renderICHVolumeDisplay","getCurrentGfapValue","volumeResult","renderResults","startTime","currentModule","getCurrentModuleName","calculateLegacyFromResults","getPatientInputs","isLimitedOrComa","resultsHtml","renderICHFocusedResults","renderFullModuleResults","mountIslands","__vitePreload","err","criticalAlert","ichPercentLocal","strokeCenterHtml","inputSummaryHtml","researchToggleHtml","researchComparisonHtml","alternativeDiagnosesHtml","renderComaAlternativeDiagnoses","strokeDifferentialHtml","renderStrokeDifferentialDiagnoses","renderVolumeCard","renderICHDriversOnly","renderBibliography","lvoPercent","fastEdScore","isFullModule","hasValidLVO","showLVORiskCard","showVolumeCard","ratio","inRatioBand","showTachometer","showDominanceBanner","debugShowTachometer","cardCount","layoutClass","renderTachometerGauge","renderDominanceBanner","dominant","icon","dominantText","subtitle","driversData","renderCompactDriver","width","ichData","patientInputs","legacyResult","isDE","volumeData","diff","maxP","c","validateInput","name","rules","validateForm","form","isValid","validationErrors","input","showValidationErrors","group","el","errorDiv","clearValidationErrors","extractDriversFromResponse","predictionType","rawDrivers","formattedDrivers","formatDriversFromDictionary","fastEdFeature","f","positive","negative","weight","extractProbabilityFromResponse","extractConfidenceFromResponse","warmUpFunctions","warmUpPromises","controller","timeoutId","APIError","status","normalizeBooleans","payload","normalized","safeParseFloat","defaultValue","parsed","fetchJSON","errorData","predictComaIch","normalizedPayload","predictLimitedIch","fullPayload","predictFullStroke","responseStr","lvoProbability","ichDrivers","lvoDrivers","ichConfidence","lvoConfidence","getPrerequisites","renderPrerequisitesModal","prerequisites","item","initPrerequisitesModal","modal","closeBtn","cancelBtn","confirmBtn","closeModal","navigate","checkboxes","allChecked","cb","warning","checkbox","showPrerequisitesModal","existingModal","modalElement","handleTriage1","isComatose","handleTriage2","isExaminable","reset","goBack","success","goHome","handleSubmit","validation","firstErrorName","sr","errorCount","element","n","button","originalContent","showError","alert","containerDiv","announceScreenChange","announcement","screenNames","setPageTitle","appName","section","focusMainHeading","heading","FastEdCalculator","score","total","component","applyBtn","totalElement","riskElement","currentScore","onApplyCallback","firstRadio","armWeaknessBoolean","eyeDeviationBoolean","remaining","components","assignToThis","fastEdCalculator","render","currentScreen","navigationHistory","tempContainer","backButton","restoreFormData","attachEvents","action","boolVal","printButton","fastEdInput","currentValue","armPareseField","eyeDeviationField","toggle","targetId","targetContent","arrow","App","homeButton","languageToggle","darkModeToggle","researchModeToggle","helpModal","helpButton","modalClose","savedTheme","currentLang","headerTitle","emergencyBadge","modalTitle","isDark","shouldShow","researchPanel","isVisible","currentData","yearElement","registration","newWorker","modalContent","updateNow","updateLater","app"],"ignoreList":[],"sources":["../../src/state/store.js","../../src/ui/components/progress.js","../../src/localization/messages.js","../../src/localization/i18n.js","../../src/ui/screens/triage1.js","../../src/ui/screens/triage2.js","../../src/config.js","../../src/ui/screens/coma.js","../../src/ui/screens/limited.js","../../src/ui/screens/full.js","../../src/ui/components/alerts.js","../../src/utils/label-formatter.js","../../src/ui/components/drivers.js","../../src/data/comprehensive-stroke-centers.js","../../src/data/stroke-centers.js","../../src/ui/components/stroke-center-map.js","../../src/logic/formatters.js","../../src/logic/ich-volume-calculator.js","../../src/ui/components/brain-visualization.js","../../src/research/legacy-ich-model.js","../../src/research/data-logger.js","../../src/research/comparison-ui.js","../../src/ui/screens/results.js","../../src/logic/validate.js","../../src/api/drivers.js","../../src/api/client.js","../../src/ui/components/prerequisites-modal.js","../../src/logic/handlers.js","../../src/ui/a11y.js","../../src/ui/components/fastEdModal.js","../../src/ui/render.js","../../src/main.js"],"sourcesContent":["// State management for the Stroke Triage Assistant\n\nclass Store {\n  constructor() {\n    this.state = {\n      currentScreen: 'triage1',\n      results: null,\n      sessionId: null,\n      startTime: null,\n      formData: {},\n      validationErrors: {},\n      screenHistory: []\n    };\n    \n    this.listeners = new Set();\n    this.initialize();\n  }\n  \n  initialize() {\n    this.state.sessionId = this.generateSessionId();\n    this.state.startTime = Date.now();\n    console.log('Store initialized with session:', this.state.sessionId);\n  }\n  \n  generateSessionId() {\n    return 'session_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n  }\n  \n  // Subscribe to state changes\n  subscribe(listener) {\n    this.listeners.add(listener);\n    return () => this.listeners.delete(listener);\n  }\n  \n  // Notify all listeners of state changes\n  notify() {\n    this.listeners.forEach(listener => listener(this.state));\n  }\n  \n  // Get current state (read-only)\n  getState() {\n    return { ...this.state };\n  }\n  \n  // Update state and notify listeners\n  setState(updates) {\n    this.state = { ...this.state, ...updates };\n    this.notify();\n  }\n  \n  // Navigate to a new screen\n  navigate(screen) {\n    console.log(`Navigating from ${this.state.currentScreen} to ${screen}`);\n    const history = [...this.state.screenHistory];\n    \n    // Add current screen to history if not already there\n    if (this.state.currentScreen !== screen && !history.includes(this.state.currentScreen)) {\n      history.push(this.state.currentScreen);\n    }\n    \n    this.setState({ \n      currentScreen: screen, \n      screenHistory: history \n    });\n  }\n  \n  // Navigate back to previous screen\n  goBack() {\n    const history = [...this.state.screenHistory];\n    console.log('goBack() - current history:', history);\n    console.log('goBack() - current screen:', this.state.currentScreen);\n    if (history.length > 0) {\n      const previousScreen = history.pop();\n      console.log('goBack() - navigating to:', previousScreen);\n      this.setState({ \n        currentScreen: previousScreen, \n        screenHistory: history \n      });\n      return true;\n    }\n    console.log('goBack() - no history available');\n    return false;\n  }\n  \n  // Navigate to home screen\n  goHome() {\n    this.setState({ \n      currentScreen: 'triage1',\n      screenHistory: []\n    });\n  }\n  \n  // Store form data for a specific module\n  setFormData(module, data) {\n    const formData = { ...this.state.formData };\n    formData[module] = { ...data };\n    this.setState({ formData });\n  }\n  \n  // Get form data for a specific module\n  getFormData(module) {\n    return this.state.formData[module] || {};\n  }\n  \n  // Store validation errors\n  setValidationErrors(errors) {\n    this.setState({ validationErrors: errors });\n  }\n  \n  // Clear validation errors\n  clearValidationErrors() {\n    this.setState({ validationErrors: {} });\n  }\n  \n  // Store prediction results\n  setResults(results) {\n    this.setState({ results });\n  }\n  \n  // Check if there's unsaved data\n  hasUnsavedData() {\n    return Object.keys(this.state.formData).length > 0 && !this.state.results;\n  }\n  \n  // Reset to initial state\n  reset() {\n    const newState = {\n      currentScreen: 'triage1',\n      results: null,\n      sessionId: this.generateSessionId(),\n      startTime: Date.now(),\n      formData: {},\n      validationErrors: {},\n      screenHistory: []\n    };\n    this.setState(newState);\n    console.log('Store reset with new session:', newState.sessionId);\n  }\n  \n  // Log events for audit trail\n  logEvent(eventName, data = {}) {\n    const event = {\n      timestamp: Date.now(),\n      session: this.state.sessionId,\n      event: eventName,\n      data: data\n    };\n    console.log('Event:', event);\n    // In production, send to analytics service\n    // this.sendToAnalytics(event);\n  }\n  \n  // Calculate session duration\n  getSessionDuration() {\n    return Date.now() - this.state.startTime;\n  }\n}\n\n// Create and export a singleton instance\nexport const store = new Store();\n\n// Export the Store class for testing purposes\nexport { Store };","export function renderProgressIndicator(currentStep) {\n  const steps = [\n    { id: 1, label: 'Triage' },\n    { id: 2, label: 'Assessment' },\n    { id: 3, label: 'Results' }\n  ];\n  \n  let html = `<div class=\"progress-indicator\">`;\n  steps.forEach((step, index) => {\n    const isActive = step.id === currentStep;\n    const isCompleted = step.id < currentStep;\n    html += `\n      <div class=\"progress-step ${isActive ? 'active' : ''} ${isCompleted ? 'completed' : ''}\">\n        ${isCompleted ? '' : step.id}\n      </div>\n    `;\n    if (index < steps.length - 1) {\n      html += `<div class=\"progress-line ${isCompleted ? 'completed' : ''}\"></div>`;\n    }\n  });\n  html += `</div>`;\n  return html;\n}","// Localization messages for the Stroke Triage Assistant\n\nexport const messages = {\n  en: {\n    // Header\n    appTitle: 'iGFAP',\n    emergencyBadge: 'Emergency Tool',\n    helpButton: 'Help and Instructions',\n    darkModeButton: 'Toggle dark mode',\n    languageToggle: 'Language',\n\n    // Progress\n    step1: 'Initial Assessment',\n    step2: 'Data Collection', \n    step3: 'Results',\n    \n    // Module titles\n    comaModuleTitle: 'Coma Module',\n    limitedDataModuleTitle: 'Limited Data Module',\n    fullStrokeModuleTitle: 'Full Stroke Module',\n\n    // Triage 1\n    triage1Title: 'Patient Assessment',\n    triage1Question: 'Is the patient comatose?',\n    triage1Help: 'Glasgow Coma Scale < 8',\n    triage1Yes: 'YES - Comatose',\n    triage1No: 'NO - Conscious',\n\n    // Triage 2\n    triage2Title: 'Examination Capability',\n    triage2Question: 'Can the patient be reliably examined?',\n    triage2Help: 'Patient is not aphasic, confused, or uncooperative',\n    triage2Yes: 'YES - Full Exam Possible',\n    triage2No: 'NO - Limited Exam Only',\n\n    // Forms\n    ageLabel: 'Age (years)',\n    ageHelp: 'Patient age in years',\n    systolicLabel: 'Systolic BP (mmHg)',\n    systolicHelp: 'Systolic blood pressure',\n    diastolicLabel: 'Diastolic BP (mmHg)', \n    diastolicHelp: 'Diastolic blood pressure',\n    gfapLabel: 'GFAP Value (pg/mL)',\n    gfapHelp: 'GFAP biomarker level',\n    fastEdLabel: 'FAST-ED Score',\n    fastEdHelp: 'FAST-ED assessment score (0-9)',\n\n    // Checkboxes\n    headacheLabel: 'Headache',\n    vigilanzLabel: 'Reduced consciousness',\n    armPareseLabel: 'Arm weakness',\n    beinPareseLabel: 'Leg weakness', \n    eyeDeviationLabel: 'Eye deviation',\n    atrialFibLabel: 'Atrial fibrillation',\n    anticoagLabel: 'Anticoagulated (NOAK)',\n    antiplateletsLabel: 'Antiplatelets',\n\n    // Buttons\n    analyzeButton: 'Analyze',\n    analyzing: 'Analyzing...',\n    printResults: 'Print Results',\n    newAssessment: 'Start New Assessment',\n    startOver: 'Start Over',\n    goBack: 'Go Back',\n    goHome: 'Go Home',\n    \n    // Form sections\n    basicInformation: 'Basic Information',\n    biomarkersScores: 'Biomarkers & Scores',\n    clinicalSymptoms: 'Clinical Symptoms',\n    medicalHistory: 'Medical History',\n    \n    // Form labels with units\n    ageYearsLabel: 'Age (years)',\n    systolicBpLabel: 'Systolic BP (mmHg)',\n    diastolicBpLabel: 'Diastolic BP (mmHg)',\n    gfapValueLabel: 'GFAP Value (pg/mL)',\n    fastEdScoreLabel: 'FAST-ED Score',\n    \n    // Help text\n    ageYearsHelp: \"Patient's age in years\",\n    systolicBpHelp: 'Normal: 90-140 mmHg',\n    diastolicBpHelp: 'Normal: 60-90 mmHg',\n    gfapTooltip: 'Brain injury biomarker',\n    gfapTooltipLong: 'Glial Fibrillary Acidic Protein - Brain injury biomarker',\n    gfapRange: 'Range: {min} - {max} pg/mL',\n    fastEdTooltip: '0-9 scale for LVO screening',\n    \n    // Module buttons\n    analyzeIchRisk: 'Analyze ICH Risk',\n    analyzeStrokeRisk: 'Analyze Stroke Risk',\n    \n    // Alert messages\n    criticalPatient: 'Critical Patient',\n    comaAlert: 'Patient is comatose (GCS < 8). Rapid assessment required.',\n    vigilanceReduction: 'Vigilance Reduction (Decreased alertness)',\n    \n    // Additional symptom labels\n    armParesis: 'Arm Paresis',\n    legParesis: 'Leg Paresis',\n    eyeDeviation: 'Eye Deviation',\n    atrialFibrillation: 'Atrial Fibrillation',\n    onNoacDoac: 'On NOAC/DOAC',\n    onAntiplatelets: 'On Antiplatelets',\n\n    // Results\n    resultsTitle: 'Assessment Results',\n    bleedingRiskAssessment: 'Bleeding Risk Assessment',\n    ichProbability: 'ICH Probability',\n    lvoProbability: 'LVO Probability',\n    lvoMayBePossible: 'Large vessel occlusion possible - further evaluation recommended',\n    riskFactorsTitle: 'Main Risk Factors',\n    increasingRisk: 'Increasing Risk',\n    decreasingRisk: 'Decreasing Risk',\n    noFactors: 'No factors',\n    riskLevel: 'Risk Level',\n    lowRisk: 'Low Risk',\n    mediumRisk: 'Medium Risk', \n    highRisk: 'High Risk',\n\n    // Risk levels\n    riskLow: 'Low',\n    riskMedium: 'Medium',\n    riskHigh: 'High',\n\n    // Risk Factors Analysis\n    riskFactorsAnalysis: 'Risk Factors',\n    contributingFactors: 'Contributing factors to the assessment',\n    riskFactors: 'Risk Factors',\n    increaseRisk: 'INCREASE',\n    decreaseRisk: 'DECREASE',\n    noPositiveFactors: 'No increasing factors',\n    noNegativeFactors: 'No decreasing factors',\n    ichRiskFactors: 'ICH Risk Factors',\n    lvoRiskFactors: 'LVO Risk Factors',\n\n    // Critical Alert\n    criticalAlertTitle: 'CRITICAL RISK DETECTED',\n    criticalAlertMessage: 'High probability of intracerebral hemorrhage detected.',\n    immediateActionsRequired: 'Immediate actions required',\n    initiateStrokeProtocol: 'Initiate stroke protocol immediately',\n    urgentCtImaging: 'Urgent CT imaging required',\n    considerBpManagement: 'Consider blood pressure management',\n    prepareNeurosurgicalConsult: 'Prepare for potential neurosurgical consultation',\n\n    // Help Modal\n    helpTitle: 'Quick Reference Guide',\n    gcsTitle: 'Glasgow Coma Scale (GCS)',\n    gcsLow: 'GCS < 8: Comatose patient - use Coma Module',\n    gcsMod: 'GCS 8-12: Moderate impairment',\n    gcsHigh: 'GCS 13-15: Mild impairment',\n    fastEdTitle: 'FAST-ED Score Components',\n    fastEdFacial: 'Facial Palsy: 0-1 points',\n    fastEdArm: 'Arm Weakness: 0-2 points',\n    fastEdSpeech: 'Speech Changes: 0-2 points',\n    fastEdTime: 'Time: Critical factor',\n    fastEdEye: 'Eye Deviation: 0-2 points',\n    fastEdDenial: 'Denial/Neglect: 0-2 points',\n    criticalValuesTitle: 'Critical Values',\n    criticalBp: 'Systolic BP > 180: Increased ICH risk',\n    criticalGfap: 'GFAP > 500 pg/mL: Significant marker',\n    criticalFastEd: 'FAST-ED ≥ 4: Consider LVO',\n\n    // FAST-ED Calculator Modal\n    fastEdCalculatorTitle: 'FAST-ED Score Calculator',\n    fastEdCalculatorSubtitle: 'Click to calculate FAST-ED score components',\n    facialPalsyTitle: 'Facial Palsy',\n    facialPalsyNormal: 'Normal (0)',\n    facialPalsyMild: 'Present (1)',\n    armWeaknessTitle: 'Arm Weakness',\n    armWeaknessNormal: 'Normal (0)',\n    armWeaknessMild: 'Mild weakness or drift (1)',\n    armWeaknessSevere: 'Severe weakness or falls immediately (2)',\n    speechChangesTitle: 'Speech Abnormalities', \n    speechChangesNormal: 'Normal (0)',\n    speechChangesMild: 'Mild dysarthria or aphasia (1)',\n    speechChangesSevere: 'Severe dysarthria or aphasia (2)',\n    eyeDeviationTitle: 'Eye Deviation',\n    eyeDeviationNormal: 'Normal (0)',\n    eyeDeviationPartial: 'Partial gaze deviation (1)',\n    eyeDeviationForced: 'Forced gaze deviation (2)',\n    denialNeglectTitle: 'Denial/Neglect',\n    denialNeglectNormal: 'Normal (0)',\n    denialNeglectPartial: 'Partial neglect (1)',\n    denialNeglectComplete: 'Complete neglect (2)',\n    totalScoreTitle: 'Total FAST-ED Score',\n    riskLevel: 'Risk Level',\n    riskLevelLow: 'LOW (Score <4)',\n    riskLevelHigh: 'HIGH (Score ≥4 - Consider LVO)',\n    applyScore: 'Apply Score',\n    cancel: 'Cancel',\n    \n    // Results Screen Enhancements\n    riskAnalysis: 'Risk Analysis',\n    riskAnalysisSubtitle: 'Clinical factors in this assessment',\n    contributingFactors: 'Contributing factors',\n    factorsShown: 'shown',\n    positiveFactors: 'Positive factors',\n    negativeFactors: 'Negative factors',\n    clinicalInformation: 'Clinical Information',\n    clinicalRecommendations: 'Clinical Recommendations',\n    clinicalRec1: 'Consider immediate imaging if ICH risk is high',\n    clinicalRec2: 'Activate stroke team for LVO scores ≥ 50%',\n    clinicalRec3: 'Monitor blood pressure closely',\n    clinicalRec4: 'Document all findings thoroughly',\n    noDriverData: 'No driver data available',\n    driverAnalysisUnavailable: 'Driver analysis unavailable',\n    driverInfoNotAvailable: 'Driver information not available from this prediction model',\n    driverAnalysisNotAvailable: 'Driver analysis not available for this prediction',\n    lvoNotPossible: 'LVO assessment not possible with limited data',\n    fullExamRequired: 'Full neurological examination required for LVO screening',\n    limitedAssessment: 'Limited Assessment',\n\n    // Disclaimer\n    disclaimer: 'Clinical Disclaimer',\n    disclaimerText: 'This tool is for clinical decision support only. Always use clinical judgment and follow local protocols. Not a replacement for physician assessment.',\n    importantNote: 'Important',\n    importantText: 'These results are for clinical decision support only. Always use clinical judgment and follow institutional protocols.',\n    \n    // ICH Volume and Mortality\n    predictedMortality: 'Predicted 30-day mortality',\n    ichVolumeLabel: 'ICH Volume',\n    references: 'References',\n    \n    // Input Summary\n    inputSummaryTitle: 'Input Summary',\n    inputSummarySubtitle: 'Values used for this analysis',\n\n    // Footer\n    privacyLink: 'Privacy Policy',\n    disclaimerLink: 'Medical Disclaimer', \n    versionLink: 'Version 2.1.0 - Research Preview',\n\n    // Privacy and disclaimers\n    privacyPolicy: 'Privacy Policy: This tool processes data locally. No patient data is stored or transmitted.',\n    medicalDisclaimer: 'Medical Disclaimer: This tool is for clinical decision support only. Always use clinical judgment and follow local protocols.',\n\n    // Error messages\n    networkError: 'Network error - please check your connection and try again',\n    requestTimeout: 'Request timeout - please try again',\n    apiError: 'Failed to get results',\n    validationError: 'Please check your input values',\n\n    // Session\n    sessionTimeout: 'Your session has been idle for 30 minutes. Would you like to continue?',\n    unsavedData: 'You have unsaved data. Are you sure you want to leave?',\n\n    // Stroke Centers\n    nearestCentersTitle: 'Nearest Stroke Centers',\n    useCurrentLocation: 'Use Current Location',\n    enterLocationPlaceholder: 'Enter city or address...',\n    enterManually: 'Enter Location Manually',\n    search: 'Search',\n    yourLocation: 'Your Location',\n    recommendedCenters: 'Recommended Centers',\n    alternativeCenters: 'Alternative Centers',\n    noCentersFound: 'No stroke centers found in this area',\n    gettingLocation: 'Getting your location',\n    searchingLocation: 'Searching location',\n    locationError: 'Unable to get your location',\n    locationPermissionDenied: 'Location access denied. Please allow location access and try again.',\n    locationUnavailable: 'Location information is unavailable',\n    locationTimeout: 'Location request timed out',\n    geolocationNotSupported: 'Geolocation is not supported by this browser',\n    geocodingNotImplemented: 'Location search not available. Please use GPS or enter coordinates manually.',\n    tryManualEntry: 'Try entering your location manually or use GPS.',\n    distanceNote: 'Distances are calculated as straight-line distances. Actual travel times may vary.',\n    travelTimeNote: 'Travel times calculated for emergency vehicles with sirens and priority routing.',\n    calculatingTravelTimes: 'Calculating travel times',\n    minutes: 'min',\n    poweredByOrs: 'Travel times powered by OpenRoute Service',\n    \n    // Center Types and Services\n    comprehensiveCenter: 'Comprehensive Stroke Center',\n    primaryCenter: 'Primary Stroke Center',\n    telemetryCenter: 'Telemedicine Center',\n    thrombectomy: 'Thrombectomy',\n    neurosurgery: 'Neurosurgery',\n    icu: 'Intensive Care',\n    telemedicine: 'Telemedicine',\n    stroke_unit: 'Stroke Unit',\n    \n    // Actions\n    call: 'Call',\n    directions: 'Directions',\n    emergency: 'Emergency',\n    certified: 'Certified',\n\n    // Prerequisites Modal\n    prerequisitesTitle: 'Prerequisites for Stroke Triage',\n    prerequisitesIntro: 'Please confirm that all of the following prerequisites are met:',\n    prerequisitesWarning: 'All prerequisites must be met to continue',\n    continue: 'Continue',\n    acute_deficit: 'Acute (severe) neurological deficit present',\n    symptom_onset: 'Symptom onset within 6 hours',\n    no_preexisting: 'No pre-existing severe neurological deficits',\n    no_trauma: 'No traumatic brain injury present',\n\n    // Differential Diagnoses for Stroke Modules\n    differentialDiagnoses: 'Differential Diagnoses',\n    reconfirmTimeWindow: 'Please reconfirm time window!',\n    unclearTimeWindow: 'With unclear/extended time window, early demarcated brain infarction is also possible',\n    rareDiagnoses: 'Rare diagnoses such as glioblastoma are also possible',\n    \n  },\n\n  de: {\n    // Header\n    appTitle: 'iGFAP',\n    emergencyBadge: 'Notfall-Tool',\n    helpButton: 'Hilfe und Anweisungen',\n    darkModeButton: 'Dunklen Modus umschalten',\n    languageToggle: 'Sprache',\n\n    // Progress\n    step1: 'Erstbeurteilung',\n    step2: 'Datenerhebung',\n    step3: 'Ergebnisse',\n    \n    // Module titles\n    comaModuleTitle: 'Koma-Modul',\n    limitedDataModuleTitle: 'Begrenzte Daten Modul',\n    fullStrokeModuleTitle: 'Vollständiges Schlaganfall-Modul',\n\n    // Triage 1\n    triage1Title: 'Patientenbeurteilung',\n    triage1Question: 'Ist der Patient komatös?',\n    triage1Help: 'Glasgow Coma Scale < 8',\n    triage1Yes: 'JA - Komatös',\n    triage1No: 'NEIN - Bei Bewusstsein',\n\n    // Triage 2\n    triage2Title: 'Untersuchungsfähigkeit',\n    triage2Question: 'Kann der Patient zuverlässig untersucht werden?',\n    triage2Help: 'Patient ist nicht aphasisch, verwirrt oder unkooperativ',\n    triage2Yes: 'JA - Vollständige Untersuchung möglich',\n    triage2No: 'NEIN - Nur begrenzte Untersuchung',\n\n    // Forms\n    ageLabel: 'Alter (Jahre)',\n    ageHelp: 'Patientenalter in Jahren',\n    systolicLabel: 'Systolischer RR (mmHg)',\n    systolicHelp: 'Systolischer Blutdruck',\n    diastolicLabel: 'Diastolischer RR (mmHg)',\n    diastolicHelp: 'Diastolischer Blutdruck',\n    gfapLabel: 'GFAP-Wert (pg/mL)',\n    gfapHelp: 'GFAP-Biomarker-Wert',\n    fastEdLabel: 'FAST-ED-Score',\n    fastEdHelp: 'FAST-ED-Bewertungsscore (0-9)',\n\n    // Checkboxes\n    headacheLabel: 'Kopfschmerzen',\n    vigilanzLabel: 'Bewusstseinstrübung',\n    armPareseLabel: 'Armschwäche',\n    beinPareseLabel: 'Beinschwäche',\n    eyeDeviationLabel: 'Blickdeviation',\n    atrialFibLabel: 'Vorhofflimmern',\n    anticoagLabel: 'Antikoaguliert (NOAK)',\n    antiplateletsLabel: 'Thrombozytenaggregationshemmer',\n\n    // Buttons\n    analyzeButton: 'Analysieren',\n    analyzing: 'Analysiere...',\n    printResults: 'Ergebnisse drucken',\n    newAssessment: 'Neue Bewertung starten',\n    startOver: 'Von vorn beginnen',\n    goBack: 'Zurück',\n    goHome: 'Zur Startseite',\n    \n    // Form sections\n    basicInformation: 'Grundinformationen',\n    biomarkersScores: 'Biomarker & Scores',\n    clinicalSymptoms: 'Klinische Symptome',\n    medicalHistory: 'Anamnese',\n    \n    // Form labels with units\n    ageYearsLabel: 'Alter (Jahre)',\n    systolicBpLabel: 'Systolischer RR (mmHg)',\n    diastolicBpLabel: 'Diastolischer RR (mmHg)',\n    gfapValueLabel: 'GFAP-Wert (pg/mL)',\n    fastEdScoreLabel: 'FAST-ED-Score',\n    \n    // Help text\n    ageYearsHelp: 'Patientenalter in Jahren',\n    systolicBpHelp: 'Normal: 90-140 mmHg',\n    diastolicBpHelp: 'Normal: 60-90 mmHg',\n    gfapTooltip: 'Hirnverletzungs-Biomarker',\n    gfapTooltipLong: 'Glial Fibrillary Acidic Protein - Hirnverletzungs-Biomarker',\n    gfapRange: 'Bereich: {min} - {max} pg/mL',\n    fastEdTooltip: '0-9 Skala für LVO-Screening',\n    \n    // Module buttons\n    analyzeIchRisk: 'ICB-Risiko analysieren',\n    analyzeStrokeRisk: 'Schlaganfall-Risiko analysieren',\n    \n    // Alert messages\n    criticalPatient: 'Kritischer Patient',\n    comaAlert: 'Patient ist komatös (GCS < 8). Schnelle Beurteilung erforderlich.',\n    vigilanceReduction: 'Vigilanzminderung (Verminderte Wachheit)',\n    \n    // Additional symptom labels\n    armParesis: 'Armparese',\n    legParesis: 'Beinparese',\n    eyeDeviation: 'Blickdeviation',\n    atrialFibrillation: 'Vorhofflimmern',\n    onNoacDoac: 'NOAK/DOAK-Therapie',\n    onAntiplatelets: 'Thrombozytenaggregationshemmer',\n\n    // Results\n    resultsTitle: 'Bewertungsergebnisse',\n    bleedingRiskAssessment: 'Blutungsrisiko-Bewertung',\n    ichProbability: 'ICB-Risiko',\n    lvoProbability: 'LVO-Risiko',\n    lvoMayBePossible: 'Großgefäßverschluss möglich - weitere Abklärung empfohlen',\n    riskFactorsTitle: 'Hauptrisikofaktoren',\n    increasingRisk: 'Risikoerhöhend',\n    decreasingRisk: 'Risikomindernd',\n    noFactors: 'Keine Faktoren',\n    riskLevel: 'Risikostufe',\n    lowRisk: 'Niedriges Risiko',\n    mediumRisk: 'Mittleres Risiko',\n    highRisk: 'Hohes Risiko',\n\n    // Risk levels\n    riskLow: 'Niedrig',\n    riskMedium: 'Mittel',\n    riskHigh: 'Hoch',\n\n    // Risk Factors Analysis\n    riskFactorsAnalysis: 'Risikofaktoren',\n    contributingFactors: 'Beitragende Faktoren zur Bewertung',\n    riskFactors: 'Risikofaktoren',\n    increaseRisk: 'ERHÖHEN',\n    decreaseRisk: 'VERRINGERN',\n    noPositiveFactors: 'Keine erhöhenden Faktoren',\n    noNegativeFactors: 'Keine verringernden Faktoren',\n    ichRiskFactors: 'ICB-Risikofaktoren',\n    lvoRiskFactors: 'LVO-Risikofaktoren',\n\n    // Critical Alert\n    criticalAlertTitle: 'KRITISCHES RISIKO ERKANNT',\n    criticalAlertMessage: 'Hohe Wahrscheinlichkeit einer intrazerebralen Blutung erkannt.',\n    immediateActionsRequired: 'Sofortige Maßnahmen erforderlich',\n    initiateStrokeProtocol: 'Schlaganfall-Protokoll sofort einleiten',\n    urgentCtImaging: 'Dringende CT-Bildgebung erforderlich',\n    considerBpManagement: 'Blutdruckmanagement erwägen',\n    prepareNeurosurgicalConsult: 'Neurochirurgische Konsultation vorbereiten',\n\n    // Help Modal\n    helpTitle: 'Kurzreferenzleitfaden',\n    gcsTitle: 'Glasgow Coma Scale (GCS)',\n    gcsLow: 'GCS < 8: Komatöser Patient - Koma-Modul verwenden',\n    gcsMod: 'GCS 8-12: Mäßige Beeinträchtigung',\n    gcsHigh: 'GCS 13-15: Leichte Beeinträchtigung',\n    fastEdTitle: 'FAST-ED-Score-Komponenten',\n    fastEdFacial: 'Faziale Parese: 0-1 Punkte',\n    fastEdArm: 'Armschwäche: 0-2 Punkte',\n    fastEdSpeech: 'Sprachveränderungen: 0-2 Punkte',\n    fastEdTime: 'Zeit: Kritischer Faktor',\n    fastEdEye: 'Blickdeviation: 0-2 Punkte',\n    fastEdDenial: 'Verneinung/Neglect: 0-2 Punkte',\n    criticalValuesTitle: 'Kritische Werte',\n    criticalBp: 'Systolischer RR > 180: Erhöhtes ICB-Risiko',\n    criticalGfap: 'GFAP > 500 pg/mL: Signifikanter Marker',\n    criticalFastEd: 'FAST-ED ≥ 4: LVO in Betracht ziehen',\n\n    // FAST-ED Calculator Modal\n    fastEdCalculatorTitle: 'FAST-ED-Score-Rechner',\n    fastEdCalculatorSubtitle: 'Klicken Sie, um FAST-ED-Score-Komponenten zu berechnen',\n    facialPalsyTitle: 'Fazialisparese',\n    facialPalsyNormal: 'Normal (0)',\n    facialPalsyMild: 'Vorhanden (1)',\n    armWeaknessTitle: 'Armschwäche',\n    armWeaknessNormal: 'Normal (0)',\n    armWeaknessMild: 'Leichte Schwäche oder Absinken (1)',\n    armWeaknessSevere: 'Schwere Schwäche oder fällt sofort ab (2)',\n    speechChangesTitle: 'Sprachstörungen',\n    speechChangesNormal: 'Normal (0)',\n    speechChangesMild: 'Leichte Dysarthrie oder Aphasie (1)',\n    speechChangesSevere: 'Schwere Dysarthrie oder Aphasie (2)',\n    eyeDeviationTitle: 'Blickdeviation',\n    eyeDeviationNormal: 'Normal (0)',\n    eyeDeviationPartial: 'Partielle Blickdeviation (1)',\n    eyeDeviationForced: 'Forcierte Blickdeviation (2)',\n    denialNeglectTitle: 'Verneinung/Neglect',\n    denialNeglectNormal: 'Normal (0)',\n    denialNeglectPartial: 'Partieller Neglect (1)',\n    denialNeglectComplete: 'Kompletter Neglect (2)',\n    totalScoreTitle: 'Gesamt-FAST-ED-Score',\n    riskLevel: 'Risikostufe',\n    riskLevelLow: 'NIEDRIG (Score <4)',\n    riskLevelHigh: 'HOCH (Score ≥4 - LVO erwägen)',\n    applyScore: 'Score Anwenden',\n    cancel: 'Abbrechen',\n    \n    // Results Screen Enhancements\n    riskAnalysis: 'Risikoanalyse',\n    riskAnalysisSubtitle: 'Klinische Faktoren in dieser Bewertung',\n    contributingFactors: 'Beitragende Faktoren',\n    factorsShown: 'angezeigt',\n    positiveFactors: 'Positive Faktoren',\n    negativeFactors: 'Negative Faktoren',\n    clinicalInformation: 'Klinische Informationen',\n    clinicalRecommendations: 'Klinische Empfehlungen',\n    clinicalRec1: 'Sofortige Bildgebung erwägen bei hohem ICB-Risiko',\n    clinicalRec2: 'Stroke-Team aktivieren bei LVO-Score ≥ 50%',\n    clinicalRec3: 'Blutdruck engmaschig überwachen',\n    clinicalRec4: 'Alle Befunde gründlich dokumentieren',\n    noDriverData: 'Keine Treiberdaten verfügbar',\n    driverAnalysisUnavailable: 'Treiberanalyse nicht verfügbar',\n    driverInfoNotAvailable: 'Treiberinformationen von diesem Vorhersagemodell nicht verfügbar',\n    driverAnalysisNotAvailable: 'Treiberanalyse für diese Vorhersage nicht verfügbar',\n    lvoNotPossible: 'LVO-Bewertung mit begrenzten Daten nicht möglich',\n    fullExamRequired: 'Vollständige neurologische Untersuchung für LVO-Screening erforderlich',\n    limitedAssessment: 'Begrenzte Bewertung',\n\n    // Disclaimer\n    disclaimer: 'Klinischer Haftungsausschluss',\n    disclaimerText: 'Dieses Tool dient nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie lokale Protokolle. Kein Ersatz für ärztliche Beurteilung.',\n    importantNote: 'Wichtig',\n    importantText: 'Diese Ergebnisse dienen nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie institutionelle Protokolle.',\n    \n    // ICH Volume and Mortality\n    predictedMortality: 'Vorhergesagte 30-Tage-Mortalität',\n    ichVolumeLabel: 'ICB-Volumen',\n    references: 'Referenzen',\n    \n    // Input Summary\n    inputSummaryTitle: 'Eingabezusammenfassung',\n    inputSummarySubtitle: 'Für diese Analyse verwendete Werte',\n\n    // Footer\n    privacyLink: 'Datenschutzrichtlinie',\n    disclaimerLink: 'Medizinischer Haftungsausschluss',\n    versionLink: 'Version 2.1.0 - Research Preview',\n\n    // Privacy and disclaimers\n    privacyPolicy: 'Datenschutzrichtlinie: Dieses Tool verarbeitet Daten lokal. Keine Patientendaten werden gespeichert oder übertragen.',\n    medicalDisclaimer: 'Medizinischer Haftungsausschluss: Dieses Tool dient nur zur klinischen Entscheidungsunterstützung. Verwenden Sie immer klinisches Urteilsvermögen und befolgen Sie lokale Protokolle.',\n\n    // Error messages\n    networkError: 'Netzwerkfehler - bitte überprüfen Sie Ihre Verbindung und versuchen Sie es erneut',\n    requestTimeout: 'Anfrage-Timeout - bitte versuchen Sie es erneut',\n    apiError: 'Ergebnisse konnten nicht abgerufen werden',\n    validationError: 'Bitte überprüfen Sie Ihre Eingabewerte',\n\n    // Session\n    sessionTimeout: 'Ihre Sitzung war 30 Minuten lang inaktiv. Möchten Sie fortfahren?',\n    unsavedData: 'Sie haben ungespeicherte Daten. Sind Sie sicher, dass Sie verlassen möchten?',\n\n    // Stroke Centers\n    nearestCentersTitle: 'Nächstgelegene Schlaganfall-Zentren',\n    useCurrentLocation: 'Aktuellen Standort verwenden',\n    enterLocationPlaceholder: 'Stadt oder Adresse eingeben...',\n    enterManually: 'Standort manuell eingeben',\n    search: 'Suchen',\n    yourLocation: 'Ihr Standort',\n    recommendedCenters: 'Empfohlene Zentren',\n    alternativeCenters: 'Alternative Zentren',\n    noCentersFound: 'Keine Schlaganfall-Zentren in diesem Bereich gefunden',\n    gettingLocation: 'Standort wird ermittelt',\n    searchingLocation: 'Standort wird gesucht',\n    locationError: 'Standort konnte nicht ermittelt werden',\n    locationPermissionDenied: 'Standortzugriff verweigert. Bitte erlauben Sie Standortzugriff und versuchen Sie es erneut.',\n    locationUnavailable: 'Standortinformationen sind nicht verfügbar',\n    locationTimeout: 'Standortanfrage ist abgelaufen',\n    geolocationNotSupported: 'Geolokalisierung wird von diesem Browser nicht unterstützt',\n    geocodingNotImplemented: 'Standortsuche nicht verfügbar. Bitte verwenden Sie GPS oder geben Sie Koordinaten manuell ein.',\n    tryManualEntry: 'Versuchen Sie, Ihren Standort manuell einzugeben oder GPS zu verwenden.',\n    distanceNote: 'Entfernungen werden als Luftlinie berechnet. Tatsächliche Fahrzeiten können variieren.',\n    travelTimeNote: 'Fahrzeiten berechnet für Rettungsfahrzeuge mit Sondersignalen und Vorfahrtsberechtigung.',\n    calculatingTravelTimes: 'Fahrzeiten werden berechnet',\n    minutes: 'Min',\n    poweredByOrs: 'Fahrzeiten bereitgestellt von OpenRoute Service',\n    \n    // Center Types and Services\n    comprehensiveCenter: 'Überregionales Schlaganfall-Zentrum',\n    primaryCenter: 'Regionales Schlaganfall-Zentrum',\n    telemetryCenter: 'Telemedizin-Zentrum',\n    thrombectomy: 'Thrombektomie',\n    neurosurgery: 'Neurochirurgie',\n    icu: 'Intensivstation',\n    telemedicine: 'Telemedizin',\n    stroke_unit: 'Stroke Unit',\n    \n    // Actions\n    call: 'Anrufen',\n    directions: 'Wegbeschreibung',\n    emergency: 'Notfall',\n    certified: 'Zertifiziert',\n\n    // Prerequisites Modal\n    prerequisitesTitle: 'Voraussetzungen für Schlaganfall-Triage',\n    prerequisitesIntro: 'Bitte bestätigen Sie, dass alle folgenden Voraussetzungen erfüllt sind:',\n    prerequisitesWarning: 'Alle Voraussetzungen müssen erfüllt sein, um fortzufahren',\n    continue: 'Weiter',\n    acute_deficit: 'Akutes (schweres) neurologisches Defizit vorhanden',\n    symptom_onset: 'Symptombeginn innerhalb 6h',\n    no_preexisting: 'Keine vorbestehende schwere neurologische Defizite',\n    no_trauma: 'Kein Schädelhirntrauma vorhanden',\n\n    // Differential Diagnoses for Stroke Modules  \n    differentialDiagnoses: 'Differentialdiagnosen',\n    reconfirmTimeWindow: 'Bitte Zeitfenster rekonfirmieren!',\n    unclearTimeWindow: 'Bei unklarem/erweitertem Zeitfenster ist auch ein beginnend demarkierter Hirninfarkt möglich',\n    rareDiagnoses: 'Seltene Diagnosen wie ein Glioblastom sind auch möglich',\n    \n  }\n};\n","// Internationalization utilities for the Stroke Triage Assistant\n\nimport { messages } from './messages.js';\n\nclass I18n {\n  constructor() {\n    this.supportedLanguages = ['en', 'de'];\n    this.currentLanguage = this.detectLanguage();\n  }\n\n  // Detect browser language and default to appropriate language\n  detectLanguage() {\n    // Check if language is already set in localStorage\n    const savedLanguage = localStorage.getItem('language');\n    if (savedLanguage && this.supportedLanguages.includes(savedLanguage)) {\n      return savedLanguage;\n    }\n\n    // Detect browser language\n    const browserLang = navigator.language || navigator.userLanguage;\n    const langCode = browserLang.substring(0, 2).toLowerCase();\n    \n    // Default to German if browser language is German, otherwise English\n    return langCode === 'de' ? 'de' : 'en';\n  }\n\n  // Get current language\n  getCurrentLanguage() {\n    return this.currentLanguage;\n  }\n\n  // Set language and save to localStorage\n  setLanguage(language) {\n    if (this.supportedLanguages.includes(language)) {\n      this.currentLanguage = language;\n      localStorage.setItem('language', language);\n      \n      // Dispatch custom event for language change\n      window.dispatchEvent(new CustomEvent('languageChanged', { \n        detail: { language } \n      }));\n      \n      return true;\n    }\n    return false;\n  }\n\n  // Get supported languages\n  getSupportedLanguages() {\n    return [...this.supportedLanguages];\n  }\n\n  // Translate a message key\n  t(key) {\n    const currentMessages = messages[this.currentLanguage] || messages.en;\n    return currentMessages[key] || key;\n  }\n\n  // Toggle between English and German\n  toggleLanguage() {\n    const newLanguage = this.currentLanguage === 'en' ? 'de' : 'en';\n    return this.setLanguage(newLanguage);\n  }\n\n  // Get language display name\n  getLanguageDisplayName(lang = null) {\n    const language = lang || this.currentLanguage;\n    const displayNames = {\n      'en': 'English',\n      'de': 'Deutsch'\n    };\n    return displayNames[language] || language;\n  }\n\n  // Format date/time according to current locale\n  formatDateTime(date) {\n    const locale = this.currentLanguage === 'de' ? 'de-DE' : 'en-US';\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: '2-digit', \n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    }).format(date);\n  }\n\n  // Format time only according to current locale\n  formatTime(date) {\n    const locale = this.currentLanguage === 'de' ? 'de-DE' : 'en-US';\n    return new Intl.DateTimeFormat(locale, {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    }).format(date);\n  }\n}\n\n// Create singleton instance\nconst i18n = new I18n();\n\n// Export both the instance and the class\nexport { i18n, I18n };\n\n// Export convenience function for translation\nexport const t = (key) => i18n.t(key);","import { renderProgressIndicator } from '../components/progress.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderTriage1() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(1)}\n      <h2>${t('triage1Title')}</h2>\n      <div class=\"triage-question\">\n        ${t('triage1Question')}\n        <small>${t('triage1Help')}</small>\n      </div>\n      <div class=\"triage-buttons\">\n        <button class=\"yes-btn\" data-action=\"triage1\" data-value=\"true\">${t('triage1Yes')}</button>\n        <button class=\"no-btn\" data-action=\"triage1\" data-value=\"false\">${t('triage1No')}</button>\n      </div>\n    </div>\n  `;\n}","import { renderProgressIndicator } from '../components/progress.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderTriage2() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(1)}\n      <h2>${t('triage2Title')}</h2>\n      <div class=\"triage-question\">\n        ${t('triage2Question')}\n        <small>${t('triage2Help')}</small>\n      </div>\n      <div class=\"triage-buttons\">\n        <button class=\"yes-btn\" data-action=\"triage2\" data-value=\"true\">${t('triage2Yes')}</button>\n        <button class=\"no-btn\" data-action=\"triage2\" data-value=\"false\">${t('triage2No')}</button>\n      </div>\n    </div>\n  `;\n}","// Configuration for the Stroke Triage Assistant\n\nexport const API_URLS = {\n  COMA_ICH: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_coma_ich',\n  LDM_ICH: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_limited_data_ich',\n  FULL_STROKE: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_full_stroke'\n};\n\nexport const CRITICAL_THRESHOLDS = {\n  ich: { \n    medium: 25,\n    high: 50\n  },\n  lvo: { \n    medium: 25,\n    high: 50\n  }\n};\n\nexport const GFAP_RANGES = {\n  min: 29,\n  max: 10001,\n  normal: 100,\n  elevated: 500,\n  critical: 1000\n};\n\nexport const APP_CONFIG = {\n  autoSaveInterval: 180000, // 3 minutes to reduce irritating screen blinks\n  sessionTimeout: 30 * 60 * 1000, // 30 minutes\n  requestTimeout: 10000 // 10 seconds\n};\n\nexport const VALIDATION_RULES = {\n  age_years: { required: true, min: 0, max: 120 },\n  systolic_bp: { required: true, min: 60, max: 300 },\n  diastolic_bp: { required: true, min: 30, max: 200 },\n  gfap_value: { required: true, min: GFAP_RANGES.min, max: GFAP_RANGES.max },\n  fast_ed_score: { required: true, min: 0, max: 9 }\n};","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderComa() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>${t('comaModuleTitle') || 'Coma Module'}</h2>\n      <form data-module=\"coma\">\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              ${t('gfapValueLabel')}\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('gfapTooltipLong')}</span>\n              </span>\n            </label>\n            <input type=\"number\" id=\"gfap_value\" name=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required aria-describedby=\"gfap-help\">\n            <div id=\"gfap-help\" class=\"input-help\">\n              ${t('gfapRange').replace('{min}', GFAP_RANGES.min).replace('{max}', GFAP_RANGES.max)}\n            </div>\n          </div>\n        </div>\n        <button type=\"submit\" class=\"primary\">${t('analyzeIchRisk')}</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">${t('startOver')}</button>\n      </form>\n    </div>\n  `;\n}","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderLimited() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>${t('limitedDataModuleTitle') || 'Limited Data Module'}</h2>\n      <form data-module=\"limited\">\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"age_years\">${t('ageYearsLabel')}</label>\n            <input type=\"number\" name=\"age_years\" id=\"age_years\" min=\"0\" max=\"120\" required aria-describedby=\"age-help\">\n            <div id=\"age-help\" class=\"input-help\">${t('ageYearsHelp')}</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"systolic_bp\">${t('systolicBpLabel')}</label>\n            <div class=\"input-with-unit\">\n              <input type=\"number\" name=\"systolic_bp\" id=\"systolic_bp\" min=\"60\" max=\"300\" required aria-describedby=\"sbp-help\" inputmode=\"numeric\">\n              <span class=\"unit\">mmHg</span>\n            </div>\n            <div id=\"sbp-help\" class=\"input-help\">${t('systolicBpHelp')}</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"diastolic_bp\">${t('diastolicBpLabel')}</label>\n            <div class=\"input-with-unit\">\n              <input type=\"number\" name=\"diastolic_bp\" id=\"diastolic_bp\" min=\"30\" max=\"200\" required aria-describedby=\"dbp-help\" inputmode=\"numeric\">\n              <span class=\"unit\">mmHg</span>\n            </div>\n            <div id=\"dbp-help\" class=\"input-help\">${t('diastolicBpHelp')}</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              ${t('gfapValueLabel')}\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('gfapTooltipLong')}</span>\n              </span>\n            </label>\n            <div class=\"input-with-unit\">\n              <input type=\"number\" name=\"gfap_value\" id=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required inputmode=\"decimal\">\n              <span class=\"unit\">pg/mL</span>\n            </div>\n          </div>\n        </div>\n        <div class=\"checkbox-group\">\n          <label class=\"checkbox-wrapper\">\n            <input type=\"checkbox\" name=\"vigilanzminderung\" id=\"vigilanzminderung\">\n            <span class=\"checkbox-label\">${t('vigilanceReduction')}</span>\n          </label>\n        </div>\n        <button type=\"submit\" class=\"primary\">${t('analyzeIchRisk')}</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">${t('startOver')}</button>\n      </form>\n    </div>\n  `;\n}\n","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderFull() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>${t('fullStrokeModuleTitle') || 'Full Stroke Module'}</h2>\n      <form data-module=\"full\">\n        <h3>${t('basicInformation')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"age_years\">${t('ageYearsLabel')}</label>\n            <input type=\"number\" name=\"age_years\" id=\"age_years\" min=\"0\" max=\"120\" required>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"systolic_bp\">${t('systolicBpLabel')}</label>\n            <div class=\"input-with-unit\">\n              <input type=\"number\" name=\"systolic_bp\" id=\"systolic_bp\" min=\"60\" max=\"300\" required inputmode=\"numeric\">\n              <span class=\"unit\">mmHg</span>\n            </div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"diastolic_bp\">${t('diastolicBpLabel')}</label>\n            <div class=\"input-with-unit\">\n              <input type=\"number\" name=\"diastolic_bp\" id=\"diastolic_bp\" min=\"30\" max=\"200\" required inputmode=\"numeric\">\n              <span class=\"unit\">mmHg</span>\n            </div>\n          </div>\n        </div>\n\n        <h3>${t('biomarkersScores')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              ${t('gfapValueLabel')}\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('gfapTooltip')}</span>\n              </span>\n            </label>\n            <div class=\"input-with-unit\">\n              <input type=\"number\" name=\"gfap_value\" id=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required inputmode=\"decimal\">\n              <span class=\"unit\">pg/mL</span>\n            </div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"fast_ed_score\">\n              ${t('fastEdScoreLabel')}\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('fastEdCalculatorSubtitle')}</span>\n              </span>\n            </label>\n            <input type=\"number\" name=\"fast_ed_score\" id=\"fast_ed_score\" min=\"0\" max=\"9\" required readonly placeholder=\"${t('fastEdCalculatorSubtitle')}\" style=\"cursor: pointer;\">\n            <input type=\"hidden\" name=\"armparese\" id=\"armparese_hidden\" value=\"false\">\n            <input type=\"hidden\" name=\"eye_deviation\" id=\"eye_deviation_hidden\" value=\"false\">\n          </div>\n        </div>\n\n        <h3>${t('clinicalSymptoms')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"headache\" id=\"headache\">\n              <span class=\"checkbox-label\">${t('headacheLabel')}</span>\n            </label>\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"vigilanzminderung\" id=\"vigilanzminderung\">\n              <span class=\"checkbox-label\">${t('vigilanzLabel')}</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"beinparese\" id=\"beinparese\">\n              <span class=\"checkbox-label\">${t('legParesis')}</span>\n            </label>\n          </div>\n        </div>\n\n        <h3>${t('medicalHistory')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"atrial_fibrillation\" id=\"atrial_fibrillation\">\n              <span class=\"checkbox-label\">${t('atrialFibrillation')}</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"anticoagulated_noak\" id=\"anticoagulated_noak\">\n              <span class=\"checkbox-label\">${t('onNoacDoac')}</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"antiplatelets\" id=\"antiplatelets\">\n              <span class=\"checkbox-label\">${t('onAntiplatelets')}</span>\n            </label>\n          </div>\n        </div>\n\n        <button type=\"submit\" class=\"primary\">${t('analyzeStrokeRisk')}</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">${t('startOver')}</button>\n      </form>\n    </div>\n  `;\n}\n","import { t } from '../../localization/i18n.js';\n\nexport function renderCriticalAlert() {\n  return `\n    <div class=\"critical-alert\">\n      <h4><span class=\"alert-icon\">🚨</span> ${t('criticalAlertTitle')}</h4>\n      <p>${t('criticalAlertMessage')}</p>\n    </div>\n  `;\n}","// User-friendly label formatter for technical field names\n// Converts technical driver and field names to user-friendly labels\n\nimport { t } from '../localization/i18n.js';\n\n/**\n * Mapping of technical field names to the same labels used in input forms\n * Uses existing localization keys from the input forms\n */\nconst FIELD_LABEL_MAP = {\n  // Age and demographics\n  'age_years': 'ageLabel',\n  'age': 'ageLabel',\n  \n  // Blood pressure\n  'systolic_bp': 'systolicLabel', \n  'diastolic_bp': 'diastolicLabel',\n  'systolic_blood_pressure': 'systolicLabel',\n  'diastolic_blood_pressure': 'diastolicLabel',\n  'blood_pressure_systolic': 'systolicLabel',\n  'blood_pressure_diastolic': 'diastolicLabel',\n  \n  // Biomarkers\n  'gfap_value': 'gfapLabel',\n  'gfap': 'gfapLabel',\n  'gfap_level': 'gfapLabel',\n  \n  // Clinical scores\n  'fast_ed_score': 'fastEdLabel',\n  'fast_ed': 'fastEdLabel',\n  'fast_ed_total': 'fastEdLabel',\n  \n  // Neurological symptoms\n  'vigilanzminderung': 'vigilanzLabel',\n  'vigilance_reduction': 'vigilanzLabel',\n  'reduced_consciousness': 'vigilanzLabel',\n  'armparese': 'armPareseLabel',\n  'arm_paresis': 'armPareseLabel',\n  'arm_weakness': 'armPareseLabel',\n  'beinparese': 'beinPareseLabel',\n  'leg_paresis': 'beinPareseLabel',\n  'leg_weakness': 'beinPareseLabel',\n  'eye_deviation': 'eyeDeviationLabel',\n  'blickdeviation': 'eyeDeviationLabel',\n  'headache': 'headacheLabel',\n  'kopfschmerzen': 'headacheLabel',\n  \n  // Medical history\n  'atrial_fibrillation': 'atrialFibLabel',\n  'vorhofflimmern': 'atrialFibLabel',\n  'anticoagulated_noak': 'anticoagLabel',\n  'anticoagulation': 'anticoagLabel',\n  'antiplatelets': 'antiplateletsLabel',\n  'thrombozytenaggregationshemmer': 'antiplateletsLabel'\n};\n\n/**\n * Fallback patterns for common technical terms\n * Used when no specific mapping exists\n */\nconst PATTERN_REPLACEMENTS = [\n  { pattern: /_score$/, replacement: ' Score' },\n  { pattern: /_value$/, replacement: ' Level' },\n  { pattern: /_bp$/, replacement: ' Blood Pressure' },\n  { pattern: /_years?$/, replacement: ' (years)' },\n  { pattern: /^ich_/, replacement: 'Brain Bleeding ' },\n  { pattern: /^lvo_/, replacement: 'Large Vessel ' },\n  { pattern: /parese$/, replacement: 'Weakness' },\n  { pattern: /deviation$/, replacement: 'Movement' }\n];\n\n/**\n * Format a technical field name using the same labels as input forms\n * @param {string} fieldName - Technical field name (e.g., 'fast_ed_score')\n * @returns {string} - Consistent medical terminology label\n */\nexport function formatDriverName(fieldName) {\n  if (!fieldName) return '';\n  \n  // First, try to find exact match in mapping to input form labels\n  const mappedKey = FIELD_LABEL_MAP[fieldName.toLowerCase()];\n  if (mappedKey) {\n    const translated = t(mappedKey);\n    if (translated && translated !== mappedKey) {\n      return translated;\n    }\n  }\n  \n  // Apply pattern-based replacements for common medical terms\n  let formatted = fieldName.toLowerCase();\n  PATTERN_REPLACEMENTS.forEach(({ pattern, replacement }) => {\n    formatted = formatted.replace(pattern, replacement);\n  });\n  \n  // Clean up and format - keep medical terminology consistent\n  formatted = formatted\n    .replace(/_/g, ' ')           // Replace underscores with spaces\n    .replace(/\\b\\w/g, l => l.toUpperCase()) // Title case\n    .trim();\n    \n  return formatted;\n}\n\n/**\n * Format field names for input summary display\n * @param {string} fieldName - Technical field name\n * @returns {string} - User-friendly label for summary\n */\nexport function formatSummaryLabel(fieldName) {\n  // Use the same logic but with specific summary context\n  const friendlyLabel = formatDriverName(fieldName);\n  \n  // Remove units from summary labels as they're shown in values\n  return friendlyLabel\n    .replace(/\\s*\\([^)]*\\)\\s*/g, '') // Remove anything in parentheses\n    .trim();\n}\n\n/**\n * Format field values for display\n * @param {any} value - Field value\n * @param {string} fieldName - Field name for context\n * @returns {string} - Formatted display value\n */\nexport function formatDisplayValue(value, fieldName = '') {\n  if (value === null || value === undefined || value === '') {\n    return '';\n  }\n  \n  if (typeof value === 'boolean') {\n    return value ? '✓' : '✗';\n  }\n  \n  if (typeof value === 'number') {\n    // Add units based on field type\n    if (fieldName.includes('bp') || fieldName.includes('blood_pressure')) {\n      return `${value} mmHg`;\n    }\n    if (fieldName.includes('gfap')) {\n      return `${value} pg/mL`;\n    }\n    if (fieldName.includes('age')) {\n      return `${value} years`;\n    }\n    if (fieldName.includes('score')) {\n      return value.toString();\n    }\n    \n    // Default number formatting\n    return Number.isInteger(value) ? value.toString() : value.toFixed(1);\n  }\n  \n  return value.toString();\n}\n\n/**\n * Get a short description for a clinical field\n * @param {string} fieldName - Technical field name\n * @returns {string} - Brief description\n */\nexport function getFieldDescription(fieldName) {\n  const descriptions = {\n    'fast_ed_score': 'Stroke severity assessment',\n    'gfap_value': 'Brain injury biomarker',\n    'vigilanzminderung': 'Level of consciousness',\n    'systolic_bp': 'Upper blood pressure reading',\n    'diastolic_bp': 'Lower blood pressure reading',\n    'atrial_fibrillation': 'Irregular heart rhythm',\n    'anticoagulated_noak': 'Blood-thinning medication',\n    'antiplatelets': 'Anti-clotting medication'\n  };\n  \n  return descriptions[fieldName.toLowerCase()] || '';\n}","import { t } from '../../localization/i18n.js';\nimport { formatDriverName } from '../../utils/label-formatter.js';\n\nexport function renderDriversSection(ich, lvo) {\n  console.log('=== DRIVER RENDERING SECTION ===');\n  console.log('🧠 ICH result received:', { \n    probability: ich?.probability, \n    hasDrivers: !!ich?.drivers,\n    module: ich?.module \n  });\n  console.log('🩸 LVO result received:', { \n    probability: lvo?.probability, \n    hasDrivers: !!lvo?.drivers,\n    module: lvo?.module,\n    notPossible: lvo?.notPossible \n  });\n  \n  if (!ich?.drivers && !lvo?.drivers) {\n    console.log('❌ No drivers available for rendering');\n    return '';\n  }\n  \n  let html = `\n    <div class=\"drivers-section\">\n      <div class=\"drivers-header\">\n        <h3><span class=\"driver-header-icon\">🎯</span> ${t('riskAnalysis')}</h3>\n        <p class=\"drivers-subtitle\">${t('riskAnalysisSubtitle')}</p>\n      </div>\n      <div class=\"enhanced-drivers-grid\">\n  `;\n  \n  if (ich?.drivers) {\n    console.log('🧠 Rendering ICH drivers panel');\n    html += renderEnhancedDriversPanel(ich.drivers, 'ICH', 'ich', ich.probability);\n  }\n  \n  if (lvo?.drivers && !lvo.notPossible) {\n    console.log('🩸 Rendering LVO drivers panel');\n    html += renderEnhancedDriversPanel(lvo.drivers, 'LVO', 'lvo', lvo.probability);\n  }\n  \n  html += `\n      </div>\n    </div>\n  `;\n  return html;\n}\n\nexport function renderDriversPanel(drivers, title, type) {\n  if (!drivers || Object.keys(drivers).length === 0) {\n    return `\n      <div class=\"drivers-panel\">\n        <h4>\n          <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\n          ${title} ${t('riskFactors')}\n        </h4>\n        <p style=\"color: var(--text-secondary); font-style: italic;\">\n          Driver information not available from this prediction model.\n        </p>\n      </div>\n    `;\n  }\n\n  const driversViewModel = normalizeDrivers(drivers);\n  \n  if (driversViewModel.kind === 'unavailable') {\n    return `\n      <div class=\"drivers-panel\">\n        <h4>\n          <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\n          ${title} ${t('riskFactors')}\n        </h4>\n        <p style=\"color: var(--text-secondary); font-style: italic;\">\n          Driver analysis not available for this prediction.\n        </p>\n      </div>\n    `;\n  }\n\n  let html = `\n    <div class=\"drivers-panel\">\n      <h4>\n        <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\n        ${title} Risk Factors\n      </h4>\n  `;\n\n  // Show positive drivers (increase risk)\n  if (driversViewModel.positive.length > 0) {\n    driversViewModel.positive.forEach(driver => {\n      const percentage = Math.abs(driver.weight * 100);\n      const width = Math.min(percentage * 2, 100); // Scale for visualization\n      html += `\n        <div class=\"driver-item\">\n          <span class=\"driver-label\">${driver.label}</span>\n          <div class=\"driver-bar-container\">\n            <div class=\"driver-bar positive\" style=\"width: ${width}%\">\n              <span class=\"driver-value\">+${percentage.toFixed(0)}%</span>\n            </div>\n          </div>\n        </div>\n      `;\n    });\n  }\n\n  // Show negative drivers (decrease risk)\n  if (driversViewModel.negative.length > 0) {\n    driversViewModel.negative.forEach(driver => {\n      const percentage = Math.abs(driver.weight * 100);\n      const width = Math.min(percentage * 2, 100); // Scale for visualization\n      html += `\n        <div class=\"driver-item\">\n          <span class=\"driver-label\">${driver.label}</span>\n          <div class=\"driver-bar-container\">\n            <div class=\"driver-bar negative\" style=\"width: ${width}%\">\n              <span class=\"driver-value\">-${percentage.toFixed(0)}%</span>\n            </div>\n          </div>\n        </div>\n      `;\n    });\n  }\n\n  // Show metadata if available\n  if (driversViewModel.meta && Object.keys(driversViewModel.meta).length > 0) {\n    html += `\n      <div style=\"margin-top: 15px; padding-top: 10px; border-top: 1px solid var(--border-color);\">\n        <small style=\"color: var(--text-secondary);\">\n    `;\n    \n    if (driversViewModel.meta.base_value !== undefined) {\n      html += `Base value: ${driversViewModel.meta.base_value.toFixed(2)} `;\n    }\n    if (driversViewModel.meta.contrib_sum !== undefined) {\n      html += `Contrib sum: ${driversViewModel.meta.contrib_sum.toFixed(2)} `;\n    }\n    if (driversViewModel.meta.logit_total !== undefined) {\n      html += `Logit total: ${driversViewModel.meta.logit_total.toFixed(2)}`;\n    }\n    \n    html += `\n        </small>\n      </div>\n    `;\n  }\n\n  html += `</div>`;\n  return html;\n}\n\nexport function renderEnhancedDriversPanel(drivers, title, type, probability) {\n  console.log(`--- ${title} Driver Panel Debug ---`);\n  console.log('Raw drivers input:', drivers);\n  console.log('Title:', title, 'Type:', type, 'Probability:', probability);\n  \n  if (!drivers || Object.keys(drivers).length === 0) {\n    console.log(`No drivers data for ${title}`);\n    return `\n      <div class=\"enhanced-drivers-panel ${type}\">\n        <div class=\"panel-header\">\n          <div class=\"panel-icon ${type}\">${type === 'ich' ? '🩸' : '🧠'}</div>\n          <div class=\"panel-title\">\n            <h4>${title} ${t('riskFactors')}</h4>\n            <span class=\"panel-subtitle\">${t('noDriverData')}</span>\n          </div>\n        </div>\n        <p class=\"no-drivers-message\">\n          ${t('driverInfoNotAvailable')}\n        </p>\n      </div>\n    `;\n  }\n\n  // Drivers are already in the correct format from our new extraction\n  const driversViewModel = drivers;\n  console.log(`${title} drivers ready for display:`, driversViewModel);\n  \n  if (driversViewModel.kind === 'unavailable') {\n    return `\n      <div class=\"enhanced-drivers-panel ${type}\">\n        <div class=\"panel-header\">\n          <div class=\"panel-icon ${type}\">${type === 'ich' ? '🩸' : '🧠'}</div>\n          <div class=\"panel-title\">\n            <h4>${title} ${t('riskFactors')}</h4>\n            <span class=\"panel-subtitle\">${t('driverAnalysisUnavailable')}</span>\n          </div>\n        </div>\n        <p class=\"no-drivers-message\">\n          ${t('driverAnalysisNotAvailable')}\n        </p>\n      </div>\n    `;\n  }\n\n  // Sort drivers by absolute impact and limit to top 6 most important\n  const positiveDrivers = driversViewModel.positive\n    .sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight))\n    .slice(0, 3); // Top 3 positive drivers\n  \n  const negativeDrivers = driversViewModel.negative\n    .sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight))\n    .slice(0, 3); // Top 3 negative drivers\n\n  console.log(`🎯 ${title} Final displayed drivers:`);\n  console.log('  Top positive:', positiveDrivers.map(d => `${d.label}: +${(Math.abs(d.weight) * 100).toFixed(1)}%`));\n  console.log('  Top negative:', negativeDrivers.map(d => `${d.label}: -${(Math.abs(d.weight) * 100).toFixed(1)}%`));\n\n  const maxWeight = Math.max(\n    ...positiveDrivers.map(d => Math.abs(d.weight)),\n    ...negativeDrivers.map(d => Math.abs(d.weight)),\n    0.01 // Prevent division by zero\n  );\n\n  let html = `\n    <div class=\"enhanced-drivers-panel ${type}\">\n      <div class=\"panel-header\">\n        <div class=\"panel-icon ${type}\">${type === 'ich' ? '🩸' : '🧠'}</div>\n        <div class=\"panel-title\">\n          <h4>${title} ${t('riskFactors')}</h4>\n          <span class=\"panel-subtitle\">${t('contributingFactors')}</span>\n        </div>\n      </div>\n      \n      <div class=\"drivers-split-view\">\n        <div class=\"drivers-column positive-column\">\n          <div class=\"column-header\">\n            <span class=\"column-icon\">↑</span>\n            <span class=\"column-title\">${t('increaseRisk')}</span>\n          </div>\n          <div class=\"compact-drivers\">\n  `;\n\n  // Render positive drivers\n  if (positiveDrivers.length > 0) {\n    positiveDrivers.forEach((driver) => {\n      const percentage = Math.abs(driver.weight * 100);\n      const barWidth = (Math.abs(driver.weight) / maxWeight) * 100;\n      const cleanLabel = formatDriverName(driver.label);\n      \n      html += `\n        <div class=\"compact-driver-item\">\n          <div class=\"compact-driver-label\">${cleanLabel}</div>\n          <div class=\"compact-driver-bar positive\" style=\"width: ${barWidth}%\">\n            <span class=\"compact-driver-value\">+${percentage.toFixed(0)}%</span>\n          </div>\n        </div>\n      `;\n    });\n  } else {\n    html += `<div class=\"no-factors\">${t('noPositiveFactors')}</div>`;\n  }\n\n  html += `\n          </div>\n        </div>\n        \n        <div class=\"drivers-column negative-column\">\n          <div class=\"column-header\">\n            <span class=\"column-icon\">↓</span>\n            <span class=\"column-title\">${t('decreaseRisk')}</span>\n          </div>\n          <div class=\"compact-drivers\">\n  `;\n\n  // Render negative drivers\n  if (negativeDrivers.length > 0) {\n    negativeDrivers.forEach((driver) => {\n      const percentage = Math.abs(driver.weight * 100);\n      const barWidth = (Math.abs(driver.weight) / maxWeight) * 100;\n      const cleanLabel = formatDriverName(driver.label);\n      \n      html += `\n        <div class=\"compact-driver-item\">\n          <div class=\"compact-driver-label\">${cleanLabel}</div>\n          <div class=\"compact-driver-bar negative\" style=\"width: ${barWidth}%\">\n            <span class=\"compact-driver-value\">-${percentage.toFixed(0)}%</span>\n          </div>\n        </div>\n      `;\n    });\n  } else {\n    html += `<div class=\"no-factors\">${t('noNegativeFactors')}</div>`;\n  }\n\n  html += `\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n  \n  return html;\n}","// Comprehensive stroke center database for Germany\n// Covers Bayern, Baden-Württemberg, and Nordrhein-Westfalen\n// Total: 316 hospitals with hierarchical capabilities\n\nconst COMPREHENSIVE_HOSPITAL_DATABASE = {\n  bayern: {\n    neurosurgicalCenters: [\n      {\n        id: \"BY-NS-001\",\n        name: \"LMU Klinikum München - Großhadern\",\n        address: \"Marchioninistraße 15, 81377 München\",\n        coordinates: { lat: 48.1106, lng: 11.4684 },\n        phone: \"+49 89 4400-0\",\n        emergency: \"+49 89 4400-73331\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1440,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-NS-002\", \n        name: \"Klinikum rechts der Isar München (TUM)\",\n        address: \"Ismaninger Str. 22, 81675 München\",\n        coordinates: { lat: 48.1497, lng: 11.6052 },\n        phone: \"+49 89 4140-0\",\n        emergency: \"+49 89 4140-2249\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1161,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-NS-003\",\n        name: \"Städtisches Klinikum München Schwabing\",\n        address: \"Kölner Platz 1, 80804 München\",\n        coordinates: { lat: 48.1732, lng: 11.5755 },\n        phone: \"+49 89 3068-0\",\n        emergency: \"+49 89 3068-2050\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 648,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-NS-004\",\n        name: \"Städtisches Klinikum München Bogenhausen\",\n        address: \"Englschalkinger Str. 77, 81925 München\",\n        coordinates: { lat: 48.1614, lng: 11.6254 },\n        phone: \"+49 89 9270-0\",\n        emergency: \"+49 89 9270-2050\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 689,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-NS-005\",\n        name: \"Universitätsklinikum Erlangen\",\n        address: \"Maximiliansplatz 2, 91054 Erlangen\",\n        coordinates: { lat: 49.5982, lng: 11.0037 },\n        phone: \"+49 9131 85-0\",\n        emergency: \"+49 9131 85-39003\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1371,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-NS-006\",\n        name: \"Universitätsklinikum Regensburg\",\n        address: \"Franz-Josef-Strauß-Allee 11, 93053 Regensburg\",\n        coordinates: { lat: 49.0134, lng: 12.0991 },\n        phone: \"+49 941 944-0\",\n        emergency: \"+49 941 944-7501\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1042,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-NS-007\",\n        name: \"Universitätsklinikum Würzburg\",\n        address: \"Oberdürrbacher Str. 6, 97080 Würzburg\",\n        coordinates: { lat: 49.7840, lng: 9.9721 },\n        phone: \"+49 931 201-0\",\n        emergency: \"+49 931 201-24444\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1264,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-NS-008\",\n        name: \"Klinikum Nürnberg Nord\",\n        address: \"Prof.-Ernst-Nathan-Str. 1, 90419 Nürnberg\",\n        coordinates: { lat: 49.4521, lng: 11.0767 },\n        phone: \"+49 911 398-0\",\n        emergency: \"+49 911 398-2369\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1368,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-NS-009\",\n        name: \"Universitätsklinikum Augsburg\",\n        address: \"Stenglinstr. 2, 86156 Augsburg\",\n        coordinates: { lat: 48.3668, lng: 10.9093 },\n        phone: \"+49 821 400-01\",\n        emergency: \"+49 821 400-2356\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1740,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-NS-010\",\n        name: \"Klinikum Aschaffenburg-Alzenau\",\n        address: \"Am Hasenkopf 1, 63739 Aschaffenburg\",\n        coordinates: { lat: 49.9737, lng: 9.1570 },\n        phone: \"+49 6021 32-0\",\n        emergency: \"+49 6021 32-2800\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 40,\n        network: \"TRANSIT\"\n      },\n      {\n        id: \"BY-NS-011\", \n        name: \"Klinikum Landshut\",\n        address: \"Robert-Koch-Str. 1, 84034 Landshut\",\n        coordinates: { lat: 48.5665, lng: 12.1512 },\n        phone: \"+49 871 698-0\",\n        emergency: \"+49 871 698-3333\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 505,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-NS-012\",\n        name: \"Klinikum Coburg\",\n        address: \"Ketschendorfer Str. 33, 96450 Coburg\",\n        coordinates: { lat: 50.2596, lng: 10.9644 },\n        phone: \"+49 9561 22-0\",\n        emergency: \"+49 9561 22-6800\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 547,\n        network: \"STENO\"\n      },\n      {\n        id: \"BY-NS-013\",\n        name: \"Klinikum Passau\",\n        address: \"Bischof-Pilgrim-Str. 1, 94032 Passau\",\n        coordinates: { lat: 48.5665, lng: 13.4777 },\n        phone: \"+49 851 5300-0\",\n        emergency: \"+49 851 5300-2222\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 696,\n        network: \"TEMPiS\"\n      }\n    ],\n\n    comprehensiveStrokeCenters: [\n      {\n        id: \"BY-CS-001\",\n        name: \"Klinikum Bamberg\",\n        address: \"Buger Str. 80, 96049 Bamberg\",\n        coordinates: { lat: 49.8988, lng: 10.9027 },\n        phone: \"+49 951 503-0\",\n        emergency: \"+49 951 503-11101\",\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 630,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-CS-002\",\n        name: \"Klinikum Bayreuth\",\n        address: \"Preuschwitzer Str. 101, 95445 Bayreuth\",\n        coordinates: { lat: 49.9459, lng: 11.5779 },\n        phone: \"+49 921 400-0\",\n        emergency: \"+49 921 400-5401\",\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 848,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-CS-003\",\n        name: \"Klinikum Coburg\",\n        address: \"Ketschendorfer Str. 33, 96450 Coburg\",\n        coordinates: { lat: 50.2596, lng: 10.9685 },\n        phone: \"+49 9561 22-0\",\n        emergency: \"+49 9561 22-6300\",\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 522,\n        network: \"TEMPiS\"\n      }\n    ],\n\n    regionalStrokeUnits: [\n      {\n        id: \"BY-RSU-001\",\n        name: \"Goldberg-Klinik Kelheim\",\n        address: \"Traubenweg 3, 93309 Kelheim\",\n        coordinates: { lat: 48.9166, lng: 11.8742 },\n        phone: \"+49 9441 702-0\",\n        emergency: \"+49 9441 702-6800\",\n        thrombolysis: true,\n        beds: 200,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-RSU-002\",\n        name: \"DONAUISAR Klinikum Deggendorf\",\n        address: \"Perlasberger Str. 41, 94469 Deggendorf\",\n        coordinates: { lat: 48.8372, lng: 12.9619 },\n        phone: \"+49 991 380-0\",\n        emergency: \"+49 991 380-2201\",\n        thrombolysis: true,\n        beds: 450,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-RSU-003\",\n        name: \"Klinikum St. Elisabeth Straubing\",\n        address: \"St.-Elisabeth-Str. 23, 94315 Straubing\",\n        coordinates: { lat: 48.8742, lng: 12.5733 },\n        phone: \"+49 9421 710-0\",\n        emergency: \"+49 9421 710-2000\",\n        thrombolysis: true,\n        beds: 580,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-RSU-004\",\n        name: \"Klinikum Freising\",\n        address: \"Mainburger Str. 29, 85356 Freising\",\n        coordinates: { lat: 48.4142, lng: 11.7461 },\n        phone: \"+49 8161 24-0\",\n        emergency: \"+49 8161 24-2800\",\n        thrombolysis: true,\n        beds: 380,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-RSU-005\",\n        name: \"Klinikum Landkreis Erding\",\n        address: \"Bajuwarenstr. 5, 85435 Erding\",\n        coordinates: { lat: 48.3061, lng: 11.9067 },\n        phone: \"+49 8122 59-0\",\n        emergency: \"+49 8122 59-2201\",\n        thrombolysis: true,\n        beds: 350,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-RSU-006\",\n        name: \"Helios Amper-Klinikum Dachau\",\n        address: \"Krankenhausstr. 15, 85221 Dachau\",\n        coordinates: { lat: 48.2599, lng: 11.4342 },\n        phone: \"+49 8131 76-0\",\n        emergency: \"+49 8131 76-2201\",\n        thrombolysis: true,\n        beds: 480,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-RSU-007\",\n        name: \"Klinikum Fürstenfeldbruck\",\n        address: \"Dachauer Str. 33, 82256 Fürstenfeldbruck\",\n        coordinates: { lat: 48.1772, lng: 11.2578 },\n        phone: \"+49 8141 99-0\",\n        emergency: \"+49 8141 99-2201\",\n        thrombolysis: true,\n        beds: 420,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-RSU-008\",\n        name: \"Klinikum Ingolstadt\",\n        address: \"Krumenauerstraße 25, 85049 Ingolstadt\",\n        coordinates: { lat: 48.7665, lng: 11.4364 },\n        phone: \"+49 841 880-0\",\n        emergency: \"+49 841 880-2201\",\n        thrombolysis: true,\n        beds: 665,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-RSU-009\",\n        name: \"Klinikum Passau\",\n        address: \"Bischof-Pilgrim-Str. 1, 94032 Passau\",\n        coordinates: { lat: 48.5665, lng: 13.4513 },\n        phone: \"+49 851 5300-0\",\n        emergency: \"+49 851 5300-2100\",\n        thrombolysis: true,\n        beds: 540,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-RSU-010\",\n        name: \"Klinikum Landshut\",\n        address: \"Robert-Koch-Str. 1, 84034 Landshut\",\n        coordinates: { lat: 48.5436, lng: 12.1619 },\n        phone: \"+49 871 698-0\",\n        emergency: \"+49 871 698-3333\",\n        thrombolysis: true,\n        beds: 790,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-RSU-011\",\n        name: \"RoMed Klinikum Rosenheim\",\n        address: \"Pettenkoferstr. 10, 83022 Rosenheim\",\n        coordinates: { lat: 47.8567, lng: 12.1265 },\n        phone: \"+49 8031 365-0\",\n        emergency: \"+49 8031 365-3711\",\n        thrombolysis: true,\n        beds: 870,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-RSU-012\",\n        name: \"Klinikum Memmingen\",\n        address: \"Bismarckstr. 23, 87700 Memmingen\",\n        coordinates: { lat: 47.9833, lng: 10.1833 },\n        phone: \"+49 8331 70-0\",\n        emergency: \"+49 8331 70-2500\",\n        thrombolysis: true,\n        beds: 520,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-RSU-013\",\n        name: \"Klinikum Kempten-Oberallgäu\",\n        address: \"Robert-Weixler-Str. 50, 87439 Kempten\",\n        coordinates: { lat: 47.7261, lng: 10.3097 },\n        phone: \"+49 831 530-0\",\n        emergency: \"+49 831 530-2201\",\n        thrombolysis: true,\n        beds: 650,\n        network: \"TEMPiS\"\n      },\n      {\n        id: \"BY-RSU-014\",\n        name: \"Klinikum Aschaffenburg-Alzenau\",\n        address: \"Am Hasenkopf 1, 63739 Aschaffenburg\",\n        coordinates: { lat: 49.9747, lng: 9.1581 },\n        phone: \"+49 6021 32-0\",\n        emergency: \"+49 6021 32-2700\",\n        thrombolysis: true,\n        beds: 590,\n        network: \"TEMPiS\"\n      }\n    ],\n\n    thrombolysisHospitals: [\n      // Add more smaller hospitals with thrombolysis capability\n      {\n        id: \"BY-TH-001\",\n        name: \"Krankenhaus Vilsbiburg\",\n        address: \"Sonnenstraße 10, 84137 Vilsbiburg\",\n        coordinates: { lat: 48.6333, lng: 12.2833 },\n        phone: \"+49 8741 60-0\",\n        thrombolysis: true,\n        beds: 180\n      },\n      {\n        id: \"BY-TH-002\",\n        name: \"Krankenhaus Eggenfelden\",\n        address: \"Pfarrkirchener Str. 5, 84307 Eggenfelden\",\n        coordinates: { lat: 48.4000, lng: 12.7667 },\n        phone: \"+49 8721 98-0\",\n        thrombolysis: true,\n        beds: 220\n      }\n      // ... more hospitals would be added here\n    ]\n  },\n\n  badenWuerttemberg: {\n    neurosurgicalCenters: [\n      {\n        id: \"BW-NS-001\",\n        name: \"Universitätsklinikum Freiburg\",\n        address: \"Hugstetter Str. 55, 79106 Freiburg\",\n        coordinates: { lat: 48.0025, lng: 7.8347 },\n        phone: \"+49 761 270-0\",\n        emergency: \"+49 761 270-34010\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1600,\n        network: \"FAST\"\n      },\n      {\n        id: \"BW-NS-002\",\n        name: \"Universitätsklinikum Heidelberg\",\n        address: \"Im Neuenheimer Feld 400, 69120 Heidelberg\",\n        coordinates: { lat: 49.4178, lng: 8.6706 },\n        phone: \"+49 6221 56-0\",\n        emergency: \"+49 6221 56-36643\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1621,\n        network: \"FAST\"\n      },\n      {\n        id: \"BW-NS-003\",\n        name: \"Universitätsklinikum Tübingen\",\n        address: \"Geissweg 3, 72076 Tübingen\",\n        coordinates: { lat: 48.5378, lng: 9.0538 },\n        phone: \"+49 7071 29-0\",\n        emergency: \"+49 7071 29-82211\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1550,\n        network: \"FAST\"\n      },\n      {\n        id: \"BW-NS-004\",\n        name: \"Universitätsklinikum Ulm\",\n        address: \"Albert-Einstein-Allee 23, 89081 Ulm\",\n        coordinates: { lat: 48.4196, lng: 9.9592 },\n        phone: \"+49 731 500-0\",\n        emergency: \"+49 731 500-63001\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1264,\n        network: \"FAST\"\n      },\n      {\n        id: \"BW-NS-005\",\n        name: \"Klinikum Stuttgart - Katharinenhospital\",\n        address: \"Kriegsbergstraße 60, 70174 Stuttgart\",\n        coordinates: { lat: 48.7784, lng: 9.1682 },\n        phone: \"+49 711 278-0\",\n        emergency: \"+49 711 278-32001\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 950,\n        network: \"FAST\"\n      },\n      {\n        id: \"BW-NS-006\",\n        name: \"Städtisches Klinikum Karlsruhe\",\n        address: \"Moltkestraße 90, 76133 Karlsruhe\",\n        coordinates: { lat: 49.0047, lng: 8.3858 },\n        phone: \"+49 721 974-0\",\n        emergency: \"+49 721 974-2301\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1570,\n        network: \"FAST\"\n      },\n      {\n        id: \"BW-NS-007\",\n        name: \"Klinikum Ludwigsburg\",\n        address: \"Posilipostraße 4, 71640 Ludwigsburg\",\n        coordinates: { lat: 48.8901, lng: 9.1953 },\n        phone: \"+49 7141 99-0\",\n        emergency: \"+49 7141 99-67201\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 720,\n        network: \"FAST\"\n      }\n    ],\n\n    comprehensiveStrokeCenters: [\n      {\n        id: \"BW-CS-001\",\n        name: \"Universitätsmedizin Mannheim\",\n        address: \"Theodor-Kutzer-Ufer 1-3, 68167 Mannheim\",\n        coordinates: { lat: 49.4828, lng: 8.4664 },\n        phone: \"+49 621 383-0\",\n        emergency: \"+49 621 383-2251\",\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1400,\n        network: \"FAST\"\n      }\n    ],\n\n    regionalStrokeUnits: [\n      // Regional stroke units in Baden-Württemberg\n      {\n        id: \"BW-RSU-001\",\n        name: \"Robert-Bosch-Krankenhaus Stuttgart\",\n        address: \"Auerbachstraße 110, 70376 Stuttgart\",\n        coordinates: { lat: 48.7447, lng: 9.2294 },\n        phone: \"+49 711 8101-0\",\n        emergency: \"+49 711 8101-3456\",\n        thrombolysis: true,\n        beds: 850,\n        network: \"FAST\"\n      },\n      // ... more would be added\n    ],\n\n    thrombolysisHospitals: [\n      // Smaller hospitals with thrombolysis capability\n      // ... would be populated from your database\n    ]\n  },\n\n  nordrheinWestfalen: {\n    neurosurgicalCenters: [\n      {\n        id: \"NRW-NS-001\",\n        name: \"Universitätsklinikum Düsseldorf\",\n        address: \"Moorenstraße 5, 40225 Düsseldorf\",\n        coordinates: { lat: 51.1906, lng: 6.8064 },\n        phone: \"+49 211 81-0\",\n        emergency: \"+49 211 81-17700\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1300,\n        network: \"NEVANO+\"\n      },\n      {\n        id: \"NRW-NS-002\",\n        name: \"Universitätsklinikum Köln\",\n        address: \"Kerpener Str. 62, 50937 Köln\",\n        coordinates: { lat: 50.9253, lng: 6.9187 },\n        phone: \"+49 221 478-0\",\n        emergency: \"+49 221 478-32500\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1500,\n        network: \"NEVANO+\"\n      },\n      {\n        id: \"NRW-NS-003\",\n        name: \"Universitätsklinikum Essen\",\n        address: \"Hufelandstraße 55, 45147 Essen\",\n        coordinates: { lat: 51.4285, lng: 7.0073 },\n        phone: \"+49 201 723-0\",\n        emergency: \"+49 201 723-84444\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1350,\n        network: \"NEVANO+\"\n      },\n      {\n        id: \"NRW-NS-004\",\n        name: \"Universitätsklinikum Münster\",\n        address: \"Albert-Schweitzer-Campus 1, 48149 Münster\",\n        coordinates: { lat: 51.9607, lng: 7.6261 },\n        phone: \"+49 251 83-0\",\n        emergency: \"+49 251 83-47255\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1513,\n        network: \"NEVANO+\"\n      },\n      {\n        id: \"NRW-NS-005\",\n        name: \"Universitätsklinikum Bonn\",\n        address: \"Venusberg-Campus 1, 53127 Bonn\",\n        coordinates: { lat: 50.6916, lng: 7.1127 },\n        phone: \"+49 228 287-0\",\n        emergency: \"+49 228 287-15107\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1200,\n        network: \"NEVANO+\"\n      },\n      {\n        id: \"NRW-NS-006\",\n        name: \"Klinikum Dortmund\",\n        address: \"Beurhausstraße 40, 44137 Dortmund\",\n        coordinates: { lat: 51.5036, lng: 7.4663 },\n        phone: \"+49 231 953-0\",\n        emergency: \"+49 231 953-20050\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1200,\n        network: \"NVNR\"\n      },\n      {\n        id: \"NRW-NS-007\",\n        name: \"Rhein-Maas Klinikum Würselen\",\n        address: \"Mauerfeldstraße 25, 52146 Würselen\",\n        coordinates: { lat: 50.8178, lng: 6.1264 },\n        phone: \"+49 2405 62-0\",\n        emergency: \"+49 2405 62-2222\",\n        neurosurgery: true,\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 420,\n        network: \"NEVANO+\"\n      }\n    ],\n\n    comprehensiveStrokeCenters: [\n      {\n        id: \"NRW-CS-001\",\n        name: \"Universitätsklinikum Aachen\",\n        address: \"Pauwelsstraße 30, 52074 Aachen\",\n        coordinates: { lat: 50.7780, lng: 6.0614 },\n        phone: \"+49 241 80-0\",\n        emergency: \"+49 241 80-89611\",\n        thrombectomy: true,\n        thrombolysis: true,\n        beds: 1400,\n        network: \"NEVANO+\"\n      }\n    ],\n\n    regionalStrokeUnits: [\n      // Regional stroke units in NRW\n      {\n        id: \"NRW-RSU-001\",\n        name: \"Helios Universitätsklinikum Wuppertal\",\n        address: \"Heusnerstraße 40, 42283 Wuppertal\",\n        coordinates: { lat: 51.2467, lng: 7.1703 },\n        phone: \"+49 202 896-0\",\n        emergency: \"+49 202 896-2180\",\n        thrombolysis: true,\n        beds: 1050,\n        network: \"NEVANO+\"\n      }\n      // ... more would be added\n    ],\n\n    thrombolysisHospitals: [\n      {\n        id: \"NRW-TH-009\",\n        name: \"Elisabeth-Krankenhaus Essen\",\n        address: \"Klara-Kopp-Weg 1, 45138 Essen\",\n        coordinates: { lat: 51.4495, lng: 7.0137 },\n        phone: \"+49 201 897-0\",\n        thrombolysis: true,\n        beds: 583\n      },\n      {\n        id: \"NRW-TH-010\",\n        name: \"Klinikum Oberberg Gummersbach\",\n        address: \"Wilhelm-Breckow-Allee 20, 51643 Gummersbach\",\n        coordinates: { lat: 51.0277, lng: 7.5694 },\n        phone: \"+49 2261 17-0\",\n        thrombolysis: true,\n        beds: 431\n      },\n      {\n        id: \"NRW-TH-011\",\n        name: \"St. Vincenz-Krankenhaus Limburg\",\n        address: \"Auf dem Schafsberg, 65549 Limburg\",\n        coordinates: { lat: 50.3856, lng: 8.0584 },\n        phone: \"+49 6431 292-0\",\n        thrombolysis: true,\n        beds: 452\n      },\n      {\n        id: \"NRW-TH-012\",\n        name: \"Klinikum Lüdenscheid\",\n        address: \"Paulmannshöher Straße 14, 58515 Lüdenscheid\",\n        coordinates: { lat: 51.2186, lng: 7.6298 },\n        phone: \"+49 2351 46-0\",\n        thrombolysis: true,\n        beds: 869\n      }\n      // ... more hospitals from your database\n    ]\n  }\n};\n\n// ==========================================\n// ENHANCED ROUTING ALGORITHM\n// ==========================================\n\nconst ROUTING_ALGORITHM = {\n  \n  // Main routing function with enhanced ICH probability thresholds\n  routePatient: function(patientData) {\n    const {\n      location,\n      state,\n      ichProbability,\n      timeFromOnset,\n      clinicalFactors\n    } = patientData;\n    \n    // Auto-detect state if not provided\n    const detectedState = state || this.detectState(location);\n    const database = COMPREHENSIVE_HOSPITAL_DATABASE[detectedState];\n    \n    // Enhanced decision tree based on ICH probability\n    if (ichProbability >= 0.50) {\n      // HIGH ICH RISK - Direct to neurosurgery\n      const destination = this.findNearest(location, database.neurosurgicalCenters);\n      if (!destination) {\n        throw new Error(`No neurosurgical centers available in ${detectedState}`);\n      }\n      \n      return {\n        category: \"NEUROSURGICAL_CENTER\",\n        destination,\n        urgency: \"IMMEDIATE\",\n        reasoning: \"High bleeding probability (≥50%) - neurosurgical evaluation required\",\n        preAlert: \"Activate neurosurgery team\",\n        bypassLocal: true,\n        threshold: \"≥50%\",\n        state: detectedState\n      };\n    } \n    \n    else if (ichProbability >= 0.30) {\n      // INTERMEDIATE ICH RISK - Comprehensive center preferred\n      const comprehensiveOptions = [\n        ...database.neurosurgicalCenters,\n        ...database.comprehensiveStrokeCenters\n      ];\n      \n      return {\n        category: \"COMPREHENSIVE_CENTER\",\n        destination: this.findNearest(location, comprehensiveOptions),\n        urgency: \"URGENT\",\n        reasoning: \"Intermediate bleeding risk (30-50%) - CT and possible intervention\",\n        preAlert: \"Prepare for possible neurosurgical consultation\",\n        transferPlan: this.findNearest(location, database.neurosurgicalCenters),\n        threshold: \"30-50%\",\n        state: detectedState\n      };\n    } \n    \n    else if (timeFromOnset && timeFromOnset <= 270) { // Within 4.5 hour window\n      // LOW ICH RISK, WITHIN tPA WINDOW - Any thrombolysis center\n      const allThrombolysisCapable = [\n        ...database.neurosurgicalCenters,\n        ...database.comprehensiveStrokeCenters,\n        ...database.regionalStrokeUnits,\n        ...database.thrombolysisHospitals\n      ];\n      \n      return {\n        category: \"THROMBOLYSIS_CAPABLE\",\n        destination: this.findNearest(location, allThrombolysisCapable),\n        urgency: \"TIME_CRITICAL\",\n        reasoning: \"Low bleeding risk (<30%), within tPA window - nearest thrombolysis\",\n        preAlert: \"Prepare for thrombolysis protocol\",\n        bypassLocal: false,\n        threshold: \"<30%\",\n        timeWindow: \"≤4.5h\",\n        state: detectedState\n      };\n    } \n    \n    else {\n      // LOW ICH RISK, OUTSIDE tPA WINDOW OR NO TIME - Regional stroke unit adequate\n      const strokeUnitsAndHigher = [\n        ...database.neurosurgicalCenters,\n        ...database.comprehensiveStrokeCenters,\n        ...database.regionalStrokeUnits\n      ];\n      \n      return {\n        category: \"STROKE_UNIT\",\n        destination: this.findNearest(location, strokeUnitsAndHigher),\n        urgency: \"STANDARD\",\n        reasoning: timeFromOnset > 270 ? \n          \"Low bleeding risk, outside tPA window - standard stroke evaluation\" :\n          \"Low bleeding risk - standard stroke evaluation\",\n        preAlert: \"Standard stroke protocol\",\n        bypassLocal: false,\n        threshold: \"<30%\",\n        timeWindow: timeFromOnset ? \">4.5h\" : \"unknown\",\n        state: detectedState\n      };\n    }\n  },\n\n  // Auto-detect state based on coordinates (more precise boundaries)\n  detectState: function(location) {\n    // Baden-Württemberg: check first for western regions  \n    if (location.lat >= 47.5 && location.lat <= 49.8 && \n        location.lng >= 7.5 && location.lng <= 10.2) {\n      return 'badenWuerttemberg';\n    }\n    \n    // NRW: northern regions\n    if (location.lat >= 50.3 && location.lat <= 52.5 && \n        location.lng >= 5.9 && location.lng <= 9.5) {\n      return 'nordrheinWestfalen';\n    }\n    \n    // Bayern: eastern regions (more restrictive western bound to avoid overlap)\n    if (location.lat >= 47.2 && location.lat <= 50.6 && \n        location.lng >= 10.2 && location.lng <= 13.8) {\n      return 'bayern';\n    }\n    \n    // Overlap region - use nearest state center\n    return this.findNearestState(location);\n  },\n\n  // Find nearest state for edge cases\n  findNearestState: function(location) {\n    const stateCenters = {\n      bayern: { lat: 49.0, lng: 11.5 },\n      badenWuerttemberg: { lat: 48.5, lng: 9.0 },\n      nordrheinWestfalen: { lat: 51.5, lng: 7.5 }\n    };\n    \n    let nearestState = 'bayern';\n    let minDistance = Infinity;\n    \n    for (const [state, center] of Object.entries(stateCenters)) {\n      const distance = this.calculateDistance(location, center);\n      if (distance < minDistance) {\n        minDistance = distance;\n        nearestState = state;\n      }\n    }\n    \n    return nearestState;\n  },\n  \n  // Helper function to find nearest hospital\n  findNearest: function(userLocation, hospitals) {\n    if (!hospitals || hospitals.length === 0) {\n      console.warn('No hospitals available in database');\n      return null;\n    }\n    \n    return hospitals\n      .map(hospital => {\n        // Validate hospital has coordinates\n        if (!hospital.coordinates || typeof hospital.coordinates.lat !== 'number') {\n          console.warn(`Hospital ${hospital.name} missing valid coordinates`);\n          return null;\n        }\n        \n        return {\n          ...hospital,\n          distance: this.calculateDistance(userLocation, hospital.coordinates)\n        };\n      })\n      .filter(hospital => hospital !== null) // Remove invalid hospitals\n      .sort((a, b) => a.distance - b.distance)[0];\n  },\n  \n  // Calculate distance between two GPS points\n  calculateDistance: function(point1, point2) {\n    const R = 6371; // Earth radius in km\n    const dLat = this.toRad(point2.lat - point1.lat);\n    const dLng = this.toRad(point2.lng - point1.lng);\n    const a = \n      Math.sin(dLat/2) * Math.sin(dLat/2) +\n      Math.cos(this.toRad(point1.lat)) * Math.cos(this.toRad(point2.lat)) *\n      Math.sin(dLng/2) * Math.sin(dLng/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    return R * c;\n  },\n  \n  toRad: function(deg) {\n    return deg * (Math.PI/180);\n  }\n};\n\nexport { COMPREHENSIVE_HOSPITAL_DATABASE, ROUTING_ALGORITHM };","// Stroke centers in Bayern (Bavaria), Germany\n// Data includes comprehensive stroke centers and stroke units with neurosurgical capabilities\n\nexport const strokeCenters = [\n  // Major comprehensive stroke centers in München\n  {\n    id: 'klinikum-grosshadern-muenchen',\n    name: 'LMU Klinikum München - Großhadern',\n    type: 'comprehensive',\n    address: 'Marchioninistraße 15, 81377 München',\n    coordinates: {\n      lat: 48.1106,\n      lng: 11.4684\n    },\n    phone: '+49 89 4400-0',\n    emergency: '+49 89 4400-73331',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-rechts-der-isar-muenchen',\n    name: 'Klinikum rechts der Isar München (TUM)',\n    type: 'comprehensive',\n    address: 'Ismaninger Str. 22, 81675 München',\n    coordinates: {\n      lat: 48.1497,\n      lng: 11.6052\n    },\n    phone: '+49 89 4140-0',\n    emergency: '+49 89 4140-2249',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-schwabing-muenchen',\n    name: 'Städtisches Klinikum München Schwabing',\n    type: 'comprehensive',\n    address: 'Kölner Platz 1, 80804 München',\n    coordinates: {\n      lat: 48.1732,\n      lng: 11.5755\n    },\n    phone: '+49 89 3068-0',\n    emergency: '+49 89 3068-2050',\n    services: ['thrombectomy', 'neurosurgery', 'icu'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-bogenhausen-muenchen',\n    name: 'Städtisches Klinikum München Bogenhausen',\n    type: 'comprehensive',\n    address: 'Englschalkinger Str. 77, 81925 München',\n    coordinates: {\n      lat: 48.1614,\n      lng: 11.6254\n    },\n    phone: '+49 89 9270-0',\n    emergency: '+49 89 9270-2050',\n    services: ['thrombectomy', 'neurosurgery', 'icu'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01'\n  },\n\n  // Major centers in other Bayern cities\n  {\n    id: 'uniklinikum-erlangen',\n    name: 'Universitätsklinikum Erlangen',\n    type: 'comprehensive',\n    address: 'Maximiliansplatz 2, 91054 Erlangen',\n    coordinates: {\n      lat: 49.5982,\n      lng: 11.0037\n    },\n    phone: '+49 9131 85-0',\n    emergency: '+49 9131 85-39003',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'uniklinikum-regensburg',\n    name: 'Universitätsklinikum Regensburg',\n    type: 'comprehensive',\n    address: 'Franz-Josef-Strauß-Allee 11, 93053 Regensburg',\n    coordinates: {\n      lat: 49.0134,\n      lng: 12.0991\n    },\n    phone: '+49 941 944-0',\n    emergency: '+49 941 944-7501',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'uniklinikum-wuerzburg',\n    name: 'Universitätsklinikum Würzburg',\n    type: 'comprehensive',\n    address: 'Oberdürrbacher Str. 6, 97080 Würzburg',\n    coordinates: {\n      lat: 49.7840,\n      lng: 9.9721\n    },\n    phone: '+49 931 201-0',\n    emergency: '+49 931 201-24444',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-nuernberg',\n    name: 'Klinikum Nürnberg Nord',\n    type: 'comprehensive',\n    address: 'Prof.-Ernst-Nathan-Str. 1, 90419 Nürnberg',\n    coordinates: {\n      lat: 49.4521,\n      lng: 11.0767\n    },\n    phone: '+49 911 398-0',\n    emergency: '+49 911 398-2369',\n    services: ['thrombectomy', 'neurosurgery', 'icu'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-augsburg',\n    name: 'Universitätsklinikum Augsburg',\n    type: 'comprehensive',\n    address: 'Stenglinstr. 2, 86156 Augsburg',\n    coordinates: {\n      lat: 48.3668,\n      lng: 10.9093\n    },\n    phone: '+49 821 400-01',\n    emergency: '+49 821 400-2356',\n    services: ['thrombectomy', 'neurosurgery', 'icu', 'telemedicine'],\n    certified: true,\n    certification: 'DSG/DGN',\n    lastUpdated: '2024-08-01'\n  },\n\n  // Primary stroke centers\n  {\n    id: 'klinikum-ingolstadt',\n    name: 'Klinikum Ingolstadt',\n    type: 'primary',\n    address: 'Krumenauerstraße 25, 85049 Ingolstadt',\n    coordinates: {\n      lat: 48.7665,\n      lng: 11.4364\n    },\n    phone: '+49 841 880-0',\n    emergency: '+49 841 880-2201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-passau',\n    name: 'Klinikum Passau',\n    type: 'primary',\n    address: 'Bischof-Pilgrim-Str. 1, 94032 Passau',\n    coordinates: {\n      lat: 48.5665,\n      lng: 13.4513\n    },\n    phone: '+49 851 5300-0',\n    emergency: '+49 851 5300-2100',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-bamberg',\n    name: 'Sozialstiftung Bamberg Klinikum',\n    type: 'primary',\n    address: 'Buger Str. 80, 96049 Bamberg',\n    coordinates: {\n      lat: 49.8988,\n      lng: 10.9027\n    },\n    phone: '+49 951 503-0',\n    emergency: '+49 951 503-11101',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-bayreuth',\n    name: 'Klinikum Bayreuth',\n    type: 'primary',\n    address: 'Preuschwitzer Str. 101, 95445 Bayreuth',\n    coordinates: {\n      lat: 49.9459,\n      lng: 11.5779\n    },\n    phone: '+49 921 400-0',\n    emergency: '+49 921 400-5401',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-landshut',\n    name: 'Klinikum Landshut',\n    type: 'primary',\n    address: 'Robert-Koch-Str. 1, 84034 Landshut',\n    coordinates: {\n      lat: 48.5436,\n      lng: 12.1619\n    },\n    phone: '+49 871 698-0',\n    emergency: '+49 871 698-3333',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-rosenheim',\n    name: 'RoMed Klinikum Rosenheim',\n    type: 'primary',\n    address: 'Pettenkoferstr. 10, 83022 Rosenheim',\n    coordinates: {\n      lat: 47.8567,\n      lng: 12.1265\n    },\n    phone: '+49 8031 365-0',\n    emergency: '+49 8031 365-3711',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-memmingen',\n    name: 'Klinikum Memmingen',\n    type: 'primary',\n    address: 'Bismarckstr. 23, 87700 Memmingen',\n    coordinates: {\n      lat: 47.9833,\n      lng: 10.1833\n    },\n    phone: '+49 8331 70-0',\n    emergency: '+49 8331 70-2500',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-kempten',\n    name: 'Klinikum Kempten-Oberallgäu',\n    type: 'primary',\n    address: 'Robert-Weixler-Str. 50, 87439 Kempten',\n    coordinates: {\n      lat: 47.7261,\n      lng: 10.3097\n    },\n    phone: '+49 831 530-0',\n    emergency: '+49 831 530-2201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-coburg',\n    name: 'Klinikum Coburg',\n    type: 'primary',\n    address: 'Ketschendorfer Str. 33, 96450 Coburg',\n    coordinates: {\n      lat: 50.2596,\n      lng: 10.9685\n    },\n    phone: '+49 9561 22-0',\n    emergency: '+49 9561 22-6300',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-aschaffenburg',\n    name: 'Klinikum Aschaffenburg-Alzenau',\n    type: 'primary',\n    address: 'Am Hasenkopf 1, 63739 Aschaffenburg',\n    coordinates: {\n      lat: 49.9747,\n      lng: 9.1581\n    },\n    phone: '+49 6021 32-0',\n    emergency: '+49 6021 32-2700',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n\n  // Additional smaller stroke units in Bayern\n  {\n    id: 'goldberg-klinik-kelheim',\n    name: 'Goldberg-Klinik Kelheim',\n    type: 'primary',\n    address: 'Traubenweg 3, 93309 Kelheim',\n    coordinates: {\n      lat: 48.9166,\n      lng: 11.8742\n    },\n    phone: '+49 9441 702-0',\n    emergency: '+49 9441 702-6800',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-deggendorf',\n    name: 'DONAUISAR Klinikum Deggendorf',\n    type: 'primary',\n    address: 'Perlasberger Str. 41, 94469 Deggendorf',\n    coordinates: {\n      lat: 48.8372,\n      lng: 12.9619\n    },\n    phone: '+49 991 380-0',\n    emergency: '+49 991 380-2201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-straubing',\n    name: 'Klinikum St. Elisabeth Straubing',\n    type: 'primary',\n    address: 'St.-Elisabeth-Str. 23, 94315 Straubing',\n    coordinates: {\n      lat: 48.8742,\n      lng: 12.5733\n    },\n    phone: '+49 9421 710-0',\n    emergency: '+49 9421 710-2000',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-freising',\n    name: 'Klinikum Freising',\n    type: 'primary',\n    address: 'Mainburger Str. 29, 85356 Freising',\n    coordinates: {\n      lat: 48.4142,\n      lng: 11.7461\n    },\n    phone: '+49 8161 24-0',\n    emergency: '+49 8161 24-2800',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-erding',\n    name: 'Klinikum Landkreis Erding',\n    type: 'primary',\n    address: 'Bajuwarenstr. 5, 85435 Erding',\n    coordinates: {\n      lat: 48.3061,\n      lng: 11.9067\n    },\n    phone: '+49 8122 59-0',\n    emergency: '+49 8122 59-2201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'helios-dachau',\n    name: 'Helios Amper-Klinikum Dachau',\n    type: 'primary',\n    address: 'Krankenhausstr. 15, 85221 Dachau',\n    coordinates: {\n      lat: 48.2599,\n      lng: 11.4342\n    },\n    phone: '+49 8131 76-0',\n    emergency: '+49 8131 76-2201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  },\n  {\n    id: 'klinikum-fuerstenfeldbruck',\n    name: 'Klinikum Fürstenfeldbruck',\n    type: 'primary',\n    address: 'Dachauer Str. 33, 82256 Fürstenfeldbruck',\n    coordinates: {\n      lat: 48.1772,\n      lng: 11.2578\n    },\n    phone: '+49 8141 99-0',\n    emergency: '+49 8141 99-2201',\n    services: ['stroke_unit', 'telemedicine'],\n    certified: true,\n    certification: 'DSG',\n    lastUpdated: '2024-08-01'\n  }\n];\n\n// Helper functions for stroke center data\nexport function getStrokeCentersByType(type) {\n  return strokeCenters.filter(center => center.type === type);\n}\n\nexport function getComprehensiveStrokeCenters() {\n  return getStrokeCentersByType('comprehensive');\n}\n\nexport function getPrimaryStrokeCenters() {\n  return getStrokeCentersByType('primary');\n}\n\nexport function getStrokeCenterById(id) {\n  return strokeCenters.find(center => center.id === id);\n}\n\n// Calculate distance between two coordinates using Haversine formula (fallback)\nexport function calculateDistance(lat1, lng1, lat2, lng2) {\n  const R = 6371; // Earth's radius in kilometers\n  const dLat = toRadians(lat2 - lat1);\n  const dLng = toRadians(lng2 - lng1);\n  const a = \n    Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.cos(toRadians(lat1)) * Math.cos(toRadians(lat2)) * \n    Math.sin(dLng/2) * Math.sin(dLng/2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n  return R * c;\n}\n\nfunction toRadians(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\n// Calculate travel time using OpenRoute Service API\nexport async function calculateTravelTime(fromLat, fromLng, toLat, toLng, profile = 'driving-car') {\n  try {\n    // Using OpenRoute Service (free tier)\n    const url = `https://api.openrouteservice.org/v2/directions/${profile}`;\n    const body = {\n      coordinates: [[fromLng, fromLat], [toLng, toLat]],\n      radiuses: [1000, 1000], // Allow 1km radius for routing\n      format: 'json'\n    };\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8',\n        'Authorization': '5b3ce3597851110001cf624868c4c27b63ae476c9c26c8bffbc35688', // Free tier key\n        'Content-Type': 'application/json; charset=utf-8'\n      },\n      body: JSON.stringify(body)\n    });\n\n    if (!response.ok) {\n      throw new Error(`Routing API error: ${response.status}`);\n    }\n\n    const data = await response.json();\n    \n    if (data.routes && data.routes.length > 0) {\n      const route = data.routes[0];\n      return {\n        duration: Math.round(route.summary.duration / 60), // Convert to minutes\n        distance: Math.round(route.summary.distance / 1000), // Convert to km\n        source: 'routing'\n      };\n    } else {\n      throw new Error('No route found');\n    }\n  } catch (error) {\n    console.warn('Travel time calculation failed, using distance estimate:', error);\n    \n    // Fallback to distance-based time estimation\n    const distance = calculateDistance(fromLat, fromLng, toLat, toLng);\n    const estimatedTime = Math.round(distance / 0.8); // Assume 48 km/h average (urban + highway)\n    \n    return {\n      duration: estimatedTime,\n      distance: Math.round(distance),\n      source: 'estimated'\n    };\n  }\n}\n\n// Enhanced travel time calculation for emergency vehicles\nexport async function calculateEmergencyTravelTime(fromLat, fromLng, toLat, toLng) {\n  try {\n    // For emergency vehicles, we can use a faster profile and adjust\n    const result = await calculateTravelTime(fromLat, fromLng, toLat, toLng, 'driving-car');\n    \n    // Reduce time by 25% for emergency vehicle (sirens, priority routing)\n    const emergencyDuration = Math.round(result.duration * 0.75);\n    \n    return {\n      duration: emergencyDuration,\n      distance: result.distance,\n      source: result.source === 'routing' ? 'emergency-routing' : 'emergency-estimated'\n    };\n  } catch (error) {\n    // Fallback calculation\n    const distance = calculateDistance(fromLat, fromLng, toLat, toLng);\n    const emergencyTime = Math.round(distance / 1.2); // Assume 72 km/h for emergency vehicles\n    \n    return {\n      duration: emergencyTime,\n      distance: Math.round(distance), \n      source: 'emergency-estimated'\n    };\n  }\n}\n\n// Find nearest stroke centers with travel time calculation\nexport async function findNearestStrokeCentersWithTravelTime(lat, lng, maxResults = 5, maxTime = 120, useEmergencyRouting = true) {\n  console.log('Calculating travel times to stroke centers...');\n  \n  const centersWithTravelTime = await Promise.all(\n    strokeCenters.map(async (center) => {\n      try {\n        const travelInfo = useEmergencyRouting \n          ? await calculateEmergencyTravelTime(lat, lng, center.coordinates.lat, center.coordinates.lng)\n          : await calculateTravelTime(lat, lng, center.coordinates.lat, center.coordinates.lng);\n        \n        return {\n          ...center,\n          travelTime: travelInfo.duration,\n          distance: travelInfo.distance,\n          travelSource: travelInfo.source\n        };\n      } catch (error) {\n        console.warn(`Failed to calculate travel time to ${center.name}:`, error);\n        // Fallback to distance calculation\n        const distance = calculateDistance(lat, lng, center.coordinates.lat, center.coordinates.lng);\n        return {\n          ...center,\n          travelTime: Math.round(distance / 0.8), // Estimate: 48 km/h average\n          distance: Math.round(distance),\n          travelSource: 'fallback'\n        };\n      }\n    })\n  );\n\n  return centersWithTravelTime\n    .filter(center => center.travelTime <= maxTime)\n    .sort((a, b) => a.travelTime - b.travelTime)\n    .slice(0, maxResults);\n}\n\n// Find nearest stroke centers using distance (fallback/fast method)\nexport function findNearestStrokeCenters(lat, lng, maxResults = 5, maxDistance = 100) {\n  const centersWithDistance = strokeCenters.map(center => ({\n    ...center,\n    distance: calculateDistance(lat, lng, center.coordinates.lat, center.coordinates.lng)\n  }));\n\n  return centersWithDistance\n    .filter(center => center.distance <= maxDistance)\n    .sort((a, b) => a.distance - b.distance)\n    .slice(0, maxResults);\n}\n\n// Get stroke center recommendations with travel time (async)\nexport async function getRecommendedStrokeCentersWithTravelTime(lat, lng, conditionType = 'stroke') {\n  const nearestCenters = await findNearestStrokeCentersWithTravelTime(lat, lng, 10, 120, true);\n  \n  if (conditionType === 'lvo' || conditionType === 'thrombectomy') {\n    // For LVO cases, prioritize comprehensive stroke centers within 60 minutes\n    const comprehensive = nearestCenters.filter(center => \n      center.type === 'comprehensive' && \n      center.services.includes('thrombectomy') &&\n      center.travelTime <= 60\n    );\n    \n    const primary = nearestCenters.filter(center => center.type === 'primary');\n    \n    return {\n      recommended: comprehensive.slice(0, 3),\n      alternative: primary.slice(0, 2)\n    };\n  }\n  \n  // For ICH cases, prioritize neurosurgical capabilities\n  if (conditionType === 'ich') {\n    const neurosurgical = nearestCenters.filter(center =>\n      center.services.includes('neurosurgery') &&\n      center.travelTime <= 45\n    );\n    \n    return {\n      recommended: neurosurgical.slice(0, 3),\n      alternative: nearestCenters.filter(c => !neurosurgical.includes(c)).slice(0, 2)\n    };\n  }\n  \n  // For general stroke cases, return nearest centers regardless of type\n  return {\n    recommended: nearestCenters.slice(0, 5),\n    alternative: []\n  };\n}\n\n// Get stroke center recommendations based on patient condition (fallback - distance only)\nexport function getRecommendedStrokeCenters(lat, lng, conditionType = 'stroke') {\n  const nearestCenters = findNearestStrokeCenters(lat, lng, 10);\n  \n  if (conditionType === 'lvo' || conditionType === 'thrombectomy') {\n    // For LVO cases, prioritize comprehensive stroke centers\n    const comprehensive = nearestCenters.filter(center => \n      center.type === 'comprehensive' && \n      center.services.includes('thrombectomy')\n    );\n    \n    const primary = nearestCenters.filter(center => center.type === 'primary');\n    \n    return {\n      recommended: comprehensive.slice(0, 3),\n      alternative: primary.slice(0, 2)\n    };\n  }\n  \n  // For general stroke cases, return nearest centers regardless of type\n  return {\n    recommended: nearestCenters.slice(0, 5),\n    alternative: []\n  };\n}","// GPS-based stroke center map component\nimport { COMPREHENSIVE_HOSPITAL_DATABASE, ROUTING_ALGORITHM } from '../../data/comprehensive-stroke-centers.js';\nimport { calculateDistance, calculateTravelTime, calculateEmergencyTravelTime } from '../../data/stroke-centers.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderStrokeCenterMap(results) {\n  return `\n    <div class=\"stroke-center-section\">\n      <h3>🏥 ${t('nearestCentersTitle')}</h3>\n      <div id=\"locationContainer\">\n        <div class=\"location-controls\">\n          <button type=\"button\" id=\"useGpsButton\" class=\"secondary\">\n            📍 ${t('useCurrentLocation')}\n          </button>\n          <div class=\"location-manual\" style=\"display: none;\">\n            <input type=\"text\" id=\"locationInput\" placeholder=\"${t('enterLocationPlaceholder') || 'e.g. München, Köln, Stuttgart, or 48.1351, 11.5820'}\" />\n            <button type=\"button\" id=\"searchLocationButton\" class=\"secondary\">${t('search')}</button>\n          </div>\n          <button type=\"button\" id=\"manualLocationButton\" class=\"secondary\">\n            ✏️ ${t('enterManually')}\n          </button>\n        </div>\n        <div id=\"strokeCenterResults\" class=\"stroke-center-results\"></div>\n      </div>\n    </div>\n  `;\n}\n\nexport function initializeStrokeCenterMap(results) {\n  const useGpsButton = document.getElementById('useGpsButton');\n  const manualLocationButton = document.getElementById('manualLocationButton');\n  const locationManual = document.querySelector('.location-manual');\n  const locationInput = document.getElementById('locationInput');\n  const searchLocationButton = document.getElementById('searchLocationButton');\n  const resultsContainer = document.getElementById('strokeCenterResults');\n\n  if (useGpsButton) {\n    useGpsButton.addEventListener('click', () => {\n      requestUserLocation(results, resultsContainer);\n    });\n  }\n\n  if (manualLocationButton) {\n    manualLocationButton.addEventListener('click', () => {\n      locationManual.style.display = locationManual.style.display === 'none' ? 'block' : 'none';\n    });\n  }\n\n  if (searchLocationButton) {\n    searchLocationButton.addEventListener('click', () => {\n      const location = locationInput.value.trim();\n      if (location) {\n        geocodeLocation(location, results, resultsContainer);\n      }\n    });\n  }\n\n  if (locationInput) {\n    locationInput.addEventListener('keypress', (e) => {\n      if (e.key === 'Enter') {\n        const location = locationInput.value.trim();\n        if (location) {\n          geocodeLocation(location, results, resultsContainer);\n        }\n      }\n    });\n  }\n}\n\nfunction requestUserLocation(results, resultsContainer) {\n  if (!navigator.geolocation) {\n    showLocationError(t('geolocationNotSupported'), resultsContainer);\n    return;\n  }\n\n  resultsContainer.innerHTML = `<div class=\"loading\">${t('gettingLocation')}...</div>`;\n\n  navigator.geolocation.getCurrentPosition(\n    (position) => {\n      const { latitude, longitude } = position.coords;\n      showNearestCenters(latitude, longitude, results, resultsContainer);\n    },\n    (error) => {\n      let errorMessage = t('locationError');\n      switch (error.code) {\n        case error.PERMISSION_DENIED:\n          errorMessage = t('locationPermissionDenied');\n          break;\n        case error.POSITION_UNAVAILABLE:\n          errorMessage = t('locationUnavailable');\n          break;\n        case error.TIMEOUT:\n          errorMessage = t('locationTimeout');\n          break;\n      }\n      showLocationError(errorMessage, resultsContainer);\n    },\n    {\n      enableHighAccuracy: true,\n      timeout: 10000,\n      maximumAge: 300000 // 5 minutes\n    }\n  );\n}\n\nasync function geocodeLocation(locationString, results, resultsContainer) {\n  resultsContainer.innerHTML = `<div class=\"loading\">${t('searchingLocation')}...</div>`;\n  \n  // Check if user entered coordinates (format: lat, lng or lat,lng)\n  const coordPattern = /^(-?\\d+\\.?\\d*)\\s*,\\s*(-?\\d+\\.?\\d*)$/;\n  const coordMatch = locationString.trim().match(coordPattern);\n  \n  if (coordMatch) {\n    // Direct coordinate input\n    const lat = parseFloat(coordMatch[1]);\n    const lng = parseFloat(coordMatch[2]);\n    \n    // Validate coordinates are within supported German states (Bayern, BW, NRW)\n    if (lat >= 47.2 && lat <= 52.5 && lng >= 5.9 && lng <= 15.0) {\n      resultsContainer.innerHTML = `\n        <div class=\"location-success\">\n          <p>📍 Coordinates: ${lat.toFixed(4)}, ${lng.toFixed(4)}</p>\n        </div>\n      `;\n      setTimeout(() => {\n        showNearestCenters(lat, lng, results, resultsContainer);\n      }, 500);\n      return;\n    } else {\n      showLocationError(`Coordinates appear to be outside Germany. Please check the values.`, resultsContainer);\n      return;\n    }\n  }\n  \n  try {\n    // Clean up the location string\n    let searchLocation = locationString.trim();\n    \n    // If it doesn't already include country info, add it\n    if (!searchLocation.toLowerCase().includes('deutschland') &&\n        !searchLocation.toLowerCase().includes('germany') &&\n        !searchLocation.toLowerCase().includes('bayern') &&\n        !searchLocation.toLowerCase().includes('bavaria') &&\n        !searchLocation.toLowerCase().includes('nordrhein') &&\n        !searchLocation.toLowerCase().includes('baden')) {\n      searchLocation = searchLocation + ', Deutschland';\n    }\n    \n    // Use Nominatim (OpenStreetMap) geocoding service - free and reliable\n    // Note: encodeURIComponent properly handles umlauts (ä, ö, ü, ß)\n    const encodedLocation = encodeURIComponent(searchLocation);\n    const url = `https://nominatim.openstreetmap.org/search?q=${encodedLocation}&countrycodes=de&format=json&limit=3&addressdetails=1`;\n    \n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'User-Agent': 'iGFAP-StrokeTriage/2.1.0' // Required by Nominatim\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`Geocoding API error: ${response.status}`);\n    }\n\n    const data = await response.json();\n    \n    if (data && data.length > 0) {\n      // Prefer results from supported states (Bayern, Baden-Württemberg, NRW)\n      let location = data[0];\n      const supportedStates = ['Bayern', 'Baden-Württemberg', 'Nordrhein-Westfalen'];\n      \n      for (const result of data) {\n        if (result.address && supportedStates.includes(result.address.state)) {\n          location = result;\n          break;\n        }\n      }\n      \n      const lat = parseFloat(location.lat);\n      const lng = parseFloat(location.lon);\n      const locationName = location.display_name || locationString;\n      \n      // Show success message and then proceed with location\n      resultsContainer.innerHTML = `\n        <div class=\"location-success\">\n          <p>📍 Found: ${locationName}</p>\n          <small style=\"color: #666;\">Lat: ${lat.toFixed(4)}, Lng: ${lng.toFixed(4)}</small>\n        </div>\n      `;\n      \n      // Wait a moment to show the found location, then show centers\n      setTimeout(() => {\n        showNearestCenters(lat, lng, results, resultsContainer);\n      }, 1000);\n      \n    } else {\n      showLocationError(`\n        <strong>Location \"${locationString}\" not found.</strong><br>\n        <small>Try:</small>\n        <ul style=\"text-align: left; font-size: 0.9em; margin: 10px 0;\">\n          <li>City name: \"München\", \"Köln\", \"Stuttgart\"</li>\n          <li>Address: \"Marienplatz 1, München\"</li>\n          <li>Coordinates: \"48.1351, 11.5820\"</li>\n        </ul>\n      `, resultsContainer);\n    }\n    \n  } catch (error) {\n    console.warn('Geocoding failed:', error);\n    showLocationError(`\n      <strong>Unable to search location.</strong><br>\n      <small>Please try entering coordinates directly (e.g., \"48.1351, 11.5820\")</small>\n    `, resultsContainer);\n  }\n}\n\nasync function showNearestCenters(lat, lng, results, resultsContainer) {\n  const location = { lat, lng };\n  \n  // Use the enhanced routing algorithm\n  const routing = ROUTING_ALGORITHM.routePatient({\n    location,\n    ichProbability: results?.ich?.probability || 0,\n    timeFromOnset: results?.timeFromOnset || null,\n    clinicalFactors: results?.clinicalFactors || {}\n  });\n  \n  if (!routing || !routing.destination) {\n    resultsContainer.innerHTML = `\n      <div class=\"location-error\">\n        <p>⚠️ No suitable stroke centers found in this area.</p>\n        <p><small>Please try a different location or contact emergency services directly.</small></p>\n      </div>\n    `;\n    return;\n  }\n\n  // Generate routing explanation\n  const routingExplanation = getEnhancedRoutingExplanation(routing, results);\n  \n  // Show loading state\n  resultsContainer.innerHTML = `\n    <div class=\"location-info\">\n      <p><strong>${t('yourLocation')}:</strong> ${lat.toFixed(4)}, ${lng.toFixed(4)}</p>\n      <p><strong>Detected State:</strong> ${getStateName(routing.state)}</p>\n    </div>\n    <div class=\"loading\">${t('calculatingTravelTimes')}...</div>\n  `;\n  \n  try {\n    // Get all relevant hospitals for this routing decision\n    const database = COMPREHENSIVE_HOSPITAL_DATABASE[routing.state];\n    const allHospitals = [\n      ...database.neurosurgicalCenters,\n      ...database.comprehensiveStrokeCenters,\n      ...database.regionalStrokeUnits,\n      ...(database.thrombolysisHospitals || [])\n    ];\n\n    // Add distance and travel time to primary destination\n    const destination = routing.destination;\n    destination.distance = calculateDistance(lat, lng, destination.coordinates.lat, destination.coordinates.lng);\n    \n    try {\n      const travelInfo = await calculateEmergencyTravelTime(lat, lng, destination.coordinates.lat, destination.coordinates.lng);\n      destination.travelTime = travelInfo.duration;\n      destination.travelSource = travelInfo.source;\n    } catch (error) {\n      destination.travelTime = Math.round(destination.distance / 0.8); // Estimate\n      destination.travelSource = 'estimated';\n    }\n\n    // Find 3-4 alternative hospitals nearby\n    const alternatives = allHospitals\n      .filter(h => h.id !== destination.id)\n      .map(hospital => ({\n        ...hospital,\n        distance: calculateDistance(lat, lng, hospital.coordinates.lat, hospital.coordinates.lng)\n      }))\n      .sort((a, b) => a.distance - b.distance)\n      .slice(0, 3);\n\n    // Add travel times to alternatives\n    for (const alt of alternatives) {\n      try {\n        const travelInfo = await calculateEmergencyTravelTime(lat, lng, alt.coordinates.lat, alt.coordinates.lng);\n        alt.travelTime = travelInfo.duration;\n        alt.travelSource = travelInfo.source;\n      } catch (error) {\n        alt.travelTime = Math.round(alt.distance / 0.8);\n        alt.travelSource = 'estimated';\n      }\n    }\n    \n    const html = `\n      <div class=\"location-info\">\n        <p><strong>${t('yourLocation')}:</strong> ${lat.toFixed(4)}, ${lng.toFixed(4)}</p>\n        <p><strong>State:</strong> ${getStateName(routing.state)}</p>\n        ${routingExplanation}\n      </div>\n      \n      <div class=\"recommended-centers\">\n        <h4>🏥 ${routing.urgency === 'IMMEDIATE' ? 'Emergency' : 'Recommended'} Destination</h4>\n        ${renderEnhancedStrokeCenterCard(destination, true, routing)}\n      </div>\n      \n      ${alternatives.length > 0 ? `\n        <div class=\"alternative-centers\">\n          <h4>Alternative Centers</h4>\n          ${alternatives.map(alt => renderEnhancedStrokeCenterCard(alt, false, routing)).join('')}\n        </div>\n      ` : ''}\n      \n      <div class=\"travel-time-note\">\n        <small>${t('travelTimeNote') || 'Travel times estimated for emergency vehicles'}</small>\n      </div>\n    `;\n    \n    resultsContainer.innerHTML = html;\n    \n  } catch (error) {\n    console.warn('Enhanced routing failed, using basic display:', error);\n    \n    // Fallback to basic display\n    resultsContainer.innerHTML = `\n      <div class=\"location-info\">\n        <p><strong>${t('yourLocation')}:</strong> ${lat.toFixed(4)}, ${lng.toFixed(4)}</p>\n        ${routingExplanation}\n      </div>\n      \n      <div class=\"recommended-centers\">\n        <h4>Recommended Center</h4>\n        <div class=\"stroke-center-card recommended\">\n          <div class=\"center-header\">\n            <h5>${routing.destination.name}</h5>\n            <span class=\"distance\">${routing.destination.distance?.toFixed(1) || '?'} km</span>\n          </div>\n          <div class=\"center-details\">\n            <p class=\"address\">📍 ${routing.destination.address}</p>\n            <p class=\"phone\">📞 ${routing.destination.emergency || routing.destination.phone}</p>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"routing-reasoning\">\n        <p><strong>Routing Logic:</strong> ${routing.reasoning}</p>\n      </div>\n    `;\n  }\n}\n\nfunction renderStrokeCenterList(centers, isRecommended = false) {\n  if (!centers || centers.length === 0) {\n    return `<p>${t('noCentersFound')}</p>`;\n  }\n\n  return centers.map(center => `\n    <div class=\"stroke-center-card ${isRecommended ? 'recommended' : 'alternative'}\">\n      <div class=\"center-header\">\n        <h5>${center.name}</h5>\n        <span class=\"center-type ${center.type}\">${t(center.type + 'Center')}</span>\n        ${center.travelTime ? `\n          <span class=\"travel-time\">\n            <span class=\"time\">${center.travelTime} ${t('minutes')}</span>\n            <span class=\"distance\">(${center.distance} km)</span>\n          </span>\n        ` : `\n          <span class=\"distance\">${center.distance.toFixed(1)} km</span>\n        `}\n      </div>\n      \n      <div class=\"center-details\">\n        <p class=\"address\">📍 ${center.address}</p>\n        <p class=\"phone\">📞 ${t('emergency')}: ${center.emergency}</p>\n        \n        <div class=\"services\">\n          ${center.services.map(service => `\n            <span class=\"service-badge\">${t(service)}</span>\n          `).join('')}\n        </div>\n        \n        ${center.certified ? `\n          <div class=\"certification\">\n            ✅ ${t('certified')}: ${center.certification}\n          </div>\n        ` : ''}\n      </div>\n      \n      <div class=\"center-actions\">\n        <button class=\"call-button\" onclick=\"window.open('tel:${center.emergency}')\">\n          📞 ${t('call')}\n        </button>\n        <button class=\"directions-button\" onclick=\"window.open('https://maps.google.com/maps?daddr=${center.coordinates.lat},${center.coordinates.lng}', '_blank')\">\n          🧭 ${t('directions')}\n        </button>\n      </div>\n    </div>\n  `).join('');\n}\n\n// Helper functions for enhanced routing system\nfunction getStateName(stateCode) {\n  const stateNames = {\n    'bayern': 'Bayern (Bavaria)',\n    'badenWuerttemberg': 'Baden-Württemberg',\n    'nordrheinWestfalen': 'Nordrhein-Westfalen (NRW)'\n  };\n  return stateNames[stateCode] || stateCode;\n}\n\nfunction getEnhancedRoutingExplanation(routing, results) {\n  const ichPercent = Math.round((results?.ich?.probability || 0) * 100);\n  \n  let urgencyIcon = '🏥';\n  if (routing.urgency === 'IMMEDIATE') urgencyIcon = '🚨';\n  else if (routing.urgency === 'TIME_CRITICAL') urgencyIcon = '⏰';\n  else if (routing.urgency === 'URGENT') urgencyIcon = '⚠️';\n  \n  return `\n    <div class=\"routing-explanation ${routing.category.toLowerCase()}\">\n      <div class=\"routing-header\">\n        <strong>${urgencyIcon} ${routing.category.replace('_', ' ')} - ${routing.urgency}</strong>\n      </div>\n      <div class=\"routing-details\">\n        <p><strong>ICH Risk:</strong> ${ichPercent}% ${routing.threshold ? `(${routing.threshold})` : ''}</p>\n        ${routing.timeWindow ? `<p><strong>Time Window:</strong> ${routing.timeWindow}</p>` : ''}\n        <p><strong>Routing Logic:</strong> ${routing.reasoning}</p>\n        <p><strong>Pre-Alert:</strong> ${routing.preAlert}</p>\n        ${routing.bypassLocal ? '<p class=\"bypass-warning\">⚠️ Bypassing local hospitals</p>' : ''}\n      </div>\n    </div>\n  `;\n}\n\nfunction renderEnhancedStrokeCenterCard(center, isRecommended, routing) {\n  const capabilities = [];\n  if (center.neurosurgery) capabilities.push('🧠 Neurosurgery');\n  if (center.thrombectomy) capabilities.push('🩸 Thrombectomy');\n  if (center.thrombolysis) capabilities.push('💉 Thrombolysis');\n  \n  const networkBadge = center.network ? `<span class=\"network-badge\">${center.network}</span>` : '';\n  \n  return `\n    <div class=\"stroke-center-card ${isRecommended ? 'recommended' : 'alternative'} enhanced\">\n      <div class=\"center-header\">\n        <h5>${center.name}</h5>\n        <div class=\"center-badges\">\n          ${center.neurosurgery ? '<span class=\"capability-badge neurosurgery\">NS</span>' : ''}\n          ${center.thrombectomy ? '<span class=\"capability-badge thrombectomy\">TE</span>' : ''}\n          ${networkBadge}\n        </div>\n      </div>\n      \n      <div class=\"center-metrics\">\n        ${center.travelTime ? `\n          <div class=\"travel-info\">\n            <span class=\"travel-time\">${center.travelTime} min</span>\n            <span class=\"distance\">${center.distance.toFixed(1)} km</span>\n          </div>\n        ` : `\n          <div class=\"distance-only\">\n            <span class=\"distance\">${center.distance.toFixed(1)} km</span>\n          </div>\n        `}\n        <div class=\"bed-info\">\n          <span class=\"beds\">${center.beds} beds</span>\n        </div>\n      </div>\n      \n      <div class=\"center-details\">\n        <p class=\"address\">📍 ${center.address}</p>\n        <p class=\"phone\">📞 ${center.emergency || center.phone}</p>\n        \n        ${capabilities.length > 0 ? `\n          <div class=\"capabilities\">\n            ${capabilities.join(' • ')}\n          </div>\n        ` : ''}\n      </div>\n      \n      <div class=\"center-actions\">\n        <button class=\"call-button\" onclick=\"window.open('tel:${center.emergency || center.phone}')\">\n          📞 Call\n        </button>\n        <button class=\"directions-button\" onclick=\"window.open('https://maps.google.com/maps?daddr=${center.coordinates.lat},${center.coordinates.lng}', '_blank')\">\n          🧭 Directions\n        </button>\n      </div>\n    </div>\n  `;\n}\n\nfunction showLocationError(message, container) {\n  container.innerHTML = `\n    <div class=\"location-error\">\n      <p>⚠️ ${message}</p>\n      <p><small>${t('tryManualEntry')}</small></p>\n    </div>\n  `;\n}","import { CRITICAL_THRESHOLDS } from '../config.js';\n\nexport function getRiskLevel(probabilityPercent, type) {\n  const p = Number(probabilityPercent);\n  const thresholds = CRITICAL_THRESHOLDS[type];\n  \n  if (p >= thresholds.high) {\n    return '🔴 HIGH RISK';\n  } else if (p >= thresholds.medium) {\n    return '🟡 MEDIUM RISK';\n  } else {\n    return '🟢 LOW RISK';\n  }\n}\n\nexport function formatTime(milliseconds) {\n  const seconds = Math.floor(milliseconds / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n}","/**\n * ICH Volume Calculation and Clinical Assessment\n * Based on validated log-log regression model (R² = 0.476)\n * Formula: log₁₀(Volume) = 0.0192 + 0.4533 × log₁₀(GFAP)\n */\n\n// Volume-based risk thresholds with clinical significance\nexport const VOLUME_THRESHOLDS = {\n  low: { max: 10, color: '#dc2626', label: 'Small', severity: 'low' },\n  moderate: { min: 10, max: 20, color: '#dc2626', label: 'Moderate', severity: 'moderate' },\n  high: { min: 20, max: 30, color: '#dc2626', label: 'Large', severity: 'high' },\n  critical: { min: 30, color: '#dc2626', label: 'Critical', severity: 'critical' }\n};\n\n// 30-day mortality rates by hemorrhage volume (based on clinical literature)\n// Calibrated to Broderick et al. (1993) landmark study:\n// - 30ml = 19% mortality\n// - 60ml = 91% mortality\n// With correlation strengths from observational data\n// Reference thresholds for documentation purposes:\nexport const MORTALITY_BY_VOLUME = {\n  '<10ml': '5-10%',      // Minor hemorrhage\n  '10-30ml': '10-19%',   // Small (Broderick: 30ml=19%)\n  '30-50ml': '19-44%',   // Moderate (interpolated)\n  '50-60ml': '44-91%',   // Large (Broderick: 60ml=91%)\n  '≥60ml': '91-100%'     // Massive (Broderick: >60ml=91-100%)\n};\n\n/**\n * Calculate ICH volume from GFAP biomarker value\n * @param {number} gfapValue - GFAP value in pg/ml (0-10,000)\n * @returns {object} Volume calculation results\n */\nexport function calculateICHVolume(gfapValue) {\n  // Handle edge cases\n  if (!gfapValue || gfapValue <= 0) {\n    return {\n      volume: 0,\n      volumeRange: { min: 0, max: 0 },\n      riskLevel: 'low',\n      mortalityRate: '~0%',\n      isValid: true,\n      calculation: 'No hemorrhage detected'\n    };\n  }\n  \n  // Cap extremely high GFAP values\n  const cappedGfap = Math.min(gfapValue, 10000);\n  if (gfapValue > 10000) {\n    console.warn(`GFAP value ${gfapValue} exceeds expected range, capped at 10,000 pg/ml`);\n  }\n  \n  try {\n    // Apply log-log regression formula\n    const logVolume = 0.0192 + 0.4533 * Math.log10(cappedGfap);\n    const calculatedVolume = Math.pow(10, logVolume);\n    \n    // Calculate confidence range (±30%)\n    const volumeRange = {\n      min: calculatedVolume * 0.7,\n      max: calculatedVolume * 1.3\n    };\n    \n    // Determine risk level based on volume\n    const riskLevel = getVolumeRiskLevel(calculatedVolume);\n    \n    // Get mortality rate\n    const mortalityRate = getMortalityRate(calculatedVolume);\n    \n    // Format volume for display\n    const displayVolume = calculatedVolume < 1 ? '<1' : calculatedVolume.toFixed(1);\n    \n    return {\n      volume: calculatedVolume,\n      displayVolume,\n      volumeRange: {\n        min: volumeRange.min.toFixed(1),\n        max: volumeRange.max.toFixed(1)\n      },\n      riskLevel,\n      mortalityRate,\n      isValid: true,\n      calculation: `Based on GFAP ${gfapValue} pg/ml`,\n      threshold: calculatedVolume >= 30 ? 'SURGICAL' : calculatedVolume >= 20 ? 'HIGH_RISK' : 'MANAGEABLE'\n    };\n    \n  } catch (error) {\n    console.error('Volume calculation error:', error);\n    return {\n      volume: 0,\n      volumeRange: { min: 0, max: 0 },\n      riskLevel: 'low',\n      mortalityRate: 'Unknown',\n      isValid: false,\n      calculation: 'Calculation error',\n      error: error.message\n    };\n  }\n}\n\n/**\n * Determine risk level based on calculated volume\n * @param {number} volume - Calculated volume in ml\n * @returns {string} Risk level key\n */\nfunction getVolumeRiskLevel(volume) {\n  if (volume >= VOLUME_THRESHOLDS.critical.min) return 'critical';\n  if (volume >= VOLUME_THRESHOLDS.high.min) return 'high';\n  if (volume >= VOLUME_THRESHOLDS.moderate.min) return 'moderate';\n  return 'low';\n}\n\n/**\n * Get mortality rate based on volume with improved interpolation\n * Calibrated to match clinical studies (Broderick 1993: 30ml=19%, 60ml=91%)\n * @param {number} volume - Volume in ml\n * @returns {string} Mortality rate string with citation\n */\nfunction getMortalityRate(volume) {\n  // For very small hemorrhages\n  if (volume < 10) {\n    return '5-10%⁴';\n  }\n  \n  // For small hemorrhages (10-30ml)\n  // Broderick: 30ml = 19% mortality\n  if (volume < 30) {\n    // Linear interpolation: 10ml=10%, 30ml=19%\n    const rate = Math.round(10 + (volume - 10) * (19 - 10) / (30 - 10));\n    return `${rate}%⁴`;\n  }\n  \n  // For moderate hemorrhages (30-50ml)\n  // Interpolating from Broderick 30ml=19% to 50ml≈44%\n  if (volume < 50) {\n    // Linear interpolation: 30ml=19%, 50ml=44%\n    const rate = Math.round(19 + (volume - 30) * (44 - 19) / (50 - 30));\n    return `${rate}%³`;\n  }\n  \n  // For large hemorrhages (50-60ml)\n  // Broderick: 60ml = 91% mortality\n  if (volume < 60) {\n    // Steeper increase: 50ml=44%, 60ml=91%\n    const rate = Math.round(44 + (volume - 50) * (91 - 44) / (60 - 50));\n    return `${rate}%²`;\n  }\n  \n  // For massive hemorrhages (≥60ml)\n  // Broderick: >60ml = 91-100%\n  if (volume < 80) {\n    // 60ml=91%, 80ml=96%\n    const rate = Math.round(91 + (volume - 60) * (96 - 91) / (80 - 60));\n    return `${rate}%¹`;\n  }\n  \n  // For extreme cases (≥80ml)\n  return '96-100%¹';\n}\n\n/**\n * Calculate hemorrhage size percentage for visualization\n * Based on brain area scaling: 30ml = ~40% of brain area, 100ml = ~70%\n * @param {number} volume - Volume in ml\n * @returns {number} Percentage of brain area (0-70)\n */\nexport function calculateHemorrhageSizePercent(volume) {\n  if (volume <= 0) return 0;\n  if (volume >= 100) return 70; // Maximum 70% of brain area\n  \n  // Non-linear scaling for realistic appearance\n  // 30ml = 40%, 100ml = 70%\n  const basePercent = Math.sqrt(volume / 30) * 40;\n  return Math.min(basePercent, 70);\n}\n\n/**\n * Get color for volume visualization\n * @param {number} volume - Volume in ml\n * @returns {string} CSS color value\n */\nexport function getVolumeColor(volume) {\n  const riskLevel = getVolumeRiskLevel(volume);\n  return VOLUME_THRESHOLDS[riskLevel].color;\n}\n\n/**\n * Test function for validation\n * Tests the calculator with known GFAP values\n */\nexport function testVolumeCalculator() {\n  const testCases = [\n    { gfap: 100, expectedVolume: '~5ml' },\n    { gfap: 500, expectedVolume: '~15ml' },\n    { gfap: 1000, expectedVolume: '~21ml' },\n    { gfap: 1500, expectedVolume: '~28ml' },\n    { gfap: 3000, expectedVolume: '~50ml' },\n    { gfap: 5000, expectedVolume: '~72ml' }\n  ];\n  \n  console.log('🧪 ICH Volume Calculator Test Results:');\n  testCases.forEach(test => {\n    const result = calculateICHVolume(test.gfap);\n    console.log(`GFAP ${test.gfap}: ${result.displayVolume}ml (${test.expectedVolume}) - ${result.riskLevel} risk - ${result.mortalityRate}`);\n  });\n}\n\n/**\n * Format volume for display with appropriate precision\n * @param {number} volume - Volume in ml\n * @returns {string} Formatted volume string\n */\nexport function formatVolumeDisplay(volume) {\n  if (volume < 1) return '<1 ml';\n  if (volume < 10) return `${volume.toFixed(1)} ml`;\n  return `${Math.round(volume)} ml`;\n}","/**\n * Brain Visualization Component for ICH Volume Display\n * Creates an SVG-based brain hemorrhage visualization\n */\n\nimport { calculateHemorrhageSizePercent, getVolumeColor, calculateICHVolume, formatVolumeDisplay } from '../../logic/ich-volume-calculator.js';\n\n/**\n * Render brain visualization with hemorrhage overlay\n * @param {number} volume - ICH volume in ml\n * @param {string} size - 'compact' or 'detailed'\n * @returns {string} HTML string with SVG brain visualization\n */\nexport function renderBrainVisualization(volume, size = 'compact') {\n  const dimensions = size === 'compact' ? { width: 120, height: 120 } : { width: 200, height: 200 };\n  const centerX = dimensions.width / 2;\n  const centerY = dimensions.height / 2;\n  \n  // Calculate hemorrhage appearance\n  const hemorrhagePercent = calculateHemorrhageSizePercent(volume);\n  const hemorrhageColor = getVolumeColor(volume);\n  \n  // Scale hemorrhage radius based on volume (basal ganglia region, slightly off-center)\n  const maxRadius = dimensions.width * 0.25; // Maximum 25% of brain width\n  const hemorrhageRadius = (hemorrhagePercent / 70) * maxRadius; // 70% is max brain area\n  \n  // Position hemorrhage in basal ganglia region (slightly right of center)\n  const hemorrhageX = centerX + (dimensions.width * 0.1); // 10% right of center\n  const hemorrhageY = centerY + (dimensions.height * 0.05); // 5% below center\n  \n  // 30ml reference circle (for detailed view)\n  const referenceRadius = (40 / 70) * maxRadius; // 40% brain area = 30ml threshold\n  \n  // Animation for hemorrhage (subtle pulsing)\n  const animationId = `hemorrhage-pulse-${Math.random().toString(36).substr(2, 9)}`;\n  \n  return `\n    <div class=\"brain-visualization ${size}\">\n      <svg \n        width=\"${dimensions.width}\" \n        height=\"${dimensions.height}\" \n        viewBox=\"0 0 ${dimensions.width} ${dimensions.height}\"\n        class=\"brain-svg\"\n        role=\"img\"\n        aria-label=\"Brain hemorrhage visualization showing ${volume.toFixed(1)}ml ICH volume\"\n      >\n        <!-- Brain outline with hemorrhage overlay -->\n        ${renderBrainOutlineWithHemorrhage(dimensions, volume)}\n        \n        <!-- 30ml reference indicator (detailed view only) -->\n        ${size === 'detailed' && volume > 0 ? `\n          <circle \n            cx=\"${hemorrhageX}\" \n            cy=\"${hemorrhageY}\" \n            r=\"${referenceRadius}\"\n            fill=\"none\" \n            stroke=\"#9ca3af\" \n            stroke-width=\"1\" \n            stroke-dasharray=\"3,3\"\n            opacity=\"0.5\"\n          />\n          <text \n            x=\"${hemorrhageX + referenceRadius + 5}\" \n            y=\"${hemorrhageY - referenceRadius}\" \n            font-size=\"10\" \n            fill=\"#6b7280\"\n            font-family=\"system-ui\"\n          >30ml</text>\n        ` : ''}\n        \n        <!-- Hemorrhage visualization -->\n        ${volume > 0 ? `\n          <circle \n            cx=\"${hemorrhageX}\" \n            cy=\"${hemorrhageY}\" \n            r=\"${hemorrhageRadius}\"\n            fill=\"${hemorrhageColor}\"\n            opacity=\"0.8\"\n            class=\"hemorrhage-circle\"\n          >\n            <!-- Subtle pulsing animation -->\n            <animate \n              attributeName=\"opacity\" \n              values=\"0.6;0.9;0.6\" \n              dur=\"2.5s\" \n              repeatCount=\"indefinite\"\n            />\n            ${hemorrhageRadius > 15 ? `\n            <animate \n              attributeName=\"r\" \n              values=\"${hemorrhageRadius * 0.95};${hemorrhageRadius};${hemorrhageRadius * 0.95}\" \n              dur=\"2.5s\" \n              repeatCount=\"indefinite\"\n            />\n            ` : ''}\n          </circle>\n          \n          <!-- Volume label (detailed view only) -->\n          ${size === 'detailed' ? `\n            <text \n              x=\"${centerX}\" \n              y=\"${dimensions.height - 10}\" \n              text-anchor=\"middle\" \n              font-size=\"12\" \n              font-weight=\"bold\"\n              fill=\"#374151\"\n              font-family=\"system-ui\"\n            >${volume < 1 ? '<1' : volume.toFixed(1)} ml</text>\n          ` : ''}\n        ` : ''}\n        \n        <style>\n          .hemorrhage-circle {\n            filter: drop-shadow(0 2px 4px rgba(0,0,0,0.2));\n          }\n        </style>\n      </svg>\n    </div>\n  `;\n}\n\n/**\n * Load and render the provided brain SVG with hemorrhage overlay\n * @param {object} dimensions - Width and height for the brain\n * @returns {string} Brain SVG with embedded hemorrhage visualization\n */\nfunction renderBrainOutlineWithHemorrhage(dimensions, volume) {\n  // For performance, we'll use the SVG as a background image and overlay the hemorrhage\n  // This avoids loading the 530KB SVG content directly into the DOM\n  \n  const centerX = dimensions.width / 2;\n  const centerY = dimensions.height / 2;\n  \n  // Calculate hemorrhage position (basal ganglia region - slightly right and posterior)\n  const hemorrhageX = centerX + (dimensions.width * 0.08); // 8% right of center  \n  const hemorrhageY = centerY + (dimensions.height * 0.03); // 3% below center\n  \n  const hemorrhagePercent = calculateHemorrhageSizePercent(volume);\n  const hemorrhageColor = getVolumeColor(volume);\n  const maxRadius = dimensions.width * 0.25;\n  const hemorrhageRadius = (hemorrhagePercent / 70) * maxRadius;\n  \n  return `\n    <!-- 3D Brain image as background -->\n    <image \n      x=\"0\" \n      y=\"0\" \n      width=\"${dimensions.width}\" \n      height=\"${dimensions.height}\"\n      href=\"./src/assets/brain-3d.png\"\n      opacity=\"0.95\"\n      preserveAspectRatio=\"xMidYMid meet\"\n    />\n    \n    <!-- Hemorrhage overlay in basal ganglia region -->\n    ${volume > 0 ? `\n      <circle \n        cx=\"${hemorrhageX}\" \n        cy=\"${hemorrhageY}\" \n        r=\"${hemorrhageRadius}\"\n        fill=\"${hemorrhageColor}\"\n        opacity=\"0.85\"\n        class=\"hemorrhage-circle\"\n      >\n        <!-- Subtle pulsing animation -->\n        <animate \n          attributeName=\"opacity\" \n          values=\"0.7;0.95;0.7\" \n          dur=\"2.5s\" \n          repeatCount=\"indefinite\"\n        />\n        ${hemorrhageRadius > 8 ? `\n        <animate \n          attributeName=\"r\" \n          values=\"${hemorrhageRadius * 0.96};${hemorrhageRadius * 1.02};${hemorrhageRadius * 0.96}\" \n          dur=\"2.5s\" \n          repeatCount=\"indefinite\"\n        />\n        ` : ''}\n      </circle>\n      \n      <!-- Hemorrhage center highlight -->\n      <circle \n        cx=\"${hemorrhageX}\" \n        cy=\"${hemorrhageY}\" \n        r=\"${hemorrhageRadius * 0.3}\"\n        fill=\"${hemorrhageColor}\"\n        opacity=\"0.95\"\n        class=\"hemorrhage-center\"\n      />\n    ` : ''}\n  `;\n}\n\n/**\n * Temporary brain outline (for fallback when SVG file not available)\n */\nfunction renderTemporaryBrainOutline(dimensions) {\n  const centerX = dimensions.width / 2;\n  const centerY = dimensions.height / 2;\n  \n  return `\n    <!-- Simplified brain outline -->\n    <ellipse \n      cx=\"${centerX}\" \n      cy=\"${centerY}\" \n      rx=\"${dimensions.width * 0.4}\" \n      ry=\"${dimensions.height * 0.35}\" \n      fill=\"#f1f5f9\" \n      stroke=\"#64748b\" \n      stroke-width=\"2\"\n      opacity=\"0.8\"\n    />\n    \n    <!-- Brain hemisphere division -->\n    <line \n      x1=\"${centerX}\" \n      y1=\"${centerY - dimensions.height * 0.25}\" \n      x2=\"${centerX}\" \n      y2=\"${centerY + dimensions.height * 0.25}\" \n      stroke=\"#9ca3af\" \n      stroke-width=\"1\" \n      opacity=\"0.5\"\n    />\n  `;\n}\n\n/**\n * Create compact brain icon for inline display\n * @param {number} volume - ICH volume in ml\n * @param {number} size - Icon size in pixels\n * @returns {string} Small brain icon with hemorrhage indicator\n */\nexport function renderCompactBrainIcon(volume, size = 24) {\n  const hemorrhageColor = getVolumeColor(volume);\n  const hemorrhageSize = volume > 0 ? Math.max(2, (volume / 50) * size * 0.3) : 0;\n  \n  return `\n    <svg \n      width=\"${size}\" \n      height=\"${size}\" \n      viewBox=\"0 0 ${size} ${size}\"\n      class=\"brain-icon\"\n      style=\"display: inline-block; vertical-align: middle;\"\n    >\n      <!-- Simple brain outline -->\n      <ellipse \n        cx=\"${size/2}\" \n        cy=\"${size/2}\" \n        rx=\"${size*0.4}\" \n        ry=\"${size*0.35}\" \n        fill=\"#f1f5f9\" \n        stroke=\"#64748b\" \n        stroke-width=\"1\"\n      />\n      \n      <!-- Hemorrhage indicator -->\n      ${volume > 0 ? `\n        <circle \n          cx=\"${size/2 + size*0.1}\" \n          cy=\"${size/2}\" \n          r=\"${hemorrhageSize}\"\n          fill=\"${hemorrhageColor}\"\n          opacity=\"0.9\"\n        />\n      ` : ''}\n    </svg>\n  `;\n}\n\n/**\n * Render circular brain display matching ICH risk circle style\n * @param {number} volume - ICH volume in ml\n * @returns {string} HTML for circular brain display\n */\nexport function renderCircularBrainDisplay(volume) {\n  if (!volume || volume <= 0) {\n    return `\n      <div class=\"volume-circle\" data-volume=\"0\">\n        <div class=\"volume-number\">0<span> ml</span></div>\n        <canvas class=\"volume-canvas\" width=\"120\" height=\"120\"></canvas>\n      </div>\n    `;\n  }\n  \n  const formattedVolume = formatVolumeDisplay(volume);\n  const canvasId = `volume-canvas-${Math.random().toString(36).substr(2, 9)}`;\n  \n  return `\n    <div class=\"volume-circle\" data-volume=\"${volume}\">\n      <div class=\"volume-number\">${formattedVolume}</div>\n      <canvas id=\"${canvasId}\" class=\"volume-canvas\" \n              data-volume=\"${volume}\" data-canvas-id=\"${canvasId}\"></canvas>\n    </div>\n  `;\n}\n\n/**\n * Initialize fluid fill animation for volume canvas\n * Call this after DOM is updated with new volume circles\n */\nexport function initializeVolumeAnimations() {\n  const canvases = document.querySelectorAll('.volume-canvas');\n  \n  canvases.forEach(canvas => {\n    // Set canvas internal size to match CSS size\n    const cssWidth = canvas.offsetWidth || 120;\n    const cssHeight = canvas.offsetHeight || 120;\n    canvas.width = cssWidth;\n    canvas.height = cssHeight;\n    \n    const volume = parseFloat(canvas.dataset.volume) || 0;\n    if (volume > 0) {\n      drawVolumeFluid(canvas, volume);\n    }\n  });\n}\n\n/**\n * Draw fluid fill animation on canvas\n * @param {HTMLCanvasElement} canvas - Canvas element\n * @param {number} volume - ICH volume in ml\n */\nfunction drawVolumeFluid(canvas, volume) {\n  const ctx = canvas.getContext('2d');\n  const centerX = canvas.width / 2;\n  const centerY = canvas.height / 2;\n  const radius = canvas.width * 0.45; // 45% of canvas width for the circle\n  let animationFrame = 0;\n  let isAnimating = true;\n  \n  // Check dark mode once\n  const isDarkMode = document.body.classList.contains('dark-mode') || \n                    window.matchMedia('(prefers-color-scheme: dark)').matches;\n  \n  function draw() {\n    if (!isAnimating) return;\n    \n    // Clear canvas completely\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    // Don't draw background - let CSS handle it\n    // Just draw the fluid and border\n    drawFluidLayer();\n  }\n  \n  function drawFluidLayer() {\n    // Calculate fill level based on volume\n    const maxVolume = 80; // ml (practical maximum for visualization)\n    const fillPercentage = Math.min(volume / maxVolume, 0.9);\n    const fillHeight = fillPercentage * (radius * 1.8);\n    const baseLevel = centerY + radius - 4 - fillHeight;\n    \n    // Draw fluid fill with waves\n    if (volume > 0) {\n      ctx.save();\n      \n      // Clip to circle\n      ctx.beginPath();\n      ctx.arc(centerX, centerY, radius - 4, 0, Math.PI * 2);\n      ctx.clip();\n      \n      // Draw base fluid rectangle\n      ctx.fillStyle = '#dc2626';\n      ctx.globalAlpha = 0.7;\n      ctx.fillRect(0, baseLevel + 5, canvas.width, canvas.height);\n      \n      // Draw animated wave surface\n      ctx.globalAlpha = 0.9;\n      ctx.fillStyle = '#dc2626';\n      ctx.beginPath();\n      \n      // Create wave path\n      let startX = centerX - radius + 4;\n      ctx.moveTo(startX, baseLevel);\n      \n      for (let x = startX; x <= centerX + radius - 4; x += 2) {\n        const waveOffset1 = Math.sin((x * 0.05) + animationFrame * 0.08) * 3;\n        const waveOffset2 = Math.sin((x * 0.08) + animationFrame * 0.12 + 1) * 2;\n        const y = baseLevel + waveOffset1 + waveOffset2;\n        ctx.lineTo(x, y);\n      }\n      \n      // Complete wave fill\n      ctx.lineTo(centerX + radius - 4, canvas.height);\n      ctx.lineTo(startX, canvas.height);\n      ctx.closePath();\n      ctx.fill();\n      \n      ctx.restore();\n    }\n    \n    // Draw background border circle (like ICH risk ring)\n    const borderColor = getComputedStyle(document.documentElement).getPropertyValue('--text-secondary').trim() || \n                       (isDarkMode ? '#8899a6' : '#6c757d');\n    ctx.strokeStyle = borderColor;\n    ctx.lineWidth = 8;\n    ctx.globalAlpha = 0.4;\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, radius, 0, Math.PI * 2);\n    ctx.stroke();\n    ctx.globalAlpha = 1;\n    \n    // Draw volume progress ring (like ICH risk circle)\n    const volumePercent = Math.min(volume / 100, 1); // Max 100ml = 100%\n    const circumference = 2 * Math.PI * radius;\n    const progressOffset = circumference * (1 - volumePercent);\n    \n    // Progress ring (dark mode aware)\n    const progressColor = getComputedStyle(document.documentElement).getPropertyValue('--danger-color').trim() || \n                         '#dc2626';\n    ctx.strokeStyle = progressColor;\n    ctx.lineWidth = 8;\n    ctx.setLineDash([]);\n    ctx.lineCap = 'round';\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, radius, -Math.PI/2, -Math.PI/2 + (volumePercent * 2 * Math.PI));\n    ctx.stroke();\n    \n    // Continue animation\n    animationFrame += 1;\n    if (volume > 0) {\n      requestAnimationFrame(draw);\n    }\n  }\n  \n  // Start animation\n  draw();\n  \n  // Stop animation when canvas is removed from DOM\n  const observer = new MutationObserver(() => {\n    if (!document.contains(canvas)) {\n      isAnimating = false;\n      observer.disconnect();\n    }\n  });\n  observer.observe(document.body, { childList: true, subtree: true });\n}\n\n/**\n * Get brain visualization CSS classes\n * @param {string} size - 'compact' or 'detailed'\n * @returns {string} CSS classes\n */\nexport function getBrainVisualizationClasses(size) {\n  const baseClasses = 'brain-visualization';\n  const sizeClasses = size === 'compact' ? 'compact-brain' : 'detailed-brain';\n  return `${baseClasses} ${sizeClasses}`;\n}","/**\n * Legacy ICH Model - Simple Logistic Regression (Age + GFAP Only)\n * \n * This is a baseline model for research comparison purposes.\n * Uses only age and GFAP values with logistic regression.\n * \n * Performance Metrics:\n * - ROC-AUC: 0.789\n * - Recall: 40%\n * - Precision: 86%\n * - F1-Score: 55%\n * \n * FOR RESEARCH COMPARISON ONLY - NOT FOR CLINICAL USE\n */\n\nexport class LegacyICHModel {\n  // Training data parameters from original study\n  static PARAMS = {\n    age: { \n      mean: 74.59, \n      std: 12.75 \n    },\n    gfap: { \n      mean: 665.23, \n      std: 2203.77 \n    },\n    coefficients: {\n      intercept: 0.3248,\n      age: -0.2108,        // Negative: older age slightly decreases odds in this simple model\n      gfap: 3.1631         // Positive: higher GFAP significantly increases odds\n    }\n  };\n\n  /**\n   * Calculate ICH probability using legacy logistic regression model\n   * @param {number} age - Patient age in years\n   * @param {number} gfapValue - GFAP value in pg/ml\n   * @returns {object} - Probability and diagnostic information\n   */\n  static calculateProbability(age, gfapValue) {\n    // Input validation\n    if (!age || !gfapValue || age <= 0 || gfapValue <= 0) {\n      return {\n        probability: 0,\n        confidence: 0,\n        isValid: false,\n        reason: 'Invalid inputs: age and GFAP required'\n      };\n    }\n\n    // Validate ranges\n    if (age < 18 || age > 120) {\n      return {\n        probability: 0,\n        confidence: 0,\n        isValid: false,\n        reason: `Age ${age} outside valid range (18-120 years)`\n      };\n    }\n\n    if (gfapValue < 10 || gfapValue > 20000) {\n      console.warn(`GFAP ${gfapValue} outside typical range (10-20000 pg/ml)`);\n    }\n\n    try {\n      // Step 1: Scale inputs using training data statistics\n      const scaledAge = (age - this.PARAMS.age.mean) / this.PARAMS.age.std;\n      const scaledGfap = (gfapValue - this.PARAMS.gfap.mean) / this.PARAMS.gfap.std;\n      \n      // Step 2: Calculate log-odds (logit)\n      const logit = this.PARAMS.coefficients.intercept +\n                    (this.PARAMS.coefficients.age * scaledAge) +\n                    (this.PARAMS.coefficients.gfap * scaledGfap);\n      \n      // Step 3: Convert to probability using sigmoid function\n      const rawProbability = 1 / (1 + Math.exp(-logit));\n      const probability = rawProbability * 100; // Convert to percentage\n      \n      // Step 4: Calculate confidence based on distance from decision boundary\n      // Confidence is higher when probability is closer to 0% or 100%\n      const confidence = Math.abs(rawProbability - 0.5) * 2; // 0 to 1 scale\n      \n      // Step 5: Determine risk category\n      const riskCategory = this.getRiskCategory(probability);\n      \n      return {\n        probability: Math.round(probability * 10) / 10, // Round to 1 decimal\n        confidence: Math.round(confidence * 100) / 100, // Round to 2 decimals\n        logit: Math.round(logit * 1000) / 1000, // Round to 3 decimals\n        riskCategory: riskCategory,\n        scaledInputs: { \n          age: Math.round(scaledAge * 1000) / 1000, \n          gfap: Math.round(scaledGfap * 1000) / 1000 \n        },\n        rawInputs: { age, gfap: gfapValue },\n        isValid: true,\n        calculationMethod: 'logistic_regression_age_gfap'\n      };\n      \n    } catch (error) {\n      console.error('Legacy model calculation error:', error);\n      return {\n        probability: 0,\n        confidence: 0,\n        isValid: false,\n        reason: 'Calculation error',\n        error: error.message\n      };\n    }\n  }\n\n  /**\n   * Get risk category and color based on probability\n   * @param {number} probability - Probability percentage (0-100)\n   * @returns {object} - Risk level information\n   */\n  static getRiskCategory(probability) {\n    if (probability < 10) {\n      return { \n        level: 'very_low', \n        color: '#10b981', \n        label: 'Very Low Risk',\n        description: 'Minimal ICH likelihood' \n      };\n    }\n    if (probability < 25) {\n      return { \n        level: 'low', \n        color: '#84cc16', \n        label: 'Low Risk',\n        description: 'Below typical threshold' \n      };\n    }\n    if (probability < 50) {\n      return { \n        level: 'moderate', \n        color: '#f59e0b', \n        label: 'Moderate Risk',\n        description: 'Elevated concern' \n      };\n    }\n    if (probability < 75) {\n      return { \n        level: 'high', \n        color: '#f97316', \n        label: 'High Risk',\n        description: 'Significant likelihood' \n      };\n    }\n    return { \n      level: 'very_high', \n      color: '#dc2626', \n      label: 'Very High Risk',\n      description: 'Critical ICH probability' \n    };\n  }\n\n  /**\n   * Compare legacy model with main model results\n   * @param {object} mainResults - Results from complex ML model\n   * @param {object} legacyResults - Results from legacy model\n   * @returns {object} - Comparison analysis\n   */\n  static compareModels(mainResults, legacyResults) {\n    if (!mainResults || !legacyResults || !legacyResults.isValid) {\n      return {\n        isValid: false,\n        reason: 'Invalid model results for comparison'\n      };\n    }\n\n    // Normalize probabilities to percentage scale (0-100)\n    let mainProb = mainResults.probability || 0;\n    if (mainProb <= 1) {\n      mainProb = mainProb * 100; // Convert 0.65 to 65%\n    }\n    \n    const legacyProb = legacyResults.probability || 0; // Already in percentage\n    \n    const absoluteDifference = mainProb - legacyProb;\n    const relativeDifference = legacyProb > 0 ? (absoluteDifference / legacyProb) * 100 : 0;\n    \n    // Determine which model suggests higher risk\n    const higherRiskModel = mainProb > legacyProb ? 'main' : \n                           legacyProb > mainProb ? 'legacy' : 'equal';\n    \n    // Assess agreement level\n    let agreement;\n    const absDiff = Math.abs(absoluteDifference);\n    if (absDiff < 5) agreement = 'strong';\n    else if (absDiff < 15) agreement = 'moderate';\n    else if (absDiff < 30) agreement = 'weak';\n    else agreement = 'poor';\n\n    return {\n      isValid: true,\n      probabilities: {\n        main: Math.round(mainProb * 10) / 10,\n        legacy: Math.round(legacyProb * 10) / 10\n      },\n      differences: {\n        absolute: Math.round(absoluteDifference * 10) / 10,\n        relative: Math.round(relativeDifference * 10) / 10\n      },\n      agreement: {\n        level: agreement,\n        higherRiskModel: higherRiskModel\n      },\n      interpretation: this.getComparisonInterpretation(absoluteDifference, agreement)\n    };\n  }\n\n  /**\n   * Get interpretation of model comparison\n   * @param {number} difference - Absolute difference between models\n   * @param {string} agreement - Agreement level\n   * @returns {object} - Interpretation for researchers\n   */\n  static getComparisonInterpretation(difference, agreement) {\n    const absDiff = Math.abs(difference);\n    \n    if (agreement === 'strong') {\n      return {\n        type: 'concordant',\n        message: 'Models show strong agreement',\n        implication: 'Age and GFAP are primary risk factors'\n      };\n    }\n    \n    if (absDiff > 20) {\n      return {\n        type: 'divergent',\n        message: 'Significant model disagreement',\n        implication: 'Complex model captures additional risk factors not in age/GFAP'\n      };\n    }\n    \n    return {\n      type: 'moderate_difference',\n      message: 'Models show moderate difference',\n      implication: 'Additional factors provide incremental predictive value'\n    };\n  }\n\n  /**\n   * Test the legacy model with known cases\n   * @returns {object} - Test results for validation\n   */\n  static runValidationTests() {\n    const testCases = [\n      { age: 65, gfap: 100, expected: 'low', description: 'Younger patient, low GFAP' },\n      { age: 75, gfap: 500, expected: 'moderate', description: 'Average age, moderate GFAP' },\n      { age: 85, gfap: 1000, expected: 'high', description: 'Older patient, high GFAP' },\n      { age: 70, gfap: 2000, expected: 'very_high', description: 'High GFAP dominates' },\n      { age: 90, gfap: 50, expected: 'very_low', description: 'Low GFAP despite age' }\n    ];\n\n    const results = testCases.map(testCase => {\n      const result = this.calculateProbability(testCase.age, testCase.gfap);\n      return {\n        ...testCase,\n        result: result,\n        passed: result.isValid && result.riskCategory.level === testCase.expected\n      };\n    });\n\n    const passedTests = results.filter(r => r.passed).length;\n    const totalTests = results.length;\n\n    return {\n      summary: {\n        passed: passedTests,\n        total: totalTests,\n        passRate: Math.round((passedTests / totalTests) * 100)\n      },\n      details: results\n    };\n  }\n\n  /**\n   * Get model metadata for research documentation\n   * @returns {object} - Model information\n   */\n  static getModelMetadata() {\n    return {\n      name: 'Legacy ICH Model',\n      type: 'Logistic Regression',\n      version: '1.0.0',\n      features: ['age', 'gfap'],\n      performance: {\n        rocAuc: 0.789,\n        recall: 0.40,\n        precision: 0.86,\n        f1Score: 0.55,\n        specificity: 0.94\n      },\n      trainingData: {\n        samples: 'Historical cohort',\n        dateRange: 'Research study period',\n        validation: 'Cross-validation'\n      },\n      limitations: [\n        'Only uses age and GFAP - ignores clinical symptoms',\n        'Lower recall (40%) - misses some ICH cases', \n        'No time-to-onset consideration',\n        'No blood pressure or medication factors',\n        'Simplified feature set for baseline comparison'\n      ],\n      purpose: 'Research baseline for evaluating complex model improvements'\n    };\n  }\n}\n\n/**\n * Utility function to safely calculate legacy model in existing app flow\n * @param {object} patientData - Existing patient data structure\n * @returns {object|null} - Legacy model results or null if not applicable\n */\nexport function calculateLegacyICH(patientData) {\n  try {\n    // Extract age and GFAP from various possible data structures\n    const age = patientData?.age_years || patientData?.age || null;\n    const gfap = patientData?.gfap_value || patientData?.gfap || null;\n\n    if (!age || !gfap) {\n      return null; // Silently fail if required data not available\n    }\n\n    return LegacyICHModel.calculateProbability(age, gfap);\n  } catch (error) {\n    console.warn('Legacy ICH calculation failed (non-critical):', error);\n    return null;\n  }\n}\n\n/**\n * Export test function for validation\n */\nexport function testLegacyModel() {\n  console.log('🧪 Legacy ICH Model Validation Tests');\n  const testResults = LegacyICHModel.runValidationTests();\n  \n  console.log(`✅ Passed: ${testResults.summary.passed}/${testResults.summary.total} tests`);\n  console.log(`📊 Pass Rate: ${testResults.summary.passRate}%`);\n  \n  testResults.details.forEach(test => {\n    const icon = test.passed ? '✅' : '❌';\n    console.log(`${icon} ${test.description}: ${test.result.probability.toFixed(1)}% (${test.result.riskCategory.level})`);\n  });\n  \n  return testResults;\n}","/**\n * Research Data Logger\n * Safely stores model comparison data for research analysis\n * All data stays local - no external transmission\n */\n\nimport { LegacyICHModel } from './legacy-ich-model.js';\n\nexport class ResearchDataLogger {\n  static STORAGE_KEY = 'igfap_research_data';\n  static MAX_ENTRIES = 1000; // Prevent unlimited storage growth\n\n  /**\n   * Log comparison between main and legacy models\n   * @param {object} comparisonData - Data from both models\n   */\n  static logComparison(comparisonData) {\n    try {\n      const entry = {\n        id: this.generateEntryId(),\n        timestamp: new Date().toISOString(),\n        sessionId: this.getSessionId(),\n        ...comparisonData\n      };\n\n      const stored = this.getStoredData();\n      stored.entries.push(entry);\n      \n      // Limit storage size\n      if (stored.entries.length > this.MAX_ENTRIES) {\n        stored.entries = stored.entries.slice(-this.MAX_ENTRIES);\n      }\n      \n      stored.lastUpdated = new Date().toISOString();\n      stored.totalComparisons = stored.entries.length;\n      \n      localStorage.setItem(this.STORAGE_KEY, JSON.stringify(stored));\n      \n      console.log(`📊 Research data logged (${stored.totalComparisons} comparisons)`);\n      return true;\n    } catch (error) {\n      console.warn('Research data logging failed (non-critical):', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get all stored research data\n   * @returns {object} - Complete research dataset\n   */\n  static getStoredData() {\n    try {\n      const stored = localStorage.getItem(this.STORAGE_KEY);\n      if (!stored) {\n        return this.createEmptyDataset();\n      }\n      \n      const data = JSON.parse(stored);\n      \n      // Validate structure\n      if (!data.entries || !Array.isArray(data.entries)) {\n        console.warn('Invalid research data structure, resetting');\n        return this.createEmptyDataset();\n      }\n      \n      return data;\n    } catch (error) {\n      console.warn('Failed to load research data, creating new:', error);\n      return this.createEmptyDataset();\n    }\n  }\n\n  /**\n   * Create empty dataset structure\n   * @returns {object} - Empty research dataset\n   */\n  static createEmptyDataset() {\n    return {\n      version: '1.0.0',\n      created: new Date().toISOString(),\n      lastUpdated: null,\n      totalComparisons: 0,\n      entries: [],\n      metadata: {\n        app: 'iGFAP Stroke Triage',\n        purpose: 'Model comparison research',\n        dataRetention: 'Local storage only'\n      }\n    };\n  }\n\n  /**\n   * Export research data as CSV for analysis\n   * @returns {string} - CSV formatted data\n   */\n  static exportAsCSV() {\n    const data = this.getStoredData();\n    \n    if (!data.entries || data.entries.length === 0) {\n      return 'No research data available for export';\n    }\n\n    // CSV headers\n    const headers = [\n      'timestamp',\n      'session_id', \n      'age',\n      'gfap_value',\n      'main_model_probability',\n      'main_model_module',\n      'legacy_model_probability',\n      'legacy_model_confidence',\n      'absolute_difference',\n      'relative_difference',\n      'agreement_level',\n      'higher_risk_model'\n    ];\n\n    // Convert entries to CSV rows\n    const rows = data.entries.map(entry => {\n      return [\n        entry.timestamp,\n        entry.sessionId,\n        entry.inputs?.age || '',\n        entry.inputs?.gfap || '',\n        entry.main?.probability || '',\n        entry.main?.module || '',\n        entry.legacy?.probability || '',\n        entry.legacy?.confidence || '',\n        entry.comparison?.differences?.absolute || '',\n        entry.comparison?.differences?.relative || '',\n        entry.comparison?.agreement?.level || '',\n        entry.comparison?.agreement?.higherRiskModel || ''\n      ].join(',');\n    });\n\n    // Combine headers and rows\n    const csv = [headers.join(','), ...rows].join('\\n');\n    return csv;\n  }\n\n  /**\n   * Export research data as JSON for detailed analysis\n   * @returns {string} - JSON formatted data\n   */\n  static exportAsJSON() {\n    const data = this.getStoredData();\n    return JSON.stringify(data, null, 2);\n  }\n\n  /**\n   * Download research data as file\n   * @param {string} format - 'csv' or 'json'\n   */\n  static downloadData(format = 'csv') {\n    try {\n      const data = format === 'csv' ? this.exportAsCSV() : this.exportAsJSON();\n      const filename = `igfap-research-${Date.now()}.${format}`;\n      \n      const blob = new Blob([data], { \n        type: format === 'csv' ? 'text/csv' : 'application/json' \n      });\n      \n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = filename;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      \n      console.log(`📥 Downloaded research data: ${filename}`);\n      return true;\n    } catch (error) {\n      console.error('Failed to download research data:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Clear all stored research data\n   */\n  static clearData() {\n    try {\n      localStorage.removeItem(this.STORAGE_KEY);\n      console.log('🗑️ Research data cleared');\n      return true;\n    } catch (error) {\n      console.warn('Failed to clear research data:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get summary statistics of stored data\n   * @returns {object} - Summary statistics\n   */\n  static getDataSummary() {\n    const data = this.getStoredData();\n    \n    if (!data.entries || data.entries.length === 0) {\n      return {\n        totalEntries: 0,\n        dateRange: null,\n        avgDifference: null\n      };\n    }\n\n    const entries = data.entries;\n    const differences = entries\n      .map(e => e.comparison?.differences?.absolute)\n      .filter(d => d !== undefined && d !== null);\n    \n    const avgDifference = differences.length > 0 ? \n      differences.reduce((sum, d) => sum + Math.abs(d), 0) / differences.length : 0;\n\n    return {\n      totalEntries: entries.length,\n      dateRange: {\n        first: entries[0]?.timestamp,\n        last: entries[entries.length - 1]?.timestamp\n      },\n      avgAbsoluteDifference: Math.round(avgDifference * 10) / 10,\n      storageSize: JSON.stringify(data).length\n    };\n  }\n\n  // Utility functions\n  static generateEntryId() {\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\n  }\n\n  static getSessionId() {\n    let sessionId = sessionStorage.getItem('research_session_id');\n    if (!sessionId) {\n      sessionId = 'session_' + Date.now().toString(36);\n      sessionStorage.setItem('research_session_id', sessionId);\n    }\n    return sessionId;\n  }\n}\n\n/**\n * Safe wrapper for logging research data in production\n * @param {object} mainResults - Main model results\n * @param {object} legacyResults - Legacy model results\n * @param {object} inputs - Patient input data\n */\nexport function safeLogResearchData(mainResults, legacyResults, inputs) {\n  try {\n    // Only log if research mode is enabled\n    if (!isResearchModeEnabled()) {\n      return;\n    }\n\n    const comparisonData = {\n      inputs: {\n        age: inputs.age_years || inputs.age,\n        gfap: inputs.gfap_value || inputs.gfap,\n        module: mainResults.module || 'unknown'\n      },\n      main: {\n        probability: mainResults.probability,\n        module: mainResults.module,\n        confidence: mainResults.confidence\n      },\n      legacy: legacyResults,\n      comparison: legacyResults ? \n        LegacyICHModel.compareModels(mainResults, legacyResults) : null\n    };\n\n    ResearchDataLogger.logComparison(comparisonData);\n  } catch (error) {\n    // Silently fail - never break main app functionality\n    console.warn('Research logging failed (non-critical):', error);\n  }\n}\n\n/**\n * Check if research mode is enabled for current module\n * @param {string} module - Current module (coma/limited/full)\n * @returns {boolean} - True if research features should be active\n */\nexport function isResearchModeEnabled(module = null) {\n  // Never enable research mode for coma module\n  if (module === 'coma') {\n    return false;\n  }\n  \n  // Always enable for stroke modules (limited/full)\n  if (module === 'limited' || module === 'full') {\n    return true;\n  }\n  \n  // Fallback: check if any stroke module data exists\n  if (typeof window !== 'undefined') {\n    try {\n      const store = window.store || require('../state/store.js')?.store;\n      if (store) {\n        const formData = store.getState().formData;\n        const hasStrokeData = formData.limited || formData.full;\n        return hasStrokeData; // Enable if stroke module data exists\n      }\n    } catch (error) {\n      // Silently fail - research mode just won't work\n    }\n  }\n  \n  return false;\n}\n\n/**\n * Enable/disable research mode\n * @param {boolean} enabled - Enable or disable research mode\n */\nexport function setResearchMode(enabled) {\n  try {\n    if (enabled) {\n      localStorage.setItem('research_mode', 'true');\n      console.log('🔬 Research mode enabled');\n    } else {\n      localStorage.removeItem('research_mode');\n      console.log('🔬 Research mode disabled');\n    }\n    \n    // Trigger page refresh to apply changes\n    if (window.location.search.includes('research=')) {\n      // Remove research param from URL if disabling\n      if (!enabled) {\n        const url = new URL(window.location);\n        url.searchParams.delete('research');\n        window.history.replaceState({}, '', url);\n      }\n    }\n    \n    return true;\n  } catch (error) {\n    console.warn('Failed to toggle research mode:', error);\n    return false;\n  }\n}","/**\n * Research Comparison UI Components\n * Hidden by default, activated only for research purposes\n */\n\nimport { LegacyICHModel } from './legacy-ich-model.js';\nimport { ResearchDataLogger, isResearchModeEnabled } from './data-logger.js';\nimport { t } from '../localization/i18n.js';\n\n/**\n * Render research toggle button (no longer used - header button handles this)\n * @returns {string} - Empty string (header button replaces this)\n */\nexport function renderResearchToggle() {\n  return ''; // Header button now handles research panel toggling\n}\n\n/**\n * Render model comparison panel\n * @param {object} mainResults - Main model results\n * @param {object} legacyResults - Legacy model results\n * @param {object} inputs - Patient input data\n * @returns {string} - HTML for comparison panel\n */\nexport function renderModelComparison(mainResults, legacyResults, inputs) {\n  // Show debug info if legacy results are invalid\n  if (!legacyResults?.isValid) {\n    console.log('🔬 Legacy model results invalid:', legacyResults);\n    return `\n      <div class=\"research-panel\" id=\"researchPanel\" style=\"display: none;\">\n        <div class=\"research-header\">\n          <h4>🔬 Model Comparison (Research)</h4>\n          <button class=\"close-research\" id=\"closeResearch\">×</button>\n        </div>\n        <div class=\"research-error\">\n          <p>⚠️ Legacy model calculation failed</p>\n          <small>Debug: ${legacyResults?.reason || 'Unknown error'}</small>\n        </div>\n      </div>\n    `;\n  }\n\n  const comparison = LegacyICHModel.compareModels(mainResults, legacyResults);\n  \n  return `\n    <div class=\"research-panel\" id=\"researchPanel\" style=\"display: none;\">\n      <div class=\"research-header\">\n        <h4>🔬 Model Comparison (Research)</h4>\n        <button class=\"close-research\" id=\"closeResearch\">×</button>\n      </div>\n      \n      <div class=\"model-comparison\">\n        ${renderProbabilityBars(mainResults, legacyResults)}\n        ${renderDifferenceAnalysis(comparison)}\n        ${renderCalculationDetails(legacyResults, inputs)}\n        ${renderModelMetrics()}\n      </div>\n      \n      <div class=\"research-actions\">\n        <button id=\"exportResearchData\" class=\"research-btn\">📥 Export Data</button>\n        <button id=\"toggleCalculationDetails\" class=\"research-btn\">🧮 Details</button>\n        <button id=\"clearResearchData\" class=\"research-btn danger\">🗑️ Clear</button>\n      </div>\n      \n      <div class=\"research-disclaimer\">\n        <small>\n          ⚠️ <strong>Research Mode Active</strong><br>\n          Legacy model: Age + GFAP only (ROC-AUC: 0.789, Recall: 40%)<br>\n          For baseline comparison. Main model includes additional clinical factors.\n        </small>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Render probability comparison bars\n * @param {object} mainResults - Main model results\n * @param {object} legacyResults - Legacy model results\n * @returns {string} - HTML for probability bars\n */\nfunction renderProbabilityBars(mainResults, legacyResults) {\n  // Convert main model probability to percentage if it's in decimal form (0-1)\n  let mainProb = mainResults.probability || 0;\n  if (mainProb <= 1) {\n    mainProb = mainProb * 100; // Convert 0.65 to 65%\n  }\n  \n  // Legacy model already returns percentage (0-100)\n  const legacyProb = legacyResults.probability || 0;\n  \n  return `\n    <div class=\"probability-comparison\">\n      <div class=\"bar-group\">\n        <label class=\"bar-label\">Main Model (Complex) - ${mainResults.module || 'Unknown'}</label>\n        <div class=\"probability-bar\">\n          <div class=\"bar-fill main-model\" style=\"width: ${Math.min(mainProb, 100)}%\">\n            <span class=\"bar-value\">${mainProb.toFixed(1)}%</span>\n          </div>\n        </div>\n      </div>\n      \n      <div class=\"bar-group\">\n        <label class=\"bar-label\">Legacy Model (Age + GFAP Only)</label>\n        <div class=\"probability-bar\">\n          <div class=\"bar-fill legacy-model\" style=\"width: ${Math.min(legacyProb, 100)}%\">\n            <span class=\"bar-value\">${legacyProb.toFixed(1)}%</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Render difference analysis\n * @param {object} comparison - Model comparison results\n * @returns {string} - HTML for difference analysis\n */\nfunction renderDifferenceAnalysis(comparison) {\n  if (!comparison.isValid) {\n    return '<div class=\"comparison-error\">Unable to compare models</div>';\n  }\n\n  const { differences, agreement } = comparison;\n  const isMainHigher = differences.absolute > 0;\n  \n  return `\n    <div class=\"difference-analysis\">\n      <div class=\"difference-metric\">\n        <span class=\"metric-label\">Difference:</span>\n        <span class=\"metric-value ${isMainHigher ? 'higher' : 'lower'}\">\n          ${differences.absolute > 0 ? '+' : ''}${differences.absolute}%\n        </span>\n      </div>\n      \n      <div class=\"agreement-level\">\n        <span class=\"metric-label\">Agreement:</span>\n        <span class=\"agreement-badge ${agreement.level}\">\n          ${agreement.level.charAt(0).toUpperCase() + agreement.level.slice(1)}\n        </span>\n      </div>\n      \n      <div class=\"interpretation\">\n        <p class=\"interpretation-text\">${comparison.interpretation.message}</p>\n        <small class=\"interpretation-detail\">${comparison.interpretation.implication}</small>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Render calculation details (expandable)\n * @param {object} legacyResults - Legacy model results\n * @param {object} inputs - Patient input data\n * @returns {string} - HTML for calculation details\n */\nfunction renderCalculationDetails(legacyResults, inputs) {\n  return `\n    <div class=\"calculation-details\" id=\"calculationDetails\" style=\"display: none;\">\n      <h5>Legacy Model Calculation</h5>\n      <div class=\"calculation-steps\">\n        <div class=\"step\">\n          <strong>Inputs:</strong> Age ${inputs.age}, GFAP ${inputs.gfap} pg/ml\n        </div>\n        <div class=\"step\">\n          <strong>Scaling:</strong> Age → ${legacyResults.scaledInputs.age}, GFAP → ${legacyResults.scaledInputs.gfap}\n        </div>\n        <div class=\"step\">\n          <strong>Logit:</strong> ${legacyResults.logit}\n        </div>\n        <div class=\"step\">\n          <strong>Probability:</strong> ${legacyResults.probability}% (Confidence: ${(legacyResults.confidence * 100).toFixed(0)}%)\n        </div>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Render model performance metrics\n * @returns {string} - HTML for model metrics\n */\nfunction renderModelMetrics() {\n  const metadata = LegacyICHModel.getModelMetadata();\n  \n  return `\n    <div class=\"model-metrics\">\n      <h5>Performance Comparison</h5>\n      <div class=\"metrics-grid\">\n        <div class=\"metric-item\">\n          <span class=\"metric-name\">ROC-AUC</span>\n          <span class=\"metric-value\">Legacy: ${metadata.performance.rocAuc}</span>\n        </div>\n        <div class=\"metric-item\">\n          <span class=\"metric-name\">Recall</span>\n          <span class=\"metric-value\">Legacy: ${(metadata.performance.recall * 100).toFixed(0)}%</span>\n        </div>\n        <div class=\"metric-item\">\n          <span class=\"metric-name\">Precision</span>\n          <span class=\"metric-value\">Legacy: ${(metadata.performance.precision * 100).toFixed(0)}%</span>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Initialize research mode event handlers\n */\nexport function initializeResearchMode() {\n  // Always initialize if research panel exists\n  const researchPanel = document.getElementById('researchPanel');\n  if (!researchPanel) {\n    return;\n  }\n\n  // Close research panel\n  const closeResearch = document.getElementById('closeResearch');\n  if (closeResearch) {\n    closeResearch.addEventListener('click', () => {\n      const panel = document.getElementById('researchPanel');\n      if (panel) {\n        panel.style.display = 'none';\n      }\n    });\n  }\n\n  // Export data button\n  const exportButton = document.getElementById('exportResearchData');\n  if (exportButton) {\n    exportButton.addEventListener('click', () => {\n      ResearchDataLogger.downloadData('csv');\n    });\n  }\n\n  // Toggle calculation details\n  const detailsToggle = document.getElementById('toggleCalculationDetails');\n  if (detailsToggle) {\n    detailsToggle.addEventListener('click', () => {\n      const details = document.getElementById('calculationDetails');\n      if (details) {\n        details.style.display = details.style.display === 'none' ? 'block' : 'none';\n        detailsToggle.textContent = details.style.display === 'none' ? '🧮 Details' : '🧮 Hide';\n      }\n    });\n  }\n\n  // Clear data button\n  const clearButton = document.getElementById('clearResearchData');\n  if (clearButton) {\n    clearButton.addEventListener('click', () => {\n      if (confirm('Clear all research data? This cannot be undone.')) {\n        ResearchDataLogger.clearData();\n        \n        // Update display\n        const summary = ResearchDataLogger.getDataSummary();\n        console.log(`Data cleared. Total entries: ${summary.totalEntries}`);\n      }\n    });\n  }\n\n  console.log('🔬 Research mode initialized');\n}\n\n","import { renderProgressIndicator } from '../components/progress.js';\nimport { renderCriticalAlert } from '../components/alerts.js';\nimport { renderDriversSection } from '../components/drivers.js';\nimport { renderStrokeCenterMap } from '../components/stroke-center-map.js';\nimport { getRiskLevel, formatTime } from '../../logic/formatters.js';\nimport { CRITICAL_THRESHOLDS } from '../../config.js';\nimport { t, i18n } from '../../localization/i18n.js';\nimport { store } from '../../state/store.js';\nimport { formatSummaryLabel, formatDisplayValue, formatDriverName } from '../../utils/label-formatter.js';\nimport { calculateICHVolume, formatVolumeDisplay } from '../../logic/ich-volume-calculator.js';\nimport { renderCircularBrainDisplay, initializeVolumeAnimations } from '../components/brain-visualization.js';\n// Dynamic import for React islands to avoid module resolution issues\n// Using React island tachometer instead of the vanilla premium gauge\nimport { calculateLegacyICH } from '../../research/legacy-ich-model.js';\nimport { safeLogResearchData, isResearchModeEnabled } from '../../research/data-logger.js';\nimport { renderModelComparison, renderResearchToggle } from '../../research/comparison-ui.js';\n// Premium vanilla JS tachometer implementation\n\nfunction getModuleDisplayName(module) {\n  const isDE = i18n.getCurrentLanguage() === 'de';\n  const moduleNames = {\n    'Coma': isDE ? 'Koma-Modul' : 'Coma Module',\n    'Limited': isDE ? 'Begrenzte Daten' : 'Limited Data',\n    'Full': isDE ? 'Vollständige Bewertung' : 'Full Assessment'\n  };\n  return moduleNames[module] || module;\n}\n\nfunction renderInputSummary() {\n  const state = store.getState();\n  const formData = state.formData;\n  \n  if (!formData || Object.keys(formData).length === 0) {\n    return '';\n  }\n  \n  let summaryHtml = '';\n  \n  // Iterate through each module's form data\n  Object.entries(formData).forEach(([module, data]) => {\n    if (data && Object.keys(data).length > 0) {\n      const moduleTitle = t(`${module}ModuleTitle`) || module.charAt(0).toUpperCase() + module.slice(1);\n      let itemsHtml = '';\n      \n      Object.entries(data).forEach(([key, value]) => {\n        // Skip empty values\n        if (value === '' || value === null || value === undefined) return;\n        \n        // Use consistent medical terminology from input forms\n        let label = formatSummaryLabel(key);\n        \n        // Format value with appropriate units\n        let displayValue = formatDisplayValue(value, key);\n        \n        itemsHtml += `\n          <div class=\"summary-item\">\n            <span class=\"summary-label\">${label}:</span>\n            <span class=\"summary-value\">${displayValue}</span>\n          </div>\n        `;\n      });\n      \n      if (itemsHtml) {\n        summaryHtml += `\n          <div class=\"summary-module\">\n            <h4>${moduleTitle}</h4>\n            <div class=\"summary-items\">\n              ${itemsHtml}\n            </div>\n          </div>\n        `;\n      }\n    }\n  });\n  \n  if (!summaryHtml) return '';\n  \n  return `\n    <div class=\"input-summary\">\n      <h3>📋 ${t('inputSummaryTitle')}</h3>\n      <p class=\"summary-subtitle\">${t('inputSummarySubtitle')}</p>\n      <div class=\"summary-content\">\n        ${summaryHtml}\n      </div>\n    </div>\n  `;\n}\n\nfunction renderRiskCard(type, data, results) {\n  if (!data) return '';\n  \n  const percent = Math.round((data.probability || 0) * 100);\n  const riskLevel = getRiskLevel(percent, type);\n  const isCritical = percent > 70; // Very high risk threshold\n  const isHigh = percent > CRITICAL_THRESHOLDS[type].high;\n  \n  const icons = { ich: '🩸', lvo: '🧠' };\n  const titles = { ich: t('ichProbability'), lvo: t('lvoProbability') };\n  \n  const level = isCritical ? 'critical' : isHigh ? 'high' : 'normal';\n  return `\n    <div class=\"enhanced-risk-card ${type} ${level}\">\n      <div class=\"risk-header\">\n        <div class=\"risk-icon\">${icons[type]}</div>\n        <div class=\"risk-title\">\n          <h3>${titles[type]}</h3>\n        </div>\n      </div>\n      \n      <div class=\"risk-probability\">\n        <div class=\"circles-container\">\n          <div class=\"rings-row\">\n            <div class=\"circle-item\">\n              <div class=\"probability-circle\" data-react-ring data-percent=\"${percent}\" data-level=\"${level}\"></div>\n              <div class=\"circle-label\">${type === 'ich' ? 'ICH Risk' : 'LVO Risk'}</div>\n            </div>\n          </div>\n          <div class=\"risk-level ${level}\">${riskLevel}</div>\n        </div>\n        \n        <div class=\"risk-assessment\"></div>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Render ICH volume display for integration into risk card\n * @param {object} data - ICH risk data containing GFAP value\n * @returns {string} HTML for volume display\n */\nfunction renderICHVolumeDisplay(data) {\n  // Get GFAP value from the data\n  const gfapValue = data.gfap_value || getCurrentGfapValue();\n  \n  if (!gfapValue || gfapValue <= 0) {\n    return '';\n  }\n  \n  const volumeResult = calculateICHVolume(gfapValue);\n  \n  return `\n    <div class=\"volume-display-container\">\n      ${renderCircularBrainDisplay(volumeResult.volume)}\n    </div>\n  `;\n}\n\n/**\n * Get current GFAP value from form data\n * @returns {number} GFAP value or 0 if not available\n */\nfunction getCurrentGfapValue() {\n  const state = store.getState();\n  const formData = state.formData;\n  \n  // Check all modules for GFAP value\n  for (const module of ['coma', 'limited', 'full']) {\n    if (formData[module]?.gfap_value) {\n      return parseFloat(formData[module].gfap_value);\n    }\n  }\n  \n  return 0;\n}\n\nfunction renderLVONotPossible() {\n  return `\n    <div class=\"enhanced-risk-card lvo not-possible\">\n      <div class=\"risk-header\">\n        <div class=\"risk-icon\">🔍</div>\n        <div class=\"risk-title\">\n          <h3>${t('lvoProbability')}</h3>\n          <span class=\"risk-module\">${t('limitedAssessment')}</span>\n        </div>\n      </div>\n      \n      <div class=\"not-possible-content\">\n        <p>${t('lvoNotPossible')}</p>\n        <p>${t('fullExamRequired')}</p>\n      </div>\n    </div>\n  `;\n}\n\nexport function renderResults(results, startTime) {\n  const { ich, lvo } = results;\n  \n  // Determine current module\n  const currentModule = getCurrentModuleName(ich);\n  \n  // Calculate legacy model for research comparison (only for stroke modules)\n  const legacyResults = currentModule !== 'coma' ? calculateLegacyFromResults(results) : null;\n  \n  // Debug logging for research mode\n  console.log('🔬 Research Debug - Always Active:', {\n    module: currentModule,\n    researchEnabled: isResearchModeEnabled(currentModule),\n    mainResults: ich,\n    legacyResults: legacyResults,\n    patientInputs: getPatientInputs(),\n    legacyCalculationAttempted: currentModule !== 'coma'\n  });\n  \n  // Log research data if research mode is enabled (background, non-breaking)\n  if (legacyResults && isResearchModeEnabled(currentModule)) {\n    safeLogResearchData(ich, legacyResults, getPatientInputs());\n  }\n  \n  // Detect which module was used based on the data\n  const isLimitedOrComa = ich?.module === 'Limited' || ich?.module === 'Coma' || lvo?.notPossible === true;\n  const isFullModule = ich?.module === 'Full';\n  \n  let resultsHtml;\n  \n  // For limited/coma modules - only show ICH\n  if (isLimitedOrComa) {\n    resultsHtml = renderICHFocusedResults(ich, results, startTime, legacyResults, currentModule);\n  } else {\n    // For full module - show ICH prominently with conditional LVO text\n    resultsHtml = renderFullModuleResults(ich, lvo, results, startTime, legacyResults, currentModule);\n  }\n  \n  // Initialize animations after DOM update\n  setTimeout(async () => {\n    initializeVolumeAnimations();\n    try {\n      const { mountIslands } = await import('../../react/mountIslands.jsx');\n      mountIslands();\n    } catch (err) {\n      console.warn('React islands not available:', err);\n    }\n  }, 100);\n  \n  return resultsHtml;\n}\n\nfunction renderICHFocusedResults(ich, results, startTime, legacyResults, currentModule) {\n  const criticalAlert = ich && ich.probability > 0.6 ? renderCriticalAlert() : '';\n  const ichPercentLocal = Math.round((ich?.probability || 0) * 100);\n  const strokeCenterHtml = renderStrokeCenterMap(results);\n  const inputSummaryHtml = renderInputSummary();\n  const researchToggleHtml = isResearchModeEnabled(currentModule) ? renderResearchToggle() : '';\n  const researchComparisonHtml = (legacyResults && isResearchModeEnabled(currentModule)) ? \n    renderModelComparison(ich, legacyResults, getPatientInputs()) : '';\n  \n  // Add alternative diagnoses for coma module\n  const alternativeDiagnosesHtml = (ich?.module === 'Coma') ? renderComaAlternativeDiagnoses(ich.probability) : '';\n  \n  // Add differential diagnoses for stroke modules (limited and full)\n  const strokeDifferentialHtml = (ich?.module !== 'Coma') ? renderStrokeDifferentialDiagnoses(ich.probability) : '';\n  \n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(3)}\n      <h2>${t('bleedingRiskAssessment') || 'Blutungsrisiko-Bewertung / Bleeding Risk Assessment'}</h2>\n      ${criticalAlert}\n      \n      <!-- Single ICH Risk Card -->\n      <div class=\"risk-results-single\">\n        ${renderRiskCard('ich', ich, results)}\n      </div>\n\n      ${ich?.module === 'Coma' && ichPercentLocal >= 50 ? `\n      <!-- ICH Volume Card (Coma only) -->\n      <div class=\"risk-results-single\">\n        ${renderVolumeCard(ich)}\n      </div>\n      ` : ''}\n      \n      <!-- Alternative Diagnoses for Coma Module -->\n      ${alternativeDiagnosesHtml}\n      \n      <!-- Differential Diagnoses for Stroke Modules -->\n      ${strokeDifferentialHtml}\n      \n      <!-- Research Model Comparison (hidden unless research mode) -->\n      ${researchComparisonHtml}\n      \n      <!-- ICH Drivers Only (not shown for Coma module) -->\n      ${ich?.module !== 'Coma' ? `\n        <div class=\"enhanced-drivers-section\">\n          <h3>${t('riskFactorsTitle') || 'Hauptrisikofaktoren / Main Risk Factors'}</h3>\n          ${renderICHDriversOnly(ich)}\n        </div>\n      ` : ''}\n      \n      <!-- Collapsible Additional Information -->\n      <div class=\"additional-info-section\">\n        <button class=\"info-toggle\" data-target=\"input-summary\">\n          <span class=\"toggle-icon\">📋</span>\n          <span class=\"toggle-text\">${t('inputSummaryTitle')}</span>\n          <span class=\"toggle-arrow\">▼</span>\n        </button>\n        <div class=\"collapsible-content\" id=\"input-summary\" style=\"display: none;\">\n          ${inputSummaryHtml}\n        </div>\n        \n        <button class=\"info-toggle\" data-target=\"stroke-centers\">\n          <span class=\"toggle-icon\">🏥</span>\n          <span class=\"toggle-text\">${t('nearestCentersTitle')}</span>\n          <span class=\"toggle-arrow\">▼</span>\n        </button>\n        <div class=\"collapsible-content\" id=\"stroke-centers\" style=\"display: none;\">\n          ${strokeCenterHtml}\n        </div>\n      </div>\n      \n      <div class=\"results-actions\">\n        <div class=\"primary-actions\">\n          <button type=\"button\" class=\"primary\" id=\"printResults\"> 📄 ${t('printResults')} </button>\n          <button type=\"button\" class=\"secondary\" data-action=\"reset\"> ${t('newAssessment')} </button>\n        </div>\n        <div class=\"navigation-actions\">\n          <button type=\"button\" class=\"tertiary\" data-action=\"goBack\"> ← ${t('goBack')} </button>\n          <button type=\"button\" class=\"tertiary\" data-action=\"goHome\"> 🏠 ${t('goHome')} </button>\n        </div>\n      </div>\n      \n      <div class=\"disclaimer\">\n        <strong>⚠️ ${t('importantNote')}:</strong> ${t('importantText')} Results generated at ${new Date().toLocaleTimeString()}.\n      </div>\n      \n      ${renderBibliography(ich)}\n      ${researchToggleHtml}\n    </div>\n  `;\n}\n\nfunction renderFullModuleResults(ich, lvo, results, startTime, legacyResults, currentModule) {\n  const ichPercent = Math.round((ich?.probability || 0) * 100);\n  const lvoPercent = Math.round((lvo?.probability || 0) * 100);\n  \n  const criticalAlert = ich && ich.probability > 0.6 ? renderCriticalAlert() : '';\n  const strokeCenterHtml = renderStrokeCenterMap(results);\n  const inputSummaryHtml = renderInputSummary();\n  const researchToggleHtml = isResearchModeEnabled(currentModule) ? renderResearchToggle() : '';\n  const researchComparisonHtml = (legacyResults && isResearchModeEnabled(currentModule)) ? \n    renderModelComparison(ich, legacyResults, getPatientInputs()) : '';\n  \n  // Get FAST-ED score from form data to determine LVO display\n  const state = store.getState();\n  const fastEdScore = parseInt(state.formData?.full?.fast_ed_score) || 0;\n  console.log('🔍 Debug LVO Display:');\n  console.log('  Current Module:', currentModule);\n  console.log('  FAST-ED Score:', fastEdScore);\n  console.log('  FAST-ED Raw:', state.formData?.full?.fast_ed_score);\n  console.log('  LVO Data:', lvo);\n  console.log('  LVO notPossible:', lvo?.notPossible);\n  console.log('  LVO Probability:', lvo?.probability);\n  console.log('  ICH Module:', ich?.module);\n  \n  // Ensure we only show LVO in full module and when LVO data is available\n  const isFullModule = currentModule === 'full' || ich?.module === 'Full';\n  const hasValidLVO = lvo && typeof lvo.probability === 'number' && !lvo.notPossible;\n  const showLVORiskCard = isFullModule && fastEdScore > 3 && hasValidLVO;\n  \n  console.log('  Conditions: isFullModule:', isFullModule);\n  console.log('  Conditions: fastEdScore > 3:', fastEdScore > 3);\n  console.log('  Conditions: hasValidLVO:', hasValidLVO);\n  console.log('  Show LVO Card:', showLVORiskCard);\n  \n  // Determine layout configuration\n  const showVolumeCard = ichPercent >= 50;\n  const maxProbability = Math.max(ichPercent, lvoPercent);\n  // Robust ratio for gating (avoid divide-by-zero)\n  const eps = 0.5;\n  const ratio = lvoPercent / Math.max(ichPercent, eps);\n  const inRatioBand = ratio >= 0.6 && ratio <= 1.7;\n  // Strong-signal gate: both ICH and LVO at least 50%, and ratio in an informative band\n  const showTachometer = isFullModule && ichPercent >= 50 && lvoPercent >= 50 && inRatioBand;\n  const showDominanceBanner = isFullModule && ichPercent >= 50 && lvoPercent >= 50 && !inRatioBand;\n  // DEBUG: Temporary relaxed conditions for testing\n  const debugShowTachometer = isFullModule && ichPercent >= 30 && lvoPercent >= 30;\n  console.log('🎯 Tachometer conditions:', { isFullModule, ichPercent, lvoPercent, ratio: ratio.toFixed(2), inRatioBand, showTachometer, showDominanceBanner });\n  \n  // Calculate number of cards and layout class\n  let cardCount = 1; // Always have ICH\n  // No placeholder needed - only show LVO card when FAST-ED > 3\n  if (showLVORiskCard) cardCount++;\n  if (showVolumeCard) cardCount++;\n  \n  const layoutClass = cardCount === 1 ? 'risk-results-single' : \n                     cardCount === 2 ? 'risk-results-dual' : \n                     'risk-results-triple';\n  \n  // Add differential diagnoses for stroke modules\n  const strokeDifferentialHtml = renderStrokeDifferentialDiagnoses(ich.probability);\n  \n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(3)}\n      <h2>${t('resultsTitle')}</h2>\n      ${criticalAlert}\n      \n      <!-- Risk Assessment Display -->\n      <div class=\"${layoutClass}\">\n        ${renderRiskCard('ich', ich, results)}\n        ${showLVORiskCard ? renderRiskCard('lvo', lvo, results) : ''}\n        ${showVolumeCard ? renderVolumeCard(ich) : ''}\n      </div>\n      \n      <!-- Treatment Decision Gauge (when strong signal) -->\n      ${debugShowTachometer ? renderTachometerGauge(ichPercent, lvoPercent) : ''}\n      ${!debugShowTachometer && showDominanceBanner ? renderDominanceBanner(ichPercent, lvoPercent, ratio) : ''}\n      \n      <!-- Differential Diagnoses for Stroke Modules -->\n      ${strokeDifferentialHtml}\n      \n      <!-- Research Model Comparison (hidden unless research mode) -->\n      ${researchComparisonHtml}\n      \n      <!-- Risk Factor Drivers -->\n      <div class=\"enhanced-drivers-section\">\n        <h3>${t('riskFactorsTitle') || 'Risikofaktoren / Risk Factors'}</h3>\n        ${showLVORiskCard ? renderDriversSection(ich, lvo) : renderICHDriversOnly(ich)}\n      </div>\n      \n      <!-- Collapsible Additional Information -->\n      <div class=\"additional-info-section\">\n        <button class=\"info-toggle\" data-target=\"input-summary\">\n          <span class=\"toggle-icon\">📋</span>\n          <span class=\"toggle-text\">${t('inputSummaryTitle')}</span>\n          <span class=\"toggle-arrow\">▼</span>\n        </button>\n        <div class=\"collapsible-content\" id=\"input-summary\" style=\"display: none;\">\n          ${inputSummaryHtml}\n        </div>\n        \n        <button class=\"info-toggle\" data-target=\"stroke-centers\">\n          <span class=\"toggle-icon\">🏥</span>\n          <span class=\"toggle-text\">${t('nearestCentersTitle')}</span>\n          <span class=\"toggle-arrow\">▼</span>\n        </button>\n        <div class=\"collapsible-content\" id=\"stroke-centers\" style=\"display: none;\">\n          ${strokeCenterHtml}\n        </div>\n      </div>\n      \n      <div class=\"results-actions\">\n        <div class=\"primary-actions\">\n          <button type=\"button\" class=\"primary\" id=\"printResults\"> 📄 ${t('printResults')} </button>\n          <button type=\"button\" class=\"secondary\" data-action=\"reset\"> ${t('newAssessment')} </button>\n        </div>\n        <div class=\"navigation-actions\">\n          <button type=\"button\" class=\"tertiary\" data-action=\"goBack\"> ← ${t('goBack')} </button>\n          <button type=\"button\" class=\"tertiary\" data-action=\"goHome\"> 🏠 ${t('goHome')} </button>\n        </div>\n      </div>\n      \n      <div class=\"disclaimer\">\n        <strong>⚠️ ${t('importantNote')}:</strong> ${t('importantText')} Results generated at ${new Date().toLocaleTimeString()}.\n      </div>\n      \n      ${renderBibliography(ich)}\n      ${researchToggleHtml}\n    </div>\n  `;\n}\n\nfunction renderLVONotification() {\n  return `\n    <div class=\"secondary-notification\">\n      <p class=\"lvo-possible\">\n        ⚡ ${t('lvoMayBePossible') || 'Großgefäßverschluss möglich / Large vessel occlusion possible'}\n      </p>\n    </div>\n  `;\n}\n\nfunction renderDominanceBanner(ichPercent, lvoPercent, ratio) {\n  const dominant = ratio > 1 ? 'LVO' : 'ICH';\n  const icon = dominant === 'LVO' ? '🧠' : '🩸';\n  const dominantText = i18n.getCurrentLanguage() === 'de'\n    ? (dominant === 'LVO' ? 'LVO-dominant' : 'ICH-dominant')\n    : (dominant === 'LVO' ? 'LVO dominant' : 'ICH dominant');\n  const subtitle = i18n.getCurrentLanguage() === 'de'\n    ? `Verhältnis LVO/ICH: ${ratio.toFixed(2)}`\n    : `LVO/ICH ratio: ${ratio.toFixed(2)}`;\n  return `\n    <div class=\"tachometer-section\">\n      <div class=\"tachometer-card\">\n        <div class=\"treatment-recommendation ${dominant === 'LVO' ? 'lvo-dominant' : 'ich-dominant'}\">\n          <div class=\"recommendation-icon\">${icon}</div>\n          <div class=\"recommendation-text\">\n            <h4>${dominantText}</h4>\n            <p>${subtitle}</p>\n          </div>\n          <div class=\"probability-summary\">\n            ICH: ${ichPercent}% | LVO: ${lvoPercent}%\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\nfunction renderICHDriversOnly(ich) {\n  if (!ich || !ich.drivers) {\n    return '<p class=\"no-drivers\">No driver data available</p>';\n  }\n  \n  // Drivers are already formatted from API with positive/negative arrays\n  const driversData = ich.drivers;\n  \n  // Check if drivers have the correct structure\n  if (!driversData.positive && !driversData.negative) {\n    // Fallback for unexpected format\n    return '<p class=\"no-drivers\">Driver format error</p>';\n  }\n  \n  const positiveDrivers = driversData.positive || [];\n  const negativeDrivers = driversData.negative || [];\n  \n  return `\n    <div class=\"drivers-split-view\">\n      <div class=\"drivers-column positive-column\">\n        <div class=\"column-header\">\n          <span class=\"column-icon\">⬆</span>\n          <span class=\"column-title\">${t('increasingRisk') || 'Risikoerhöhend / Increasing Risk'}</span>\n        </div>\n        <div class=\"compact-drivers\">\n          ${positiveDrivers.length > 0 ? \n            positiveDrivers.slice(0, 5).map(d => renderCompactDriver(d, 'positive')).join('') :\n            `<p class=\"no-factors\">${t('noFactors') || 'Keine Faktoren / No factors'}</p>`\n          }\n        </div>\n      </div>\n      \n      <div class=\"drivers-column negative-column\">\n        <div class=\"column-header\">\n          <span class=\"column-icon\">⬇</span>\n          <span class=\"column-title\">${t('decreasingRisk') || 'Risikomindernd / Decreasing Risk'}</span>\n        </div>\n        <div class=\"compact-drivers\">\n          ${negativeDrivers.length > 0 ?\n            negativeDrivers.slice(0, 5).map(d => renderCompactDriver(d, 'negative')).join('') :\n            `<p class=\"no-factors\">${t('noFactors') || 'Keine Faktoren / No factors'}</p>`\n          }\n        </div>\n      </div>\n    </div>\n  `;\n}\n\nfunction renderCompactDriver(driver, type) {\n  // Driver object has 'label' and 'weight' properties\n  const percentage = Math.abs(driver.weight * 100);\n  const width = Math.min(percentage * 2, 100); // Scale for display\n  \n  return `\n    <div class=\"compact-driver-item\">\n      <div class=\"compact-driver-label\">${formatDriverName(driver.label)}</div>\n      <div class=\"compact-driver-bar ${type}\" style=\"width: ${width}%;\">\n        <span class=\"compact-driver-value\">${percentage.toFixed(1)}%</span>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Render bibliography footer with research citations\n * @param {object} ichData - ICH risk data containing probability\n * @returns {string} HTML for bibliography section\n */\nfunction renderBibliography(ichData) {\n  // Only show bibliography if ICH risk is >= 50%\n  if (!ichData || !ichData.probability) {\n    return '';\n  }\n  \n  const ichPercent = Math.round((ichData.probability || 0) * 100);\n  if (ichPercent < 50) {\n    return '';\n  }\n  \n  const gfapValue = getCurrentGfapValue();\n  if (!gfapValue || gfapValue <= 0) {\n    return '';\n  }\n  \n  return `\n    <div class=\"bibliography-section\">\n      <h4>${t('references')}</h4>\n      <div class=\"citations\">\n        <div class=\"citation\">\n          <span class=\"citation-number\">¹</span>\n          <span class=\"citation-text\">Broderick et al. (1993). Volume of intracerebral hemorrhage. A powerful and easy-to-use predictor of 30-day mortality. Stroke, 24(7), 987-993.</span>\n        </div>\n        <div class=\"citation\">\n          <span class=\"citation-number\">²</span>\n          <span class=\"citation-text\">Krishnan et al. (2013). Hematoma expansion in intracerebral hemorrhage: Predictors and outcomes. Neurology, 81(19), 1660-1666.</span>\n        </div>\n        <div class=\"citation\">\n          <span class=\"citation-number\">³</span>\n          <span class=\"citation-text\">Putra et al. (2020). Functional outcomes and mortality in patients with intracerebral hemorrhage. Critical Care Medicine, 48(3), 347-354.</span>\n        </div>\n        <div class=\"citation\">\n          <span class=\"citation-number\">⁴</span>\n          <span class=\"citation-text\">Tangella et al. (2020). Early prediction of mortality in intracerebral hemorrhage using clinical markers. Journal of Neurocritical Care, 13(2), 89-97.</span>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Calculate legacy model results from current results data (background, non-breaking)\n * @param {object} results - Main model results\n * @returns {object|null} - Legacy model results or null if not possible\n */\nfunction calculateLegacyFromResults(results) {\n  try {\n    const patientInputs = getPatientInputs();\n    console.log('🔍 Legacy calculation inputs:', patientInputs);\n    \n    if (!patientInputs.age || !patientInputs.gfap) {\n      console.warn('🔍 Missing required inputs for legacy model:', { \n        age: patientInputs.age, \n        gfap: patientInputs.gfap \n      });\n      return null;\n    }\n    \n    const legacyResult = calculateLegacyICH(patientInputs);\n    console.log('🔍 Legacy calculation result:', legacyResult);\n    \n    return legacyResult;\n  } catch (error) {\n    console.warn('Legacy model calculation failed (non-critical):', error);\n    return null;\n  }\n}\n\n/**\n * Get patient input data from store for research logging\n * @returns {object} - Patient input data\n */\nfunction getPatientInputs() {\n  const state = store.getState();\n  const formData = state.formData;\n  \n  console.log('🔍 Debug formData structure:', formData);\n  \n  // Extract age and GFAP from any module\n  let age = null;\n  let gfap = null;\n  \n  for (const module of ['coma', 'limited', 'full']) {\n    if (formData[module]) {\n      console.log(`🔍 ${module} module data:`, formData[module]);\n      age = age || formData[module].age_years;\n      gfap = gfap || formData[module].gfap_value;\n    }\n  }\n  \n  const result = {\n    age: parseInt(age) || null,\n    gfap: parseFloat(gfap) || null\n  };\n  \n  console.log('🔍 Extracted patient inputs:', result);\n  return result;\n}\n\n/**\n * Render alternative diagnoses for coma module\n * @param {number} probability - ICH probability (0-1)\n * @returns {string} HTML for alternative diagnoses\n */\nfunction renderStrokeDifferentialDiagnoses(probability) {\n  const percent = Math.round(probability * 100);\n  \n  if (percent > 25) {\n    return `\n      <div class=\"alternative-diagnosis-card\">\n        <div class=\"diagnosis-header\">\n          <span class=\"lightning-icon\">⚡</span>\n          <h3>${t('differentialDiagnoses')}</h3>\n        </div>\n        <div class=\"diagnosis-content\">\n          <!-- Time Window Confirmation - Clinical Action -->\n          <h4 class=\"clinical-action-heading\">${t('reconfirmTimeWindow')}</h4>\n          \n          <!-- Actual Differential Diagnoses -->\n          <ul class=\"diagnosis-list\">\n            <li>${t('unclearTimeWindow')}</li>\n            <li>${t('rareDiagnoses')}</li>\n          </ul>\n        </div>\n      </div>\n    `;\n  }\n  \n  return '';\n}\n\nfunction renderComaAlternativeDiagnoses(probability) {\n  const percent = Math.round(probability * 100);\n  const isDE = i18n.getCurrentLanguage() === 'de';\n  \n  if (percent > 25) {\n    // High probability - show SAB, SDH, EDH\n    return `\n      <div class=\"alternative-diagnosis-card\">\n        <div class=\"diagnosis-header\">\n          <span class=\"lightning-icon\">⚡</span>\n          <h3>${isDE ? 'Differentialdiagnosen' : 'Differential Diagnoses'}</h3>\n        </div>\n        <div class=\"diagnosis-content\">\n          <ul class=\"diagnosis-list\">\n            <li>\n              ${isDE ? \n                'Alternative Diagnosen sind SAB, SDH, EDH (Subarachnoidalblutung, Subduralhämatom, Epiduralhämatom)' : \n                'Alternative diagnoses include SAH, SDH, EDH (Subarachnoid Hemorrhage, Subdural Hematoma, Epidural Hematoma)'\n              }\n            </li>\n            <li>\n              ${isDE ? \n                'Bei unklarem Zeitfenster seit Symptombeginn oder im erweiterten Zeitfenster kommen auch ein demarkierter Infarkt oder hypoxischer Hirnschaden in Frage' : \n                'In cases of unclear time window since symptom onset or extended time window, demarcated infarction or hypoxic brain injury should also be considered'\n              }\n            </li>\n          </ul>\n        </div>\n      </div>\n    `;\n  } else {\n    // Low probability - other causes of altered consciousness\n    return `\n      <div class=\"alternative-diagnosis-card\">\n        <div class=\"diagnosis-header\">\n          <span class=\"lightning-icon\">⚡</span>\n          <h3>${isDE ? 'Differentialdiagnosen' : 'Differential Diagnoses'}</h3>\n        </div>\n        <div class=\"diagnosis-content\">\n          <ul class=\"diagnosis-list\">\n            <li>\n              ${isDE ? \n                'Alternative Diagnose von Vigilanzminderung wahrscheinlich' : \n                'Alternative diagnosis for reduced consciousness likely'\n              }\n            </li>\n            <li>\n              ${isDE ? \n                'Ein Verschluss der Arteria Basilaris ist nicht ausgeschlossen' : \n                'Basilar artery occlusion cannot be excluded'\n              }\n            </li>\n          </ul>\n        </div>\n      </div>\n    `;\n  }\n}\n\n/**\n * Get current module name from results\n * @param {object} ich - ICH results containing module information\n * @returns {string} - Module name ('coma', 'limited', 'full')\n */\nfunction getCurrentModuleName(ich) {\n  if (!ich?.module) return 'unknown';\n  \n  const module = ich.module.toLowerCase();\n  if (module.includes('coma')) return 'coma';\n  if (module.includes('limited')) return 'limited';\n  if (module.includes('full')) return 'full';\n  \n  return 'unknown';\n}\n\n/**\n * Render volume as a standalone risk card (for horizontal layout)\n * @param {object} ichData - ICH data containing volume information\n * @returns {string} HTML for volume risk card\n */\nfunction renderVolumeCard(ichData) {\n  const gfapValue = getCurrentGfapValue();\n  if (!gfapValue || gfapValue <= 0) {\n    return '';\n  }\n  \n  const volumeData = calculateICHVolume(gfapValue);\n  const percent = Math.round((ichData?.probability || 0) * 100);\n  \n  return `\n    <div class=\"enhanced-risk-card volume-card normal\">\n      <div class=\"risk-header\">\n        <div class=\"risk-icon\">🧮</div>\n        <div class=\"risk-title\">\n          <h3>${t('ichVolumeLabel')}</h3>\n        </div>\n      </div>\n      \n      <div class=\"risk-probability\">\n        <div class=\"circles-container\">\n          <div class=\"rings-row\">\n            <div class=\"circle-item\">\n              ${renderICHVolumeDisplay(ichData)}\n              <div class=\"circle-label\">${t('ichVolumeLabel')}</div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"risk-assessment\">\n          <div class=\"mortality-assessment\">\n            ${t('predictedMortality')}: ${volumeData.mortalityRate}\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Render tachometer gauge for treatment decision when high risk\n * @param {number} ichPercent - ICH probability percentage\n * @param {number} lvoPercent - LVO probability percentage\n * @returns {string} HTML for tachometer gauge\n */\nfunction renderTachometerGauge(ichPercent, lvoPercent) {\n  const ratio = lvoPercent / Math.max(ichPercent, 1);\n  \n  return `\n    <div class=\"tachometer-section\">\n      <div class=\"tachometer-card\">\n        <div class=\"tachometer-header\">\n          <h3>🎯 ${i18n.getCurrentLanguage() === 'de' ? 'Entscheidungshilfe – LVO/ICH' : 'Decision Support – LVO/ICH'}</h3>\n          <div class=\"ratio-display\">LVO/ICH Ratio: ${ratio.toFixed(2)}</div>\n        </div>\n        \n        <div class=\"tachometer-gauge\" id=\"tachometer-canvas-container\">\n          <div data-react-tachometer data-ich=\"${ichPercent}\" data-lvo=\"${lvoPercent}\" data-title=\"${i18n.getCurrentLanguage() === 'de' ? 'Entscheidungshilfe – LVO/ICH' : 'Decision Support – LVO/ICH'}\"></div>\n        </div>\n\n        <!-- Legend chips for zones -->\n        <div class=\"tachometer-legend\" aria-hidden=\"true\">\n          <span class=\"legend-chip ich\">ICH</span>\n          <span class=\"legend-chip uncertain\">${i18n.getCurrentLanguage() === 'de' ? 'Unsicher' : 'Uncertain'}</span>\n          <span class=\"legend-chip lvo\">LVO</span>\n        </div>\n\n        <!-- Metrics row: ratio, confidence, absolute difference -->\n        <div class=\"metrics-row\" role=\"group\" aria-label=\"Tachometer metrics\">\n          <div class=\"metric-card\">\n            <div class=\"metric-label\">Ratio</div>\n            <div class=\"metric-value\">${ratio.toFixed(2)}</div>\n            <div class=\"metric-unit\">LVO/ICH</div>\n          </div>\n          <div class=\"metric-card\">\n            <div class=\"metric-label\">Confidence</div>\n            <div class=\"metric-value\">${(() => {\n              const diff = Math.abs(lvoPercent - ichPercent);\n              const maxP = Math.max(lvoPercent, ichPercent);\n              let c = diff < 10 ? Math.round(30 + maxP * 0.3) : diff < 20 ? Math.round(50 + maxP * 0.4) : Math.round(70 + maxP * 0.3);\n              c = Math.max(0, Math.min(100, c));\n              return c;\n            })()}%</div>\n            <div class=\"metric-unit\">percent</div>\n          </div>\n          <div class=\"metric-card\">\n            <div class=\"metric-label\">Difference</div>\n            <div class=\"metric-value\">${Math.abs(lvoPercent - ichPercent).toFixed(0)}%</div>\n            <div class=\"metric-unit\">|LVO − ICH|</div>\n          </div>\n        </div>\n        \n        <div class=\"probability-summary\">\n          ICH: ${ichPercent}% | LVO: ${lvoPercent}%\n        </div>\n        \n        <!-- Hidden probability summary for initialization -->\n        <div class=\"probability-summary\" style=\"display: none;\">\n          ICH: ${ichPercent}% | LVO: ${lvoPercent}%\n        </div>\n      </div>\n    </div>\n  `;\n}\n\n// Premium (vanilla) tachometer disabled in favor of React island gauge\n","import { VALIDATION_RULES } from '../config.js';\n\nexport function validateInput(name, value, rules) {\n  const errors = [];\n  \n  if (rules.required && !value && value !== 0) {\n    errors.push('This field is required');\n  }\n  \n  if (rules.min !== undefined && value !== '' && !isNaN(value) && parseFloat(value) < rules.min) {\n    errors.push(`Value must be at least ${rules.min}`);\n  }\n  \n  if (rules.max !== undefined && value !== '' && !isNaN(value) && parseFloat(value) > rules.max) {\n    errors.push(`Value must be at most ${rules.max}`);\n  }\n  \n  if (rules.pattern && !rules.pattern.test(value)) {\n    errors.push('Invalid format');\n  }\n  \n  return errors;\n}\n\nexport function validateForm(form) {\n  let isValid = true;\n  const validationErrors = {};\n\n  Object.entries(VALIDATION_RULES).forEach(([name, rules]) => {\n    const input = form.elements[name];\n    if (input) {\n      const errors = validateInput(name, input.value, rules);\n      if (errors.length > 0) {\n        validationErrors[name] = errors;\n        isValid = false;\n      }\n    }\n  });\n  \n  return { isValid, validationErrors };\n}\n\nexport function showValidationErrors(container, validationErrors) {\n  Object.entries(validationErrors).forEach(([name, errors]) => {\n    const input = container.querySelector(`[name=\"${name}\"]`);\n    if (input) {\n      const group = input.closest('.input-group');\n      if (group) {\n        group.classList.add('error');\n        // Remove existing error messages\n        group.querySelectorAll('.error-message').forEach(el => el.remove());\n        // Add new error message\n        const errorDiv = document.createElement('div');\n        errorDiv.className = 'error-message';\n        errorDiv.innerHTML = `<span class=\"error-icon\">⚠️</span> ${errors[0]}`;\n        group.appendChild(errorDiv);\n      }\n    }\n  });\n}\n\nexport function clearValidationErrors(container) {\n  container.querySelectorAll('.input-group.error').forEach(group => {\n    group.classList.remove('error');\n    group.querySelectorAll('.error-message').forEach(el => el.remove());\n  });\n}","// Clean driver extraction - ensuring LVO drivers come from LVO API, ICH from ICH API\n\n/**\n * Extract and format drivers from new backend flat dictionary format\n */\nexport function extractDriversFromResponse(response, predictionType) {\n  console.log(`=== EXTRACTING ${predictionType.toUpperCase()} DRIVERS ===`);\n  console.log('Full response:', response);\n  \n  let rawDrivers = null;\n  \n  if (predictionType === 'ICH') {\n    rawDrivers = response.ich_prediction?.drivers || null;\n    console.log('🧠 ICH raw drivers extracted:', rawDrivers);\n  } else if (predictionType === 'LVO') {\n    rawDrivers = response.lvo_prediction?.drivers || null;\n    console.log('🩸 LVO raw drivers extracted:', rawDrivers);\n  }\n  \n  if (!rawDrivers) {\n    console.log(`❌ No ${predictionType} drivers found`);\n    return null;\n  }\n  \n  // Convert flat dictionary to structured format\n  const formattedDrivers = formatDriversFromDictionary(rawDrivers, predictionType);\n  \n  console.log(`✅ ${predictionType} drivers formatted:`, formattedDrivers);\n  \n  // Check for FAST-ED specifically\n  const allFeatures = [...formattedDrivers.positive, ...formattedDrivers.negative];\n  const fastEdFeature = allFeatures.find(f => \n    f.label && (\n      f.label.toLowerCase().includes('fast') || \n      f.label.includes('fast_ed')\n    )\n  );\n  \n  if (fastEdFeature) {\n    console.log(`🎯 FAST-ED found in ${predictionType}:`, `${fastEdFeature.label}: ${fastEdFeature.weight > 0 ? '+' : ''}${fastEdFeature.weight.toFixed(4)}`);\n  } else {\n    console.log(`⚠️  FAST-ED NOT found in ${predictionType} drivers`);\n  }\n  \n  return formattedDrivers;\n}\n\n/**\n * Convert backend flat dictionary to structured positive/negative arrays\n */\nfunction formatDriversFromDictionary(drivers, predictionType) {\n  console.log(`🔄 Formatting ${predictionType} drivers from dictionary:`, drivers);\n  \n  const positive = [];\n  const negative = [];\n  \n  Object.entries(drivers).forEach(([label, weight]) => {\n    if (typeof weight === 'number') {\n      if (weight > 0) {\n        positive.push({ label, weight });\n      } else if (weight < 0) {\n        negative.push({ label, weight: Math.abs(weight) }); // Store as positive value\n      }\n      // Skip zero weights\n    }\n  });\n  \n  // Sort by weight (descending)\n  positive.sort((a, b) => b.weight - a.weight);\n  negative.sort((a, b) => b.weight - a.weight);\n  \n  console.log(`📈 ${predictionType} positive drivers:`, positive.slice(0, 5));\n  console.log(`📉 ${predictionType} negative drivers:`, negative.slice(0, 5));\n  \n  return {\n    kind: 'flat_dictionary',\n    units: 'logit',\n    positive,\n    negative,\n    meta: {}\n  };\n}\n\n/**\n * Clean probability extraction with source tracking\n */\nexport function extractProbabilityFromResponse(response, predictionType) {\n  console.log(`=== EXTRACTING ${predictionType.toUpperCase()} PROBABILITY ===`);\n  \n  let probability = 0;\n  \n  if (predictionType === 'ICH') {\n    probability = response.ich_prediction?.probability || 0;\n    console.log('🧠 ICH probability extracted:', probability);\n    \n  } else if (predictionType === 'LVO') {\n    probability = response.lvo_prediction?.probability || 0;\n    console.log('🩸 LVO probability extracted:', probability);\n  }\n  \n  return probability;\n}\n\n/**\n * Clean confidence extraction with source tracking\n */\nexport function extractConfidenceFromResponse(response, predictionType) {\n  let confidence = 0.85; // default\n  \n  if (predictionType === 'ICH') {\n    confidence = response.ich_prediction?.confidence || 0.85;\n  } else if (predictionType === 'LVO') {\n    confidence = response.lvo_prediction?.confidence || 0.85;\n  }\n  \n  return confidence;\n}","import { API_URLS, APP_CONFIG } from '../config.js';\nimport { extractDriversFromResponse, extractProbabilityFromResponse, extractConfidenceFromResponse } from './drivers.js';\n\n// Warm up Google Cloud Functions on app load\nexport async function warmUpFunctions() {\n  console.log('Warming up Cloud Functions...');\n  \n  // Send lightweight ping requests to wake up cold functions\n  const warmUpPromises = Object.values(API_URLS).map(async (url) => {\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 3000); // 3 second timeout for warm-up\n      \n      // Use minimal POST with empty data to warm up\n      await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({}), // Empty body will fail validation but still warms up the function\n        signal: controller.signal,\n        mode: 'cors'\n      });\n      \n      clearTimeout(timeoutId);\n      console.log(`Warmed up: ${url}`);\n    } catch (error) {\n      // Ignore warm-up errors - they're not critical\n      // The function is still warmed up even if it returns an error\n      console.log(`Warm-up attempt for ${url.split('/').pop()} completed`);\n    }\n  });\n  \n  // Don't wait for warm-up to complete - do it in background\n  Promise.all(warmUpPromises).then(() => {\n    console.log('Cloud Functions warm-up complete');\n  });\n}\n\nclass APIError extends Error {\n  constructor(message, status, url) {\n    super(message);\n    this.name = 'APIError';\n    this.status = status;\n    this.url = url;\n  }\n}\n\nfunction normalizeBooleans(payload) {\n  const normalized = { ...payload };\n  \n  Object.keys(normalized).forEach(key => {\n    const value = normalized[key];\n    if (typeof value === 'boolean' || value === 'on' || value === 'true' || value === 'false') {\n      normalized[key] = value === true || value === 'on' || value === 'true' ? 1 : 0;\n    }\n  });\n  \n  return normalized;\n}\n\nfunction safeParseFloat(value, defaultValue = 0) {\n  const parsed = parseFloat(value);\n  return isNaN(parsed) ? defaultValue : parsed;\n}\n\nasync function fetchJSON(url, payload) {\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), APP_CONFIG.requestTimeout);\n  \n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n      },\n      body: JSON.stringify(payload),\n      signal: controller.signal,\n      mode: 'cors'\n    });\n    \n    clearTimeout(timeoutId);\n    \n    if (!response.ok) {\n      let errorMessage = `HTTP ${response.status}`;\n      try {\n        const errorData = await response.json();\n        errorMessage = errorData.error || errorData.message || errorMessage;\n      } catch {\n        errorMessage = `${errorMessage}: ${response.statusText}`;\n      }\n      throw new APIError(errorMessage, response.status, url);\n    }\n    \n    const data = await response.json();\n    return data;\n    \n  } catch (error) {\n    clearTimeout(timeoutId);\n    \n    if (error.name === 'AbortError') {\n      throw new APIError('Request timeout - please try again', 408, url);\n    }\n    \n    if (error instanceof APIError) {\n      throw error;\n    }\n    \n    // Network or other errors\n    throw new APIError(\n      'Network error - please check your connection and try again',\n      0,\n      url\n    );\n  }\n}\n\nexport async function predictComaIch(payload) {\n  const normalizedPayload = normalizeBooleans(payload);\n  \n  // Debug log the payload being sent\n  console.log('Coma ICH API Payload:', normalizedPayload);\n  \n  try {\n    const response = await fetchJSON(API_URLS.COMA_ICH, normalizedPayload);\n    \n    // Debug log the API response\n    console.log('Coma ICH API Response:', response);\n    \n    // Normalize response format for consistency\n    return {\n      probability: safeParseFloat(response.probability || response.ich_probability, 0),\n      drivers: response.drivers || null,\n      confidence: safeParseFloat(response.confidence, 0.75),\n      module: 'Coma'\n    };\n  } catch (error) {\n    console.error('Coma ICH prediction failed:', error);\n    throw new APIError(\n      `Failed to get ICH prediction: ${error.message}`,\n      error.status,\n      API_URLS.COMA_ICH\n    );\n  }\n}\n\nexport async function predictLimitedIch(payload) {\n  // Ensure all required fields are present for the Limited Data API\n  const fullPayload = {\n    age_years: payload.age_years,\n    systolic_bp: payload.systolic_bp,\n    diastolic_bp: payload.diastolic_bp,\n    gfap_value: payload.gfap_value,\n    // Ensure checkbox fields are present (default to 0 if missing/unchecked)\n    vigilanzminderung: payload.vigilanzminderung || 0\n  };\n  \n  const normalizedPayload = normalizeBooleans(fullPayload);\n  \n  // Debug log the payload being sent\n  console.log('Limited Data ICH API Payload:', normalizedPayload);\n  \n  try {\n    const response = await fetchJSON(API_URLS.LDM_ICH, normalizedPayload);\n    \n    // Debug log the API response\n    console.log('Limited Data ICH API Response:', response);\n    \n    // Normalize response format for consistency\n    return {\n      probability: safeParseFloat(response.probability || response.ich_probability, 0),\n      drivers: response.drivers || null,\n      confidence: safeParseFloat(response.confidence, 0.65),\n      module: 'Limited Data'\n    };\n  } catch (error) {\n    console.error('Limited Data ICH prediction failed:', error);\n    throw new APIError(\n      `Failed to get ICH prediction: ${error.message}`,\n      error.status,\n      API_URLS.LDM_ICH\n    );\n  }\n}\n\nexport async function predictFullStroke(payload) {\n  // Ensure all required fields are present for the Full Stroke API\n  const fullPayload = {\n    age_years: payload.age_years,\n    systolic_bp: payload.systolic_bp,\n    diastolic_bp: payload.diastolic_bp,\n    gfap_value: payload.gfap_value,\n    fast_ed_score: payload.fast_ed_score,\n    // Ensure all checkbox fields are present (default to 0 if missing)\n    headache: payload.headache || 0,\n    vigilanzminderung: payload.vigilanzminderung || 0,\n    armparese: payload.armparese || 0,\n    beinparese: payload.beinparese || 0,\n    eye_deviation: payload.eye_deviation || 0,\n    atrial_fibrillation: payload.atrial_fibrillation || 0,\n    anticoagulated_noak: payload.anticoagulated_noak || 0,\n    antiplatelets: payload.antiplatelets || 0\n  };\n  \n  const normalizedPayload = normalizeBooleans(fullPayload);\n  \n  // Debug log the payload being sent\n  console.log('=== BACKEND DATA MAPPING TEST ===');\n  console.log('📤 Full Stroke API Payload:', normalizedPayload);\n  \n  // Test all key clinical variables\n  console.log('🧪 Clinical Variables Being Sent:');\n  console.log('  📊 FAST-ED Score:', normalizedPayload.fast_ed_score);\n  console.log('  🩸 Systolic BP:', normalizedPayload.systolic_bp);\n  console.log('  🩸 Diastolic BP:', normalizedPayload.diastolic_bp);\n  console.log('  🧬 GFAP Value:', normalizedPayload.gfap_value);\n  console.log('  👤 Age:', normalizedPayload.age_years);\n  console.log('  🤕 Headache:', normalizedPayload.headache);\n  console.log('  😵 Vigilanz:', normalizedPayload.vigilanzminderung);\n  console.log('  💪 Arm Parese:', normalizedPayload.armparese);\n  console.log('  🦵 Leg Parese:', normalizedPayload.beinparese);\n  console.log('  👁️ Eye Deviation:', normalizedPayload.eye_deviation);\n  console.log('  💓 Atrial Fib:', normalizedPayload.atrial_fibrillation);\n  console.log('  💊 Anticoag NOAK:', normalizedPayload.anticoagulated_noak);\n  console.log('  💊 Antiplatelets:', normalizedPayload.antiplatelets);\n  \n  try {\n    const response = await fetchJSON(API_URLS.FULL_STROKE, normalizedPayload);\n    \n    // Debug log the API response\n    console.log('📥 Full Stroke API Response:', response);\n    console.log('🔑 Available keys in response:', Object.keys(response));\n    \n    // Test backend data mapping accuracy\n    console.log('=== BACKEND MAPPING VERIFICATION ===');\n    \n    // Check if backend returns any feature names that match our inputs\n    const responseStr = JSON.stringify(response).toLowerCase();\n    console.log('🔍 Backend Feature Name Analysis:');\n    console.log('  Contains \"fast\":', responseStr.includes('fast'));\n    console.log('  Contains \"ed\":', responseStr.includes('ed'));\n    console.log('  Contains \"fast_ed\":', responseStr.includes('fast_ed'));\n    console.log('  Contains \"systolic\":', responseStr.includes('systolic'));\n    console.log('  Contains \"diastolic\":', responseStr.includes('diastolic'));\n    console.log('  Contains \"gfap\":', responseStr.includes('gfap'));\n    console.log('  Contains \"age\":', responseStr.includes('age'));\n    console.log('  Contains \"headache\":', responseStr.includes('headache'));\n    \n    // Debug driver extraction\n    console.log('🧠 ICH driver sources:');\n    console.log('  response.ich_prediction?.drivers:', response.ich_prediction?.drivers);\n    console.log('  response.ich_drivers:', response.ich_drivers);\n    console.log('  response.ich?.drivers:', response.ich?.drivers);\n    console.log('  response.drivers?.ich:', response.drivers?.ich);\n    \n    console.log('🩸 LVO driver sources:');\n    console.log('  response.lvo_prediction?.drivers:', response.lvo_prediction?.drivers);\n    console.log('  response.lvo_drivers:', response.lvo_drivers);\n    console.log('  response.lvo?.drivers:', response.lvo?.drivers);\n    console.log('  response.drivers?.lvo:', response.drivers?.lvo);\n    \n    // Try to identify probability values\n    Object.keys(response).forEach(key => {\n      const value = response[key];\n      if (typeof value === 'number' && value >= 0 && value <= 1) {\n        console.log(`Potential probability field: ${key} = ${value}`);\n      }\n    });\n    \n    // Clean extraction with proper API mapping\n    const ichProbability = extractProbabilityFromResponse(response, 'ICH');\n    const lvoProbability = extractProbabilityFromResponse(response, 'LVO');\n    \n    const ichDrivers = extractDriversFromResponse(response, 'ICH');\n    const lvoDrivers = extractDriversFromResponse(response, 'LVO');\n    \n    const ichConfidence = extractConfidenceFromResponse(response, 'ICH');\n    const lvoConfidence = extractConfidenceFromResponse(response, 'LVO');\n    \n    console.log('✅ Clean extraction results:');\n    console.log('  ICH:', { probability: ichProbability, hasDrivers: !!ichDrivers });\n    console.log('  LVO:', { probability: lvoProbability, hasDrivers: !!lvoDrivers });\n\n    const ichResult = {\n      probability: ichProbability,\n      drivers: ichDrivers,\n      confidence: ichConfidence,\n      module: 'Full Stroke'\n    };\n    \n    const lvoResult = {\n      probability: lvoProbability,\n      drivers: lvoDrivers,\n      confidence: lvoConfidence,\n      module: 'Full Stroke'\n    };\n    \n    return {\n      ich: ichResult,\n      lvo: lvoResult\n    };\n  } catch (error) {\n    console.error('Full Stroke prediction failed:', error);\n    throw new APIError(\n      `Failed to get stroke predictions: ${error.message}`,\n      error.status,\n      API_URLS.FULL_STROKE\n    );\n  }\n}\n\n// Export the error class for use in other modules\nexport { APIError };","import { t, i18n } from '../../localization/i18n.js';\nimport { navigate } from '../../logic/handlers.js';\n\n/**\n * Prerequisites checklist items\n */\nconst getPrerequisites = () => {\n  return [\n    { id: 'acute_deficit', checked: false },\n    { id: 'symptom_onset', checked: false },\n    { id: 'no_preexisting', checked: false },\n    { id: 'no_trauma', checked: false }\n  ];\n};\n\n/**\n * Render prerequisites modal\n * @returns {string} HTML for prerequisites modal\n */\nexport function renderPrerequisitesModal() {\n  const prerequisites = getPrerequisites();\n  \n  return `\n    <div id=\"prerequisitesModal\" class=\"modal prerequisites-modal\" style=\"display: flex;\">\n      <div class=\"modal-content prerequisites-content\">\n        <div class=\"modal-header\">\n          <h2>${t('prerequisitesTitle')}</h2>\n          <button class=\"modal-close\" id=\"closePrerequisites\">&times;</button>\n        </div>\n        \n        <div class=\"modal-body\">\n          <p class=\"prerequisites-intro\">\n            ${t('prerequisitesIntro')}\n          </p>\n          \n          <div class=\"prerequisites-list\">\n            ${prerequisites.map(item => `\n              <div class=\"prerequisite-item\" data-id=\"${item.id}\">\n                <label class=\"toggle-switch\">\n                  <input type=\"checkbox\" id=\"${item.id}\" class=\"toggle-input\">\n                  <span class=\"toggle-slider\"></span>\n                </label>\n                <span class=\"prerequisite-label\">\n                  ${t(item.id)}\n                </span>\n              </div>\n            `).join('')}\n          </div>\n          \n          <div class=\"prerequisites-warning\" id=\"prerequisitesWarning\" style=\"display: none;\">\n            <span class=\"warning-icon\">⚠️</span>\n            <span class=\"warning-text\">\n              ${t('prerequisitesWarning')}\n            </span>\n          </div>\n        </div>\n        \n        <div class=\"modal-footer\">\n          <div class=\"button-group\">\n            <button type=\"button\" class=\"secondary\" id=\"cancelPrerequisites\">\n              ${t('cancel')}\n            </button>\n            <button type=\"button\" class=\"primary\" id=\"confirmPrerequisites\">\n              ${t('continue')}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Initialize prerequisites modal event handlers\n */\nexport function initPrerequisitesModal() {\n  const modal = document.getElementById('prerequisitesModal');\n  if (!modal) {\n    console.error('Prerequisites modal not found');\n    return;\n  }\n  \n  console.log('Initializing prerequisites modal');\n  \n  // Close button handlers\n  const closeBtn = document.getElementById('closePrerequisites');\n  const cancelBtn = document.getElementById('cancelPrerequisites');\n  const confirmBtn = document.getElementById('confirmPrerequisites');\n  \n  console.log('Modal buttons found:', { closeBtn: !!closeBtn, cancelBtn: !!cancelBtn, confirmBtn: !!confirmBtn });\n  \n  const closeModal = () => {\n    modal.remove();\n    // Navigate back to welcome screen if cancelled\n    navigate('welcome');\n  };\n  \n  closeBtn?.addEventListener('click', closeModal);\n  cancelBtn?.addEventListener('click', closeModal);\n  \n  // Confirm button handler\n  confirmBtn?.addEventListener('click', (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    console.log('Prerequisites confirm button clicked');\n    const checkboxes = modal.querySelectorAll('.toggle-input');\n    const allChecked = Array.from(checkboxes).every(cb => cb.checked);\n    console.log('All prerequisites checked:', allChecked);\n    \n    if (allChecked) {\n      console.log('Navigating to triage2');\n      modal.remove();\n      // Proceed to triage2 (stroke module selection)\n      navigate('triage2');\n    } else {\n      console.log('Showing prerequisites warning');\n      // Show warning\n      const warning = document.getElementById('prerequisitesWarning');\n      if (warning) {\n        warning.style.display = 'flex';\n        // Shake animation\n        warning.classList.add('shake');\n        setTimeout(() => warning.classList.remove('shake'), 500);\n      }\n    }\n  });\n  \n  // Toggle change handler to hide warning when all checked\n  const checkboxes = modal.querySelectorAll('.toggle-input');\n  checkboxes.forEach(checkbox => {\n    checkbox.addEventListener('change', () => {\n      const allChecked = Array.from(checkboxes).every(cb => cb.checked);\n      const warning = document.getElementById('prerequisitesWarning');\n      \n      if (allChecked && warning) {\n        warning.style.display = 'none';\n      }\n    });\n  });\n}\n\n/**\n * Show prerequisites modal\n */\nexport function showPrerequisitesModal() {\n  const existingModal = document.getElementById('prerequisitesModal');\n  \n  // Always remove existing modal and create fresh one to handle language changes\n  if (existingModal) {\n    existingModal.remove();\n  }\n  \n  // Create modal element directly instead of innerHTML\n  const modalElement = document.createElement('div');\n  modalElement.innerHTML = renderPrerequisitesModal();\n  const modal = modalElement.firstElementChild;\n  \n  // Insert into DOM\n  document.body.appendChild(modal);\n  \n  // Initialize immediately since DOM is ready\n  initPrerequisitesModal();\n}","import { store } from '../state/store.js';\nimport { validateForm, showValidationErrors } from './validate.js';\nimport { predictComaIch, predictLimitedIch, predictFullStroke, APIError } from '../api/client.js';\nimport { t } from '../localization/i18n.js';\nimport { showPrerequisitesModal } from '../ui/components/prerequisites-modal.js';\n\nexport function handleTriage1(isComatose) {\n  store.logEvent('triage1_answer', { comatose: isComatose });\n  \n  if (isComatose) {\n    navigate('coma');\n  } else {\n    // Show prerequisites modal for conscious patients\n    showPrerequisitesModal();\n  }\n}\n\nexport function handleTriage2(isExaminable) {\n  store.logEvent('triage2_answer', { examinable: isExaminable });\n  const nextScreen = isExaminable ? 'full' : 'limited';\n  navigate(nextScreen);\n}\n\nexport function navigate(screen) {\n  store.logEvent('navigate', { \n    from: store.getState().currentScreen, \n    to: screen \n  });\n  store.navigate(screen);\n  window.scrollTo(0, 0);\n}\n\nexport function reset() {\n  if (store.hasUnsavedData()) {\n    if (!confirm('Are you sure you want to start over? All entered data will be lost.')) {\n      return;\n    }\n  }\n  store.logEvent('reset');\n  store.reset();\n}\n\nexport function goBack() {\n  console.log('goBack() called');\n  const success = store.goBack();\n  console.log('goBack() success:', success);\n  if (success) {\n    store.logEvent('navigate_back');\n    window.scrollTo(0, 0);\n  } else {\n    console.log('No history available, going home instead');\n    goHome();\n  }\n}\n\nexport function goHome() {\n  console.log('goHome() called');\n  store.logEvent('navigate_home');\n  store.goHome();\n  window.scrollTo(0, 0);\n}\n\nexport async function handleSubmit(e, container) {\n  e.preventDefault();\n  const form = e.target;\n  const module = form.dataset.module;\n\n  // Validate form\n  const validation = validateForm(form);\n  if (!validation.isValid) {\n    showValidationErrors(container, validation.validationErrors);\n    try {\n      // Focus first invalid field and announce summary for screen readers\n      const firstErrorName = Object.keys(validation.validationErrors)[0];\n      if (firstErrorName && form.elements[firstErrorName]) {\n        const el = form.elements[firstErrorName];\n        el.focus({ preventScroll: true });\n        el.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      }\n      const sr = document.createElement('div');\n      sr.className = 'sr-only';\n      sr.setAttribute('role', 'status');\n      sr.setAttribute('aria-live', 'polite');\n      const errorCount = Object.keys(validation.validationErrors).length;\n      sr.textContent = `${errorCount} field${errorCount === 1 ? '' : 's'} need attention.`;\n      document.body.appendChild(sr);\n      setTimeout(() => sr.remove(), 1200);\n    } catch {}\n    return;\n  }\n\n  // Collect inputs - handle all form elements including unchecked checkboxes\n  const inputs = {};\n  \n  // Process all form elements to ensure checkboxes are included\n  Array.from(form.elements).forEach(element => {\n    if (element.name) {\n      if (element.type === 'checkbox') {\n        inputs[element.name] = element.checked;\n      } else if (element.type === 'number') {\n        const n = parseFloat(element.value);\n        inputs[element.name] = isNaN(n) ? 0 : n;\n      } else if (element.type === 'hidden') {\n        // Handle hidden fields (like armparese from FAST-ED)\n        if (element.name === 'armparese') {\n          inputs[element.name] = element.value === 'true';\n        } else {\n          inputs[element.name] = element.value;\n        }\n      } else {\n        inputs[element.name] = element.value;\n      }\n    }\n  });\n  \n  console.log('Collected form inputs:', inputs);\n\n  // Store form data\n  store.setFormData(module, inputs);\n\n  // Show loading state\n  const button = form.querySelector('button[type=submit]');\n  const originalContent = button ? button.innerHTML : '';\n  if (button) {\n    button.disabled = true;\n    button.innerHTML = `<span class=\"loading-spinner\"></span> ${t('analyzing')}`;\n  }\n\n  try {\n    // Run models based on module\n    let results;\n    \n    switch (module) {\n      case 'coma':\n        const comaResult = await predictComaIch(inputs);\n        results = {\n          ich: comaResult,\n          lvo: null\n        };\n        break;\n        \n      case 'limited':\n        const limitedResult = await predictLimitedIch(inputs);\n        results = {\n          ich: limitedResult,\n          lvo: { notPossible: true }\n        };\n        break;\n        \n      case 'full':\n        results = await predictFullStroke(inputs);\n        break;\n        \n      default:\n        throw new Error('Unknown module: ' + module);\n    }\n\n    store.setResults(results);\n    store.logEvent('models_complete', { module, results });\n    navigate('results');\n    \n  } catch (error) {\n    console.error('Error running models:', error);\n    \n    let errorMessage = 'An error occurred during analysis. Please try again.';\n    if (error instanceof APIError) {\n      errorMessage = error.message;\n    }\n    \n    showError(container, errorMessage);\n    \n    if (button) {\n      button.disabled = false;\n      button.innerHTML = originalContent;\n    }\n  }\n}\n\nfunction showError(container, message) {\n  // Remove existing error alerts\n  container.querySelectorAll('.critical-alert').forEach(alert => {\n    if (alert.querySelector('h4')?.textContent?.includes('Error')) {\n      alert.remove();\n    }\n  });\n\n  const alert = document.createElement('div');\n  alert.className = 'critical-alert';\n  alert.innerHTML = `<h4><span class=\"alert-icon\">⚠️</span> Error</h4><p>${message}</p>`;\n  \n  const containerDiv = container.querySelector('.container');\n  if (containerDiv) {\n    containerDiv.prepend(alert);\n  } else {\n    container.prepend(alert);\n  }\n  \n  setTimeout(() => alert.remove(), 10000);\n}\n","/**\n * Accessibility utilities for the Stroke Triage Assistant\n */\n\nexport function announceScreenChange(screen) {\n  const announcement = document.createElement('div');\n  announcement.className = 'sr-only';\n  announcement.setAttribute('role', 'status');\n  announcement.setAttribute('aria-live', 'polite');\n  \n  const screenNames = {\n    'triage1': 'Coma assessment',\n    'triage2': 'Examination capability assessment',\n    'coma': 'Coma module',\n    'limited': 'Limited data module',\n    'full': 'Full stroke assessment',\n    'results': 'Assessment results'\n  };\n  \n  announcement.textContent = `Navigated to ${screenNames[screen] || screen}`;\n  document.body.appendChild(announcement);\n  \n  setTimeout(() => announcement.remove(), 1000);\n}\n\nexport function setPageTitle(screen) {\n  const appName = 'iGFAP';\n  const titles = {\n    triage1: 'Initial Assessment',\n    triage2: 'Examination Capability',\n    coma: 'Coma Module',\n    limited: 'Limited Data Module',\n    full: 'Full Stroke Module',\n    results: 'Assessment Results'\n  };\n\n  const section = titles[screen];\n  // Brand-first to ensure the tab shows iGFAP even when truncated\n  document.title = section ? `${appName} — ${section}` : appName;\n}\n\nexport function focusMainHeading() {\n  // Focus on the main heading for screen readers\n  setTimeout(() => {\n    const heading = document.querySelector('h2');\n    if (heading) {\n      heading.setAttribute('tabindex', '-1');\n      heading.focus();\n      // Remove tabindex after focus for proper tab order\n      setTimeout(() => heading.removeAttribute('tabindex'), 100);\n    }\n  }, 100);\n}\n","import { t } from '../../localization/i18n.js';\n\nexport class FastEdCalculator {\n  constructor() {\n    this.scores = {\n      facial_palsy: 0,\n      arm_weakness: 0,\n      speech_changes: 0,\n      eye_deviation: 0,\n      denial_neglect: 0\n    };\n    this.onApply = null;\n    this.modal = null;\n  }\n\n  getTotal() {\n    return Object.values(this.scores).reduce((sum, score) => sum + score, 0);\n  }\n\n  getRiskLevel() {\n    const total = this.getTotal();\n    return total >= 4 ? 'high' : 'low';\n  }\n\n  render() {\n    const total = this.getTotal();\n    const riskLevel = this.getRiskLevel();\n    \n    return `\n      <div id=\"fastEdModal\" class=\"modal\" role=\"dialog\" aria-labelledby=\"fastEdModalTitle\" aria-hidden=\"true\" style=\"display: none !important;\">\n        <div class=\"modal-content fast-ed-modal\">\n          <div class=\"modal-header\">\n            <h2 id=\"fastEdModalTitle\">${t('fastEdCalculatorTitle')}</h2>\n            <button class=\"modal-close\" aria-label=\"Close\">&times;</button>\n          </div>\n          <div class=\"modal-body\">\n            \n            <!-- Facial Palsy -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('facialPalsyTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"facial_palsy\" value=\"0\" ${this.scores.facial_palsy === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('facialPalsyNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"facial_palsy\" value=\"1\" ${this.scores.facial_palsy === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('facialPalsyMild')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Arm Weakness -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('armWeaknessTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"arm_weakness\" value=\"0\" ${this.scores.arm_weakness === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('armWeaknessNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"arm_weakness\" value=\"1\" ${this.scores.arm_weakness === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('armWeaknessMild')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"arm_weakness\" value=\"2\" ${this.scores.arm_weakness === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('armWeaknessSevere')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Speech Changes -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('speechChangesTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"speech_changes\" value=\"0\" ${this.scores.speech_changes === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('speechChangesNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"speech_changes\" value=\"1\" ${this.scores.speech_changes === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('speechChangesMild')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"speech_changes\" value=\"2\" ${this.scores.speech_changes === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('speechChangesSevere')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Eye Deviation -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('eyeDeviationTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"eye_deviation\" value=\"0\" ${this.scores.eye_deviation === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('eyeDeviationNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"eye_deviation\" value=\"1\" ${this.scores.eye_deviation === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('eyeDeviationPartial')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"eye_deviation\" value=\"2\" ${this.scores.eye_deviation === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('eyeDeviationForced')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Denial/Neglect -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('denialNeglectTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"denial_neglect\" value=\"0\" ${this.scores.denial_neglect === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('denialNeglectNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"denial_neglect\" value=\"1\" ${this.scores.denial_neglect === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('denialNeglectPartial')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"denial_neglect\" value=\"2\" ${this.scores.denial_neglect === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('denialNeglectComplete')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Total Score Display -->\n            <div class=\"fast-ed-total\">\n              <div class=\"score-display\">\n                <h3>${t('totalScoreTitle')}: <span class=\"total-score\">${total}/9</span></h3>\n                <div class=\"risk-indicator ${riskLevel}\">\n                  ${t('riskLevel')}: ${riskLevel === 'high' ? t('riskLevelHigh') : t('riskLevelLow')}\n                </div>\n              </div>\n            </div>\n\n          </div>\n          <div class=\"modal-footer\">\n            <div class=\"button-group\">\n              <button class=\"secondary\" data-action=\"cancel-fast-ed\">${t('cancel')}</button>\n              <button class=\"primary\" data-action=\"apply-fast-ed\">${t('applyScore')}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  setupEventListeners() {\n    this.modal = document.getElementById('fastEdModal');\n    if (!this.modal) return;\n\n    // Radio button changes\n    this.modal.addEventListener('change', (e) => {\n      if (e.target.type === 'radio') {\n        const component = e.target.name;\n        const value = parseInt(e.target.value);\n        this.scores[component] = value;\n        this.updateDisplay();\n      }\n    });\n\n    // Close button\n    const closeBtn = this.modal.querySelector('.modal-close');\n    closeBtn?.addEventListener('click', () => this.close());\n\n    // Cancel button\n    const cancelBtn = this.modal.querySelector('[data-action=\"cancel-fast-ed\"]');\n    cancelBtn?.addEventListener('click', () => this.close());\n\n    // Apply button\n    const applyBtn = this.modal.querySelector('[data-action=\"apply-fast-ed\"]');\n    applyBtn?.addEventListener('click', () => this.apply());\n\n    // Disable backdrop click-to-close to prevent accidental dismissal\n    // Users must explicitly Cancel or Apply\n    this.modal.addEventListener('click', (e) => {\n      if (e.target === this.modal) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    });\n\n    // Keyboard navigation\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape' && this.modal?.classList.contains('show')) {\n        this.close();\n      }\n    });\n  }\n\n  updateDisplay() {\n    const totalElement = this.modal?.querySelector('.total-score');\n    const riskElement = this.modal?.querySelector('.risk-indicator');\n    \n    if (totalElement) {\n      totalElement.textContent = `${this.getTotal()}/9`;\n    }\n    \n    if (riskElement) {\n      const riskLevel = this.getRiskLevel();\n      riskElement.className = `risk-indicator ${riskLevel}`;\n      riskElement.textContent = `${t('riskLevel')}: ${riskLevel === 'high' ? t('riskLevelHigh') : t('riskLevelLow')}`;\n    }\n  }\n\n  show(currentScore = 0, onApplyCallback = null) {\n    this.onApply = onApplyCallback;\n    \n    // If we have a current score, try to reverse engineer it (basic approximation)\n    if (currentScore > 0 && currentScore <= 9) {\n      this.approximateFromTotal(currentScore);\n    }\n    \n    // Inject modal HTML if not already present\n    if (!document.getElementById('fastEdModal')) {\n      document.body.insertAdjacentHTML('beforeend', this.render());\n    } else {\n      // Re-render the modal with current state\n      this.modal.remove();\n      document.body.insertAdjacentHTML('beforeend', this.render());\n      this.modal = document.getElementById('fastEdModal');\n    }\n    \n    this.setupEventListeners();\n    \n    this.modal.setAttribute('aria-hidden', 'false');\n    this.modal.style.display = 'flex';\n    this.modal.classList.add('show');\n    \n    // Focus first radio button\n    const firstRadio = this.modal.querySelector('input[type=\"radio\"]');\n    firstRadio?.focus();\n  }\n\n  close() {\n    if (this.modal) {\n      this.modal.classList.remove('show');\n      this.modal.style.display = 'none';\n      this.modal.setAttribute('aria-hidden', 'true');\n    }\n  }\n\n  apply() {\n    const total = this.getTotal();\n    const armWeaknessBoolean = this.scores.arm_weakness > 0;\n    const eyeDeviationBoolean = this.scores.eye_deviation > 0;\n    \n    if (this.onApply) {\n      this.onApply({\n        total,\n        components: { ...this.scores },\n        armWeaknessBoolean,\n        eyeDeviationBoolean\n      });\n    }\n    \n    this.close();\n  }\n\n  approximateFromTotal(total) {\n    // Simple approximation - distribute points across components\n    // This is basic but gives users a starting point\n    this.scores = {\n      facial_palsy: 0,\n      arm_weakness: 0,\n      speech_changes: 0,\n      eye_deviation: 0,\n      denial_neglect: 0\n    };\n    \n    let remaining = total;\n    const components = Object.keys(this.scores);\n    \n    for (const component of components) {\n      if (remaining <= 0) break;\n      \n      const maxForComponent = (component === 'facial_palsy') ? 1 : 2;\n      const assignToThis = Math.min(remaining, maxForComponent);\n      this.scores[component] = assignToThis;\n      remaining -= assignToThis;\n    }\n  }\n}\n\n// Create singleton instance\nexport const fastEdCalculator = new FastEdCalculator();\n","import { store } from '../state/store.js';\nimport { renderTriage1 } from './screens/triage1.js';\nimport { renderTriage2 } from './screens/triage2.js';\nimport { renderComa } from './screens/coma.js';\nimport { renderLimited } from './screens/limited.js';\nimport { renderFull } from './screens/full.js';\nimport { renderResults } from './screens/results.js';\nimport { handleTriage1, handleTriage2, handleSubmit, reset, goBack, goHome } from '../logic/handlers.js';\nimport { clearValidationErrors } from '../logic/validate.js';\nimport { announceScreenChange, setPageTitle, focusMainHeading } from './a11y.js';\nimport { initializeStrokeCenterMap } from './components/stroke-center-map.js';\nimport { fastEdCalculator } from './components/fastEdModal.js';\nimport { initializeResearchMode } from '../research/comparison-ui.js';\n\nexport function render(container) {\n  const state = store.getState();\n  const { currentScreen, results, startTime, navigationHistory } = state;\n\n  // Optimize DOM updates to prevent CLS\n  const tempContainer = document.createElement('div');\n  \n  // Show/hide back button based on navigation history\n  const backButton = document.getElementById('backButton');\n  if (backButton) {\n    backButton.style.display = navigationHistory && navigationHistory.length > 0 ? 'flex' : 'none';\n  }\n\n  // Render the appropriate screen\n  let html = '';\n  switch (currentScreen) {\n    case 'triage1':\n      html = renderTriage1();\n      break;\n    case 'triage2':\n      html = renderTriage2();\n      break;\n    case 'coma':\n      html = renderComa();\n      break;\n    case 'limited':\n      html = renderLimited();\n      break;\n    case 'full':\n      html = renderFull();\n      break;\n    case 'results':\n      html = renderResults(results, startTime);\n      break;\n    default:\n      html = renderTriage1();\n  }\n\n  // Use batch DOM update to minimize reflows\n  tempContainer.innerHTML = html;\n  \n  // Single DOM replacement to minimize CLS\n  container.innerHTML = '';\n  while (tempContainer.firstChild) {\n    container.appendChild(tempContainer.firstChild);\n  }\n\n  // Restore form data if available\n  const form = container.querySelector('form[data-module]');\n  if (form) {\n    const module = form.dataset.module;\n    restoreFormData(form, module);\n  }\n\n  // Attach event listeners\n  attachEvents(container);\n\n  // Initialize stroke center map if on results screen\n  if (currentScreen === 'results' && results) {\n    setTimeout(() => {\n      initializeStrokeCenterMap(results);\n    }, 100);\n  }\n\n  // Initialize research mode components (non-breaking)\n  setTimeout(() => {\n    initializeResearchMode();\n  }, 150);\n\n  // Accessibility updates\n  announceScreenChange(currentScreen);\n  setPageTitle(currentScreen);\n  focusMainHeading();\n}\n\nfunction restoreFormData(form, module) {\n  const formData = store.getFormData(module);\n  if (!formData || Object.keys(formData).length === 0) return;\n\n  Object.entries(formData).forEach(([key, value]) => {\n    const input = form.elements[key];\n    if (input) {\n      if (input.type === 'checkbox') {\n        input.checked = value === true || value === 'on' || value === 'true';\n      } else {\n        input.value = value;\n      }\n    }\n  });\n}\n\nfunction attachEvents(container) {\n  // Clear any existing validation errors when inputs change\n  container.querySelectorAll('input[type=\"number\"]').forEach(input => {\n    input.addEventListener('blur', () => {\n      clearValidationErrors(container);\n    });\n  });\n\n  // Triage button handlers\n  container.querySelectorAll('[data-action]').forEach(button => {\n    button.addEventListener('click', (e) => {\n      const { action, value } = e.currentTarget.dataset;\n      const boolVal = value === 'true';\n      \n      switch (action) {\n        case 'triage1':\n          handleTriage1(boolVal);\n          break;\n        case 'triage2':\n          handleTriage2(boolVal);\n          break;\n        case 'reset':\n          reset();\n          break;\n        case 'goBack':\n          goBack();\n          break;\n        case 'goHome':\n          goHome();\n          break;\n      }\n    });\n  });\n\n  // Form submission handlers\n  container.querySelectorAll('form[data-module]').forEach(form => {\n    form.addEventListener('submit', (e) => {\n      handleSubmit(e, container);\n    });\n  });\n\n  // Print button handler\n  const printButton = container.querySelector('#printResults');\n  if (printButton) {\n    printButton.addEventListener('click', () => window.print());\n  }\n\n  // FAST-ED calculator handler\n  const fastEdInput = container.querySelector('#fast_ed_score');\n  if (fastEdInput) {\n    fastEdInput.addEventListener('click', (e) => {\n      e.preventDefault();\n      const currentValue = parseInt(fastEdInput.value) || 0;\n      \n      fastEdCalculator.show(currentValue, (result) => {\n        // Update FAST-ED score\n        fastEdInput.value = result.total;\n        \n        // Update hidden arm weakness field\n        const armPareseField = container.querySelector('#armparese_hidden');\n        if (armPareseField) {\n          armPareseField.value = result.armWeaknessBoolean ? 'true' : 'false';\n        }\n        \n        // Update eye deviation hidden field if exists\n        const eyeDeviationField = container.querySelector('#eye_deviation_hidden');\n        if (eyeDeviationField) {\n          eyeDeviationField.value = result.eyeDeviationBoolean ? 'true' : 'false';\n        }\n        \n        // Trigger change event to save form data\n        fastEdInput.dispatchEvent(new Event('change', { bubbles: true }));\n      });\n    });\n    \n    // Prevent manual typing\n    fastEdInput.addEventListener('keydown', (e) => {\n      e.preventDefault();\n    });\n  }\n\n  // Collapsible info toggles handler\n  const infoToggles = container.querySelectorAll('.info-toggle');\n  infoToggles.forEach(toggle => {\n    toggle.addEventListener('click', (e) => {\n      const targetId = toggle.dataset.target;\n      const targetContent = container.querySelector(`#${targetId}`);\n      const arrow = toggle.querySelector('.toggle-arrow');\n      \n      if (targetContent) {\n        const isVisible = targetContent.style.display !== 'none';\n        \n        if (isVisible) {\n          // Hide content\n          targetContent.style.display = 'none';\n          targetContent.classList.remove('show');\n          toggle.classList.remove('active');\n          arrow.style.transform = 'rotate(0deg)';\n        } else {\n          // Show content\n          targetContent.style.display = 'block';\n          targetContent.classList.add('show');\n          toggle.classList.add('active');\n          arrow.style.transform = 'rotate(180deg)';\n        }\n      }\n    });\n  });\n}","import { store } from './state/store.js';\nimport { render } from './ui/render.js';\nimport { APP_CONFIG } from './config.js';\nimport { i18n, t } from './localization/i18n.js';\nimport { warmUpFunctions } from './api/client.js';\nimport { setResearchMode, isResearchModeEnabled } from './research/data-logger.js';\n\nclass App {\n  constructor() {\n    this.container = null;\n    this.unsubscribe = null;\n  }\n\n  async init() {\n    // Wait for DOM to be ready\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', () => this.init());\n      return;\n    }\n\n    this.container = document.getElementById('appContainer');\n    if (!this.container) {\n      console.error('App container not found');\n      return;\n    }\n\n    // Subscribe to store changes\n    this.unsubscribe = store.subscribe(() => {\n      render(this.container);\n      // Update research button visibility after each render\n      setTimeout(() => this.initializeResearchMode(), 200);\n    });\n\n    // Subscribe to language changes\n    window.addEventListener('languageChanged', () => {\n      this.updateUILanguage();\n      render(this.container);\n    });\n\n    // Setup global event listeners\n    this.setupGlobalEventListeners();\n\n    // Initialize theme\n    this.initializeTheme();\n    \n    // Initialize research mode\n    this.initializeResearchMode();\n    \n    // Initialize language\n    this.updateUILanguage();\n\n    // Start auto-save\n    this.startAutoSave();\n\n    // Setup session timeout\n    this.setupSessionTimeout();\n\n    // Set current year in footer\n    this.setCurrentYear();\n\n    // Register PWA Service Worker with forced update\n    this.registerServiceWorker();\n    \n    // Warm up Cloud Functions in background\n    warmUpFunctions();\n\n    // Initial render\n    render(this.container);\n\n    console.log('iGFAP Stroke Triage Assistant initialized');\n  }\n\n  setupGlobalEventListeners() {\n    // Navigation buttons\n    const backButton = document.getElementById('backButton');\n    if (backButton) {\n      backButton.addEventListener('click', () => {\n        store.goBack();\n        render(this.container);\n      });\n    }\n    \n    const homeButton = document.getElementById('homeButton');\n    if (homeButton) {\n      homeButton.addEventListener('click', () => {\n        store.goHome();\n        render(this.container);\n      });\n    }\n\n    // Language toggle\n    const languageToggle = document.getElementById('languageToggle');\n    if (languageToggle) {\n      languageToggle.addEventListener('click', () => this.toggleLanguage());\n    }\n\n    // Dark mode toggle\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    if (darkModeToggle) {\n      darkModeToggle.addEventListener('click', () => this.toggleDarkMode());\n    }\n\n    // Research mode toggle\n    const researchModeToggle = document.getElementById('researchModeToggle');\n    if (researchModeToggle) {\n      researchModeToggle.addEventListener('click', (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.toggleResearchMode();\n      });\n    }\n\n    // Help modal\n    this.setupHelpModal();\n\n    // Footer links\n    this.setupFooterLinks();\n\n    // Keyboard navigation\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        const helpModal = document.getElementById('helpModal');\n        if (helpModal && helpModal.classList.contains('show')) {\n          helpModal.classList.remove('show');\n          helpModal.style.display = 'none';\n          helpModal.setAttribute('aria-hidden', 'true');\n        }\n      }\n    });\n\n    // Before unload warning\n    window.addEventListener('beforeunload', (e) => {\n      if (store.hasUnsavedData()) {\n        e.preventDefault();\n        e.returnValue = 'You have unsaved data. Are you sure you want to leave?';\n      }\n    });\n  }\n\n  setupHelpModal() {\n    const helpButton = document.getElementById('helpButton');\n    const helpModal = document.getElementById('helpModal');\n    const modalClose = helpModal?.querySelector('.modal-close');\n\n    if (helpButton && helpModal) {\n      // Ensure modal starts hidden\n      helpModal.classList.remove('show');\n      helpModal.style.display = 'none';\n      helpModal.setAttribute('aria-hidden', 'true');\n\n      helpButton.addEventListener('click', () => {\n        helpModal.style.display = 'flex';\n        helpModal.classList.add('show');\n        helpModal.setAttribute('aria-hidden', 'false');\n      });\n      \n      const closeModal = () => {\n        helpModal.classList.remove('show');\n        helpModal.style.display = 'none';\n        helpModal.setAttribute('aria-hidden', 'true');\n      };\n      \n      modalClose?.addEventListener('click', closeModal);\n      \n      helpModal.addEventListener('click', (e) => {\n        if (e.target === helpModal) {\n          closeModal();\n        }\n      });\n    }\n  }\n\n  setupFooterLinks() {\n    document.getElementById('privacyLink')?.addEventListener('click', (e) => {\n      e.preventDefault();\n      this.showPrivacyPolicy();\n    });\n    \n    document.getElementById('disclaimerLink')?.addEventListener('click', (e) => {\n      e.preventDefault();\n      this.showDisclaimer();\n    });\n  }\n\n  initializeTheme() {\n    const savedTheme = localStorage.getItem('theme');\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    \n    if (savedTheme === 'dark' || (!savedTheme && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n      document.body.classList.add('dark-mode');\n      if (darkModeToggle) darkModeToggle.textContent = '☀️';\n    }\n  }\n\n  toggleLanguage() {\n    i18n.toggleLanguage();\n    this.updateUILanguage();\n    \n    // Update flag icon\n    const languageToggle = document.getElementById('languageToggle');\n    if (languageToggle) {\n      const currentLang = i18n.getCurrentLanguage();\n      languageToggle.textContent = currentLang === 'en' ? '🇬🇧' : '🇩🇪';\n      languageToggle.dataset.lang = currentLang;\n    }\n  }\n\n  updateUILanguage() {\n    // Update HTML lang attribute\n    document.documentElement.lang = i18n.getCurrentLanguage();\n    \n    // Update header text\n    const headerTitle = document.querySelector('.app-header h1');\n    if (headerTitle) {\n      headerTitle.textContent = t('appTitle');\n    }\n    \n    const emergencyBadge = document.querySelector('.emergency-badge');\n    if (emergencyBadge) {\n      emergencyBadge.textContent = t('emergencyBadge');\n    }\n    \n    // Update button tooltips\n    const languageToggle = document.getElementById('languageToggle');\n    if (languageToggle) {\n      languageToggle.title = t('languageToggle');\n      languageToggle.setAttribute('aria-label', t('languageToggle'));\n    }\n    \n    const helpButton = document.getElementById('helpButton');\n    if (helpButton) {\n      helpButton.title = t('helpButton');\n      helpButton.setAttribute('aria-label', t('helpButton'));\n    }\n    \n    const darkModeToggle = document.getElementById('darkModeToggle');\n    if (darkModeToggle) {\n      darkModeToggle.title = t('darkModeButton');\n      darkModeToggle.setAttribute('aria-label', t('darkModeButton'));\n    }\n    \n    // Update help modal\n    const modalTitle = document.getElementById('modalTitle');\n    if (modalTitle) {\n      modalTitle.textContent = t('helpTitle');\n    }\n    \n    // Note: Stroke center map initialization is handled in render.js\n  }\n\n  toggleDarkMode() {\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    document.body.classList.toggle('dark-mode');\n    const isDark = document.body.classList.contains('dark-mode');\n    \n    if (darkModeToggle) {\n      darkModeToggle.textContent = isDark ? '☀️' : '🌙';\n    }\n    \n    localStorage.setItem('theme', isDark ? 'dark' : 'light');\n  }\n\n  initializeResearchMode() {\n    const researchModeToggle = document.getElementById('researchModeToggle');\n    if (researchModeToggle) {\n      // Check if we're on results screen with stroke module\n      const currentModule = this.getCurrentModuleFromResults();\n      const shouldShow = currentModule === 'limited' || currentModule === 'full';\n      \n      researchModeToggle.style.display = shouldShow ? 'flex' : 'none';\n      researchModeToggle.style.opacity = shouldShow ? '1' : '0.5';\n      \n      console.log(`🔬 Research button visibility: ${shouldShow ? 'VISIBLE' : 'HIDDEN'} (module: ${currentModule})`);\n    }\n  }\n\n  getCurrentModuleFromResults() {\n    const state = store.getState();\n    if (state.currentScreen !== 'results' || !state.results?.ich?.module) {\n      return null;\n    }\n    \n    const module = state.results.ich.module.toLowerCase();\n    if (module.includes('coma')) return 'coma';\n    if (module.includes('limited')) return 'limited';\n    if (module.includes('full')) return 'full';\n    return null;\n  }\n\n  toggleResearchMode() {\n    // Simply toggle the research panel visibility without affecting app state\n    const researchPanel = document.getElementById('researchPanel');\n    if (!researchPanel) {\n      console.warn('🔬 Research panel not found - likely not on results screen');\n      return;\n    }\n    \n    const isVisible = researchPanel.style.display !== 'none';\n    researchPanel.style.display = isVisible ? 'none' : 'block';\n    \n    // Update button visual state\n    const researchModeToggle = document.getElementById('researchModeToggle');\n    if (researchModeToggle) {\n      researchModeToggle.style.background = isVisible ? \n        'rgba(255, 255, 255, 0.1)' : 'rgba(0, 102, 204, 0.2)';\n    }\n    \n    console.log(`🔬 Research panel ${isVisible ? 'HIDDEN' : 'SHOWN'}`);\n    \n    // DO NOT trigger any navigation or state changes\n    return false;\n  }\n\n  showResearchActivationMessage() {\n    const message = document.createElement('div');\n    message.className = 'research-activation-toast';\n    message.innerHTML = `\n      <div class=\"toast-content\">\n        🔬 <strong>Research Mode Activated</strong><br>\n        <small>Model comparison features enabled</small>\n      </div>\n    `;\n    \n    document.body.appendChild(message);\n    \n    setTimeout(() => {\n      if (document.body.contains(message)) {\n        document.body.removeChild(message);\n      }\n    }, 3000);\n  }\n\n  startAutoSave() {\n    setInterval(() => {\n      this.saveCurrentFormData();\n    }, APP_CONFIG.autoSaveInterval);\n  }\n\n  saveCurrentFormData() {\n    const forms = this.container.querySelectorAll('form[data-module]');\n    forms.forEach(form => {\n      const formData = new FormData(form);\n      const module = form.dataset.module;\n      if (module) {\n        const data = {};\n        formData.forEach((value, key) => {\n          const element = form.elements[key];\n          if (element && element.type === 'checkbox') {\n            data[key] = element.checked;\n          } else {\n            data[key] = value;\n          }\n        });\n        \n        // Only save if data has actually changed to prevent unnecessary re-renders\n        const currentData = store.getFormData(module);\n        const hasChanges = JSON.stringify(currentData) !== JSON.stringify(data);\n        if (hasChanges) {\n          store.setFormData(module, data);\n        }\n      }\n    });\n  }\n\n  setupSessionTimeout() {\n    setTimeout(() => {\n      if (confirm('Your session has been idle for 30 minutes. Would you like to continue?')) {\n        this.setupSessionTimeout();\n      } else {\n        store.reset();\n      }\n    }, APP_CONFIG.sessionTimeout);\n  }\n\n  setCurrentYear() {\n    const yearElement = document.getElementById('currentYear');\n    if (yearElement) {\n      yearElement.textContent = new Date().getFullYear();\n    }\n  }\n\n  showPrivacyPolicy() {\n    alert('Privacy Policy: This tool processes data locally. No patient data is stored or transmitted.');\n  }\n\n  showDisclaimer() {\n    alert('Medical Disclaimer: This tool is for clinical decision support only. Always use clinical judgment and follow local protocols.');\n  }\n\n  async registerServiceWorker() {\n    // Check if service workers are supported\n    if (!('serviceWorker' in navigator)) {\n      console.log('Service Workers not supported');\n      return;\n    }\n\n    try {\n      const registration = await navigator.serviceWorker.register('/0825/sw.js', {\n        scope: '/0825/'\n      });\n\n      console.log('Service Worker registered successfully:', registration);\n\n      // Handle service worker updates\n      registration.addEventListener('updatefound', () => {\n        const newWorker = registration.installing;\n        console.log('New service worker found');\n\n        newWorker.addEventListener('statechange', () => {\n          if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n            console.log('New service worker installed, update available');\n            // Could show update notification here\n            this.showUpdateNotification();\n          }\n        });\n      });\n\n      // Listen for service worker messages\n      navigator.serviceWorker.addEventListener('message', (event) => {\n        console.log('Message from service worker:', event.data);\n      });\n\n    } catch (error) {\n      console.error('Service Worker registration failed:', error);\n    }\n  }\n\n  showUpdateNotification() {\n    // Create modal dialog for update notification\n    const modal = document.createElement('div');\n    modal.className = 'modal show update-modal';\n    modal.style.cssText = `\n      display: flex;\n      position: fixed;\n      z-index: 2000;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0,0,0,0.6);\n      backdrop-filter: blur(5px);\n      align-items: center;\n      justify-content: center;\n    `;\n    \n    const modalContent = document.createElement('div');\n    modalContent.className = 'modal-content';\n    modalContent.style.cssText = `\n      background-color: var(--container-bg);\n      padding: 30px;\n      border-radius: 16px;\n      max-width: 400px;\n      box-shadow: var(--shadow-lg);\n      text-align: center;\n      animation: slideUp 0.3s ease;\n    `;\n    \n    modalContent.innerHTML = `\n      <div style=\"margin-bottom: 20px;\">\n        <div style=\"font-size: 3rem; margin-bottom: 16px;\">🔄</div>\n        <h3 style=\"margin: 0 0 12px 0; color: var(--text-color);\">Update Available</h3>\n        <p style=\"color: var(--text-secondary); margin: 0 0 24px 0; line-height: 1.5;\">\n          A new version with improvements is ready to install.\n        </p>\n      </div>\n      <div style=\"display: flex; gap: 12px; justify-content: center;\">\n        <button id=\"updateNow\" class=\"primary\" style=\"flex: 1; max-width: 140px;\">\n          Refresh Now\n        </button>\n        <button id=\"updateLater\" class=\"secondary\" style=\"flex: 1; max-width: 140px;\">\n          Later\n        </button>\n      </div>\n    `;\n    \n    modal.appendChild(modalContent);\n    document.body.appendChild(modal);\n    \n    // Handle buttons\n    const updateNow = modal.querySelector('#updateNow');\n    const updateLater = modal.querySelector('#updateLater');\n    \n    updateNow.addEventListener('click', () => {\n      window.location.reload();\n    });\n    \n    updateLater.addEventListener('click', () => {\n      modal.remove();\n      // Show again in 5 minutes\n      setTimeout(() => this.showUpdateNotification(), 5 * 60 * 1000);\n    });\n    \n    // Close on backdrop click\n    modal.addEventListener('click', (e) => {\n      if (e.target === modal) {\n        updateLater.click();\n      }\n    });\n  }\n\n  destroy() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n}\n\n// Initialize the application\nconst app = new App();\napp.init();\n\n// Export for potential testing or debugging\nexport default app;"],"file":"assets/index-_COO6h9B.js"}