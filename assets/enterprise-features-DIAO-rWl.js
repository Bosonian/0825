var q=Object.defineProperty;var Z=(n,e,t)=>e in n?q(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var b=(n,e,t)=>Z(n,typeof e!="symbol"?e+"":e,t);import{m as l,M as d,a as y,P as L}from"./medical-core-BGk_aHbc.js";const ee=["p","div","span","br","strong","b","em","i","u","h1","h2","h3","h4","h5","h6","ul","ol","li","table","tr","td","th","thead","tbody","small","sub","sup","button","input","form","label","select","option","textarea","a","img","canvas","svg","path","circle","rect","line","g","text"],te={div:["class","id","style","data-id","data-action","data-value","data-module","data-target"],span:["class","id","style","data-id"],p:["class","style"],strong:["class"],b:["class"],em:["class"],i:["class"],table:["class"],tr:["class"],td:["class","colspan","rowspan"],th:["class","colspan","rowspan"],ul:["class"],ol:["class"],li:["class"],h1:["class"],h2:["class"],h3:["class"],h4:["class"],h5:["class"],h6:["class"],small:["class"],button:["class","id","type","data-action","data-value","data-target","disabled"],input:["class","id","type","name","value","placeholder","required","data-module","autocomplete","readonly","checked","min","max","step","aria-describedby"],form:["class","id","data-module","action","method"],label:["class","for"],select:["class","id","name","required"],option:["value","selected"],textarea:["class","id","name","placeholder","required","rows","cols"],a:["href","target","class","id"],img:["src","alt","class","id","width","height"],canvas:["class","id","width","height"],svg:["class","id","width","height","viewBox","xmlns","style"],path:["d","fill","stroke","stroke-width","class"],circle:["cx","cy","r","fill","stroke","stroke-width","class","stroke-dasharray","stroke-dashoffset","stroke-linecap","transform"],rect:["x","y","width","height","fill","stroke","stroke-width","class"],line:["x1","y1","x2","y2","stroke","stroke-width","class"],g:["class","transform"],text:["x","y","text-anchor","font-family","font-size","font-weight","fill","class","style","dominant-baseline"]},ie=["color","background-color","font-size","font-weight","text-align","margin","padding","border","display","visibility","opacity","pointer-events","overflow"];function ae(n,e={}){if(typeof n!="string")return"";if(ne(n))throw new Error("Potentially malicious content detected");const i=new DOMParser().parseFromString(n,"text/html");if(i.querySelector("parsererror"))throw new Error("Invalid HTML content");return H(i.body),i.body.innerHTML}function ne(n){return[/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,/javascript:/gi,/on\w+\s*=/gi,/<iframe\b(?![^>]*src=["'][^"']*\/0925\/)/gi,/<object\b/gi,/<embed\b/gi,/<meta\b/gi,/<link\b(?![^>]*rel=["']manifest)/gi].some(t=>t.test(n))}function H(n,e){const t=[];for(let i=0;i<n.childNodes.length;i++){const a=n.childNodes[i];if(a.nodeType===Node.ELEMENT_NODE){const s=a.tagName.toLowerCase();if(!ee.includes(s)){t.push(a);continue}se(a),H(a)}else a.nodeType===Node.TEXT_NODE||t.push(a)}t.forEach(i=>{n.removeChild(i)})}function se(n){const e=n.tagName.toLowerCase(),t=te[e]||[],i=[];for(let a=0;a<n.attributes.length;a++){const s=n.attributes[a],r=s.name.toLowerCase(),o=r.startsWith("data-");!t.includes(r)&&!o?i.push(r):r==="style"?n.setAttribute("style",re(s.value)):n.setAttribute(r,oe(s.value))}i.forEach(a=>{n.removeAttribute(a)})}function re(n){if(!n)return"";const e=n.split(";"),t=[];return e.forEach(i=>{const[a,s]=i.split(":").map(r=>r.trim());a&&s&&ie.includes(a.toLowerCase())&&!s.includes("javascript:")&&!s.includes("expression(")&&t.push(`${a}: ${s}`)}),t.join("; ")}function oe(n){return n?n.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;").replace(/</g,"&lt;").replace(/>/g,"&gt;"):""}function z(n,e,t={}){if(!(!n||typeof e!="string"))try{const i=ae(e,t);n.innerHTML=i}catch(i){throw n.textContent=e.replace(/<[^>]*>/g,""),new Error(`HTML sanitization failed: ${i.message}`)}}var F={};class ce{constructor(){this.config={},this.isInitialized=!1,this.initializeConfig()}initializeConfig(){try{typeof process!="undefined"&&F&&(this.config={...F}),typeof window!="undefined"&&this.loadClientConfig(),this.isInitialized=!0}catch(e){console.warn("Failed to initialize environment config:",e.message),this.loadDefaults()}}loadClientConfig(){const e={NODE_ENV:"production",DEBUG_MODE:!1,MOCK_API_ENABLED:!1,LOG_LEVEL:"info",SESSION_TIMEOUT_HOURS:4,BCRYPT_SALT_ROUNDS:12,ENCRYPTION_KEY_LENGTH:256,MAX_AUTH_ATTEMPTS:5,RATE_LIMIT_WINDOW_MS:9e5,ENABLE_DATA_ENCRYPTION:!0,ENABLE_AUDIT_TRAIL:!0,DATA_RETENTION_DAYS:90,GCP_PROJECT_ID:"igfap-452720",GCP_REGION:"europe-west3"};this.config={...this.config,...e}}loadDefaults(){this.config={NODE_ENV:"development",DEBUG_MODE:!1,MOCK_API_ENABLED:!0,LOG_LEVEL:"warn",SESSION_TIMEOUT_HOURS:4,BCRYPT_SALT_ROUNDS:12,MAX_AUTH_ATTEMPTS:3,RATE_LIMIT_WINDOW_MS:9e5,ENABLE_DATA_ENCRYPTION:!0,ENABLE_AUDIT_TRAIL:!0,DATA_RETENTION_DAYS:30,GCP_PROJECT_ID:"igfap-452720",GCP_REGION:"europe-west3"},this.isInitialized=!0}get(e,t=null,i="string"){this.isInitialized||this.initializeConfig();let a=this.config[e];(a==null||a==="")&&(a=t);try{switch(i){case"number":return a!==null?Number(a):t;case"boolean":return typeof a=="boolean"?a:a==="true"||a==="1"||a==="yes";case"array":return Array.isArray(a)?a:typeof a=="string"?a.split(",").map(s=>s.trim()):t;case"string":default:return a!==null?String(a):t}}catch(s){return console.warn(`Failed to convert environment variable ${e} to ${i}:`,s.message),t}}getResearchPassword(){return console.warn("DEPRECATED: getResearchPassword() should not be used. Password verification is backend-only."),null}getApiKey(e){const t=this.get(`${e.toUpperCase()}_API_KEY`);return!t||t==="YOUR_API_KEY_HERE"?null:t}isDevelopment(){return this.get("NODE_ENV")==="development"||typeof window!="undefined"&&["localhost","127.0.0.1","0.0.0.0"].includes(window.location.hostname)}isProduction(){return this.get("NODE_ENV")==="production"&&!this.isDevelopment()}getSessionConfig(){return{timeoutHours:this.get("SESSION_TIMEOUT_HOURS",4,"number"),secretKey:this.get("SESSION_SECRET_KEY")||this.generateSecretKey(),maxAuthAttempts:this.get("MAX_AUTH_ATTEMPTS",5,"number"),rateLimitWindow:this.get("RATE_LIMIT_WINDOW_MS",9e5,"number")}}getSecurityConfig(){return{encryptionKeyLength:this.get("ENCRYPTION_KEY_LENGTH",256,"number"),bcryptSaltRounds:this.get("BCRYPT_SALT_ROUNDS",12,"number"),enableDataEncryption:this.get("ENABLE_DATA_ENCRYPTION",!0,"boolean"),enableAuditTrail:this.get("ENABLE_AUDIT_TRAIL",!0,"boolean"),dataRetentionDays:this.get("DATA_RETENTION_DAYS",90,"number")}}getGcpConfig(){return{projectId:this.get("GCP_PROJECT_ID","igfap-452720"),region:this.get("GCP_REGION","europe-west3"),baseUrl:`https://${this.get("GCP_REGION","europe-west3")}-${this.get("GCP_PROJECT_ID","igfap-452720")}.cloudfunctions.net`}}generateSecretKey(){try{if(typeof crypto!="undefined"&&crypto.getRandomValues){const e=new Uint8Array(32);return crypto.getRandomValues(e),Array.from(e,t=>t.toString(16).padStart(2,"0")).join("")}}catch(e){console.warn("Failed to generate cryptographically secure key, using fallback")}return`fallback-key-${Date.now()}-${Math.random().toString(36).substring(2)}`}validateConfig(){const e=[],t=[];if(this.get("ENABLE_DATA_ENCRYPTION",!0,"boolean")||e.push("Data encryption is disabled in production environment"),this.get("ENABLE_AUDIT_TRAIL",!0,"boolean")||t.push("Audit trail is disabled - may affect compliance"),this.get("BCRYPT_SALT_ROUNDS",12,"number")<10&&e.push("BCrypt salt rounds too low for production security"),this.isProduction()&&this.get("DEBUG_MODE",!1,"boolean")&&t.push("Debug mode enabled in production environment"),this.isProduction()){const i=this.get("RESEARCH_PASSWORD");(!i||i==="Neuro25")&&t.push("Using default research password in production");const a=this.get("SESSION_SECRET_KEY");(!a||a.includes("your-secure"))&&e.push("Default session secret in production environment")}return{isValid:e.length===0,issues:e,warnings:t,configStatus:{encryption:this.get("ENABLE_DATA_ENCRYPTION",!0,"boolean"),auditTrail:this.get("ENABLE_AUDIT_TRAIL",!0,"boolean"),development:this.isDevelopment(),production:this.isProduction()}}}getSafeConfig(){const e=["NODE_ENV","DEBUG_MODE","MOCK_API_ENABLED","LOG_LEVEL","SESSION_TIMEOUT_HOURS","BCRYPT_SALT_ROUNDS","ENCRYPTION_KEY_LENGTH","MAX_AUTH_ATTEMPTS","RATE_LIMIT_WINDOW_MS","ENABLE_DATA_ENCRYPTION","ENABLE_AUDIT_TRAIL","DATA_RETENTION_DAYS","GCP_PROJECT_ID","GCP_REGION"],t={};return e.forEach(i=>{t[i]=this.config[i]}),t}}new ce;const g={LOW:"low",MEDIUM:"medium",HIGH:"high",CRITICAL:"critical"},h={NETWORK:"network",VALIDATION:"validation",AUTHENTICATION:"authentication",CALCULATION:"calculation",STORAGE:"storage",RENDERING:"rendering",MEDICAL:"medical",SECURITY:"security"};class E extends Error{constructor(e,t,i=h.MEDICAL,a=g.MEDIUM){super(e),this.name="MedicalError",this.code=t,this.category=i,this.severity=a,this.timestamp=new Date().toISOString(),this.context={}}withContext(e){return this.context={...this.context,...e},this}getUserMessage(){switch(this.category){case h.NETWORK:return"Network connection issue. Please check your internet connection and try again.";case h.VALIDATION:return"Please check your input data and try again.";case h.AUTHENTICATION:return"Authentication failed. Please log in again.";case h.CALCULATION:return"Unable to complete calculation. Please verify your input data.";case h.MEDICAL:return"Medical calculation could not be completed. Please verify all clinical data.";default:return"An unexpected error occurred. Please try again."}}}class le{constructor(){this.errorQueue=[],this.maxQueueSize=100,this.setupGlobalHandlers()}setupGlobalHandlers(){window.addEventListener("unhandledrejection",e=>{this.handleError(e.reason,h.NETWORK,g.HIGH),e.preventDefault()}),window.addEventListener("error",e=>{this.handleError(e.error,h.RENDERING,g.MEDIUM)})}handleError(e,t=h.NETWORK,i=g.MEDIUM){const a={error:e instanceof Error?e:new Error(String(e)),category:t,severity:i,timestamp:new Date().toISOString(),userAgent:navigator.userAgent.substring(0,100),url:window.location.href};this.errorQueue.push(a),this.errorQueue.length>this.maxQueueSize&&this.errorQueue.shift(),i===g.CRITICAL&&this.handleCriticalError(a)}handleCriticalError(e){e.category===h.MEDICAL&&this.showMedicalAlert(e.error.message)}showMedicalAlert(e){const t=document.createElement("div");t.className="critical-medical-alert",t.style.cssText=`
      position: fixed;
      top: 20px;
      left: 50%;
      transform: translateX(-50%);
      background: #ff4444;
      color: white;
      padding: 15px 20px;
      border-radius: 8px;
      z-index: 10000;
      box-shadow: 0 4px 12px rgba(0,0,0,0.3);
      max-width: 90%;
      text-align: center;
    `,t.textContent=`⚠️ Medical Error: ${e}`,document.body.appendChild(t),setTimeout(()=>{document.body.contains(t)&&document.body.removeChild(t)},1e4)}getErrorSummary(){return{totalErrors:this.errorQueue.length,criticalErrors:this.errorQueue.filter(e=>e.severity===g.CRITICAL).length,recentErrors:this.errorQueue.slice(-10)}}}const de=new le;async function u(n,e={}){const{category:t=h.NETWORK,severity:i=g.MEDIUM,fallback:a=null,timeout:s=3e4,retries:r=0,context:o={}}=e;for(let c=0;c<=r;c++)try{const m=new Promise((k,T)=>{setTimeout(()=>T(new Error("Operation timeout")),s)});return await Promise.race([n(),m])}catch(m){if(de.handleError(m,t,i),c<r){await new Promise(k=>setTimeout(k,1e3*(c+1)));continue}if(a!==null)return typeof a=="function"?a(m):a;throw new E(m.message||"Operation failed",m.code||"UNKNOWN",t,i).withContext(o)}}async function Pe(n,e={}){return u(n,{category:h.AUTHENTICATION,severity:g.HIGH,timeout:15e3,fallback:()=>({success:!1,error:!0,message:"Authentication service unavailable"}),...e})}const _={DEBUG:{level:0,name:"DEBUG",color:"#6366f1"},INFO:{level:1,name:"INFO",color:"#10b981"},WARN:{level:2,name:"WARN",color:"#f59e0b"},ERROR:{level:3,name:"ERROR",color:"#ef4444"},CRITICAL:{level:4,name:"CRITICAL",color:"#dc2626"}},p={AUTHENTICATION:"AUTH",MEDICAL_CALCULATION:"MEDICAL",NETWORK:"NETWORK",PERFORMANCE:"PERF",SECURITY:"SECURITY",USER_INTERACTION:"UI",DATA_VALIDATION:"VALIDATION",AUDIT:"AUDIT",SYSTEM:"SYSTEM",ERROR:"ERROR"};class he{constructor(){this.logLevel=this.getLogLevel(),this.sessionId=this.generateSessionId(),this.logBuffer=[],this.maxBufferSize=1e3,this.isProduction=window.location.hostname!=="localhost"&&window.location.hostname!=="127.0.0.1",this.enableConsole=!this.isProduction,this.enableStorage=!0,this.enableNetwork=!1,this.setupErrorHandlers(),this.startPeriodicFlush()}getLogLevel(){try{const e=localStorage.getItem("medicalLogLevel");if(e&&_[e.toUpperCase()])return _[e.toUpperCase()].level}catch(e){}return this.isProduction?_.INFO.level:_.DEBUG.level}generateSessionId(){const e=Date.now().toString(36),t=Math.random().toString(36).substring(2,8);return`sess_${e}_${t}`}setupErrorHandlers(){window.addEventListener("error",e=>{var t;try{this.critical("Unhandled JavaScript Error",{category:p.ERROR,message:e.message,filename:e.filename,lineno:e.lineno,colno:e.colno,stack:(t=e.error)==null?void 0:t.stack})}catch(i){console.error("Logging failed:",i),console.error("Original error:",e.error)}}),window.addEventListener("unhandledrejection",e=>{var t,i;try{this.critical("Unhandled Promise Rejection",{category:p.ERROR,reason:((t=e.reason)==null?void 0:t.message)||String(e.reason)||"Unknown rejection",stack:(i=e.reason)==null?void 0:i.stack})}catch(a){console.error("Logging failed:",a),console.error("Original rejection:",e.reason)}})}createLogEntry(e,t,i={}){var o;const a=i&&typeof i=="object"?i:{},s={timestamp:new Date().toISOString(),level:((o=_[e])==null?void 0:o.name)||e,category:a.category||p.SYSTEM,message:this.sanitizeMessage(t),sessionId:this.sessionId,context:this.sanitizeContext(a),performance:this.getPerformanceMetrics()};(e==="ERROR"||e==="CRITICAL")&&(s.stackTrace=new Error().stack);const r=this.getAnonymizedUserId();return r&&(s.userId=r),s}sanitizeMessage(e){return typeof e!="string"&&(e=String(e)),e.replace(/\b\d{3}-\d{2}-\d{4}\b/g,"***-**-****").replace(/\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b/g,"***@***.***").replace(/\b\d{10,}\b/g,"**********").replace(/\b[A-Z][a-z]+ [A-Z][a-z]+\b/g,"[NAME]")}sanitizeContext(e){if(!e||typeof e!="object")return{};const t={...e},i=["password","token","sessionToken","authToken","patientName","firstName","lastName","fullName","email","phone","ssn","mrn","dob","dateOfBirth"],a=s=>{if(!s||typeof s!="object")return s;const r=Array.isArray(s)?[]:{};for(const[o,c]of Object.entries(s)){const m=o.toLowerCase();i.some(O=>m.includes(O))?r[o]="[REDACTED]":typeof c=="object"&&c!==null?r[o]=a(c):r[o]=c}return r};return a(t)}getAnonymizedUserId(){try{const e=sessionStorage.getItem("session_hash");if(e)return`user_${e.substring(0,8)}`}catch(e){}return null}getPerformanceMetrics(){var e;try{if("performance"in window){const t=G.getEntriesByType("navigation")[0];return{memoryUsed:((e=G.memory)==null?void 0:e.usedJSHeapSize)||0,loadTime:(t==null?void 0:t.loadEventEnd)-(t==null?void 0:t.loadEventStart)||0,domReady:(t==null?void 0:t.domContentLoadedEventEnd)-(t==null?void 0:t.domContentLoadedEventStart)||0}}}catch(t){}return null}log(e,t,i={}){return u(async()=>{if(!e||!t)return;const a=_[e.toUpperCase()];if(!a||a.level<this.logLevel)return;const s=this.createLogEntry(e.toUpperCase(),t,i);this.addToBuffer(s),this.enableConsole&&this.outputToConsole(s),this.enableStorage&&this.storeEntry(s),this.enableNetwork&&await this.sendToLoggingService(s)},{category:h.SYSTEM,context:{operation:"logging",level:e,message:t.substring(0,100)}})}addToBuffer(e){this.logBuffer.push(e),this.logBuffer.length>this.maxBufferSize&&(this.logBuffer=this.logBuffer.slice(-this.maxBufferSize))}outputToConsole(e){const t=_[e.level],a=`color: ${(t==null?void 0:t.color)||"#666666"}; font-weight: bold;`,s=new Date(e.timestamp).toLocaleTimeString();e.level==="ERROR"||e.level==="CRITICAL"||e.level,console.groupCollapsed(`%c[${e.level}] ${s} [${e.category}] ${e.message}`,a),e.context&&Object.keys(e.context).length>0&&console.log("Context:",e.context),e.performance&&console.log("Performance:",e.performance),e.stackTrace&&(e.level==="ERROR"||e.level==="CRITICAL")&&console.log("Stack Trace:",e.stackTrace),console.groupEnd()}storeEntry(e){try{const t=`medicalLog_${e.timestamp}`,i=JSON.stringify(e);sessionStorage.setItem(t,i),this.cleanOldEntries()}catch(t){}}cleanOldEntries(){try{const e=Object.keys(sessionStorage).filter(t=>t.startsWith("medicalLog_")).sort().reverse();e.length>100&&e.slice(100).forEach(t=>{sessionStorage.removeItem(t)})}catch(e){}}async sendToLoggingService(e){return Promise.resolve()}startPeriodicFlush(){setInterval(()=>{this.flushBuffer()},3e4)}flushBuffer(){this.logBuffer.length!==0&&this.info("Log buffer flushed",{category:p.SYSTEM,entriesCount:this.logBuffer.length})}debug(e,t={}){return this.log("DEBUG",e,t)}info(e,t={}){return this.log("INFO",e,t)}warn(e,t={}){return this.log("WARN",e,t)}error(e,t={}){return this.log("ERROR",e,t)}critical(e,t={}){return this.log("CRITICAL",e,t)}medicalCalculation(e,t,i={}){return this.info(`Medical calculation: ${e}`,{category:p.MEDICAL_CALCULATION,operation:e,success:!i.error,...i})}authentication(e,t,i={}){return this.info(`Authentication: ${e}`,{category:p.AUTHENTICATION,action:e,success:t,...i})}userInteraction(e,t={}){return this.debug(`User interaction: ${e}`,{category:p.USER_INTERACTION,action:e,...t})}networkRequest(e,t,i,a={}){const s=i>=400?"ERROR":i>=300?"WARN":"DEBUG";return this.log(s,`Network request: ${t} ${e}`,{category:p.NETWORK,method:t,url:this.sanitizeUrl(e),status:i,...a})}performance(e,t,i={}){return this.debug(`Performance metric: ${e} = ${t}`,{category:p.PERFORMANCE,metric:e,value:t,...i})}auditTrail(e,t={}){return this.info(`Audit: ${e}`,{category:p.AUDIT,event:e,...t})}sanitizeUrl(e){try{const t=new URL(e);return["token","auth","key","secret"].forEach(a=>{t.searchParams.has(a)&&t.searchParams.set(a,"[REDACTED]")}),t.toString()}catch(t){return e}}getLogs(e={}){var a;const t=[...this.logBuffer];try{Object.keys(sessionStorage).filter(r=>r.startsWith("medicalLog_")).sort().forEach(r=>{try{const o=JSON.parse(sessionStorage.getItem(r));o&&!t.find(c=>c.timestamp===o.timestamp)&&t.push(o)}catch(o){}})}catch(s){}let i=t.sort((s,r)=>new Date(r.timestamp)-new Date(s.timestamp));if(e.level){const s=((a=_[e.level.toUpperCase()])==null?void 0:a.level)||0;i=i.filter(r=>{var c;return(((c=_[r.level])==null?void 0:c.level)||0)>=s})}if(e.category&&(i=i.filter(s=>s.category===e.category)),e.since){const s=new Date(e.since);i=i.filter(r=>new Date(r.timestamp)>=s)}return e.limit&&(i=i.slice(0,e.limit)),i}exportLogs(e="json"){const t=this.getLogs();return e==="csv"?this.logsToCSV(t):JSON.stringify(t,null,2)}logsToCSV(e){if(e.length===0)return"";const t=["timestamp","level","category","message","sessionId"],i=e.map(a=>[a.timestamp,a.level,a.category,`"${a.message.replace(/"/g,'""')}"`,a.sessionId]);return[t.join(","),...i.map(a=>a.join(","))].join(`
`)}clearLogs(){this.logBuffer=[];try{Object.keys(sessionStorage).filter(t=>t.startsWith("medicalLog_")).forEach(t=>sessionStorage.removeItem(t))}catch(e){}this.info("Log storage cleared",{category:p.SYSTEM})}}const f=new he,{debug:xe,info:We,warn:ze,error:Fe,critical:Ge,medicalCalculation:Be,authentication:Ve,userInteraction:Ye,networkRequest:$e,performance:G,auditTrail:He}=f;class ue{constructor(){this.algorithm="AES-GCM",this.keyLength=256,this.ivLength=12,this.version="1.0",this.encryptionKey=null,this.isSupported=this.checkWebCryptoSupport(),this.isSupported?this.initializeEncryption():f.warn("Web Crypto API not supported, falling back to unencrypted storage",{category:p.SECURITY})}checkWebCryptoSupport(){return typeof window!="undefined"&&window.crypto&&window.crypto.subtle&&typeof window.crypto.subtle.encrypt=="function"}async initializeEncryption(){return u(async()=>{const e=await this.getOrCreateKeyMaterial();return this.encryptionKey=await window.crypto.subtle.deriveKey({name:"PBKDF2",salt:new TextEncoder().encode("iGFAP-Medical-2024"),iterations:1e5,hash:"SHA-256"},e,{name:this.algorithm,length:this.keyLength},!1,["encrypt","decrypt"]),f.info("Medical data encryption initialized",{category:p.SECURITY,algorithm:this.algorithm,keyLength:this.keyLength}),!0},{category:h.SECURITY,severity:g.HIGH,context:{operation:"encryption_initialization"}})}async getOrCreateKeyMaterial(){return u(async()=>{let e=sessionStorage.getItem("_medical_km");if(!e){const i=window.crypto.getRandomValues(new Uint8Array(32));e=Array.from(i,a=>a.toString(16).padStart(2,"0")).join(""),sessionStorage.setItem("_medical_km",e),f.debug("Generated new encryption key material",{category:p.SECURITY})}const t=new Uint8Array(e.match(/.{1,2}/g).map(i=>parseInt(i,16)));return await window.crypto.subtle.importKey("raw",t,"PBKDF2",!1,["deriveKey"])},{category:h.SECURITY,context:{operation:"key_material_generation"}})}async encryptData(e){return!this.isSupported||!this.encryptionKey?(f.warn("Encryption not available, storing data unencrypted",{category:p.SECURITY}),JSON.stringify(e)):u(async()=>{const t=JSON.stringify(e),i=new TextEncoder().encode(t),a=window.crypto.getRandomValues(new Uint8Array(this.ivLength)),s=await window.crypto.subtle.encrypt({name:this.algorithm,iv:a},this.encryptionKey,i),r=new Uint8Array(s),o=btoa(String.fromCharCode(...r)),c=btoa(String.fromCharCode(...a)),m={encrypted:o,iv:c,version:this.version,timestamp:Date.now()};return f.debug("Data encrypted successfully",{category:p.SECURITY,dataSize:t.length}),JSON.stringify(m)},{category:h.SECURITY,severity:g.MEDIUM,fallback:()=>(f.warn("Encryption failed, storing data unencrypted",{category:p.SECURITY}),JSON.stringify(e)),context:{operation:"data_encryption"}})}async decryptData(e){return e?u(async()=>{let t;try{t=JSON.parse(e)}catch(c){return f.debug("Data appears to be unencrypted legacy format",{category:p.SECURITY}),JSON.parse(e)}if(!t.encrypted||!t.iv)return t;if(!this.isSupported||!this.encryptionKey)return f.warn("Cannot decrypt data: encryption not available",{category:p.SECURITY}),null;const i=new Uint8Array(atob(t.encrypted).split("").map(c=>c.charCodeAt(0))),a=new Uint8Array(atob(t.iv).split("").map(c=>c.charCodeAt(0))),s=await window.crypto.subtle.decrypt({name:this.algorithm,iv:a},this.encryptionKey,i),r=new TextDecoder().decode(s),o=JSON.parse(r);return f.debug("Data decrypted successfully",{category:p.SECURITY,dataSize:r.length}),o},{category:h.SECURITY,severity:g.MEDIUM,fallback:()=>(f.warn("Decryption failed, returning null",{category:p.SECURITY}),null),context:{operation:"data_decryption"}}):null}async secureStore(e,t,i=!1){return u(async()=>{const a=i?sessionStorage:localStorage,s=await this.encryptData(t),r=`_enc_${e}`;return a.setItem(r,s),f.debug("Data stored securely",{category:p.SECURITY,key:r,storage:i?"session":"local"}),!0},{category:h.STORAGE,context:{operation:"secure_store",key:e}})}async secureRetrieve(e,t=!1){return u(async()=>{const i=t?sessionStorage:localStorage,a=`_enc_${e}`,s=i.getItem(a);if(!s){const o=i.getItem(e);if(o){f.debug("Retrieved legacy unencrypted data",{category:p.SECURITY,key:e});try{return JSON.parse(o)}catch(c){return o}}return null}const r=await this.decryptData(s);return f.debug("Data retrieved securely",{category:p.SECURITY,key:a,storage:t?"session":"local",hasData:!!r}),r},{category:h.STORAGE,context:{operation:"secure_retrieve",key:e}})}async secureRemove(e,t=!1){return u(async()=>{const i=t?sessionStorage:localStorage,a=`_enc_${e}`;return i.removeItem(a),i.removeItem(e),f.debug("Data removed securely",{category:p.SECURITY,key:a,storage:t?"session":"local"}),!0},{category:h.STORAGE,context:{operation:"secure_remove",key:e}})}isDataEncrypted(e){try{const t=JSON.parse(e);return!!(t.encrypted&&t.iv&&t.version)}catch(t){return!1}}async migrateLegacyData(e,t=!1){return u(async()=>{const i=t?sessionStorage:localStorage,a=i.getItem(e);if(a&&!this.isDataEncrypted(a)){f.info("Migrating legacy unencrypted data",{category:p.SECURITY,key:e});let s;try{s=JSON.parse(a)}catch(r){s=a}return await this.secureStore(e.replace("_enc_",""),s,t),i.removeItem(e),f.info("Legacy data migration completed",{category:p.SECURITY,key:e}),!0}return!1},{category:h.STORAGE,context:{operation:"migrate_legacy_data",key:e}})}clearEncryptionKeys(){try{sessionStorage.removeItem("_medical_km"),this.encryptionKey=null,f.info("Encryption keys cleared",{category:p.SECURITY})}catch(e){f.warn("Failed to clear encryption keys",{category:p.SECURITY,error:e.message})}}getStatus(){return{isSupported:this.isSupported,isInitialized:!!this.encryptionKey,algorithm:this.algorithm,keyLength:this.keyLength,version:this.version}}}const K=new ue,Ke=(n,e=!1)=>K.secureRetrieve(n,e),je=(n,e=!1)=>K.secureRemove(n,e);class j{constructor(){this.registration=null,this.isOnline=navigator.onLine,this.updateAvailable=!1,this.isUpdateCheckEnabled=!0,this.retryCount=0,this.maxRetries=3,this.setupEventListeners()}async initialize(){return u(async()=>{if(!("serviceWorker"in navigator))throw new E("Service Worker not supported in this browser","SW_NOT_SUPPORTED",h.STORAGE,g.MEDIUM).withContext({userAgent:navigator.userAgent});const e=y.startMeasurement(L.USER_INTERACTION,"service_worker_registration");try{const t=navigator.serviceWorker.register("/0925/src/workers/medical-service-worker.js",{scope:"/0925/",updateViaCache:"none"});if(this.registration=await Promise.race([t,new Promise((i,a)=>setTimeout(()=>a(new Error("Service Worker registration timeout")),3e4))]),!this.registration)throw new E("Service Worker registration returned null","SW_REGISTRATION_NULL",h.STORAGE,g.HIGH);return await Promise.allSettled([u(()=>this.setupUpdateDetection(),null,{operation:"setup_update_detection"}),u(()=>this.setupMessageHandler(),null,{operation:"setup_message_handler"}),u(()=>this.checkForUpdates(),null,{operation:"initial_update_check"})]),y.endMeasurement(e,{success:!0}),l.publish(d.AUDIT_EVENT,{action:"sw_registered",scope:this.registration.scope}),!0}catch(t){throw y.endMeasurement(e,{success:!1,error:t.message}),t}},e=>(console.error("Service Worker initialization failed:",e.message),l.publish(d.AUDIT_EVENT,{action:"sw_registration_failed",error:e.message,context:e.context||{}}),!1))}setupEventListeners(){window.addEventListener("online",()=>{this.isOnline=!0,this.handleOnlineStatusChange(!0)}),window.addEventListener("offline",()=>{this.isOnline=!1,this.handleOnlineStatusChange(!1)}),document.addEventListener("visibilitychange",()=>{!document.hidden&&this.isUpdateCheckEnabled&&this.checkForUpdates()}),setInterval(()=>{this.isUpdateCheckEnabled&&this.isOnline&&this.checkForUpdates()},5*60*1e3)}setupUpdateDetection(){this.registration&&(this.registration.addEventListener("updatefound",()=>{const e=this.registration.installing;e.addEventListener("statechange",()=>{e.state==="installed"&&navigator.serviceWorker.controller&&(this.updateAvailable=!0,this.notifyUpdateAvailable())})}),navigator.serviceWorker.addEventListener("controllerchange",()=>{window.location.reload()}))}setupMessageHandler(){navigator.serviceWorker.addEventListener("message",e=>{const{type:t,data:i}=e.data;switch(t){case"SW_INSTALLED":this.handleServiceWorkerInstalled(i);break;case"SW_ACTIVATED":this.handleServiceWorkerActivated(i);break;case"SW_INSTALL_ERROR":this.handleServiceWorkerError(i);break;case"MEDICAL_DATA_SYNCED":this.handleMedicalDataSynced(i);break}})}handleOnlineStatusChange(e){u(async()=>{l.publish(d.AUDIT_EVENT,{action:"network_status_changed",isOnline:e,timestamp:new Date().toISOString()}),await u(()=>this.showNetworkStatusNotification(e),null,{operation:"show_network_notification"}),e&&"serviceWorker"in navigator&&navigator.serviceWorker.controller&&await u(async()=>{const t=await navigator.serviceWorker.ready;if("sync"in t)return t.sync.register("medical-data-sync")},t=>{console.warn("Background sync registration failed:",t.message)},{operation:"background_sync_registration",timeout:5e3})},t=>{console.error("Error handling network status change:",t.message)})}showNetworkStatusNotification(e){return u(async()=>{if(!document||!document.body)throw new E("Document not available for notification","DOCUMENT_UNAVAILABLE",h.RENDERING,g.LOW);const t=document.createElement("div");if(!t)throw new E("Failed to create notification element","ELEMENT_CREATION_FAILED",h.RENDERING,g.LOW);t.className=`network-notification ${e?"online":"offline"}`;try{z(t,`
            <div class="notification-content">
              <span class="notification-icon">${e?"🌐":"📴"}</span>
              <span class="notification-text">
                ${e?"Connection restored":"Working offline"}
              </span>
            </div>
          `)}catch(i){console.warn("Network notification sanitization failed, using fallback:",i.message),t.textContent=e?"🌐 Connection restored":"📴 Working offline"}if(!document.body)throw new E("Document body not available when appending notification","BODY_UNAVAILABLE",h.RENDERING,g.LOW);return document.body.appendChild(t),setTimeout(()=>{u(()=>{t&&t.parentNode&&t.parentNode.removeChild(t)},null,{operation:"remove_notification"})},3e3),t},t=>{console.warn("Failed to show network status notification:",t.message);try{console&&console.info&&console.info(`Network status: ${e?"Online":"Offline"}`)}catch(i){}return null})}async checkForUpdates(){return u(async()=>{if(!this.registration)throw new E("No service worker registration available for update check","NO_REGISTRATION",h.STORAGE,g.LOW);const e=this.registration.update(),t=new Promise((i,a)=>setTimeout(()=>a(new Error("Update check timeout")),1e4));return await Promise.race([e,t]),this.retryCount=0,!0},e=>{if(console.warn("Update check failed:",e.message),this.retryCount++,this.retryCount<this.maxRetries){const t=Math.min(5e3*2**(this.retryCount-1),3e4);setTimeout(()=>{u(()=>this.checkForUpdates(),null,{operation:"retry_update_check",retryCount:this.retryCount})},t)}else console.error(`Update check failed after ${this.maxRetries} retries`),l.publish(d.AUDIT_EVENT,{action:"sw_update_check_failed",retryCount:this.retryCount,error:e.message});return!1},{retryCount:this.retryCount})}async applyUpdate(){if(!(!this.updateAvailable||!this.registration))try{this.registration.waiting&&this.registration.waiting.postMessage({type:"SKIP_WAITING"}),l.publish(d.AUDIT_EVENT,{action:"sw_update_applied"})}catch(e){}}notifyUpdateAvailable(){l.publish(d.AUDIT_EVENT,{action:"sw_update_available"}),this.showUpdateNotification()}showUpdateNotification(){const e=document.createElement("div");e.className="update-notification";try{z(e,`
        <div class="notification-content">
          <span class="notification-icon">🔄</span>
          <span class="notification-text">App update available</span>
          <button class="update-button" onclick="medicalSWManager.applyUpdate()">
            Update Now
          </button>
        </div>
      `)}catch(t){console.error("Update notification sanitization failed:",t),e.textContent="🔄 App update available. Please refresh to update."}document.body.appendChild(e)}async getCacheStatus(){return u(async()=>{if(!navigator.serviceWorker||!navigator.serviceWorker.controller)throw new E("Service worker controller not available","NO_SW_CONTROLLER",h.STORAGE,g.LOW);return new Promise((e,t)=>{const i=new MessageChannel,a=setTimeout(()=>{t(new Error("Cache status request timeout"))},5e3);i.port1.onmessage=s=>{clearTimeout(a);try{if(!s.data||typeof s.data!="object")throw new Error("Invalid cache status response format");e(s.data)}catch(r){t(r)}},i.port1.onerror=s=>{clearTimeout(a),t(new Error(`Message channel error: ${s.message||"Unknown error"}`))};try{navigator.serviceWorker.controller.postMessage({type:"GET_CACHE_STATUS"},[i.port2])}catch(s){clearTimeout(a),t(new Error(`Failed to send cache status request: ${s.message}`))}})},e=>(console.warn("Failed to get cache status:",e.message),{error:!0,message:e.message,timestamp:new Date().toISOString()}))}async clearCaches(){navigator.serviceWorker.controller&&(navigator.serviceWorker.controller.postMessage({type:"CLEAR_CACHE"}),l.publish(d.AUDIT_EVENT,{action:"sw_caches_cleared"}))}async prefetchResources(e){navigator.serviceWorker.controller&&navigator.serviceWorker.controller.postMessage({type:"PREFETCH_RESOURCES",data:{resources:e}})}handleServiceWorkerInstalled(e){l.publish(d.AUDIT_EVENT,{action:"sw_installed",cacheVersion:e.cacheVersion,criticalResourcesCount:e.criticalResourcesCount})}handleServiceWorkerActivated(e){l.publish(d.AUDIT_EVENT,{action:"sw_activated",cacheVersion:e.cacheVersion,cleanedCaches:e.cleanedCaches})}handleServiceWorkerError(e){l.publish(d.AUDIT_EVENT,{action:"sw_error",error:e.error})}handleMedicalDataSynced(e){l.publish(d.AUDIT_EVENT,{action:"medical_data_synced",timestamp:e.timestamp})}getOfflineStatus(){return{isOnline:this.isOnline,serviceWorkerActive:!!navigator.serviceWorker.controller,updateAvailable:this.updateAvailable,cacheStatus:this.registration?"available":"unavailable"}}setUpdateCheckEnabled(e){this.isUpdateCheckEnabled=e,l.publish(d.AUDIT_EVENT,{action:"sw_update_check_toggled",enabled:e})}}class J{constructor(e){this.swManager=e,this.installPromptEvent=null,this.isInstallable=!1,this.setupInstallPrompt()}setupInstallPrompt(){window.addEventListener("beforeinstallprompt",e=>{e.preventDefault(),this.installPromptEvent=e,this.isInstallable=!0,l.publish(d.AUDIT_EVENT,{action:"pwa_install_prompt_available"}),setTimeout(()=>{this.showInstallBanner()},2e3)}),window.addEventListener("appinstalled",()=>{l.publish(d.AUDIT_EVENT,{action:"pwa_installed"}),this.hideInstallBanner()})}showInstallBanner(){if(!this.isInstallable)return;const e=document.createElement("div");e.id="install-banner",e.className="install-banner";const t=document.createElement("div");t.className="banner-content";const i=document.createElement("div");i.className="banner-text";const a=document.createElement("strong");a.textContent="Install Stroke Triage Assistant";const s=document.createElement("p");s.textContent="Get offline access and faster performance",i.appendChild(a),i.appendChild(s);const r=document.createElement("div");r.className="banner-actions";const o=document.createElement("button");o.className="install-button",o.textContent="Install",o.addEventListener("click",()=>{this.promptInstall()});const c=document.createElement("button");c.className="dismiss-button",c.textContent="×",c.addEventListener("click",()=>{this.hideInstallBanner()}),r.appendChild(o),r.appendChild(c),t.appendChild(i),t.appendChild(r),e.appendChild(t),document.body.appendChild(e)}hideInstallBanner(){const e=document.getElementById("install-banner");e&&e.remove()}async promptInstall(){if(this.installPromptEvent)try{const e=await this.installPromptEvent.prompt();l.publish(d.AUDIT_EVENT,{action:"pwa_install_prompted",outcome:e.outcome}),this.installPromptEvent=null,this.isInstallable=!1,this.hideInstallBanner()}catch(e){}}}const P=new j,Q=new J(P);window.medicalSWManager=P;window.offlineInstallPrompt=Q;const Je=Object.freeze(Object.defineProperty({__proto__:null,MedicalServiceWorkerManager:j,OfflineInstallPrompt:J,medicalSWManager:P,offlineInstallPrompt:Q},Symbol.toStringTag,{value:"Module"})),w={MEMORY:"memory",SESSION:"session",LOCAL:"local",INDEXED_DB:"indexed_db"},v={CRITICAL:"critical",HIGH:"high",NORMAL:"normal",LOW:"low"},pe={API_RESPONSES:15*60*1e3};class B{constructor(e,t,i,a=v.NORMAL,s={}){this.key=e,this.value=this.sanitizeValue(t),this.ttl=i,this.priority=a,this.metadata={...s,createdAt:Date.now(),accessCount:0,lastAccessed:Date.now()},this.expiresAt=i>0?Date.now()+i:null,this.encrypted=!1}sanitizeValue(e){if(typeof e!="object"||e===null)return e;const t=JSON.parse(JSON.stringify(e)),i=["ssn","mrn","patient_id","user_id","session_token"];return this.removeSensitiveFields(t,i),t}removeSensitiveFields(e,t){Object.keys(e).forEach(i=>{t.some(a=>i.toLowerCase().includes(a))?e[i]="[REDACTED]":typeof e[i]=="object"&&e[i]!==null&&this.removeSensitiveFields(e[i],t)})}isExpired(){return this.expiresAt!==null&&Date.now()>this.expiresAt}markAccessed(){this.metadata.accessCount+=1,this.metadata.lastAccessed=Date.now()}getAge(){return Date.now()-this.metadata.createdAt}getTimeToExpiration(){return this.expiresAt===null?1/0:Math.max(0,this.expiresAt-Date.now())}getEvictionScore(){const t={[v.CRITICAL]:1e3,[v.HIGH]:100,[v.NORMAL]:10,[v.LOW]:1}[this.priority]||1,i=Math.log(this.metadata.accessCount+1),a=1/(this.getAge()+1);return t*i*a}}class N{constructor(e=w.MEMORY,t={}){this.storageType=e,this.options={maxSize:100*1024*1024,maxEntries:1e3,cleanupInterval:5*60*1e3,enableEncryption:!1,enableMetrics:!0,...t},this.cache=new Map,this.cleanupTimer=null,this.totalSize=0,this.hitCount=0,this.missCount=0,this.evictionCount=0,this.initializeStorage(),this.startCleanupTimer()}initializeStorage(){switch(this.storageType){case w.SESSION:this.storage=sessionStorage,this.loadFromStorage();break;case w.LOCAL:this.storage=localStorage,this.loadFromStorage();break;case w.INDEXED_DB:this.initializeIndexedDB();break;default:this.storage=null}}loadFromStorage(){if(this.storage)try{const e=this.storage.getItem("medical_cache");if(e){const t=JSON.parse(e);Object.entries(t).forEach(([i,a])=>{const s=new B(a.key,a.value,a.ttl,a.priority,a.metadata);s.expiresAt=a.expiresAt,s.isExpired()||(this.cache.set(i,s),this.totalSize+=this.calculateSize(s.value))})}}catch(e){}}saveToStorage(){if(this.storage)try{const e={};this.cache.forEach((t,i)=>{e[i]={key:t.key,value:t.value,ttl:t.ttl,priority:t.priority,metadata:t.metadata,expiresAt:t.expiresAt}}),this.storage.setItem("medical_cache",JSON.stringify(e))}catch(e){}}async initializeIndexedDB(){}set(e,t,i=pe.API_RESPONSES,a=v.NORMAL,s={}){const r=y.startMeasurement(L.CACHE,"cache_set",{key:e,priority:a});try{this.ensureCapacity();const o=new B(e,t,i,a,s),c=this.calculateSize(t);if(this.cache.has(e)){const m=this.cache.get(e);this.totalSize-=this.calculateSize(m.value)}return this.cache.set(e,o),this.totalSize+=c,this.storageType!==w.MEMORY&&this.saveToStorage(),l.publish(d.AUDIT_EVENT,{action:"cache_set",key:e,size:c,ttl:i,priority:a}),y.endMeasurement(r,{success:!0}),!0}catch(o){return y.endMeasurement(r,{success:!1,error:o.message}),!1}}get(e){const t=y.startMeasurement(L.CACHE,"cache_get",{key:e});try{const i=this.cache.get(e);return i?i.isExpired()?(this.cache.delete(e),this.totalSize-=this.calculateSize(i.value),this.missCount+=1,y.endMeasurement(t,{hit:!1,expired:!0}),null):(i.markAccessed(),this.hitCount+=1,y.endMeasurement(t,{hit:!0}),i.value):(this.missCount+=1,y.endMeasurement(t,{hit:!1}),null)}catch(i){return y.endMeasurement(t,{hit:!1,error:i.message}),null}}has(e){const t=this.cache.get(e);return t&&!t.isExpired()}delete(e){const t=this.cache.get(e);return t?(this.totalSize-=this.calculateSize(t.value),this.cache.delete(e),this.storageType!==w.MEMORY&&this.saveToStorage(),l.publish(d.AUDIT_EVENT,{action:"cache_delete",key:e}),!0):!1}clear(){const e=this.cache.size;this.cache.clear(),this.totalSize=0,this.storage&&this.storage.removeItem("medical_cache"),l.publish(d.AUDIT_EVENT,{action:"cache_cleared",entriesCleared:e})}ensureCapacity(){for(;this.totalSize>this.options.maxSize;)this.evictLeastImportant();for(;this.cache.size>=this.options.maxEntries;)this.evictLeastImportant()}evictLeastImportant(){let e=1/0,t=null;this.cache.forEach((i,a)=>{if(i.priority===v.CRITICAL&&!i.isExpired())return;const s=i.getEvictionScore();s<e&&(e=s,t=a)}),t&&(this.delete(t),this.evictionCount+=1)}cleanup(){const e=performance.now();let t=0;this.cache.forEach((a,s)=>{a.isExpired()&&(this.delete(s),t+=1)});const i=performance.now()-e;return l.publish(d.AUDIT_EVENT,{action:"cache_cleanup",cleanedCount:t,duration:i,remainingEntries:this.cache.size}),t}startCleanupTimer(){this.cleanupTimer&&clearInterval(this.cleanupTimer),this.cleanupTimer=setInterval(()=>{this.cleanup()},this.options.cleanupInterval)}stopCleanupTimer(){this.cleanupTimer&&(clearInterval(this.cleanupTimer),this.cleanupTimer=null)}calculateSize(e){try{return JSON.stringify(e).length*2}catch(t){return 0}}getStats(){const e=this.hitCount+this.missCount>0?this.hitCount/(this.hitCount+this.missCount)*100:0;return{entries:this.cache.size,totalSize:this.totalSize,maxSize:this.options.maxSize,hitCount:this.hitCount,missCount:this.missCount,hitRate:`${e.toFixed(2)}%`,evictionCount:this.evictionCount,storageType:this.storageType,utilizationPercent:`${(this.totalSize/this.options.maxSize*100).toFixed(2)}%`}}getEntryInfo(e){const t=this.cache.get(e);return t?{key:t.key,size:this.calculateSize(t.value),priority:t.priority,ttl:t.ttl,age:t.getAge(),timeToExpiration:t.getTimeToExpiration(),accessCount:t.metadata.accessCount,lastAccessed:new Date(t.metadata.lastAccessed).toISOString(),isExpired:t.isExpired(),evictionScore:t.getEvictionScore()}:null}dispose(){this.stopCleanupTimer(),this.clear()}}class C{static getPatientDataCache(){return this.patientDataCache||(this.patientDataCache=new N(w.SESSION,{maxSize:10*1024*1024,maxEntries:100,enableEncryption:!0})),this.patientDataCache}static getPredictionCache(){return this.predictionCache||(this.predictionCache=new N(w.MEMORY,{maxSize:50*1024*1024,maxEntries:500})),this.predictionCache}static getValidationCache(){return this.validationCache||(this.validationCache=new N(w.LOCAL,{maxSize:5*1024*1024,maxEntries:200})),this.validationCache}static getApiCache(){return this.apiCache||(this.apiCache=new N(w.SESSION,{maxSize:20*1024*1024,maxEntries:300})),this.apiCache}static clearAllCaches(){[this.patientDataCache,this.predictionCache,this.validationCache,this.apiCache].forEach(e=>{e&&e.clear()})}static disposeAllCaches(){[this.patientDataCache,this.predictionCache,this.validationCache,this.apiCache].forEach(e=>{e&&e.dispose()}),this.patientDataCache=null,this.predictionCache=null,this.validationCache=null,this.apiCache=null}}b(C,"patientDataCache",null),b(C,"predictionCache",null),b(C,"validationCache",null),b(C,"apiCache",null);C.getPatientDataCache();const Qe=C.getPredictionCache();C.getValidationCache();C.getApiCache();const V={UPDATE:"update",CONFLICT_RESOLVE:"conflict_resolve"},I={IDLE:"idle",SYNCING:"syncing",ERROR:"error",CONFLICT:"conflict",OFFLINE:"offline"},D={CLIENT_WINS:"client_wins",SERVER_WINS:"server_wins",MERGE:"merge",MANUAL:"manual"};class U{constructor(e,t,i,a,s=Date.now()){this.id=`sync_${s}_${Math.random().toString(36).substr(2,9)}`,this.type=e,this.entityType=t,this.entityId=i,this.data=a,this.timestamp=s,this.attempts=0,this.maxAttempts=3,this.status="pending",this.error=null}canRetry(){return this.attempts<this.maxAttempts&&this.status==="error"}markFailed(e){this.status="error",this.error=e,this.attempts+=1}markCompleted(){this.status="completed",this.error=null}}class ge{constructor(){this.status=I.IDLE,this.pendingOperations=new Map,this.conflictQueue=new Map,this.syncInterval=null,this.isOnline=navigator.onLine,this.lastSyncTime=null,this.syncInProgress=!1,this.config={syncIntervalMs:3e4,conflictRetentionMs:24*60*60*1e3,maxPendingOperations:100,enableRealTimeSync:!0,enableConflictResolution:!0},this.setupEventListeners()}async initialize(){return u(async()=>(await u(()=>this.loadPendingOperations(),e=>{console.warn("Failed to load pending operations, starting fresh:",e.message),this.pendingOperations.clear()},{operation:"load_pending_operations"}),this.isOnline&&this.config.enableRealTimeSync&&await u(()=>this.startPeriodicSync(),null,{operation:"start_periodic_sync"}),await u(()=>this.performSync(),e=>{console.warn("Initial sync failed, will retry later:",e.message)},{operation:"initial_sync"}),l.publish(d.AUDIT_EVENT,{action:"sync_manager_initialized",pendingOperations:this.pendingOperations.size}),!0),e=>(console.error("Sync Manager initialization failed:",e.message),l.publish(d.AUDIT_EVENT,{action:"sync_manager_initialization_failed",error:e.message}),!1))}setupEventListeners(){window.addEventListener("online",()=>{this.isOnline=!0,this.handleConnectionChange(!0)}),window.addEventListener("offline",()=>{this.isOnline=!1,this.handleConnectionChange(!1)}),l.subscribe(d.PATIENT_DATA_UPDATED,e=>{this.queueDataSync("patient_data",e.fieldName,e)}),l.subscribe(d.PREDICTION_COMPLETED,e=>{this.queueDataSync("prediction_result",e.module,e)}),document.addEventListener("visibilitychange",()=>{!document.hidden&&this.isOnline&&this.performSync()})}async handleConnectionChange(e){this.status=e?I.IDLE:I.OFFLINE,e?(this.startPeriodicSync(),await this.performSync(),l.publish(d.AUDIT_EVENT,{action:"sync_connection_restored",pendingOperations:this.pendingOperations.size})):(this.stopPeriodicSync(),l.publish(d.AUDIT_EVENT,{action:"sync_connection_lost"}))}queueDataSync(e,t,i){if(!this.config.enableRealTimeSync)return;const a=new U(V.UPDATE,e,t,this.sanitizeDataForSync(i));if(this.pendingOperations.size>=this.config.maxPendingOperations){const s=this.pendingOperations.keys().next().value;this.pendingOperations.delete(s)}this.pendingOperations.set(a.id,a),this.savePendingOperations(),this.isOnline&&!this.syncInProgress&&setTimeout(()=>this.performSync(),1e3),l.publish(d.AUDIT_EVENT,{action:"sync_operation_queued",entityType:e,entityId:t,operationId:a.id})}sanitizeDataForSync(e){const t={...e};return["ssn","mrn","patient_id","user_id","session_token"].forEach(a=>{t[a]&&delete t[a]}),t._syncTimestamp=Date.now(),t._syncId=`sync_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,t}async performSync(){return u(async()=>{if(!this.isOnline||this.syncInProgress||this.pendingOperations.size===0)return{skipped:!0,reason:this.isOnline?this.syncInProgress?"already_syncing":"no_operations":"offline"};const e=y.startMeasurement(L.NETWORK,"medical_data_sync");this.syncInProgress=!0,this.status=I.SYNCING;let t=0,i=0,a=0;const s=Date.now();try{const r=Array.from(this.pendingOperations.values()),o=5,c=12e4;for(let m=0;m<r.length;m+=o){if(Date.now()-s>c)throw new E("Sync operation timeout","SYNC_TIMEOUT",h.NETWORK,g.MEDIUM).withContext({processedBatches:Math.floor(m/o),totalBatches:Math.ceil(r.length/o)});const O=r.slice(m,m+o);(await u(()=>this.processSyncBatch(O),T=>(console.warn(`Batch ${Math.floor(m/o)} sync failed:`,T.message),O.map(X=>({operationId:X.id,status:"error",error:T.message}))),{operation:"process_sync_batch",batchIndex:Math.floor(m/o),timeout:3e4})).forEach(T=>{T.status==="completed"?(t++,this.pendingOperations.delete(T.operationId)):T.status==="conflict"?(a++,u(()=>this.handleSyncConflict(T),null,{operation:"handle_sync_conflict"})):i++})}return this.lastSyncTime=Date.now(),await u(()=>this.savePendingOperations(),m=>{console.warn("Failed to save pending operations after sync:",m.message)},{operation:"save_pending_operations_after_sync"}),l.publish(d.AUDIT_EVENT,{action:"sync_completed",completedCount:t,errorCount:i,conflictCount:a,duration:Date.now()-s}),y.endMeasurement(e,{success:!0,operationsProcessed:t+i+a}),{success:!0,completedCount:t,errorCount:i,conflictCount:a,duration:Date.now()-s}}catch(r){throw y.endMeasurement(e,{success:!1,error:r.message}),this.status=I.ERROR,r}finally{this.syncInProgress=!1,this.status=(this.pendingOperations.size>0,I.IDLE)}},e=>(console.error("Sync operation failed:",e.message),l.publish(d.AUDIT_EVENT,{action:"sync_failed",error:e.message,pendingOperations:this.pendingOperations.size}),this.status=I.ERROR,{success:!1,error:e.message}),{context:{pendingOperations:this.pendingOperations.size}})}async processSyncBatch(e){const t=[];for(const i of e)try{const a=await this.executeSyncOperation(i);t.push({operationId:i.id,status:"completed",result:a}),i.markCompleted()}catch(a){a.name==="ConflictError"?t.push({operationId:i.id,status:"conflict",conflict:a.conflict,operation:i}):(i.markFailed(a.message),i.canRetry()||this.pendingOperations.delete(i.id),t.push({operationId:i.id,status:"error",error:a.message}))}return t}async executeSyncOperation(e){if(await new Promise(t=>setTimeout(t,100+Math.random()*200)),Math.random()<.05){const t={clientData:e.data,serverData:{...e.data,_serverModified:!0},conflictFields:["timestamp","value"],resolution:D.MANUAL},i=new Error("Data conflict detected");throw i.name="ConflictError",i.conflict=t,i}if(Math.random()<.02)throw new Error("Network request failed");return{entityType:e.entityType,entityId:e.entityId,syncTimestamp:Date.now(),serverVersion:Date.now()}}handleSyncConflict(e){const{operation:t,conflict:i}=e;this.conflictQueue.set(t.id,{operation:t,conflict:i,timestamp:Date.now()}),this.status=I.CONFLICT,this.config.enableConflictResolution&&this.resolveConflictAutomatically(t.id,i),l.publish(d.AUDIT_EVENT,{action:"sync_conflict_detected",operationId:t.id,entityType:t.entityType,conflictFields:i.conflictFields})}async resolveConflictAutomatically(e,t){let i;switch(t.resolution){case D.CLIENT_WINS:i=t.clientData;break;case D.SERVER_WINS:i=t.serverData;break;case D.MERGE:i=this.mergeConflictData(t.clientData,t.serverData);break;default:return}const a=new U(V.CONFLICT_RESOLVE,"conflict_resolution",e,i);this.pendingOperations.set(a.id,a),this.conflictQueue.delete(e),l.publish(d.AUDIT_EVENT,{action:"sync_conflict_auto_resolved",conflictId:e,resolution:t.resolution})}mergeConflictData(e,t){const i={...t};return["gfap_value","age_years","systolic_bp","diastolic_bp"].forEach(s=>{e[s]!==void 0&&(i[s]=e[s])}),i._mergedAt=Date.now(),i._mergeStrategy="intelligent_merge",i}startPeriodicSync(){this.syncInterval||(this.syncInterval=setInterval(()=>{this.isOnline&&this.pendingOperations.size>0&&this.performSync()},this.config.syncIntervalMs))}stopPeriodicSync(){this.syncInterval&&(clearInterval(this.syncInterval),this.syncInterval=null)}async forcSync(){if(!this.isOnline)throw new Error("Cannot sync while offline");this.stopPeriodicSync(),await this.performSync(),this.startPeriodicSync()}getSyncStatus(){return{status:this.status,isOnline:this.isOnline,pendingOperations:this.pendingOperations.size,conflicts:this.conflictQueue.size,lastSyncTime:this.lastSyncTime,syncInProgress:this.syncInProgress}}async loadPendingOperations(){return u(async()=>{if(typeof localStorage=="undefined")throw new E("Local storage not available","STORAGE_UNAVAILABLE",h.STORAGE,g.MEDIUM);const e=localStorage.getItem("medical_sync_pending");if(!e)return{loaded:0};let t;try{t=JSON.parse(e)}catch(s){throw new E("Failed to parse stored sync operations","PARSE_ERROR",h.STORAGE,g.MEDIUM).withContext({parseError:s.message})}if(!Array.isArray(t))throw new E("Invalid stored operations format","INVALID_FORMAT",h.STORAGE,g.MEDIUM).withContext({type:typeof t});let i=0,a=0;return t.forEach((s,r)=>{try{if(!s||typeof s!="object"||!s.type||!s.entityType||!s.entityId)throw new Error(`Invalid operation structure at index ${r}`);const o=new U(s.type,s.entityType,s.entityId,s.data,s.timestamp);if(o.attempts=Math.max(0,s.attempts||0),o.status=s.status||"pending",o.attempts>=o.maxAttempts){console.warn(`Skipping operation ${o.id} - exceeded max attempts`);return}this.pendingOperations.set(o.id,o),i++}catch(o){console.warn(`Failed to load operation at index ${r}:`,o.message),a++}}),{loaded:i,errors:a}},e=>{console.warn("Failed to load pending operations:",e.message);try{localStorage.removeItem("medical_sync_pending")}catch(t){console.error("Failed to clear corrupted sync data:",t.message)}return{loaded:0,errors:1,cleared:!0}})}async savePendingOperations(){return u(async()=>{if(typeof localStorage=="undefined")throw new E("Local storage not available","STORAGE_UNAVAILABLE",h.STORAGE,g.MEDIUM);const e=Array.from(this.pendingOperations.values()).map(i=>{try{return{id:i.id,type:i.type,entityType:i.entityType,entityId:i.entityId,data:i.data,timestamp:i.timestamp,attempts:i.attempts,status:i.status}}catch(a){return console.warn(`Failed to serialize operation ${i.id}:`,a.message),null}}).filter(i=>i!==null),t=JSON.stringify(e);return t.length>1024*1024&&console.warn("Sync operations data is very large, may hit storage limits"),localStorage.setItem("medical_sync_pending",t),{saved:e.length}},e=>{if(console.error("Failed to save pending operations:",e.message),e.name==="QuotaExceededError")try{const t=Array.from(this.pendingOperations.entries()),i=Math.floor(t.length/2),a=t.slice(-i);this.pendingOperations.clear(),a.forEach(([r,o])=>{this.pendingOperations.set(r,o)}),console.info(`Reduced operations from ${t.length} to ${a.length} due to storage quota`);const s=a.map(([,r])=>({id:r.id,type:r.type,entityType:r.entityType,entityId:r.entityId,data:r.data,timestamp:r.timestamp,attempts:r.attempts,status:r.status}));return localStorage.setItem("medical_sync_pending",JSON.stringify(s)),{saved:s.length,reduced:!0}}catch(t){return console.error("Failed to save even after reducing operations:",t.message),{saved:0,error:t.message}}return{saved:0,error:e.message}},{context:{operationCount:this.pendingOperations.size}})}clearPendingOperations(){this.pendingOperations.clear(),this.conflictQueue.clear(),localStorage.removeItem("medical_sync_pending"),l.publish(d.AUDIT_EVENT,{action:"sync_operations_cleared"})}updateConfig(e){this.config={...this.config,...e},this.syncInterval&&e.syncIntervalMs&&(this.stopPeriodicSync(),this.startPeriodicSync()),l.publish(d.AUDIT_EVENT,{action:"sync_config_updated",config:this.config})}dispose(){this.stopPeriodicSync(),this.savePendingOperations(),l.publish(d.AUDIT_EVENT,{action:"sync_manager_disposed"})}}const Xe=new ge;async function S(n,e=null,t={}){try{return await n()}catch(i){console.error("Service Worker error:",i.message,t);try{(await self.clients.matchAll()).forEach(s=>{s.postMessage({type:"SW_ERROR",error:{message:i.message,context:t,timestamp:new Date().toISOString()}})})}catch(a){console.error("Failed to send error message to clients:",a)}return typeof e=="function"?e(i):e}}const A="medical-app-v3.0.0",x=`${A}-static`,W=`${A}-api`,M=`${A}-runtime`,R=["/0925/","/0925/index.html","/0925/src/main.js","/0925/src/app.js","/0925/src/config.js","/0925/src/state/store.js","/0925/src/logic/validate.js","/0925/src/logic/ich-volume-calculator.js","/0925/src/logic/lvo-local-model.js","/0925/src/ui/render.js","/0925/src/styles/app.css","/0925/manifest.json","/0925/icon-192.png","/0925/icon-512.png"],me=["https://europe-west3-igfap-452720.cloudfunctions.net/predict_coma_ich","https://europe-west3-igfap-452720.cloudfunctions.net/predict_limited_data_ich","https://europe-west3-igfap-452720.cloudfunctions.net/predict_full_stroke"];self.addEventListener("install",n=>{n.waitUntil(S(async()=>{const e=await caches.open(x),i=(await Promise.allSettled(R.map(async s=>{try{const r=await fetch(s);if(r.ok)return e.put(s,r);throw new Error(`Failed to fetch ${s}: ${r.status}`)}catch(r){return console.warn(`Failed to cache critical resource ${s}:`,r.message),null}}))).filter(s=>s.status==="fulfilled").length,a=R.length-i;if(a>R.length/2)throw new Error(`Too many critical resources failed to cache: ${a}/${R.length}`);await Promise.allSettled([caches.open(W),caches.open(M)]);try{(await self.clients.matchAll()).forEach(r=>{r.postMessage({type:"SW_INSTALLED",cacheVersion:A,criticalResourcesCount:R.length,successfulCaches:i,failedCaches:a,timestamp:new Date().toISOString()})})}catch(s){console.warn("Failed to send installation message:",s.message)}return self.skipWaiting(),{success:!0,successfulCaches:i,failedCaches:a}},e=>{console.error("Service Worker installation failed:",e.message);try{self.clients.matchAll().then(i=>{i.forEach(a=>{a.postMessage({type:"SW_INSTALL_ERROR",error:e.message,timestamp:new Date().toISOString()})})})}catch(t){console.error("Failed to send installation error message:",t.message)}return{success:!1,error:e.message}},{operation:"service_worker_installation",criticalResourcesCount:R.length}))});self.addEventListener("activate",n=>{n.waitUntil(S(async()=>{const t=(await caches.keys()).filter(o=>o.startsWith("medical-app-v")&&!o.includes(A)),a=(await Promise.allSettled(t.map(async o=>{try{const c=await caches.delete(o);return{cacheName:o,deleted:c}}catch(c){return console.warn(`Failed to delete cache ${o}:`,c.message),{cacheName:o,deleted:!1,error:c.message}}}))).filter(o=>o.status==="fulfilled"&&o.value.deleted).length;await Promise.race([self.clients.claim(),new Promise((o,c)=>setTimeout(()=>c(new Error("Client claim timeout")),5e3))]);const r=(await self.clients.matchAll()).map(o=>{try{return o.postMessage({type:"SW_ACTIVATED",cacheVersion:A,cleanedCaches:a,totalOldCaches:t.length,timestamp:new Date().toISOString()})}catch(c){return console.warn("Failed to notify client of activation:",c.message),null}});return await Promise.allSettled(r),{success:!0,cleanedCaches:a}},e=>(console.error("Service Worker activation failed:",e.message),S(async()=>{(await self.clients.matchAll()).forEach(i=>{i.postMessage({type:"SW_ACTIVATION_ERROR",error:e.message,timestamp:new Date().toISOString()})})},null,{operation:"activation_error_notification"}),{success:!1,error:e.message}),{operation:"service_worker_activation"}))});self.addEventListener("fetch",n=>{const{request:e}=n,t=new URL(e.url);if(e.method!=="GET"){$(t)&&n.respondWith(Y(e));return}$(t)?n.respondWith(Y(e)):_e(t)?n.respondWith(we(e)):Ie(t)?n.respondWith(Se(e)):n.respondWith(Te(e))});async function Y(n){return S(async()=>{const e=new URL(n.url);if(n.method==="POST")return await fe(n);const t=await caches.open(W),i=await t.match(n);if(i)return S(async()=>{const r=await fetch(n);r.ok&&await t.put(n,r.clone())},null,{operation:"background_cache_update",url:n.url}),i;const a=new AbortController,s=setTimeout(()=>a.abort(),1e4);try{const r=await fetch(n,{signal:a.signal});if(clearTimeout(s),r.ok)try{await t.put(n,r.clone())}catch(o){console.warn("Failed to cache API response:",o.message)}return r}catch(r){throw clearTimeout(s),r}},e=>(console.warn("API request failed, returning offline fallback:",e.message),Oe()),{operation:"api_request_handling",url:n.url,method:n.method})}async function fe(n){return S(async()=>{const e=n.clone(),t=new AbortController,i=setTimeout(()=>t.abort(),1e4);try{const a=await fetch(n,{signal:t.signal});if(clearTimeout(i),a.ok)return S(async()=>{const s=await caches.open(W),r=await Ce(e),o=await Ae(a.clone());await s.put(r,o)},null,{operation:"prediction_cache_storage",url:n.url}),a;throw new Error(`API returned ${a.status}: ${a.statusText}`)}catch(a){throw clearTimeout(i),a}},async e=>{console.warn("Network prediction failed, trying offline alternatives:",e.message);const t=await S(()=>ye(n),null,{operation:"local_prediction_attempt"});if(t)return t;const i=await S(()=>ve(n),null,{operation:"cached_prediction_lookup"});return i||Re()},{operation:"prediction_request_handling",url:n.url})}async function ye(n){return S(async()=>{let e;try{const t=await n.text();e=JSON.parse(t)}catch(t){throw new Error(`Failed to parse request body: ${t.message}`)}if(!e||typeof e!="object")throw new Error("Invalid request data format");if(n.url.includes("predict_full_stroke")){if(!e.gfap_value||!e.fast_ed_score)throw new Error("Missing required fields for local LVO prediction");if(e.gfap_value<0||e.gfap_value>1e4)throw new Error("GFAP value out of valid range");if(e.fast_ed_score<0||e.fast_ed_score>10)throw new Error("FAST-ED score out of valid range");const t=Ee(e.gfap_value,e.fast_ed_score);if(!t||typeof t!="object")throw new Error("Local LVO calculation failed");return new Response(JSON.stringify({...t,source:"local_model",offline:!0,timestamp:new Date().toISOString(),warning:"This is an offline prediction using a simplified model. Seek professional medical advice."}),{status:200,headers:{"Content-Type":"application/json"}})}return null},e=>(console.warn("Local prediction failed:",e.message),null),{operation:"local_prediction",url:n.url})}function Ee(n,e){try{if(typeof n!="number"||typeof e!="number")throw new Error("GFAP and FAST-ED values must be numbers");if(!isFinite(n)||!isFinite(e))throw new Error("GFAP and FAST-ED values must be finite numbers");if(n<0||e<0)throw new Error("GFAP and FAST-ED values cannot be negative");const t=n>500?.4:n>200?.2:.1,i=e>=4?.5:e>=2?.3:.1,a=Math.min(.95,t+i),s=Math.max(.05,Math.min(.5,n/2e3));if(!isFinite(a)||!isFinite(s)||a<0||a>1||s<0||s>1)throw new Error("Calculated probabilities are invalid");return{lvo:{probability:Math.round(a*100)/100,confidence:.6,module:"Local Offline Model",warning:"Simplified offline calculation - not for clinical decisions"},ich:{probability:Math.round(s*100)/100,confidence:.4,module:"Local Offline Model",warning:"Conservative estimate - seek immediate medical evaluation"},metadata:{calculatedAt:new Date().toISOString(),inputs:{gfap:n,fastEd:e},disclaimer:"This is a simplified offline model for emergency use only. Clinical judgment and professional medical evaluation are essential."}}}catch(t){return console.error("Local LVO calculation failed:",t.message),{lvo:{probability:.1,confidence:.1,module:"Emergency Fallback",error:"Calculation failed - using minimum risk estimate"},ich:{probability:.1,confidence:.1,module:"Emergency Fallback",error:"Calculation failed - using minimum risk estimate"},metadata:{calculatedAt:new Date().toISOString(),error:t.message,disclaimer:"Calculation failed. Immediate medical evaluation required."}}}}async function we(n){const e=await caches.open(x),t=await e.match(n);if(t)return t;try{const i=await fetch(n);return i.ok&&e.put(n,i.clone()),i}catch(i){return new Response("Service temporarily unavailable",{status:503,statusText:"Service Unavailable"})}}async function Se(n){try{const e=await fetch(n);return e.ok&&(await caches.open(M)).put(n,e.clone()),e}catch(e){return await(await caches.open(x)).match("/0925/index.html")||new Response("App temporarily unavailable",{status:503,statusText:"Service Unavailable"})}}async function Te(n){const e=await caches.open(M);try{const t=await fetch(n);return t.ok&&e.put(n,t.clone()),t}catch(t){return await e.match(n)||fetch(n)}}function $(n){return me.some(e=>n.href.startsWith(e))}function _e(n){return n.pathname.includes("/src/")||n.pathname.includes("/styles/")||n.pathname.endsWith(".css")||n.pathname.endsWith(".js")||n.pathname.endsWith(".png")||n.pathname.endsWith(".ico")}function Ie(n){return n.pathname==="/0925/"||n.pathname==="/0925/index.html"||n.pathname.endsWith("/")}async function Ce(n){const e=await n.text(),t=await crypto.subtle.digest("SHA-256",new TextEncoder().encode(e)),a=Array.from(new Uint8Array(t)).map(s=>s.toString(16).padStart(2,"0")).join("");return`${n.url}#${a}`}async function Ae(n){const t={...await n.json(),_cached:!0,_cachedAt:Date.now(),_cacheVersion:A};return new Response(JSON.stringify(t),{status:n.status,statusText:n.statusText,headers:n.headers})}async function ve(n){return null}function Oe(n){return new Response(JSON.stringify({error:"Network unavailable",offline:!0,guidance:"Please check your network connection. For emergency situations, contact your local emergency services immediately.",timestamp:new Date().toISOString()}),{status:503,headers:{"Content-Type":"application/json"}})}function Re(){return new Response(JSON.stringify({offline:!0,guidance:{message:"Prediction services are currently unavailable. Please use clinical judgment and standard stroke protocols.",recommendations:["Assess patient using standard NIHSS scoring","Consider time since symptom onset","Evaluate for contraindications to thrombolysis","Contact stroke team or neurologist if available","If in doubt, treat as potential stroke emergency"]},emergency:"For immediate emergency response, contact your local emergency services",timestamp:new Date().toISOString()}),{status:200,headers:{"Content-Type":"application/json"}})}self.addEventListener("sync",n=>{n.tag==="medical-data-sync"&&n.waitUntil(be())});async function be(){try{(await self.clients.matchAll()).forEach(e=>{e.postMessage({type:"MEDICAL_DATA_SYNCED",timestamp:new Date().toISOString()})})}catch(n){}}self.addEventListener("push",n=>{if(n.data){const e=n.data.json();e.type==="medical-alert"&&n.waitUntil(Ne(e))}});async function Ne(n){const e={body:n.message,icon:"/0925/icon-192.png",badge:"/0925/icon-192.png",vibrate:[200,100,200],requireInteraction:!0,actions:[{action:"view",title:"View Details"},{action:"dismiss",title:"Dismiss"}]};await self.registration.showNotification(n.title,e)}self.addEventListener("notificationclick",n=>{n.notification.close(),n.action==="view"&&n.waitUntil(self.clients.openWindow("/0925/"))});self.addEventListener("message",n=>{const{type:e,data:t}=n.data;switch(e){case"SKIP_WAITING":self.skipWaiting();break;case"GET_CACHE_STATUS":n.ports[0].postMessage(De());break;case"CLEAR_CACHE":n.waitUntil(Le());break;case"PREFETCH_RESOURCES":n.waitUntil(Me(t.resources));break}});async function De(){const n=await self.caches.keys(),e={};for(const t of n){const a=await(await self.caches.open(t)).keys();e[t]=a.length}return{version:A,caches:e,timestamp:new Date().toISOString()}}async function Le(){const n=await caches.keys();await Promise.all(n.map(e=>caches.delete(e)))}async function Me(n){const e=await caches.open(M);for(const t of n)try{const i=await fetch(t);i.ok&&await e.put(t,i)}catch(i){}}const qe=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));export{h as E,p as L,E as M,Pe as a,je as b,u as c,g as d,Ke as e,P as f,Xe as g,Je as h,qe as i,f as m,Qe as p,z as s};
//# sourceMappingURL=enterprise-features-DIAO-rWl.js.map
