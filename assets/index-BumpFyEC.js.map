{"version":3,"mappings":"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","names":["getPrerequisites","renderPrerequisitesModal","prerequisites","t","item","initPrerequisitesModal","modal","closeBtn","cancelBtn","confirmBtn","closeModal","navigate","e","checkboxes","cb","warning","checkbox","allChecked","showPrerequisitesModal","existingModal","modalElement","safeSetInnerHTML","error","fallbackModal","handleTriage1","isComatose","store","handleTriage2","isExaminable","screen","reset","goBack","goHome","handleSubmit","container","form","module","validation","validateForm","showValidationErrors","firstErrorName","el","sr","errorCount","inputs","element","n","button","originalContent","results","predictComaIch","predictLimitedIch","predictFullStroke","_a","_b","storedState","showToast","cs","isLocalPreview","m","DEV_CONFIG","ich","lvo","pIch","pLvo","fallbackResults","errorMessage","APIError","showError","e2","message","alert","h4","iconSpan","p","containerDiv","duration","toast","AuthenticationManager","password","safeAuthOperation","medicalLogger","LOG_CATEGORIES","TypeChecker","MedicalError","ERROR_CATEGORIES","ERROR_SEVERITY","API_URLS","response","errorCode","data","storageError","secureRemove","input","safeAsync","hashBuffer","b","hash","i","char","session","secureRetrieve","timestamp","storedToken","storedExpiry","expiryDate","timestampNum","events","updateActivity","event","resolve","timeRemaining","hoursRemaining","minutesRemaining","authManager","detectKioskMode","params","display","caseId","isKioskMode","fetchCaseData","KIOSK_CONFIG","caseData","c","loadKioskCase","getKioskHomeUrl","getCSSVar","name","ProbabilityRing","percent","level","canvasRef","useRef","containerRef","useEffect","canvas","draw","dpr","size","ctx","width","height","cx","cy","radius","progressWidth","trackWidth","adjustedRadius","isDark","borderColor","stroke","startAngle","endAngle","rafId","ro","React","TachometerGauge","lvoProb","ichProb","title","raf","currentPos","safeIch","rawRatio","clampedRatio","targetPos","absDiff","maxProb","confidence","rect","cssW","cssH","isMobile","isTablet","baseWidth","padding","maxRHorizontal","maxRVerticalBase","maxRVertical","colors","theme","bezelGradient","segments","angleStep","progress","r","g","color","majorTicks","minorTicks","val","pos","a","inner","outer","tickFont","th","labelFont","labelDistance","needleAngle","needleLen","coneSpan","needleColor","now","gradient","tx","ty","pulse","tipRadius","hubOuter","hubInner","hubGradient","innerGradient","ratioFont","ratioY","plateWidth","plateHeight","confY","confWidth","confHeight","confFill","confGradient","mountIslands","node","root","createRoot","renderProgressIndicator","currentStep","steps","html","step","index","isActive","isCompleted","renderTriage1","renderTriage2","renderComa","GFAP_RANGES","renderLimited","renderFull","renderCriticalAlert","FIELD_LABEL_MAP","PATTERN_REPLACEMENTS","formatDriverName","fieldName","mappedKey","translated","formatted","pattern","replacement","l","formatSummaryLabel","formatDisplayValue","value","renderDriversSection","renderEnhancedDriversPanel","drivers","type","probability","driversViewModel","positiveDrivers","negativeDrivers","maxWeight","d","totalPositiveWeight","sum","driver","relativeImportance","barWidth","cleanLabel","totalNegativeWeight","getRiskLevel","probabilityPercent","thresholds","CRITICAL_THRESHOLDS","renderInputSummary","state","formData","summaryHtml","moduleTitle","itemsHtml","key","label","displayValue","renderRiskCard","riskLevel","isCritical","isHigh","icons","titles","circumference","offset","renderICHVolumeDisplay","gfapValue","getCurrentGfapValue","estVolume","estimateVolumeFromGFAP","renderCircularBrainDisplay","renderResults","startTime","currentModule","getCurrentModuleName","legacyResults","calculateLegacyFromResults","isResearchModeEnabled","safeLogResearchData","getPatientInputs","isLimitedOrComa","isFullModule","resultsHtml","renderICHFocusedResults","renderFullModuleResults","initializeVolumeAnimations","criticalAlert","ichPercentLocal","strokeCenterHtml","renderStrokeCenterMap","inputSummaryHtml","researchToggleHtml","renderResearchToggle","researchComparisonHtml","renderModelComparison","alternativeDiagnosesHtml","renderComaAlternativeDiagnoses","strokeDifferentialHtml","renderStrokeDifferentialDiagnoses","renderVolumeCard","renderICHDriversOnly","renderBibliography","ichPercent","lvoPercent","fastEdScore","hasValidLVO","showLVORiskCard","showVolumeCard","ratio","inRatioBand","showDominanceBanner","debugShowTachometer","cardCount","layoutClass","renderTachometerGauge","renderDominanceBanner","dominant","icon","dominantText","i18n","subtitle","driversData","renderCompactDriver","percentage","ichData","patientInputs","calculateLegacyICH","age","gfap","isDE","mortality","estimateMortalityFromVolume","diff","maxP","renderLoginScreen","initializeLoginScreen","loginForm","passwordInput","loginError","loginButton","showLoginError","setLoginLoading","hideLoginError","authResult","isLoading","buttonText","loadingSpinner","announceScreenChange","announcement","screenNames","setPageTitle","appName","section","focusMainHeading","heading","FastEdCalculator","score","total","component","applyBtn","totalElement","riskElement","currentScore","onApplyCallback","firstRadio","armWeaknessBoolean","eyeDeviationBoolean","remaining","components","assignToThis","fastEdCalculator","render","currentScreen","screenHistory","tempContainer","backButton","restoreFormData","attachEvents","initializeStrokeCenterMap","initializeResearchMode","group","action","boolVal","printButton","fastEdInput","currentValue","result","armPareseField","eyeDeviationField","toggle","targetId","targetContent","arrow","UIManager","isLocal","next","btn","elementId","handler","wrappedHandler","target","helpButton","helpModal","modalClose","languageToggle","currentLang","selector","text","darkModeToggle","researchModeToggle","shouldShow","researchPanel","isVisible","modalId","yearElement","context","errorEvent","missingElements","id","ThemeManager","savedTheme","prefersDark","themeToApply","mediaQuery","handleSystemThemeChange","newTheme","metaThemeColor","themeColors","systemTheme","SessionManager","APP_CONFIG","forms","savedCount","numValue","newData","currentData","savedData","LoadPriority","LoadState","LazyComponent","loader","options","metricId","medicalPerformanceMonitor","PerformanceMetricType","medicalEventObserver","MEDICAL_EVENTS","delay","dependencyPromises","dep","LazyLoader","entries","priority","priorities","targetPriorities","preloadPromises","pri","componentName","entry","pendingComponents","comp","loadPromises","scheduleNext","deadline","normalQueue","lowQueue","stats","totalLoadTime","loadedCount","queue","MedicalComponentLoader","lazyLoader","__vitePreload","clinicalSituation","moduleType","enterpriseComponents","AdvancedFeaturesManager","swInitialized","medicalSWManager","syncInitialized","medicalSyncManager","criticalResources","clinicalAuditTrail","clinicalReportingSystem","qualityMetricsTracker","patientData","v","status","_d","_c","_f","_e","AppController","coreInitTasks","failures","createApp","app","API_ENDPOINTS","WARMUP_PAYLOADS","APIWarmupService","background","warmupPromises","url","errorResult","payload","summary","criticalAPIs","apiName","apiWarmupService","initializeAPIWarmup","criticalOnly","GPSTracker","reject","position","location","onUpdate","onErrorCallback","errorInfo","gpsTracker","HospitalSelector","__publicField","onSelectCallback","radiusKm","allHospitals","COMPREHENSIVE_HOSPITAL_DATABASE","hospital","h","capabilityScore","scoreDiff","lat1","lon1","lat2","lon2","dLat","dLon","degrees","modalHTML","capabilities","closeButton","cancelButton","errorHTML","hospitalSelector","ETACalculator","script","origin","destination","route","leg","baseDuration","emergencyDuration","eta","distance","path","sampledPath","lastPoint","currentLocation","previousETA","newETA","etaCalculator","CaseTransmitter","updateData","attempt","sanitized","field","prefix","region","number","gpsStatus","ms","caseTransmitter","initializeKioskHandlers","kioskButton","handleSendToHospital","handleStopTracking","originalText","detectModuleType","showTrackingStatus","handleSendError","moduleName","oldStatus","statusHTML","resultsActions","trackingStatus","errorMsg","initializeApplication","startupEvent","handleInitializationFailure","handlePageUnload","setupGlobalErrorHandlers","main","__vite_import_meta_env__","regs","reg","kioskMode"],"ignoreList":[],"sources":["../../src/ui/components/prerequisites-modal.js","../../src/logic/handlers.js","../../src/auth/authentication.js","../../src/logic/kiosk-loader.js","../../src/react/ProbabilityRing.jsx","../../src/react/TachometerGauge.jsx","../../src/react/mountIslands.jsx","../../src/ui/components/progress.js","../../src/ui/screens/triage1.js","../../src/ui/screens/triage2.js","../../src/ui/screens/coma.js","../../src/ui/screens/limited.js","../../src/ui/screens/full.js","../../src/ui/components/alerts.js","../../src/utils/label-formatter.js","../../src/ui/components/drivers.js","../../src/logic/formatters.js","../../src/ui/screens/results.js","../../src/ui/screens/login.js","../../src/ui/a11y.js","../../src/ui/components/fastEdModal.js","../../src/ui/render.js","../../src/core/ui-manager.js","../../src/core/theme-manager.js","../../src/core/session-manager.js","../../src/components/lazy-loader.js","../../src/core/advanced-features-manager.js","../../src/core/app-controller.js","../../src/core/api-warmup.js","../../src/services/gps-tracker.js","../../src/ui/components/hospital-selector.js","../../src/services/eta-calculator.js","../../src/services/case-transmitter.js","../../src/handlers/kiosk-handlers.js","../../src/main.js"],"sourcesContent":["import { t, i18n } from '../../localization/i18n.js';\nimport { navigate } from '../../logic/handlers.js';\nimport { safeSetInnerHTML } from '../../security/html-sanitizer.js';\n\n/**\n * Prerequisites checklist items\n */\nconst getPrerequisites = () => [\n  { id: 'acute_deficit', checked: false },\n  { id: 'symptom_onset', checked: false },\n  { id: 'no_preexisting', checked: false },\n  { id: 'no_trauma', checked: false },\n];\n\n/**\n * Render prerequisites modal\n * @returns {string} HTML for prerequisites modal\n */\nexport function renderPrerequisitesModal() {\n  const prerequisites = getPrerequisites();\n\n  return `\n    <div id=\"prerequisitesModal\" class=\"modal prerequisites-modal\" style=\"display: flex;\">\n      <div class=\"modal-content prerequisites-content\">\n        <div class=\"modal-header\">\n          <h2>${t('prerequisitesTitle')}</h2>\n          <button class=\"modal-close\" id=\"closePrerequisites\">&times;</button>\n        </div>\n        \n        <div class=\"modal-body\">\n          <p class=\"prerequisites-intro\">\n            ${t('prerequisitesIntro')}\n          </p>\n          \n          <div class=\"prerequisites-list\">\n            ${prerequisites.map((item) => `\n              <div class=\"prerequisite-item\" data-id=\"${item.id}\">\n                <label class=\"toggle-switch\">\n                  <input type=\"checkbox\" id=\"${item.id}\" class=\"toggle-input\">\n                  <span class=\"toggle-slider\"></span>\n                </label>\n                <span class=\"prerequisite-label\">\n                  ${t(item.id)}\n                </span>\n              </div>\n            `).join('')}\n          </div>\n          \n          <div class=\"prerequisites-warning\" id=\"prerequisitesWarning\" style=\"display: none;\">\n            <span class=\"warning-icon\">⚠️</span>\n            <span class=\"warning-text\">\n              ${t('prerequisitesWarning')}\n            </span>\n          </div>\n        </div>\n        \n        <div class=\"modal-footer\">\n          <div class=\"button-group\">\n            <button type=\"button\" class=\"secondary\" id=\"cancelPrerequisites\">\n              ${t('cancel')}\n            </button>\n            <button type=\"button\" class=\"primary\" id=\"confirmPrerequisites\">\n              ${t('continue')}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Initialize prerequisites modal event handlers\n */\nexport function initPrerequisitesModal() {\n  const modal = document.getElementById('prerequisitesModal');\n  if (!modal) {\n    // ('Prerequisites modal not found');\n    return;\n  }\n\n  // ('Initializing prerequisites modal');\n\n  // Close button handlers\n  const closeBtn = document.getElementById('closePrerequisites');\n  const cancelBtn = document.getElementById('cancelPrerequisites');\n  const confirmBtn = document.getElementById('confirmPrerequisites');\n\n  // ('Modal buttons found:', { closeBtn: !!closeBtn, cancelBtn: !!cancelBtn, confirmBtn: !!confirmBtn });\n\n  const closeModal = () => {\n    modal.remove();\n    // Navigate back to welcome screen if cancelled\n    navigate('welcome');\n  };\n\n  closeBtn?.addEventListener('click', closeModal);\n  cancelBtn?.addEventListener('click', closeModal);\n\n  // Confirm button handler\n  confirmBtn?.addEventListener('click', (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // ('Prerequisites confirm button clicked');\n    const checkboxes = modal.querySelectorAll('.toggle-input');\n    const allChecked = Array.from(checkboxes).every((cb) => cb.checked);\n    // ('All prerequisites checked:', allChecked);\n\n    if (allChecked) {\n      // ('Navigating to triage2');\n      modal.remove();\n      // Proceed to triage2 (stroke module selection)\n      navigate('triage2');\n    } else {\n      // ('Showing prerequisites warning');\n      // Show warning\n      const warning = document.getElementById('prerequisitesWarning');\n      if (warning) {\n        warning.style.display = 'flex';\n        // Shake animation\n        warning.classList.add('shake');\n        setTimeout(() => warning.classList.remove('shake'), 500);\n      }\n    }\n  });\n\n  // Toggle change handler to hide warning when all checked\n  const checkboxes = modal.querySelectorAll('.toggle-input');\n  checkboxes.forEach((checkbox) => {\n    checkbox.addEventListener('change', () => {\n      const allChecked = Array.from(checkboxes).every((cb) => cb.checked);\n      const warning = document.getElementById('prerequisitesWarning');\n\n      if (allChecked && warning) {\n        warning.style.display = 'none';\n      }\n    });\n  });\n}\n\n/**\n * Show prerequisites modal\n */\nexport function showPrerequisitesModal() {\n  const existingModal = document.getElementById('prerequisitesModal');\n\n  // Always remove existing modal and create fresh one to handle language changes\n  if (existingModal) {\n    existingModal.remove();\n  }\n\n  // Create modal element safely\n  const modalElement = document.createElement('div');\n  try {\n    safeSetInnerHTML(modalElement, renderPrerequisitesModal());\n    const modal = modalElement.firstElementChild;\n\n    if (!modal) {\n      throw new Error('Failed to create modal element');\n    }\n\n    // Insert into DOM\n    document.body.appendChild(modal);\n  } catch (error) {\n    console.error('Prerequisites modal sanitization failed:', error);\n    // Fallback: create basic modal\n    const fallbackModal = document.createElement('div');\n    fallbackModal.className = 'modal prerequisites-modal';\n    fallbackModal.style.display = 'flex';\n    fallbackModal.textContent = 'Prerequisites modal could not be displayed securely. Please refresh the page.';\n    document.body.appendChild(fallbackModal);\n    return;\n  }\n\n  // Initialize immediately since DOM is ready\n  initPrerequisitesModal();\n}\n","import { store } from '../state/store.js';\nimport {\n  predictComaIch, predictLimitedIch, predictFullStroke, APIError,\n} from '../api/client.js';\nimport { t } from '../localization/i18n.js';\nimport { showPrerequisitesModal } from '../ui/components/prerequisites-modal.js';\nimport { safeSetInnerHTML } from '../security/html-sanitizer.js';\nimport { DEV_CONFIG } from '../config.js';\n\nimport { validateForm, showValidationErrors } from './validate.js';\n\nexport function handleTriage1(isComatose) {\n  store.logEvent('triage1_answer', { comatose: isComatose });\n\n  if (isComatose) {\n    navigate('coma');\n  } else {\n    // Show prerequisites modal for conscious patients\n    showPrerequisitesModal();\n  }\n}\n\nexport function handleTriage2(isExaminable) {\n  store.logEvent('triage2_answer', { examinable: isExaminable });\n  const nextScreen = isExaminable ? 'full' : 'limited';\n  navigate(nextScreen);\n}\n\nexport function navigate(screen) {\n  store.logEvent('navigate', {\n    from: store.getState().currentScreen,\n    to: screen,\n  });\n  store.navigate(screen);\n  window.scrollTo(0, 0);\n}\n\nexport function reset() {\n  if (store.hasUnsavedData()) {\n    if (!confirm('Are you sure you want to start over? All entered data will be lost.')) {\n      return;\n    }\n  }\n  store.logEvent('reset');\n  store.reset();\n}\n\nexport function goBack() {\n  const success = store.goBack();\n\n  if (success) {\n    store.logEvent('navigate_back');\n    window.scrollTo(0, 0);\n  } else {\n    goHome();\n  }\n}\n\nexport function goHome() {\n  store.logEvent('navigate_home');\n  store.goHome();\n  window.scrollTo(0, 0);\n}\n\nexport async function handleSubmit(e, container) {\n  e.preventDefault();\n  const form = e.target;\n  const { module } = form.dataset;\n\n  // Validate form\n  const validation = validateForm(form);\n  if (!validation.isValid) {\n    showValidationErrors(container, validation.validationErrors);\n    try {\n      // Focus first invalid field and announce summary for screen readers\n      const firstErrorName = Object.keys(validation.validationErrors)[0];\n      if (firstErrorName && form.elements[firstErrorName]) {\n        const el = form.elements[firstErrorName];\n        el.focus({ preventScroll: true });\n        el.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      }\n      const sr = document.createElement('div');\n      sr.className = 'sr-only';\n      sr.setAttribute('role', 'status');\n      sr.setAttribute('aria-live', 'polite');\n      const errorCount = Object.keys(validation.validationErrors).length;\n      sr.textContent = `${errorCount} field${errorCount === 1 ? '' : 's'} need attention.`;\n      document.body.appendChild(sr);\n      setTimeout(() => sr.remove(), 1200);\n    } catch {}\n    return;\n  }\n\n  // Collect inputs - handle all form elements including unchecked checkboxes\n  const inputs = {};\n\n  // Process all form elements to ensure checkboxes are included\n  Array.from(form.elements).forEach((element) => {\n    if (element.name) {\n      if (element.type === 'checkbox') {\n        inputs[element.name] = element.checked;\n      } else if (element.type === 'number') {\n        const n = parseFloat(element.value);\n        inputs[element.name] = isNaN(n) ? 0 : n;\n      } else if (element.type === 'hidden') {\n        // Handle hidden fields (like armparese from FAST-ED)\n        if (element.name === 'armparese') {\n          inputs[element.name] = element.value === 'true';\n        } else {\n          inputs[element.name] = element.value;\n        }\n      } else {\n        inputs[element.name] = element.value;\n      }\n    }\n  });\n\n  // Store form data\n  store.setFormData(module, inputs);\n\n  // Show loading state\n  const button = form.querySelector('button[type=submit]');\n  const originalContent = button ? button.innerHTML : '';\n  if (button) {\n    button.disabled = true;\n    try {\n      safeSetInnerHTML(button, `<span class=\"loading-spinner\"></span> ${t('analyzing')}`);\n    } catch (error) {\n      console.error('Button loading state sanitization failed:', error);\n      button.textContent = t('analyzing') || 'Analyzing...';\n    }\n  }\n\n  try {\n    console.log('[Submit] Module:', module);\n    console.log('[Submit] Inputs:', inputs);\n    // Run models based on module\n    let results;\n\n    switch (module) {\n      case 'coma':\n        const comaResult = await predictComaIch(inputs);\n        results = {\n          ich: {\n            ...comaResult,\n            module: 'Coma',\n          },\n          lvo: null,\n        };\n        break;\n\n      case 'limited':\n        const limitedResult = await predictLimitedIch(inputs);\n        results = {\n          ich: {\n            ...limitedResult,\n            module: 'Limited',\n          },\n          lvo: { notPossible: true },\n        };\n        break;\n\n      case 'full':\n        results = await predictFullStroke(inputs);\n        console.log('[Submit] Full results:', {\n          ich: !!results?.ich,\n          lvo: !!results?.lvo,\n          ichP: results?.ich?.probability,\n          lvoP: results?.lvo?.probability,\n        });\n        // Validate results structure\n        if (!results || !results.ich) {\n          throw new Error('Invalid response structure from Full Stroke API');\n        }\n        // Fix ICH probability mapping for Full Stroke\n        if (results.ich && !results.ich.probability && results.ich.ich_probability !== undefined) {\n          results.ich.probability = results.ich.ich_probability;\n          console.log('[Submit] Fixed ICH probability for Full Stroke:', results.ich.probability);\n        }\n        // Ensure module property is set\n        if (results.ich && !results.ich.module) {\n          results.ich.module = 'Full Stroke';\n        }\n        if (results.lvo && !results.lvo.module) {\n          results.lvo.module = 'Full Stroke';\n        }\n        break;\n\n      default:\n        throw new Error(`Unknown module: ${module}`);\n    }\n\n    console.log('[Submit] Setting results in store:', results);\n    store.setResults(results);\n    store.logEvent('models_complete', { module, results });\n\n    // Verify results were stored\n    const storedState = store.getState();\n    console.log('[Submit] State after setResults:', {\n      hasResults: !!storedState.results,\n      currentScreen: storedState.currentScreen,\n    });\n\n    console.log('[Submit] Navigating to results...');\n    navigate('results');\n    // Visual confirmation that results screen loaded\n    showToast('✅ Results loaded', 2000);\n    // Double-check navigation and force if needed\n    setTimeout(() => {\n      try {\n        const cs = store.getState().currentScreen;\n        console.log('[Submit] currentScreen after navigate:', cs);\n        if (cs !== 'results') {\n          store.navigate('results');\n          showToast('🔁 Forced results view', 1500);\n        }\n      } catch {}\n    }, 0);\n  } catch (error) {\n    // Error running models - handle gracefully, with Full module fallback in preview\n    const isLocalPreview = ['localhost', '127.0.0.1', '0.0.0.0'].includes(window.location.hostname) && !(import.meta && import.meta.env && import.meta.env.DEV);\n    if (module === 'full' && isLocalPreview) {\n      try {\n        const m = DEV_CONFIG.mockApiResponses.full_stroke;\n        const ich = m.ich_prediction || {};\n        const lvo = m.lvo_prediction || {};\n        const pIch = parseFloat(ich.probability) || 0;\n        const pLvo = parseFloat(lvo.probability) || 0;\n        const fallbackResults = {\n          ich: {\n            probability: pIch > 1 ? pIch / 100 : pIch,\n            drivers: ich.drivers || null,\n            confidence: parseFloat(ich.confidence) || 0.85,\n            module: 'Full Stroke',\n          },\n          lvo: {\n            probability: pLvo > 1 ? pLvo / 100 : pLvo,\n            drivers: lvo.drivers || null,\n            confidence: parseFloat(lvo.confidence) || 0.85,\n            module: 'Full Stroke',\n          },\n        };\n        store.setResults(fallbackResults);\n        store.logEvent('models_complete_fallback', { module, reason: error.message });\n        navigate('results');\n        return;\n      } catch (e) {\n        // Continue to show error below\n      }\n    }\n\n    let errorMessage = 'An error occurred during analysis. Please try again.';\n    if (error instanceof APIError) {\n      errorMessage = error.message;\n    }\n\n    showError(container, errorMessage);\n\n    if (button) {\n      button.disabled = false;\n      try {\n        safeSetInnerHTML(button, originalContent);\n      } catch (e2) {\n        console.error('Button restore sanitization failed:', e2);\n        button.textContent = 'Submit';\n      }\n    }\n  }\n}\n\nfunction showError(container, message) {\n  // Remove existing error alerts\n  container.querySelectorAll('.critical-alert').forEach((alert) => {\n    if (alert.querySelector('h4')?.textContent?.includes('Error')) {\n      alert.remove();\n    }\n  });\n\n  const alert = document.createElement('div');\n  alert.className = 'critical-alert';\n\n  // Create safe DOM structure without innerHTML to prevent XSS\n  const h4 = document.createElement('h4');\n  const iconSpan = document.createElement('span');\n  iconSpan.className = 'alert-icon';\n  iconSpan.textContent = '⚠️';\n  h4.appendChild(iconSpan);\n  h4.appendChild(document.createTextNode(' Error'));\n\n  const p = document.createElement('p');\n  p.textContent = message; // Safe text content only\n\n  alert.appendChild(h4);\n  alert.appendChild(p);\n\n  const containerDiv = container.querySelector('.container');\n  if (containerDiv) {\n    containerDiv.prepend(alert);\n  } else {\n    container.prepend(alert);\n  }\n\n  setTimeout(() => alert.remove(), 10000);\n}\n\n// Lightweight toast helper (overlays at top center)\nfunction showToast(message, duration = 2000) {\n  try {\n    const toast = document.createElement('div');\n    toast.textContent = message;\n    toast.setAttribute('role', 'status');\n    toast.setAttribute('aria-live', 'polite');\n    toast.style.cssText = `\n      position: fixed;\n      top: 16px;\n      left: 50%;\n      transform: translateX(-50%);\n      background: #0066CC;\n      color: #fff;\n      padding: 10px 14px;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.2);\n      z-index: 10000;\n      font-size: 14px;\n      pointer-events: none;\n      opacity: 0;\n      transition: opacity 160ms ease;\n    `;\n    document.body.appendChild(toast);\n    requestAnimationFrame(() => {\n      toast.style.opacity = '1';\n    });\n    setTimeout(() => {\n      toast.style.opacity = '0';\n      setTimeout(() => toast.remove(), 200);\n    }, duration);\n  } catch {}\n}\n","/**\n * Secure Authentication System for iGFAP Stroke Triage Assistant\n * Enterprise-grade authentication using Google Cloud Functions\n *\n * @typedef {import('../types/medical-types.js').SessionInfo} SessionInfo\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { API_URLS, DEV_CONFIG } from '../config.js';\nimport { isDevelopment, getSecurityConfig } from '../security/environment.js';\n\n// Bulletproof error handling utilities\nimport {\n  safeAsync,\n  safeAuthOperation,\n  MedicalError,\n  ERROR_CATEGORIES,\n  ERROR_SEVERITY,\n  MEDICAL_ERROR_CODES,\n} from '../utils/error-handler.js';\n\n// Type safety utilities\nimport { TypeChecker } from '../types/medical-types.js';\n\n// Professional logging\nimport { medicalLogger, LOG_CATEGORIES } from '../utils/medical-logger.js';\n\n// Encrypted storage\nimport { secureStore, secureRetrieve, secureRemove } from '../security/data-encryption.js';\n\nexport class AuthenticationManager {\n  constructor() {\n    this.isAuthenticated = false;\n    this.sessionToken = null;\n    this.sessionExpiry = null;\n    this.lastActivity = Date.now();\n    this.setupActivityTracking();\n  }\n\n  /**\n   * Authenticate user with research access password via secure Cloud Function\n   * @param {string} password - Research access password\n   * @returns {Promise<{success: boolean, message: string, sessionInfo?: SessionInfo}>} - Authentication result with success status and message\n   */\n  async authenticate(password) {\n    return safeAuthOperation(\n      async () => {\n        medicalLogger.info('Authentication attempt started', {\n          category: LOG_CATEGORIES.AUTHENTICATION,\n          hasPassword: !!password && password.length > 0,\n          isDevelopment: DEV_CONFIG.isDevelopment,\n        });\n\n        // Type safety validation\n        TypeChecker.ensureType(password, 'string', 'authentication password');\n\n        if (!password || password.trim().length === 0) {\n          medicalLogger.warn('Authentication failed: empty password', {\n            category: LOG_CATEGORIES.AUTHENTICATION,\n          });\n          throw new MedicalError(\n            'Password is required',\n            'EMPTY_PASSWORD',\n            ERROR_CATEGORIES.VALIDATION,\n            ERROR_SEVERITY.MEDIUM,\n          );\n        }\n\n        // SECURITY FIX: Always use backend API for password verification\n        // No local password checks - all authentication goes through secure Cloud Function\n        medicalLogger.debug('Sending authentication request to backend', {\n          category: LOG_CATEGORIES.AUTHENTICATION,\n          url: API_URLS.AUTHENTICATE,\n        });\n\n        const response = await fetch(API_URLS.AUTHENTICATE, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            password: password.trim(),\n          }),\n        });\n\n        if (!response.ok) {\n          let errorMessage = 'Authentication failed';\n          let errorCode = 'AUTH_FAILED';\n\n          if (response.status === 429) {\n            errorMessage = 'Too many authentication attempts. Please wait and try again.';\n            errorCode = 'RATE_LIMITED';\n          } else if (response.status >= 500) {\n            errorMessage = 'Authentication service temporarily unavailable';\n            errorCode = 'SERVICE_ERROR';\n          }\n\n          throw new MedicalError(\n            errorMessage,\n            errorCode,\n            ERROR_CATEGORIES.AUTHENTICATION,\n            response.status >= 500 ? ERROR_SEVERITY.HIGH : ERROR_SEVERITY.MEDIUM,\n          ).withContext({ statusCode: response.status, url: API_URLS.AUTHENTICATE });\n        }\n\n        const data = await response.json();\n\n        if (!data || typeof data !== 'object') {\n          throw new MedicalError(\n            'Invalid response from authentication service',\n            'INVALID_RESPONSE',\n            ERROR_CATEGORIES.AUTHENTICATION,\n            ERROR_SEVERITY.HIGH,\n          );\n        }\n\n        if (data.success) {\n          this.isAuthenticated = true;\n          this.sessionToken = data.session_token;\n          this.sessionExpiry = data.expires_at ? new Date(data.expires_at) : null;\n          this.lastActivity = Date.now();\n\n          // Safely store session\n          try {\n            this.storeSecureSession();\n          } catch (storageError) {\n            // Continue with authentication even if storage fails\n            console.warn('Session storage failed:', storageError.message);\n          }\n\n          return {\n            success: true,\n            message: 'Authentication successful',\n            sessionDuration: data.session_duration,\n          };\n        }\n        // Handle authentication failure\n        await this.delayFailedAttempt();\n\n        throw new MedicalError(\n          data.message || 'Invalid credentials',\n          'INVALID_CREDENTIALS',\n          ERROR_CATEGORIES.AUTHENTICATION,\n          ERROR_SEVERITY.MEDIUM,\n        ).withContext({\n          remainingAttempts: data.rate_limit_remaining,\n          statusCode: response.status,\n        });\n      },\n      {\n        timeout: 15000,\n        fallback: (error) => ({\n          success: false,\n          message: error instanceof MedicalError ? error.getUserMessage() : 'Authentication service unavailable. Please try again.',\n          errorCode: error.code || 'NETWORK_ERROR',\n          details: error.message,\n          remainingAttempts: error.context?.remainingAttempts,\n        }),\n        context: {\n          operation: 'user_authentication',\n          endpoint: 'authenticate',\n        },\n      },\n    );\n  }\n\n  /**\n   * Check if current session is valid\n   * @returns {boolean} - Session validity\n   */\n  isValidSession() {\n    if (!this.isAuthenticated) {\n      return this.checkStoredSession();\n    }\n\n    // Check session expiry\n    if (this.sessionExpiry && new Date() > this.sessionExpiry) {\n      this.logout();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Validate session token with server\n   * @returns {boolean} - Server-side session validity\n   */\n  async validateSessionWithServer() {\n    if (!this.sessionToken) {\n      return false;\n    }\n\n    return safeAuthOperation(\n      async () => {\n        // Skip remote validation on local preview to avoid CORS noise\n        const isLocalPreview = ['localhost', '127.0.0.1', '0.0.0.0'].includes(window.location.hostname) && !(import.meta && import.meta.env && import.meta.env.DEV);\n        if (isLocalPreview) {\n          this.updateActivity();\n          return true;\n        }\n\n        const response = await fetch(API_URLS.AUTHENTICATE, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            action: 'validate_session',\n            session_token: this.sessionToken,\n          }),\n        });\n\n        if (!response.ok) {\n          if (response.status === 401 || response.status === 403) {\n            // Session expired or invalid\n            this.logout();\n            return false;\n          }\n\n          throw new MedicalError(\n            'Session validation service error',\n            'VALIDATION_ERROR',\n            ERROR_CATEGORIES.AUTHENTICATION,\n            ERROR_SEVERITY.MEDIUM,\n          ).withContext({ statusCode: response.status });\n        }\n\n        const data = await response.json();\n\n        if (!data || typeof data !== 'object') {\n          throw new MedicalError(\n            'Invalid response from session validation service',\n            'INVALID_RESPONSE',\n            ERROR_CATEGORIES.AUTHENTICATION,\n            ERROR_SEVERITY.MEDIUM,\n          );\n        }\n\n        if (data.success) {\n          this.updateActivity();\n          return true;\n        }\n        this.logout();\n        return false;\n      },\n      {\n        timeout: 10000,\n        fallback: (error) => {\n          // On network errors, allow local session to continue\n          // This prevents logout during temporary network issues\n          console.warn('Session validation failed, continuing with local session:', error.message);\n          return this.isValidSession();\n        },\n        context: {\n          operation: 'session_validation',\n          endpoint: 'validate_session',\n        },\n      },\n    );\n  }\n\n  /**\n   * Update activity timestamp\n   */\n  updateActivity() {\n    this.lastActivity = Date.now();\n    this.storeAuthSession();\n  }\n\n  /**\n   * Logout and clear session securely\n   */\n  async logout() {\n    medicalLogger.info('User logout initiated', {\n      category: LOG_CATEGORIES.AUTHENTICATION,\n    });\n\n    this.isAuthenticated = false;\n    this.sessionToken = null;\n    this.sessionExpiry = null;\n\n    // Clear all encrypted session storage securely\n    try {\n      await secureRemove('auth_session', true);\n      await secureRemove('auth_timestamp', true);\n      await secureRemove('session_token', true);\n      await secureRemove('session_expiry', true);\n\n      // Clear legacy unencrypted data\n      sessionStorage.removeItem('auth_session');\n      sessionStorage.removeItem('auth_timestamp');\n      sessionStorage.removeItem('session_token');\n      sessionStorage.removeItem('session_expiry');\n\n      medicalLogger.info('Session data cleared during logout', {\n        category: LOG_CATEGORIES.SECURITY,\n      });\n    } catch (error) {\n      medicalLogger.warn('Failed to clear some session data during logout', {\n        category: LOG_CATEGORIES.SECURITY,\n        error: error.message,\n      });\n    }\n  }\n\n  /**\n   * Simple hash function for password verification\n   * Note: For production medical device, use proper bcrypt/PBKDF2\n   * @param {string} input - Password to hash\n   * @returns {string} - Hashed password\n   */\n  async hashPassword(input) {\n    return safeAsync(\n      async () => {\n        if (!input || typeof input !== 'string') {\n          throw new MedicalError(\n            'Invalid input for password hashing',\n            'INVALID_INPUT',\n            ERROR_CATEGORIES.VALIDATION,\n            ERROR_SEVERITY.MEDIUM,\n          );\n        }\n\n        if (!crypto || !crypto.subtle) {\n          throw new MedicalError(\n            'Crypto API not available',\n            'CRYPTO_UNAVAILABLE',\n            ERROR_CATEGORIES.SECURITY,\n            ERROR_SEVERITY.HIGH,\n          );\n        }\n\n        const encoder = new TextEncoder();\n        const data = encoder.encode(input);\n        const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n        const hashArray = Array.from(new Uint8Array(hashBuffer));\n        const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n        return hashHex;\n      },\n      {\n        category: ERROR_CATEGORIES.SECURITY,\n        severity: ERROR_SEVERITY.HIGH,\n        timeout: 5000,\n        fallback: () => {\n          // Simple fallback hash for non-critical use\n          let hash = 0;\n          for (let i = 0; i < input.length; i++) {\n            const char = input.charCodeAt(i);\n            hash = ((hash << 5) - hash) + char;\n            hash &= hash; // Convert to 32-bit integer\n          }\n          return Math.abs(hash).toString(16);\n        },\n        context: {\n          operation: 'password_hashing',\n          inputLength: input ? input.length : 0,\n        },\n      },\n    );\n  }\n\n  /**\n   * Store authenticated session securely\n   */\n  storeSecureSession() {\n    return safeAsync(\n      async () => {\n        if (!this.isAuthenticated || !this.sessionToken) {\n          throw new MedicalError(\n            'Cannot store session: not authenticated',\n            'NOT_AUTHENTICATED',\n            ERROR_CATEGORIES.AUTHENTICATION,\n            ERROR_SEVERITY.LOW,\n          );\n        }\n\n        if (typeof sessionStorage === 'undefined') {\n          throw new MedicalError(\n            'Session storage not available',\n            'STORAGE_UNAVAILABLE',\n            ERROR_CATEGORIES.STORAGE,\n            ERROR_SEVERITY.MEDIUM,\n          );\n        }\n\n        // Store session data securely\n        sessionStorage.setItem('auth_session', 'verified');\n        sessionStorage.setItem('auth_timestamp', this.lastActivity.toString());\n        sessionStorage.setItem('session_token', this.sessionToken);\n        if (this.sessionExpiry) {\n          sessionStorage.setItem('session_expiry', this.sessionExpiry.toISOString());\n        }\n\n        return true;\n      },\n      {\n        category: ERROR_CATEGORIES.STORAGE,\n        severity: ERROR_SEVERITY.LOW,\n        timeout: 1000,\n        fallback: (error) => {\n          console.warn('Failed to store session:', error.message);\n          return false;\n        },\n        context: {\n          operation: 'store_session',\n          hasToken: !!this.sessionToken,\n          hasExpiry: !!this.sessionExpiry,\n        },\n      },\n    );\n  }\n\n  /**\n   * Legacy method for compatibility\n   */\n  storeAuthSession() {\n    this.storeSecureSession();\n  }\n\n  /**\n   * Check for existing valid session\n   * @returns {boolean} - Stored session validity\n   */\n  checkStoredSession() {\n    try {\n      return safeAsync(\n        async () => {\n          if (typeof sessionStorage === 'undefined') {\n            throw new MedicalError(\n              'Session storage not available',\n              'STORAGE_UNAVAILABLE',\n              ERROR_CATEGORIES.STORAGE,\n              ERROR_SEVERITY.LOW,\n            );\n          }\n\n          const session = await secureRetrieve('auth_session', true);\n          const timestamp = await secureRetrieve('auth_timestamp', true);\n          const storedToken = await secureRetrieve('session_token', true);\n          const storedExpiry = await secureRetrieve('session_expiry', true);\n\n          if (session === 'verified' && timestamp && storedToken) {\n            // Check if session has expired\n            if (storedExpiry) {\n              const expiryDate = new Date(storedExpiry);\n              if (new Date() > expiryDate) {\n                this.logout();\n                return false;\n              }\n              this.sessionExpiry = expiryDate;\n            }\n\n            // Validate timestamp is a valid number\n            const timestampNum = parseInt(timestamp);\n            if (isNaN(timestampNum)) {\n              throw new MedicalError(\n                'Invalid session timestamp',\n                'INVALID_SESSION_DATA',\n                ERROR_CATEGORIES.STORAGE,\n                ERROR_SEVERITY.MEDIUM,\n              );\n            }\n\n            this.isAuthenticated = true;\n            this.sessionToken = storedToken;\n            this.lastActivity = timestampNum;\n            return true;\n          }\n\n          this.logout();\n          return false;\n        },\n        {\n          category: ERROR_CATEGORIES.STORAGE,\n          severity: ERROR_SEVERITY.LOW,\n          timeout: 1000,\n          fallback: (error) => {\n            console.warn('Failed to check stored session:', error.message);\n            this.logout();\n            return false;\n          },\n          context: {\n            operation: 'check_stored_session',\n          },\n        },\n      );\n    } catch (error) {\n      this.logout();\n      return false;\n    }\n  }\n\n  /**\n   * Setup activity tracking for session management\n   */\n  setupActivityTracking() {\n    // Track user interactions to maintain session\n    const events = ['mousedown', 'mousemove', 'keypress', 'scroll', 'touchstart'];\n\n    const updateActivity = () => {\n      if (this.isAuthenticated) {\n        this.updateActivity();\n      }\n    };\n\n    events.forEach((event) => {\n      document.addEventListener(event, updateActivity, { passive: true });\n    });\n  }\n\n  /**\n   * Rate limiting for failed authentication attempts\n   */\n  async delayFailedAttempt() {\n    return safeAsync(\n      async () => new Promise((resolve) => {\n        setTimeout(resolve, 1000); // 1 second delay\n      }),\n      {\n        category: ERROR_CATEGORIES.AUTHENTICATION,\n        severity: ERROR_SEVERITY.LOW,\n        timeout: 2000,\n        fallback: () =>\n          // If delay fails, continue without delay\n          Promise.resolve(),\n        context: {\n          operation: 'auth_delay',\n        },\n      },\n    );\n  }\n\n  /**\n   * Get session status for UI\n   * @returns {object} - Session information\n   */\n  getSessionInfo() {\n    if (!this.isAuthenticated) {\n      return { authenticated: false };\n    }\n\n    const timeRemaining = this.sessionTimeout - (Date.now() - this.lastActivity);\n    const hoursRemaining = Math.floor(timeRemaining / (60 * 60 * 1000));\n    const minutesRemaining = Math.floor((timeRemaining % (60 * 60 * 1000)) / (60 * 1000));\n\n    return {\n      authenticated: true,\n      timeRemaining: `${hoursRemaining}h ${minutesRemaining}m`,\n      lastActivity: new Date(this.lastActivity).toLocaleTimeString(),\n    };\n  }\n}\n\n// Export singleton instance\nexport const authManager = new AuthenticationManager();\n","/**\n * Kiosk Mode Loader\n * Handles loading case data when PWA is opened in kiosk display mode\n */\n\nimport { KIOSK_CONFIG } from '../config.js';\nimport { store } from '../state/store.js';\n\n/**\n * Check if app is in kiosk display mode\n * @returns {{isKioskMode: boolean, caseId: string|null}}\n */\nexport function detectKioskMode() {\n  const hash = window.location.hash || '';\n  const params = new URLSearchParams(hash.split('?')[1] || '');\n\n  const display = params.get('display');\n  const caseId = params.get('caseId');\n\n  const isKioskMode = display === 'kiosk' && Boolean(caseId);\n\n  console.log('[KioskLoader] Kiosk mode detection:', {\n    hash,\n    display,\n    caseId,\n    isKioskMode,\n  });\n\n  return {\n    isKioskMode,\n    caseId,\n  };\n}\n\n/**\n * Fetch case data from Cloud Run\n * @param {string} caseId - The case ID to fetch\n * @returns {Promise<Object>} Case data\n */\nexport async function fetchCaseData(caseId) {\n  try {\n    console.log('[KioskLoader] Fetching case data:', caseId);\n\n    const response = await fetch(`${KIOSK_CONFIG.caseSharingUrl}/get-cases`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch cases: ${response.status}`);\n    }\n\n    const data = await response.json();\n\n    // Find the specific case\n    const caseData = data.cases.find(c => c.id === caseId);\n\n    if (!caseData) {\n      throw new Error(`Case not found: ${caseId}`);\n    }\n\n    console.log('[KioskLoader] Case data loaded:', caseData);\n\n    return caseData;\n  } catch (error) {\n    console.error('[KioskLoader] Failed to fetch case data:', error);\n    throw error;\n  }\n}\n\n/**\n * Load case data into store for kiosk mode\n * @param {string} caseId - The case ID to load\n */\nexport async function loadKioskCase(caseId) {\n  try {\n    const caseData = await fetchCaseData(caseId);\n\n    // Populate store with case data\n    store.setState({\n      results: caseData.results,\n      formData: caseData.formData || {},\n      currentScreen: 'results',\n    });\n\n    console.log('[KioskLoader] Store populated with case data');\n\n    return caseData;\n  } catch (error) {\n    console.error('[KioskLoader] Failed to load kiosk case:', error);\n    throw error;\n  }\n}\n\n/**\n * Get kiosk home URL\n * @returns {string} URL to kiosk home page\n */\nexport function getKioskHomeUrl() {\n  return 'https://igfap.eu/kiosk/';\n}\n","import React, { useEffect, useRef } from 'react';\n\nfunction getCSSVar(name) {\n  return getComputedStyle(document.documentElement).getPropertyValue(name).trim();\n}\n\nexport default function ProbabilityRing({ percent = 0, level = 'normal' }) {\n  const canvasRef = useRef(null);\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const container = canvas?.parentElement; // parent is .probability-circle\n    if (!container || !canvas) return;\n    \n    containerRef.current = container;\n\n    const draw = () => {\n      const dpr = window.devicePixelRatio || 1;\n      const size = container.offsetWidth || 120;\n      canvas.width = Math.max(1, Math.floor(size * dpr));\n      canvas.height = Math.max(1, Math.floor(size * dpr));\n      const ctx = canvas.getContext('2d');\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.scale(dpr, dpr);\n\n      const width = size;\n      const height = size;\n      const cx = width / 2;\n      const cy = height / 2;\n      const radius = (size / 2) - 8;\n      // Proportional stroke with better minimum readability\n      const progressWidth = Math.min(Math.max(radius * 0.12, 6), 12);\n      const trackWidth = Math.max(progressWidth - 2, 6);\n      // Pixel snapping for crisp lines\n      const adjustedRadius = progressWidth % 2 === 1 ? radius - 0.5 : radius;\n\n      ctx.clearRect(0, 0, width, height);\n\n      // Track - better contrast and alignment with theme tokens\n      const isDark = document.body.classList.contains('dark-mode');\n      const borderColor = getCSSVar('--border-color') || (isDark ? '#2f3336' : '#dee2e6');\n      ctx.save();\n      ctx.globalAlpha = isDark ? 0.36 : 0.65;\n      ctx.strokeStyle = borderColor;\n      ctx.lineWidth = trackWidth;\n      ctx.lineCap = 'round';\n      ctx.beginPath();\n      ctx.arc(cx, cy, adjustedRadius, 0, Math.PI * 2);\n      ctx.stroke();\n      ctx.restore();\n\n      // Progress color - enhanced saturation in dark mode\n      let stroke = getCSSVar('--primary-color');\n      if (level === 'high') stroke = getCSSVar('--warning-color') || '#ff9800';\n      if (level === 'critical') stroke = getCSSVar('--danger-color') || '#DC143C';\n      \n      // Boost saturation slightly in dark mode\n      if (isDark) {\n        if (stroke.includes('#')) {\n          // Simple saturation boost for hex colors\n          if (level === 'high') stroke = '#ffaa00';\n          if (level === 'critical') stroke = '#ff1744';\n        }\n      }\n\n      // Progress arc\n      const startAngle = -Math.PI / 2;\n      const endAngle = startAngle + (Math.PI * 2) * (Math.max(0, Math.min(100, percent)) / 100);\n\n      // Subtle depth shadow behind progress - slightly stronger in dark mode\n      ctx.save();\n      ctx.strokeStyle = isDark ? 'rgba(0,0,0,0.3)' : 'rgba(0,0,0,0.15)';\n      ctx.lineWidth = progressWidth + 1.5;\n      ctx.beginPath();\n      ctx.arc(cx, cy, adjustedRadius, startAngle, endAngle, false);\n      ctx.stroke();\n      ctx.restore();\n\n      ctx.strokeStyle = stroke;\n      ctx.lineWidth = progressWidth;\n      ctx.beginPath();\n      ctx.arc(cx, cy, adjustedRadius, startAngle, endAngle, false);\n      ctx.stroke();\n    };\n\n    // Defer first draw to ensure CSS sizing has applied\n    const rafId = requestAnimationFrame(draw);\n\n    const ro = new ResizeObserver(() => requestAnimationFrame(draw));\n    ro.observe(container);\n    return () => {\n      cancelAnimationFrame(rafId);\n      ro.disconnect();\n    };\n  }, [percent, level]);\n\n  return (\n    <>\n      <div className=\"probability-number\">\n        {Math.round(percent)}<span>%</span>\n      </div>\n      <canvas ref={canvasRef} className=\"probability-canvas\" />\n    </>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\n\nexport default function TachometerGauge({ lvoProb = 0, ichProb = 0, title = 'Decision Support – LVO/ICH' }) {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n\n    let raf = null;\n    let currentPos = 0.5;\n    \n    // Robust ratio with epsilon to avoid division spikes\n    const eps = 0.5; // percent points\n    const safeIch = Math.max(ichProb, eps);\n    const rawRatio = lvoProb / safeIch;\n    // Clamp to display bounds\n    const rmin = 0.5, rmax = 2.0;\n    const clampedRatio = Math.max(rmin, Math.min(rmax, rawRatio));\n    // Log-centered mapping around 1.0 so equal risks map to center\n    const targetPos = (Math.log2(clampedRatio) + 1) / 2; // 0 at 0.5, 0.5 at 1.0, 1 at 2.0\n    const absDiff = Math.abs(lvoProb - ichProb);\n    const maxProb = Math.max(lvoProb, ichProb);\n    let confidence = absDiff < 10 ? Math.round(30 + maxProb * 0.3) : absDiff < 20 ? Math.round(50 + maxProb * 0.4) : Math.round(70 + maxProb * 0.3);\n    confidence = Math.max(0, Math.min(100, confidence));\n\n    const draw = () => {\n      const dpr = window.devicePixelRatio || 1;\n      const rect = canvas.getBoundingClientRect();\n      const cssW = rect.width || 300;\n      const cssH = rect.height || 200;\n      canvas.width = Math.max(1, Math.floor(cssW * dpr));\n      canvas.height = Math.max(1, Math.floor(cssH * dpr));\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.scale(dpr, dpr);\n\n      const width = cssW;\n      const height = cssH;\n      const isMobile = width < 480;\n      const isTablet = width >= 480 && width < 1024;\n      \n      // Refined thin proportions\n      const baseWidth = isMobile ? 12 : isTablet ? 14 : 16;\n      const padding = 15;\n      const maxRHorizontal = (width / 2) - padding - baseWidth / 2;\n      const maxRVerticalBase = (height / 2) - padding - baseWidth / 2;\n      const maxRVertical = isTablet ? Math.min(maxRVerticalBase, height * 0.42) : maxRVerticalBase;\n      const radius = Math.max(10, Math.min(maxRHorizontal, maxRVertical));\n      const cx = width / 2;\n      const cy = height - (padding + baseWidth / 2 + radius);\n\n      ctx.clearRect(0, 0, width, height);\n\n      const isDark = document.body.classList.contains('dark-mode');\n      \n      // Premium automotive color schemes\n      const colors = {\n        day: {\n          bezel: '#e8eaed',\n          bezelShadow: '#c1c7cd',\n          track: '#f5f7fa',\n          ich: '#8b1538', // Deep burgundy - clinical authority\n          lvo: '#1e3a5f', // Steel blue - precision\n          neutral: '#6b7280', // Surgical steel\n          needle: '#d4af37', // Luxury gold\n          text: '#374151',\n          tickMajor: '#4b5563',\n          tickMinor: '#9ca3af'\n        },\n        night: {\n          bezel: '#2d3036',\n          bezelShadow: '#1a1d23',\n          track: '#383c42',\n          ich: '#dc2626', // Bright clinical red for night visibility\n          lvo: '#3b82f6', // Bright blue for night visibility\n          neutral: '#64748b', // Muted steel\n          needle: '#fbbf24', // Amber - automotive night standard\n          text: '#f3f4f6',\n          tickMajor: '#d1d5db',\n          tickMinor: '#6b7280'\n        }\n      };\n      \n      const theme = isDark ? colors.night : colors.day;\n\n      // Outer bezel - thin brushed aluminum effect\n      const bezelGradient = ctx.createLinearGradient(cx - radius, cy - radius, cx + radius, cy + radius);\n      bezelGradient.addColorStop(0, theme.bezel);\n      bezelGradient.addColorStop(0.3, theme.bezelShadow);\n      bezelGradient.addColorStop(0.7, theme.bezel);\n      bezelGradient.addColorStop(1, theme.bezelShadow);\n      \n      ctx.strokeStyle = bezelGradient;\n      ctx.lineWidth = baseWidth + 4; // Thinner bezel\n      ctx.lineCap = 'round';\n      ctx.beginPath();\n      ctx.arc(cx, cy, radius + 2, 0, Math.PI, false);\n      ctx.stroke();\n\n      // Inner track - thin premium matte finish\n      ctx.strokeStyle = theme.track;\n      ctx.lineWidth = baseWidth;\n      ctx.beginPath();\n      ctx.arc(cx, cy, radius, 0, Math.PI, false);\n      ctx.stroke();\n\n      // Smooth gradient transition: blue (LVO right) → yellow → red (ICH left)\n      const segments = 60; // Fine granularity for smooth transition\n      const angleStep = Math.PI / segments;\n      \n      for (let i = 0; i < segments; i++) {\n        const progress = i / (segments - 1); // 0 to 1 from right (LVO) to left (ICH)\n        const startAngle = i * angleStep;\n        const endAngle = Math.min((i + 1) * angleStep, Math.PI);\n        \n        // Smooth color interpolation: blue (right) → yellow → red (left)\n        let r, g, b;\n        if (progress <= 0.5) {\n          // Blue to yellow (first half - right side)\n          const t = progress * 2; // 0 to 1\n          r = Math.round(0 + 242 * t);    // Increase red: 0 → 242\n          g = Math.round(154 + 66 * t);   // Increase green: 154 → 220\n          b = Math.round(255 * (1 - t));  // Decrease blue: 255 → 0\n        } else {\n          // Yellow to red (second half - left side)\n          const t = (progress - 0.5) * 2; // 0 to 1\n          r = Math.round(242 + 13 * t);   // Increase red slightly: 242 → 255\n          g = Math.round(220 * (1 - t));  // Decrease green: 220 → 0\n          b = Math.round(0);              // No blue\n        }\n        \n        const color = `rgba(${r}, ${g}, ${b}, 0.85)`;\n        \n        ctx.strokeStyle = color;\n        ctx.lineWidth = baseWidth - 4; // Thinner zones\n        ctx.beginPath();\n        ctx.arc(cx, cy, radius, startAngle, endAngle, false);\n        ctx.stroke();\n      }\n\n      // Precision tick system - automotive style\n      const majorTicks = [0.5, 0.75, 1.0, 1.5, 2.0];\n      const minorTicks = isMobile ? [] : [0.6, 0.9, 1.2, 1.8]; // Only on larger screens\n      \n      // Major ticks\n      majorTicks.forEach(val => {\n        const pos = (Math.log2(val) + 1) / 2;\n        const a = Math.PI - pos * Math.PI;\n        const inner = radius - 12;\n        const outer = radius - 24;\n        \n        ctx.strokeStyle = theme.tickMajor;\n        ctx.lineWidth = 1.5; // Thinner major ticks\n        ctx.lineCap = 'round';\n        ctx.beginPath();\n        ctx.moveTo(cx + Math.cos(a) * inner, cy + Math.sin(a) * inner);\n        ctx.lineTo(cx + Math.cos(a) * outer, cy + Math.sin(a) * outer);\n        ctx.stroke();\n        \n        // Premium typography\n        ctx.fillStyle = theme.text;\n        const tickFont = isMobile ? 13 : 15;\n        ctx.font = `600 ${tickFont}px \"SF Pro Display\", system-ui, sans-serif`;\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText(val.toFixed(1), cx + Math.cos(a) * (radius - 35), cy + Math.sin(a) * (radius - 35));\n      });\n      \n      // Minor ticks\n      minorTicks.forEach(val => {\n        const pos = (Math.log2(val) + 1) / 2;\n        const a = Math.PI - pos * Math.PI;\n        const inner = radius - 8;\n        const outer = radius - 16;\n        \n        ctx.strokeStyle = theme.tickMinor;\n        ctx.lineWidth = 0.8; // Thinner minor ticks\n        ctx.lineCap = 'round';\n        ctx.beginPath();\n        ctx.moveTo(cx + Math.cos(a) * inner, cy + Math.sin(a) * inner);\n        ctx.lineTo(cx + Math.cos(a) * outer, cy + Math.sin(a) * outer);\n        ctx.stroke();\n      });\n\n      // Clinical threshold markers - subtle but precise\n      const thresholds = [\n        { val: 0.77, label: 'ICH', side: 'left' },\n        { val: 1.30, label: 'LVO', side: 'right' }\n      ];\n      \n      thresholds.forEach(th => {\n        const pos = (Math.log2(th.val) + 1) / 2;\n        const a = Math.PI - pos * Math.PI;\n        const inner = radius - 2;\n        const outer = radius + 12;\n        \n        // Precise threshold line\n        ctx.strokeStyle = th.side === 'left' ? theme.ich : theme.lvo;\n        ctx.lineWidth = 2;\n        ctx.setLineDash([3, 2]);\n        ctx.beginPath();\n        ctx.moveTo(cx + Math.cos(a) * inner, cy + Math.sin(a) * inner);\n        ctx.lineTo(cx + Math.cos(a) * outer, cy + Math.sin(a) * outer);\n        ctx.stroke();\n        ctx.setLineDash([]);\n      });\n\n      // Premium zone labels - clinical typography\n      const labelFont = isMobile ? 15 : 17;\n      const labelDistance = isMobile ? radius + 35 : radius + 42;\n      \n      // ICH label - pure red\n      ctx.fillStyle = isDark ? '#ff4444' : '#ff0000';\n      ctx.font = `700 ${labelFont}px \"SF Pro Display\", system-ui, sans-serif`;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      if (isDark) {\n        ctx.shadowColor = 'rgba(0,0,0,0.8)';\n        ctx.shadowBlur = 3;\n        ctx.shadowOffsetY = 1;\n      }\n      ctx.fillText('ICH', cx + Math.cos(Math.PI) * labelDistance, cy + Math.sin(Math.PI) * labelDistance - 10);\n      \n      // LVO label - pure blue\n      ctx.fillStyle = isDark ? '#4499ff' : '#0099ff';\n      ctx.fillText('LVO', cx + Math.cos(0) * labelDistance, cy + Math.sin(0) * labelDistance - 10);\n      ctx.shadowBlur = 0;\n      ctx.shadowOffsetY = 0;\n\n      // Premium needle with automotive precision\n      currentPos += (targetPos - currentPos) * 0.12; // Slightly faster, more responsive\n      const needleAngle = Math.PI - currentPos * Math.PI;\n      const needleLen = Math.max(0, radius - baseWidth / 2 - 6);\n\n      // Confidence indicator - subtle surgical precision\n      const coneSpan = (1 - confidence / 100) * (Math.PI * 0.05);\n      ctx.save();\n      ctx.globalAlpha = isDark ? 0.2 : 0.25;\n      ctx.fillStyle = theme.neutral;\n      ctx.beginPath();\n      ctx.moveTo(cx, cy);\n      ctx.arc(cx, cy, needleLen * 0.85, needleAngle - coneSpan, needleAngle + coneSpan, false);\n      ctx.closePath();\n      ctx.fill();\n      ctx.restore();\n\n      // Premium needle - automotive grade\n      const needleColor = theme.needle;\n      const now = performance.now();\n      \n      // Needle shaft with taper\n      const gradient = ctx.createLinearGradient(\n        cx, cy,\n        cx + Math.cos(needleAngle) * needleLen,\n        cy + Math.sin(needleAngle) * needleLen\n      );\n      gradient.addColorStop(0, needleColor + 'ff');\n      gradient.addColorStop(0.7, needleColor + 'dd');\n      gradient.addColorStop(1, needleColor + 'bb');\n      \n      ctx.strokeStyle = gradient;\n      ctx.lineWidth = 2.5; // Thinner needle\n      ctx.lineCap = 'round';\n      ctx.shadowColor = isDark ? 'rgba(0,0,0,0.8)' : 'rgba(0,0,0,0.3)';\n      ctx.shadowBlur = 4;\n      ctx.shadowOffsetY = 2;\n      ctx.beginPath();\n      ctx.moveTo(cx, cy);\n      ctx.lineTo(cx + Math.cos(needleAngle) * needleLen, cy + Math.sin(needleAngle) * needleLen);\n      ctx.stroke();\n      ctx.shadowBlur = 0;\n      ctx.shadowOffsetY = 0;\n\n      // Enhanced pulsing needle tip\n      const tx = cx + Math.cos(needleAngle) * needleLen;\n      const ty = cy + Math.sin(needleAngle) * needleLen;\n      const pulse = 0.6 + 0.4 * Math.sin(now * 0.006); // Slower, more elegant pulse\n      const tipRadius = 3 + pulse * 2; // Smaller base tip\n      \n      // Outer pulsing halo\n      ctx.save();\n      ctx.globalAlpha = 0.15 + pulse * 0.25;\n      ctx.fillStyle = needleColor;\n      ctx.beginPath();\n      ctx.arc(tx, ty, tipRadius * 3.5, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.restore();\n      \n      // Mid pulsing glow\n      ctx.save();\n      ctx.globalAlpha = 0.4 + pulse * 0.3;\n      ctx.fillStyle = needleColor;\n      ctx.beginPath();\n      ctx.arc(tx, ty, tipRadius * 1.8, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.restore();\n      \n      // Solid tip core\n      ctx.fillStyle = needleColor;\n      ctx.shadowColor = needleColor;\n      ctx.shadowBlur = 4 + pulse * 6;\n      ctx.beginPath();\n      ctx.arc(tx, ty, tipRadius, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.shadowBlur = 0;\n\n      // Refined center hub - thinner automotive grade\n      const hubOuter = 14; // Smaller hub\n      const hubInner = 8;\n      \n      // Outer ring - brushed metal\n      const hubGradient = ctx.createRadialGradient(cx, cy, 0, cx, cy, hubOuter);\n      hubGradient.addColorStop(0, isDark ? '#4a5568' : '#718096');\n      hubGradient.addColorStop(0.7, isDark ? '#2d3748' : '#4a5568');\n      hubGradient.addColorStop(1, isDark ? '#1a202c' : '#2d3748');\n      \n      ctx.fillStyle = hubGradient;\n      ctx.beginPath();\n      ctx.arc(cx, cy, hubOuter, 0, Math.PI * 2);\n      ctx.fill();\n      \n      // Inner hub - precision center\n      const innerGradient = ctx.createRadialGradient(cx, cy, 0, cx, cy, hubInner);\n      innerGradient.addColorStop(0, needleColor + 'aa');\n      innerGradient.addColorStop(1, needleColor + '44');\n      \n      ctx.fillStyle = innerGradient;\n      ctx.beginPath();\n      ctx.arc(cx, cy, hubInner, 0, Math.PI * 2);\n      ctx.fill();\n      \n      // Precision rim - thinner\n      ctx.strokeStyle = needleColor;\n      ctx.lineWidth = 1; // Thinner rim\n      ctx.beginPath();\n      ctx.arc(cx, cy, hubOuter - 1, 0, Math.PI * 2);\n      ctx.stroke();\n\n      // Premium ratio display - automotive HUD style\n      const ratioFont = isMobile ? 18 : 22;\n      const ratioY = cy - radius * 0.65;\n      \n      // Background plate for ratio\n      const plateWidth = isMobile ? 60 : 80;\n      const plateHeight = isMobile ? 24 : 30;\n      \n      ctx.save();\n      ctx.globalAlpha = isDark ? 0.9 : 0.95;\n      ctx.fillStyle = isDark ? '#1f2937' : '#ffffff';\n      ctx.shadowColor = isDark ? 'rgba(0,0,0,0.5)' : 'rgba(0,0,0,0.2)';\n      ctx.shadowBlur = 8;\n      ctx.shadowOffsetY = 2;\n      ctx.fillRect(cx - plateWidth/2, ratioY - plateHeight/2, plateWidth, plateHeight);\n      ctx.restore();\n      \n      // Ratio text\n      ctx.fillStyle = theme.text;\n      ctx.font = `700 ${ratioFont}px \"SF Mono\", ui-monospace, monospace`;\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(clampedRatio.toFixed(2), cx, ratioY);\n\n      // Confidence indicator - subtle precision bar\n      if (!isMobile) {\n        const confY = cy + radius * 0.15;\n        const confWidth = 60;\n        const confHeight = 4;\n        \n        // Background\n        ctx.fillStyle = isDark ? '#374151' : '#e5e7eb';\n        ctx.fillRect(cx - confWidth/2, confY, confWidth, confHeight);\n        \n        // Confidence fill\n        const confFill = (confidence / 100) * confWidth;\n        const confGradient = ctx.createLinearGradient(cx - confWidth/2, confY, cx - confWidth/2 + confFill, confY);\n        confGradient.addColorStop(0, theme.neutral);\n        confGradient.addColorStop(1, theme.needle);\n        \n        ctx.fillStyle = confGradient;\n        ctx.fillRect(cx - confWidth/2, confY, confFill, confHeight);\n        \n        // Confidence label\n        ctx.fillStyle = theme.text;\n        ctx.font = `500 11px \"SF Pro Display\", system-ui, sans-serif`;\n        ctx.textAlign = 'center';\n        ctx.fillText(`${confidence}% confidence`, cx, confY + 18);\n      }\n\n      raf = requestAnimationFrame(draw);\n    };\n\n    draw();\n    return () => { if (raf) cancelAnimationFrame(raf); };\n  }, [lvoProb, ichProb]);\n\n  return (\n    <div className=\"gauge-wrapper\">\n      <canvas ref={canvasRef} className=\"gauge-canvas\" />\n    </div>\n  );\n}\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport ProbabilityRing from './ProbabilityRing.jsx';\nimport TachometerGauge from './TachometerGauge.jsx';\n\nexport function mountIslands() {\n  // Probability rings\n  document.querySelectorAll('[data-react-ring]').forEach((node) => {\n    if (node.__mounted) return;\n    const percent = parseFloat(node.getAttribute('data-percent')) || 0;\n    const level = node.getAttribute('data-level') || 'normal';\n    const root = createRoot(node);\n    root.render(<ProbabilityRing percent={percent} level={level} />);\n    node.__mounted = true;\n    node.__root = root;\n  });\n\n  // Tachometer\n  document.querySelectorAll('[data-react-tachometer]').forEach((node) => {\n    if (node.__mounted) return;\n    const ich = parseFloat(node.getAttribute('data-ich')) || 0;\n    const lvo = parseFloat(node.getAttribute('data-lvo')) || 0;\n    const title = node.getAttribute('data-title') || 'Decision Support – LVO/ICH';\n    const root = createRoot(node);\n    root.render(<TachometerGauge ichProb={ich} lvoProb={lvo} title={title} />);\n    node.__mounted = true;\n    node.__root = root;\n  });\n}\n\nexport function unmountIslands() {\n  document.querySelectorAll('[data-react-ring],[data-react-tachometer]').forEach((node) => {\n    if (node.__mounted && node.__root) {\n      node.__root.unmount();\n      node.__mounted = false;\n      node.__root = null;\n    }\n  });\n}\n","export function renderProgressIndicator(currentStep) {\n  const steps = [\n    { id: 1, label: 'Triage', icon: '🎯' },\n    { id: 2, label: 'Assessment', icon: '📋' },\n    { id: 3, label: 'Results', icon: '📊' },\n  ];\n\n  let html = '<div class=\"progress-indicator\">';\n  steps.forEach((step, index) => {\n    const isActive = step.id === currentStep;\n    const isCompleted = step.id < currentStep;\n    html += `\n      <div class=\"progress-step-container\">\n        <div class=\"progress-step ${isActive ? 'active' : ''} ${isCompleted ? 'completed' : ''}\"\n             aria-label=\"${step.label}\"\n             title=\"${step.label}\">\n          ${isCompleted ? '✓' : step.id}\n        </div>\n        <div class=\"progress-label ${isActive ? 'active' : ''}\">${step.label}</div>\n      </div>\n    `;\n    if (index < steps.length - 1) {\n      html += `<div class=\"progress-line ${isCompleted ? 'completed' : ''}\"></div>`;\n    }\n  });\n  html += '</div>';\n  return html;\n}\n","import { renderProgressIndicator } from '../components/progress.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderTriage1() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(1)}\n      <h2>${t('triage1Title')}</h2>\n      <div class=\"triage-question\">\n        ${t('triage1Question')}\n        <small class=\"help-text\" title=\"Glasgow Coma Scale less than 9 indicates comatose state\">\n          ${t('triage1Help')}\n          <span class=\"info-icon\" aria-label=\"More information\">ℹ️</span>\n        </small>\n      </div>\n      <div class=\"triage-buttons\">\n        <button class=\"yes-btn triage-btn-enhanced\" data-action=\"triage1\" data-value=\"true\">\n          <span class=\"btn-icon\">⚠️</span>\n          <span class=\"btn-content\">\n            <span class=\"btn-primary-text\">${t('triage1Yes')}</span>\n            <span class=\"btn-secondary-text\">GCS < 9</span>\n          </span>\n        </button>\n        <button class=\"no-btn triage-btn-enhanced\" data-action=\"triage1\" data-value=\"false\">\n          <span class=\"btn-icon\">✓</span>\n          <span class=\"btn-content\">\n            <span class=\"btn-primary-text\">${t('triage1No')}</span>\n            <span class=\"btn-secondary-text\">GCS ≥ 9</span>\n          </span>\n        </button>\n      </div>\n    </div>\n  `;\n}\n","import { renderProgressIndicator } from '../components/progress.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderTriage2() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(1)}\n      <h2>${t('triage2Title')}</h2>\n      <div class=\"triage-question\">\n        ${t('triage2Question')}\n        <small>${t('triage2Help')}</small>\n      </div>\n      <div class=\"triage-buttons\">\n        <button class=\"yes-btn\" data-action=\"triage2\" data-value=\"true\">${t('triage2Yes')}</button>\n        <button class=\"no-btn\" data-action=\"triage2\" data-value=\"false\">${t('triage2No')}</button>\n      </div>\n    </div>\n  `;\n}\n","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderComa() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <div class=\"module-header\">\n        <span class=\"module-icon\">🧠</span>\n        <h2>${t('comaModuleTitle') || 'Coma Module'}</h2>\n        <p class=\"module-subtitle\">For patients with Glasgow Coma Scale < 9</p>\n      </div>\n      <form data-module=\"coma\">\n        <div class=\"input-grid\">\n          <div class=\"input-group enhanced-input\">\n            <label for=\"gfap_value\" class=\"enhanced-label\">\n              <span class=\"label-icon\">🔬</span>\n              <span class=\"label-text\">\n                <span class=\"label-primary\">${t('gfapValueLabel')}</span>\n                <span class=\"label-secondary\">Glial Fibrillary Acidic Protein</span>\n              </span>\n              <span class=\"tooltip info-tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('gfapTooltipLong')}</span>\n              </span>\n            </label>\n            <div class=\"input-wrapper\">\n              <input\n                type=\"number\"\n                id=\"gfap_value\"\n                name=\"gfap_value\"\n                min=\"${GFAP_RANGES.min}\"\n                max=\"${GFAP_RANGES.max}\"\n                step=\"0.1\"\n                required\n                aria-describedby=\"gfap-help\"\n                placeholder=\"Enter value (e.g., 150.5)\"\n                class=\"enhanced-number-input\"\n              >\n              <span class=\"input-unit\">pg/mL</span>\n            </div>\n            <div id=\"gfap-help\" class=\"input-help enhanced-help\">\n              <span class=\"help-icon\">📊</span>\n              <span>${t('gfapRange').replace('{min}', GFAP_RANGES.min).replace('{max}', GFAP_RANGES.max)}</span>\n            </div>\n          </div>\n        </div>\n        <div class=\"action-buttons\">\n          <button type=\"submit\" class=\"primary btn-enhanced\">\n            <span class=\"btn-icon\">🔍</span>\n            <span class=\"btn-text\">${t('analyzeIchRisk')}</span>\n          </button>\n          <button type=\"button\" class=\"secondary btn-enhanced\" data-action=\"reset\">\n            <span class=\"btn-icon\">↻</span>\n            <span class=\"btn-text\">${t('startOver')}</span>\n          </button>\n        </div>\n      </form>\n    </div>\n  `;\n}\n","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderLimited() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>${t('limitedDataModuleTitle') || 'Limited Data Module'}</h2>\n      <form data-module=\"limited\">\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"age_years\">${t('ageYearsLabel')}</label>\n            <input type=\"number\" name=\"age_years\" id=\"age_years\" min=\"0\" max=\"120\" required aria-describedby=\"age-help\">\n            <div id=\"age-help\" class=\"input-help\">${t('ageYearsHelp')}</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"systolic_bp\">${t('systolicBpLabel')}</label>\n            <div class=\"input-with-unit\">\n              <input type=\"number\" name=\"systolic_bp\" id=\"systolic_bp\" min=\"60\" max=\"300\" required aria-describedby=\"sbp-help\" inputmode=\"numeric\">\n              <span class=\"unit\">mmHg</span>\n            </div>\n            <div id=\"sbp-help\" class=\"input-help\">${t('systolicBpHelp')}</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"diastolic_bp\">${t('diastolicBpLabel')}</label>\n            <div class=\"input-with-unit\">\n              <input type=\"number\" name=\"diastolic_bp\" id=\"diastolic_bp\" min=\"30\" max=\"200\" required aria-describedby=\"dbp-help\" inputmode=\"numeric\">\n              <span class=\"unit\">mmHg</span>\n            </div>\n            <div id=\"dbp-help\" class=\"input-help\">${t('diastolicBpHelp')}</div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              ${t('gfapValueLabel')}\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('gfapTooltipLong')}</span>\n              </span>\n            </label>\n            <div class=\"input-with-unit\">\n              <input type=\"number\" name=\"gfap_value\" id=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required inputmode=\"decimal\">\n              <span class=\"unit\">pg/mL</span>\n            </div>\n          </div>\n        </div>\n        <div class=\"checkbox-group\">\n          <label class=\"checkbox-wrapper\">\n            <input type=\"checkbox\" name=\"vigilanzminderung\" id=\"vigilanzminderung\">\n            <span class=\"checkbox-label\">${t('vigilanceReduction')}</span>\n          </label>\n        </div>\n        <button type=\"submit\" class=\"primary\">${t('analyzeIchRisk')}</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">${t('startOver')}</button>\n      </form>\n    </div>\n  `;\n}\n","import { renderProgressIndicator } from '../components/progress.js';\nimport { GFAP_RANGES } from '../../config.js';\nimport { t } from '../../localization/i18n.js';\n\nexport function renderFull() {\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(2)}\n      <h2>${t('fullStrokeModuleTitle') || 'Full Stroke Module'}</h2>\n      <form data-module=\"full\">\n        <h3>${t('basicInformation')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"age_years\">${t('ageYearsLabel')}</label>\n            <input type=\"number\" name=\"age_years\" id=\"age_years\" min=\"0\" max=\"120\" required>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"systolic_bp\">${t('systolicBpLabel')}</label>\n            <div class=\"input-with-unit\">\n              <input type=\"number\" name=\"systolic_bp\" id=\"systolic_bp\" min=\"60\" max=\"300\" required inputmode=\"numeric\">\n              <span class=\"unit\">mmHg</span>\n            </div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"diastolic_bp\">${t('diastolicBpLabel')}</label>\n            <div class=\"input-with-unit\">\n              <input type=\"number\" name=\"diastolic_bp\" id=\"diastolic_bp\" min=\"30\" max=\"200\" required inputmode=\"numeric\">\n              <span class=\"unit\">mmHg</span>\n            </div>\n          </div>\n        </div>\n\n        <h3>${t('biomarkersScores')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"input-group\">\n            <label for=\"gfap_value\">\n              ${t('gfapValueLabel')}\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('gfapTooltip')}</span>\n              </span>\n            </label>\n            <div class=\"input-with-unit\">\n              <input type=\"number\" name=\"gfap_value\" id=\"gfap_value\" min=\"${GFAP_RANGES.min}\" max=\"${GFAP_RANGES.max}\" step=\"0.1\" required inputmode=\"decimal\">\n              <span class=\"unit\">pg/mL</span>\n            </div>\n          </div>\n          <div class=\"input-group\">\n            <label for=\"fast_ed_score\">\n              ${t('fastEdScoreLabel')}\n              <span class=\"tooltip\">ℹ️\n                <span class=\"tooltiptext\">${t('fastEdCalculatorSubtitle')}</span>\n              </span>\n            </label>\n            <input type=\"number\" name=\"fast_ed_score\" id=\"fast_ed_score\" min=\"0\" max=\"9\" required readonly placeholder=\"${t('fastEdCalculatorSubtitle')}\" style=\"cursor: pointer;\">\n            <input type=\"hidden\" name=\"armparese\" id=\"armparese_hidden\" value=\"false\">\n            <input type=\"hidden\" name=\"eye_deviation\" id=\"eye_deviation_hidden\" value=\"false\">\n          </div>\n        </div>\n\n        <h3>${t('clinicalSymptoms')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"headache\" id=\"headache\">\n              <span class=\"checkbox-label\">${t('headacheLabel')}</span>\n            </label>\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"vigilanzminderung\" id=\"vigilanzminderung\">\n              <span class=\"checkbox-label\">${t('vigilanzLabel')}</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"beinparese\" id=\"beinparese\">\n              <span class=\"checkbox-label\">${t('legParesis')}</span>\n            </label>\n          </div>\n        </div>\n\n        <h3>${t('medicalHistory')}</h3>\n        <div class=\"input-grid\">\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"atrial_fibrillation\" id=\"atrial_fibrillation\">\n              <span class=\"checkbox-label\">${t('atrialFibrillation')}</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"anticoagulated_noak\" id=\"anticoagulated_noak\">\n              <span class=\"checkbox-label\">${t('onNoacDoac')}</span>\n            </label>\n          </div>\n          <div class=\"checkbox-group\">\n            <label class=\"checkbox-wrapper\">\n              <input type=\"checkbox\" name=\"antiplatelets\" id=\"antiplatelets\">\n              <span class=\"checkbox-label\">${t('onAntiplatelets')}</span>\n            </label>\n          </div>\n        </div>\n\n        <button type=\"submit\" class=\"primary\">${t('analyzeStrokeRisk')}</button>\n        <button type=\"button\" class=\"secondary\" data-action=\"reset\">${t('startOver')}</button>\n      </form>\n    </div>\n  `;\n}\n","import { t } from '../../localization/i18n.js';\n\nexport function renderCriticalAlert() {\n  return `\n    <div class=\"critical-alert\">\n      <h4><span class=\"alert-icon\">🚨</span> ${t('criticalAlertTitle')}</h4>\n      <p>${t('criticalAlertMessage')}</p>\n    </div>\n  `;\n}\n","// User-friendly label formatter for technical field names\n// Converts technical driver and field names to user-friendly labels\n\nimport { t } from '../localization/i18n.js';\n\n/**\n * Mapping of technical field names to the same labels used in input forms\n * Uses existing localization keys from the input forms\n */\nconst FIELD_LABEL_MAP = {\n  // Age and demographics\n  age_years: 'ageLabel',\n  age: 'ageLabel',\n\n  // Blood pressure\n  systolic_bp: 'systolicLabel',\n  diastolic_bp: 'diastolicLabel',\n  systolic_blood_pressure: 'systolicLabel',\n  diastolic_blood_pressure: 'diastolicLabel',\n  blood_pressure_systolic: 'systolicLabel',\n  blood_pressure_diastolic: 'diastolicLabel',\n\n  // Biomarkers\n  gfap_value: 'gfapLabel',\n  gfap: 'gfapLabel',\n  gfap_level: 'gfapLabel',\n\n  // Clinical scores\n  fast_ed_score: 'fastEdLabel',\n  fast_ed: 'fastEdLabel',\n  fast_ed_total: 'fastEdLabel',\n\n  // Neurological symptoms\n  vigilanzminderung: 'vigilanzLabel',\n  vigilance_reduction: 'vigilanzLabel',\n  reduced_consciousness: 'vigilanzLabel',\n  armparese: 'armPareseLabel',\n  arm_paresis: 'armPareseLabel',\n  arm_weakness: 'armPareseLabel',\n  beinparese: 'beinPareseLabel',\n  leg_paresis: 'beinPareseLabel',\n  leg_weakness: 'beinPareseLabel',\n  eye_deviation: 'eyeDeviationLabel',\n  blickdeviation: 'eyeDeviationLabel',\n  headache: 'headacheLabel',\n  kopfschmerzen: 'headacheLabel',\n\n  // Medical history\n  atrial_fibrillation: 'atrialFibLabel',\n  vorhofflimmern: 'atrialFibLabel',\n  anticoagulated_noak: 'anticoagLabel',\n  anticoagulation: 'anticoagLabel',\n  antiplatelets: 'antiplateletsLabel',\n  thrombozytenaggregationshemmer: 'antiplateletsLabel',\n};\n\n/**\n * Fallback patterns for common technical terms\n * Used when no specific mapping exists\n */\nconst PATTERN_REPLACEMENTS = [\n  { pattern: /_score$/, replacement: ' Score' },\n  { pattern: /_value$/, replacement: ' Level' },\n  { pattern: /_bp$/, replacement: ' Blood Pressure' },\n  { pattern: /_years?$/, replacement: ' (years)' },\n  { pattern: /^ich_/, replacement: 'Brain Bleeding ' },\n  { pattern: /^lvo_/, replacement: 'Large Vessel ' },\n  { pattern: /parese$/, replacement: 'Weakness' },\n  { pattern: /deviation$/, replacement: 'Movement' },\n];\n\n/**\n * Format a technical field name using the same labels as input forms\n * @param {string} fieldName - Technical field name (e.g., 'fast_ed_score')\n * @returns {string} - Consistent medical terminology label\n */\nexport function formatDriverName(fieldName) {\n  if (!fieldName) {\n    return '';\n  }\n\n  // First, try to find exact match in mapping to input form labels\n  const mappedKey = FIELD_LABEL_MAP[fieldName.toLowerCase()];\n  if (mappedKey) {\n    const translated = t(mappedKey);\n    if (translated && translated !== mappedKey) {\n      return translated;\n    }\n  }\n\n  // Apply pattern-based replacements for common medical terms\n  let formatted = fieldName.toLowerCase();\n  PATTERN_REPLACEMENTS.forEach(({ pattern, replacement }) => {\n    formatted = formatted.replace(pattern, replacement);\n  });\n\n  // Clean up and format - keep medical terminology consistent\n  formatted = formatted\n    .replace(/_/g, ' ') // Replace underscores with spaces\n    .replace(/\\b\\w/g, (l) => l.toUpperCase()) // Title case\n    .trim();\n\n  return formatted;\n}\n\n/**\n * Format field names for input summary display\n * @param {string} fieldName - Technical field name\n * @returns {string} - User-friendly label for summary\n */\nexport function formatSummaryLabel(fieldName) {\n  // Use the same logic but with specific summary context\n  const friendlyLabel = formatDriverName(fieldName);\n\n  // Remove units from summary labels as they're shown in values\n  return friendlyLabel\n    .replace(/\\s*\\([^)]*\\)\\s*/g, '') // Remove anything in parentheses\n    .trim();\n}\n\n/**\n * Format field values for display\n * @param {any} value - Field value\n * @param {string} fieldName - Field name for context\n * @returns {string} - Formatted display value\n */\nexport function formatDisplayValue(value, fieldName = '') {\n  if (value === null || value === undefined || value === '') {\n    return '';\n  }\n\n  if (typeof value === 'boolean') {\n    return value ? '✓' : '✗';\n  }\n\n  if (typeof value === 'number') {\n    // Add units based on field type\n    if (fieldName.includes('bp') || fieldName.includes('blood_pressure')) {\n      return `${value} mmHg`;\n    }\n    if (fieldName.includes('gfap')) {\n      return `${value} pg/mL`;\n    }\n    if (fieldName.includes('age')) {\n      return `${value} years`;\n    }\n    if (fieldName.includes('score')) {\n      return value.toString();\n    }\n\n    // Default number formatting\n    return Number.isInteger(value) ? value.toString() : value.toFixed(1);\n  }\n\n  return value.toString();\n}\n\n/**\n * Get a short description for a clinical field\n * @param {string} fieldName - Technical field name\n * @returns {string} - Brief description\n */\nexport function getFieldDescription(fieldName) {\n  const descriptions = {\n    fast_ed_score: 'Stroke severity assessment',\n    gfap_value: 'Brain injury biomarker',\n    vigilanzminderung: 'Level of consciousness',\n    systolic_bp: 'Upper blood pressure reading',\n    diastolic_bp: 'Lower blood pressure reading',\n    atrial_fibrillation: 'Irregular heart rhythm',\n    anticoagulated_noak: 'Blood-thinning medication',\n    antiplatelets: 'Anti-clotting medication',\n  };\n\n  return descriptions[fieldName.toLowerCase()] || '';\n}\n","import { t } from '../../localization/i18n.js';\nimport { formatDriverName } from '../../utils/label-formatter.js';\nimport { normalizeDrivers } from '../../logic/shap.js';\n\nexport function renderDriversSection(ich, lvo) {\n  // ('=== DRIVER RENDERING SECTION ===');\n\n  if (!ich?.drivers && !lvo?.drivers) {\n    // ('❌ No drivers available for rendering');\n    return '';\n  }\n\n  let html = `\n    <div class=\"drivers-section\">\n      <div class=\"drivers-header\">\n        <h3><span class=\"driver-header-icon\">🎯</span> ${t('riskAnalysis')}</h3>\n        <p class=\"drivers-subtitle\">${t('riskAnalysisSubtitle')}</p>\n      </div>\n      <div class=\"enhanced-drivers-grid\">\n  `;\n\n  console.log('[Drivers] ICH has drivers:', !!ich?.drivers, ich?.drivers);\n  console.log('[Drivers] LVO has drivers:', !!lvo?.drivers, 'notPossible:', lvo?.notPossible, lvo?.drivers);\n\n  if (ich?.drivers) {\n    console.log('🧠 Rendering ICH drivers panel');\n    html += renderEnhancedDriversPanel(ich.drivers, 'ICH', 'ich', ich.probability);\n  }\n\n  if (lvo?.drivers && !lvo.notPossible) {\n    console.log('🩸 Rendering LVO drivers panel');\n    html += renderEnhancedDriversPanel(lvo.drivers, 'LVO', 'lvo', lvo.probability);\n  }\n\n  html += `\n      </div>\n    </div>\n  `;\n  return html;\n}\n\nexport function renderDriversPanel(drivers, title, type) {\n  if (!drivers || Object.keys(drivers).length === 0) {\n    return `\n      <div class=\"drivers-panel\">\n        <h4>\n          <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\n          ${title} ${t('riskFactors')}\n        </h4>\n        <p style=\"color: var(--text-secondary); font-style: italic;\">\n          Driver information not available from this prediction model.\n        </p>\n      </div>\n    `;\n  }\n\n  const driversViewModel = normalizeDrivers(drivers);\n\n  if (driversViewModel.kind === 'unavailable') {\n    return `\n      <div class=\"drivers-panel\">\n        <h4>\n          <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\n          ${title} ${t('riskFactors')}\n        </h4>\n        <p style=\"color: var(--text-secondary); font-style: italic;\">\n          Driver analysis not available for this prediction.\n        </p>\n      </div>\n    `;\n  }\n\n  let html = `\n    <div class=\"drivers-panel\">\n      <h4>\n        <span class=\"driver-icon ${type}\">${type === 'ich' ? 'I' : 'L'}</span>\n        ${title} Risk Factors\n      </h4>\n  `;\n\n  // Calculate relative importance for legacy panel\n  const totalPositiveWeightLegacy = driversViewModel.positive.reduce((sum, d) => sum + Math.abs(d.weight), 0);\n  const totalNegativeWeightLegacy = driversViewModel.negative.reduce((sum, d) => sum + Math.abs(d.weight), 0);\n\n  // Show positive drivers (increase risk)\n  if (driversViewModel.positive.length > 0) {\n    driversViewModel.positive.forEach((driver) => {\n      const relativeImportance = totalPositiveWeightLegacy > 0\n        ? (Math.abs(driver.weight) / totalPositiveWeightLegacy) * 100 : 0;\n      const width = Math.min(relativeImportance * 2, 100); // Scale for visualization\n      html += `\n        <div class=\"driver-item\">\n          <span class=\"driver-label\">${driver.label}</span>\n          <div class=\"driver-bar-container\">\n            <div class=\"driver-bar positive\" style=\"width: ${width}%\">\n              <span class=\"driver-value\">+${relativeImportance.toFixed(0)}%</span>\n            </div>\n          </div>\n        </div>\n      `;\n    });\n  }\n\n  // Show negative drivers (decrease risk)\n  if (driversViewModel.negative.length > 0) {\n    driversViewModel.negative.forEach((driver) => {\n      const relativeImportance = totalNegativeWeightLegacy > 0\n        ? (Math.abs(driver.weight) / totalNegativeWeightLegacy) * 100 : 0;\n      const width = Math.min(relativeImportance * 2, 100); // Scale for visualization\n      html += `\n        <div class=\"driver-item\">\n          <span class=\"driver-label\">${driver.label}</span>\n          <div class=\"driver-bar-container\">\n            <div class=\"driver-bar negative\" style=\"width: ${width}%\">\n              <span class=\"driver-value\">-${relativeImportance.toFixed(0)}%</span>\n            </div>\n          </div>\n        </div>\n      `;\n    });\n  }\n\n  // Show metadata if available\n  if (driversViewModel.meta && Object.keys(driversViewModel.meta).length > 0) {\n    html += `\n      <div style=\"margin-top: 15px; padding-top: 10px; border-top: 1px solid var(--border-color);\">\n        <small style=\"color: var(--text-secondary);\">\n    `;\n\n    if (driversViewModel.meta.base_value !== undefined) {\n      html += `Base value: ${driversViewModel.meta.base_value.toFixed(2)} `;\n    }\n    if (driversViewModel.meta.contrib_sum !== undefined) {\n      html += `Contrib sum: ${driversViewModel.meta.contrib_sum.toFixed(2)} `;\n    }\n    if (driversViewModel.meta.logit_total !== undefined) {\n      html += `Logit total: ${driversViewModel.meta.logit_total.toFixed(2)}`;\n    }\n\n    html += `\n        </small>\n      </div>\n    `;\n  }\n\n  html += '</div>';\n  return html;\n}\n\nexport function renderEnhancedDriversPanel(drivers, title, type, probability) {\n  if (!drivers || Object.keys(drivers).length === 0) {\n    // (`No drivers data for ${title}`);\n    return `\n      <div class=\"enhanced-drivers-panel ${type}\">\n        <div class=\"panel-header\">\n          <div class=\"panel-icon ${type}\">${type === 'ich' ? '🩸' : '🧠'}</div>\n          <div class=\"panel-title\">\n            <h4>${title} ${t('riskFactors')}</h4>\n            <span class=\"panel-subtitle\">${t('noDriverData')}</span>\n          </div>\n        </div>\n        <p class=\"no-drivers-message\">\n          ${t('driverInfoNotAvailable')}\n        </p>\n      </div>\n    `;\n  }\n\n  // Drivers are already in the correct format from our new extraction\n  const driversViewModel = drivers;\n\n  if (driversViewModel.kind === 'unavailable') {\n    return `\n      <div class=\"enhanced-drivers-panel ${type}\">\n        <div class=\"panel-header\">\n          <div class=\"panel-icon ${type}\">${type === 'ich' ? '🩸' : '🧠'}</div>\n          <div class=\"panel-title\">\n            <h4>${title} ${t('riskFactors')}</h4>\n            <span class=\"panel-subtitle\">${t('driverAnalysisUnavailable')}</span>\n          </div>\n        </div>\n        <p class=\"no-drivers-message\">\n          ${t('driverAnalysisNotAvailable')}\n        </p>\n      </div>\n    `;\n  }\n\n  // Sort drivers by absolute impact and limit to top 6 most important\n  const positiveDrivers = (driversViewModel.positive || [])\n    .sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight))\n    .slice(0, 3); // Top 3 positive drivers\n\n  const negativeDrivers = (driversViewModel.negative || [])\n    .sort((a, b) => Math.abs(b.weight) - Math.abs(a.weight))\n    .slice(0, 3); // Top 3 negative drivers\n\n  const maxWeight = Math.max(\n    ...positiveDrivers.map((d) => Math.abs(d.weight)),\n    ...negativeDrivers.map((d) => Math.abs(d.weight)),\n    0.01, // Prevent division by zero\n  );\n\n  console.log(`[Drivers] ${type} maxWeight:`, maxWeight);\n  console.log(`[Drivers] ${type} positive:`, positiveDrivers.map((d) => `${d.label}: ${d.weight}`));\n  console.log(`[Drivers] ${type} negative:`, negativeDrivers.map((d) => `${d.label}: ${d.weight}`));\n  console.log(`[Drivers] ${type} positive weights:`, positiveDrivers.map((d) => Math.abs(d.weight)));\n  console.log(`[Drivers] ${type} negative weights:`, negativeDrivers.map((d) => Math.abs(d.weight)));\n\n  let html = `\n    <div class=\"enhanced-drivers-panel ${type}\">\n      <div class=\"panel-header\">\n        <div class=\"panel-icon ${type}\">${type === 'ich' ? '🩸' : '🧠'}</div>\n        <div class=\"panel-title\">\n          <h4>${title} ${t('riskFactors')}</h4>\n          <span class=\"panel-subtitle\">${t('contributingFactors')}</span>\n        </div>\n      </div>\n      \n      <div class=\"drivers-split-view\">\n        <div class=\"drivers-column positive-column\">\n          <div class=\"column-header\">\n            <span class=\"column-icon\">↑</span>\n            <span class=\"column-title\">${t('increaseRisk')}</span>\n          </div>\n          <div class=\"compact-drivers\">\n  `;\n\n  // Calculate relative importance percentages\n  const totalPositiveWeight = positiveDrivers.reduce((sum, d) => sum + Math.abs(d.weight), 0);\n\n  // Render positive drivers\n  if (positiveDrivers.length > 0) {\n    positiveDrivers.forEach((driver, index) => {\n      // Calculate relative importance as percentage of total positive contribution\n      const relativeImportance = totalPositiveWeight > 0\n        ? (Math.abs(driver.weight) / totalPositiveWeight) * 100 : 0;\n\n      // Use baseline implementation: ratio to maxWeight (TRUE working method)\n      const barWidth = (Math.abs(driver.weight) / maxWeight) * 100;\n      console.log(`[Drivers] ${type} positive driver \"${driver.label}\": weight=${Math.abs(driver.weight)}, relativeImportance=${relativeImportance.toFixed(1)}%, barWidth=${barWidth}%`);\n\n      const cleanLabel = formatDriverName(driver.label);\n\n      html += `\n        <div class=\"compact-driver-item\">\n          <div class=\"compact-driver-label\">${cleanLabel}</div>\n          <div class=\"compact-driver-bar positive\" style=\"width: ${barWidth}%\">\n            <span class=\"compact-driver-value\">+${relativeImportance.toFixed(0)}%</span>\n          </div>\n        </div>\n      `;\n    });\n  } else {\n    html += `<div class=\"no-factors\">${t('noPositiveFactors')}</div>`;\n  }\n\n  html += `\n          </div>\n        </div>\n        \n        <div class=\"drivers-column negative-column\">\n          <div class=\"column-header\">\n            <span class=\"column-icon\">↓</span>\n            <span class=\"column-title\">${t('decreaseRisk')}</span>\n          </div>\n          <div class=\"compact-drivers\">\n  `;\n\n  // Calculate relative importance percentages for negative drivers\n  const totalNegativeWeight = negativeDrivers.reduce((sum, d) => sum + Math.abs(d.weight), 0);\n\n  // Render negative drivers\n  if (negativeDrivers.length > 0) {\n    negativeDrivers.forEach((driver, index) => {\n      // Calculate relative importance as percentage of total negative contribution\n      const relativeImportance = totalNegativeWeight > 0\n        ? (Math.abs(driver.weight) / totalNegativeWeight) * 100 : 0;\n\n      // Use baseline implementation: ratio to maxWeight (TRUE working method)\n      const barWidth = (Math.abs(driver.weight) / maxWeight) * 100;\n      console.log(`[Drivers] ${type} negative driver \"${driver.label}\": weight=${Math.abs(driver.weight)}, relativeImportance=${relativeImportance.toFixed(1)}%, barWidth=${barWidth}%`);\n\n      const cleanLabel = formatDriverName(driver.label);\n\n      html += `\n        <div class=\"compact-driver-item\">\n          <div class=\"compact-driver-label\">${cleanLabel}</div>\n          <div class=\"compact-driver-bar negative\" style=\"width: ${barWidth}%\">\n            <span class=\"compact-driver-value\">-${relativeImportance.toFixed(0)}%</span>\n          </div>\n        </div>\n      `;\n    });\n  } else {\n    html += `<div class=\"no-factors\">${t('noNegativeFactors')}</div>`;\n  }\n\n  html += `\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n\n  return html;\n}\n","import { CRITICAL_THRESHOLDS } from '../config.js';\n\nexport function getRiskLevel(probabilityPercent, type) {\n  const p = Number(probabilityPercent);\n  const thresholds = CRITICAL_THRESHOLDS[type];\n\n  if (p >= thresholds.high) {\n    return '🔴 HIGH RISK';\n  } if (p >= thresholds.medium) {\n    return '🟡 MEDIUM RISK';\n  }\n  return '🟢 LOW RISK';\n}\n\nexport function formatTime(milliseconds) {\n  const seconds = Math.floor(milliseconds / 1000);\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n}\n","import { renderProgressIndicator } from '../components/progress.js';\nimport { renderCriticalAlert } from '../components/alerts.js';\nimport { renderDriversSection } from '../components/drivers.js';\nimport { renderStrokeCenterMap } from '../components/stroke-center-map.js';\nimport { getRiskLevel, formatTime } from '../../logic/formatters.js';\nimport { CRITICAL_THRESHOLDS } from '../../config.js';\nimport { t, i18n } from '../../localization/i18n.js';\nimport { store } from '../../state/store.js';\nimport { formatSummaryLabel, formatDisplayValue, formatDriverName } from '../../utils/label-formatter.js';\nimport {\n  calculateICHVolume, estimateVolumeFromGFAP, estimateMortalityFromVolume, formatVolumeDisplay,\n} from '../../logic/ich-volume-calculator.js';\nimport { renderCircularBrainDisplay, initializeVolumeAnimations } from '../components/brain-visualization.js';\nimport { detectKioskMode, getKioskHomeUrl } from '../../logic/kiosk-loader.js';\n// Dynamic import for React islands to avoid module resolution issues\n// Using React island tachometer instead of the vanilla premium gauge\nimport { calculateLegacyICH } from '../../research/legacy-ich-model.js';\nimport { safeLogResearchData, isResearchModeEnabled } from '../../research/data-logger.js';\nimport { renderModelComparison, renderResearchToggle } from '../../research/comparison-ui.js';\n// Premium vanilla JS tachometer implementation\n\nfunction getModuleDisplayName(module) {\n  const isDE = i18n.getCurrentLanguage() === 'de';\n  const moduleNames = {\n    Coma: isDE ? 'Koma-Modul' : 'Coma Module',\n    Limited: isDE ? 'Begrenzte Daten' : 'Limited Data',\n    Full: isDE ? 'Vollständige Bewertung' : 'Full Assessment',\n  };\n  return moduleNames[module] || module;\n}\n\nfunction renderInputSummary() {\n  const state = store.getState();\n  const { formData } = state;\n\n  if (!formData || Object.keys(formData).length === 0) {\n    return '';\n  }\n\n  let summaryHtml = '';\n\n  // Iterate through each module's form data\n  Object.entries(formData).forEach(([module, data]) => {\n    if (data && Object.keys(data).length > 0) {\n      const moduleTitle = t(`${module}ModuleTitle`) || module.charAt(0).toUpperCase() + module.slice(1);\n      let itemsHtml = '';\n\n      Object.entries(data).forEach(([key, value]) => {\n        // Skip empty values\n        if (value === '' || value === null || value === undefined) {\n          return;\n        }\n\n        // Use consistent medical terminology from input forms\n        const label = formatSummaryLabel(key);\n\n        // Format value with appropriate units\n        const displayValue = formatDisplayValue(value, key);\n\n        itemsHtml += `\n          <div class=\"summary-item\">\n            <span class=\"summary-label\">${label}:</span>\n            <span class=\"summary-value\">${displayValue}</span>\n          </div>\n        `;\n      });\n\n      if (itemsHtml) {\n        summaryHtml += `\n          <div class=\"summary-module\">\n            <h4>${moduleTitle}</h4>\n            <div class=\"summary-items\">\n              ${itemsHtml}\n            </div>\n          </div>\n        `;\n      }\n    }\n  });\n\n  if (!summaryHtml) {\n    return '';\n  }\n\n  return `\n    <div class=\"input-summary\">\n      <h3>📋 ${t('inputSummaryTitle')}</h3>\n      <p class=\"summary-subtitle\">${t('inputSummarySubtitle')}</p>\n      <div class=\"summary-content\">\n        ${summaryHtml}\n      </div>\n    </div>\n  `;\n}\n\nfunction renderRiskCard(type, data, results) {\n  if (!data) {\n    console.log(`[RiskCard] No data for ${type}`);\n    return '';\n  }\n\n  const percent = Math.round((data.probability || 0) * 100);\n  console.log(`[RiskCard] ${type} - probability: ${data.probability}, percent: ${percent}%`);\n\n  const riskLevel = getRiskLevel(percent, type);\n  const isCritical = percent > 70; // Very high risk threshold\n  const isHigh = percent > CRITICAL_THRESHOLDS[type].high;\n\n  const icons = { ich: '🩸', lvo: '🧠' };\n  const titles = { ich: t('ichProbability'), lvo: t('lvoProbability') };\n\n  const level = isCritical ? 'critical' : isHigh ? 'high' : 'normal';\n  const color = level === 'critical' ? '#ff4444' : level === 'high' ? '#ff8800' : '#0066cc';\n  const circumference = Math.PI * 100;\n  const offset = circumference * (1 - percent / 100);\n\n  return `\n    <div class=\"enhanced-risk-card ${type} ${level}\">\n      <div class=\"risk-header\">\n        <div class=\"risk-icon\">${icons[type]}</div>\n        <div class=\"risk-title\">\n          <h3>${titles[type]}</h3>\n        </div>\n      </div>\n\n      <div class=\"risk-probability\">\n        <div class=\"circles-container\">\n          <div class=\"rings-row\">\n            <div class=\"circle-item\">\n              <div class=\"probability-circle\">\n                <svg viewBox=\"0 0 120 120\" width=\"120\" height=\"120\" style=\"display: block; overflow: visible;\">\n                  <circle cx=\"60\" cy=\"60\" r=\"50\" fill=\"none\" stroke=\"rgba(255,255,255,0.2)\" stroke-width=\"8\"/>\n                  <circle cx=\"60\" cy=\"60\" r=\"50\" fill=\"none\"\n                    stroke=\"${color}\"\n                    stroke-width=\"8\"\n                    stroke-dasharray=\"${circumference}\"\n                    stroke-dashoffset=\"${offset}\"\n                    stroke-linecap=\"round\"\n                    transform=\"rotate(-90 60 60)\"/>\n                  <text x=\"60\" y=\"65\"\n                    text-anchor=\"middle\"\n                    font-family=\"system-ui, -apple-system, sans-serif\"\n                    font-size=\"24\"\n                    font-weight=\"bold\"\n                    fill=\"currentColor\"\n                    class=\"risk-percentage-text\"\n                    style=\"pointer-events: none;\">\n                    ${percent}%\n                  </text>\n                </svg>\n              </div>\n              <div class=\"circle-label\">${type === 'ich' ? t('ichRisk') : t('lvoRisk')}</div>\n            </div>\n          </div>\n          <div class=\"risk-level ${level}\">${riskLevel}</div>\n        </div>\n\n        <div class=\"risk-assessment\"></div>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Render ICH volume display for integration into risk card\n * @param {object} data - ICH risk data containing GFAP value\n * @returns {string} HTML for volume display\n */\nfunction renderICHVolumeDisplay(data) {\n  // Get GFAP value from the data\n  const gfapValue = data.gfap_value || getCurrentGfapValue();\n\n  if (!gfapValue || gfapValue <= 0) {\n    return '';\n  }\n\n  // Use synchronous estimate for immediate UI rendering\n  const estVolume = estimateVolumeFromGFAP(gfapValue);\n  return `\n    <div class=\"volume-display-container\">\n      ${renderCircularBrainDisplay(estVolume)}\n    </div>\n  `;\n}\n\n/**\n * Get current GFAP value from form data\n * @returns {number} GFAP value or 0 if not available\n */\nfunction getCurrentGfapValue() {\n  const state = store.getState();\n  const { formData } = state;\n\n  // Check all modules for GFAP value\n  for (const module of ['coma', 'limited', 'full']) {\n    if (formData[module]?.gfap_value) {\n      return parseFloat(formData[module].gfap_value);\n    }\n  }\n\n  return 0;\n}\n\nfunction renderLVONotPossible() {\n  return `\n    <div class=\"enhanced-risk-card lvo not-possible\">\n      <div class=\"risk-header\">\n        <div class=\"risk-icon\">🔍</div>\n        <div class=\"risk-title\">\n          <h3>${t('lvoProbability')}</h3>\n          <span class=\"risk-module\">${t('limitedAssessment')}</span>\n        </div>\n      </div>\n      \n      <div class=\"not-possible-content\">\n        <p>${t('lvoNotPossible')}</p>\n        <p>${t('fullExamRequired')}</p>\n      </div>\n    </div>\n  `;\n}\n\nexport function renderResults(results, startTime) {\n  try {\n    // Add error handling for missing results\n    if (!results) {\n      console.error('renderResults: No results data provided');\n      return `\n        <div class=\"container\">\n          <div class=\"error-message\">\n            <h2>No Results Available</h2>\n            <p>Please complete an assessment first.</p>\n            <button class=\"primary\" data-action=\"reload\">Start Over</button>\n          </div>\n        </div>\n      `;\n    }\n\n    const { ich, lvo } = results;\n\n    // Determine current module\n    const currentModule = getCurrentModuleName(ich);\n\n    // Calculate legacy model for research comparison (only for stroke modules)\n    const legacyResults = currentModule !== 'coma' ? calculateLegacyFromResults(results) : null;\n\n    // Debug logging for research mode\n\n    // Log research data if research mode is enabled (background, non-breaking)\n    if (legacyResults && isResearchModeEnabled(currentModule)) {\n      safeLogResearchData(ich, legacyResults, getPatientInputs());\n    }\n\n    // Detect which module was used based on the data\n    const isLimitedOrComa = ich?.module === 'Limited' || ich?.module === 'Coma' || lvo?.notPossible === true;\n    const isFullModule = ich?.module === 'Full Stroke' || ich?.module?.includes('Full');\n\n    let resultsHtml;\n\n    // Debug logging\n    console.log('[Results] ICH data:', ich);\n    console.log('[Results] LVO data:', lvo);\n    console.log('[Results] ICH module:', ich?.module);\n    console.log('[Results] isLimitedOrComa:', isLimitedOrComa);\n    console.log('[Results] isFullModule:', isFullModule);\n\n    // For limited/coma modules - only show ICH\n    if (isLimitedOrComa) {\n      resultsHtml = renderICHFocusedResults(ich, results, startTime, legacyResults, currentModule);\n    } else {\n    // For full module - show ICH prominently with conditional LVO text\n      resultsHtml = renderFullModuleResults(ich, lvo, results, startTime, legacyResults, currentModule);\n    }\n\n    // Initialize animations after DOM update\n    setTimeout(() => {\n      console.log('[Results] Initializing volume animations...');\n      initializeVolumeAnimations();\n    }, 100);\n\n    return resultsHtml;\n  } catch (error) {\n    console.error('Error in renderResults:', error);\n    return `\n      <div class=\"container\">\n        <div class=\"error-message\">\n          <h2>Error Displaying Results</h2>\n          <p>There was an error displaying the results. Error: ${error.message}</p>\n          <button class=\"primary\" data-action=\"reload\">Start Over</button>\n        </div>\n      </div>\n    `;\n  }\n}\n\nfunction renderICHFocusedResults(ich, results, startTime, legacyResults, currentModule) {\n  // Detect kiosk mode\n  const kioskMode = detectKioskMode();\n  const isKioskMode = kioskMode.isKioskMode;\n\n  const criticalAlert = ich && ich.probability > 0.6 ? renderCriticalAlert() : '';\n  const ichPercentLocal = Math.round((ich?.probability || 0) * 100);\n  const strokeCenterHtml = renderStrokeCenterMap(results);\n  const inputSummaryHtml = renderInputSummary();\n  const researchToggleHtml = isResearchModeEnabled(currentModule) ? renderResearchToggle() : '';\n  const researchComparisonHtml = (legacyResults && isResearchModeEnabled(currentModule))\n    ? renderModelComparison(ich, legacyResults, getPatientInputs()) : '';\n\n  // Add alternative diagnoses for coma module\n  const alternativeDiagnosesHtml = (ich?.module === 'Coma') ? renderComaAlternativeDiagnoses(ich.probability) : '';\n\n  // Add differential diagnoses for stroke modules (limited and full)\n  const strokeDifferentialHtml = (ich?.module !== 'Coma') ? renderStrokeDifferentialDiagnoses(ich.probability) : '';\n\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(3)}\n      <h2>${t('bleedingRiskAssessment') || 'Blutungsrisiko-Bewertung / Bleeding Risk Assessment'}</h2>\n      ${criticalAlert}\n      \n      <!-- Single ICH Risk Card -->\n      <div class=\"risk-results-single\">\n        ${renderRiskCard('ich', ich, results)}\n      </div>\n\n      ${ich?.module === 'Coma' && ichPercentLocal >= 50 ? `\n      <!-- ICH Volume Card (Coma only) -->\n      <div class=\"risk-results-single\">\n        ${renderVolumeCard(ich)}\n      </div>\n      ` : ''}\n      \n      <!-- Alternative Diagnoses for Coma Module -->\n      ${alternativeDiagnosesHtml}\n      \n      <!-- Differential Diagnoses for Stroke Modules -->\n      ${strokeDifferentialHtml}\n      \n      <!-- Research Model Comparison (hidden unless research mode) -->\n      ${researchComparisonHtml}\n      \n      <!-- ICH Drivers Only (not shown for Coma module) -->\n      ${ich?.module !== 'Coma' ? `\n        <div class=\"enhanced-drivers-section\">\n          <h3>${t('riskFactorsTitle') || 'Hauptrisikofaktoren / Main Risk Factors'}</h3>\n          ${renderICHDriversOnly(ich)}\n        </div>\n      ` : ''}\n      \n      <!-- Collapsible Additional Information -->\n      <div class=\"additional-info-section\">\n        <button class=\"info-toggle\" data-target=\"input-summary\">\n          <span class=\"toggle-icon\">📋</span>\n          <span class=\"toggle-text\">${t('inputSummaryTitle')}</span>\n          <span class=\"toggle-arrow\">▼</span>\n        </button>\n        <div class=\"collapsible-content\" id=\"input-summary\" style=\"display: none;\">\n          ${inputSummaryHtml}\n        </div>\n        \n        <button class=\"info-toggle\" data-target=\"stroke-centers\">\n          <span class=\"toggle-icon\">🏥</span>\n          <span class=\"toggle-text\">${t('nearestCentersTitle')}</span>\n          <span class=\"toggle-arrow\">▼</span>\n        </button>\n        <div class=\"collapsible-content\" id=\"stroke-centers\" style=\"display: none;\">\n          ${strokeCenterHtml}\n        </div>\n      </div>\n      \n      <div class=\"results-actions\">\n        ${isKioskMode ? `\n          <!-- Kiosk Mode: Simple navigation back to case list -->\n          <div class=\"primary-actions\">\n            <button type=\"button\" class=\"primary\" data-action=\"kiosk-home\">\n              🏠 Zurück zur Fallliste / Back to Case List\n            </button>\n            <button type=\"button\" class=\"secondary\" id=\"printResults\"> 📄 ${t('printResults')} </button>\n          </div>\n        ` : `\n          <!-- Normal Mode: Full actions -->\n          <div class=\"primary-actions\">\n            <button type=\"button\" class=\"primary\" id=\"shareToKiosk\"> 🚀 ${t('sendToHospital')} </button>\n            <button type=\"button\" class=\"primary\" id=\"printResults\"> 📄 ${t('printResults')} </button>\n            <button type=\"button\" class=\"secondary\" data-action=\"reset\"> ${t('newAssessment')} </button>\n          </div>\n          <div class=\"navigation-actions\">\n            <button type=\"button\" class=\"tertiary\" data-action=\"goBack\"> ← ${t('goBack')} </button>\n            <button type=\"button\" class=\"tertiary\" data-action=\"goHome\"> 🏠 ${t('goHome')} </button>\n          </div>\n        `}\n      </div>\n      \n      <div class=\"disclaimer\">\n        <strong>⚠️ ${t('importantNote')}:</strong> ${t('importantText')} Results generated at ${new Date().toLocaleTimeString()}.\n      </div>\n      \n      ${renderBibliography(ich)}\n      ${researchToggleHtml}\n    </div>\n  `;\n}\n\nfunction renderFullModuleResults(ich, lvo, results, startTime, legacyResults, currentModule) {\n  // Detect kiosk mode\n  const kioskMode = detectKioskMode();\n  const isKioskMode = kioskMode.isKioskMode;\n\n  const ichPercent = Math.round((ich?.probability || 0) * 100);\n  const lvoPercent = Math.round((lvo?.probability || 0) * 100);\n\n  console.log('[FullModuleResults] ICH probability:', ich?.probability, '-> %:', ichPercent);\n  console.log('[FullModuleResults] LVO probability:', lvo?.probability, '-> %:', lvoPercent);\n\n  const criticalAlert = ich && ich.probability > 0.6 ? renderCriticalAlert() : '';\n  const strokeCenterHtml = renderStrokeCenterMap(results);\n  const inputSummaryHtml = renderInputSummary();\n  const researchToggleHtml = isResearchModeEnabled(currentModule) ? renderResearchToggle() : '';\n  const researchComparisonHtml = (legacyResults && isResearchModeEnabled(currentModule))\n    ? renderModelComparison(ich, legacyResults, getPatientInputs()) : '';\n\n  // Get FAST-ED score from form data to determine LVO display\n  const state = store.getState();\n  const fastEdScore = parseInt(state.formData?.full?.fast_ed_score) || 0;\n\n  // Ensure we only show LVO in full module and when LVO data is available\n  const isFullModule = currentModule === 'full' || ich?.module === 'Full';\n  const hasValidLVO = lvo && typeof lvo.probability === 'number' && !lvo.notPossible;\n  const showLVORiskCard = isFullModule && fastEdScore > 3 && hasValidLVO;\n\n  // ('  Conditions: isFullModule:', isFullModule);\n  // ('  Conditions: fastEdScore > 3:', fastEdScore > 3);\n  // ('  Conditions: hasValidLVO:', hasValidLVO);\n  // ('  Show LVO Card:', showLVORiskCard);\n\n  // Determine layout configuration\n  const showVolumeCard = ichPercent >= 50;\n  const maxProbability = Math.max(ichPercent, lvoPercent);\n  // Robust ratio for gating (avoid divide-by-zero)\n  const eps = 0.5;\n  const ratio = lvoPercent / Math.max(ichPercent, eps);\n  const inRatioBand = ratio >= 0.6 && ratio <= 1.7;\n  // Strong-signal gate: both ICH and LVO at least 50%, and ratio in an informative band\n  const showTachometer = isFullModule && ichPercent >= 50 && lvoPercent >= 50 && inRatioBand;\n  const showDominanceBanner = isFullModule && ichPercent >= 50 && lvoPercent >= 50 && !inRatioBand;\n  // DEBUG: Temporary relaxed conditions for testing\n  const debugShowTachometer = isFullModule && ichPercent >= 30 && lvoPercent >= 30;\n\n  // Calculate number of cards and layout class\n  let cardCount = 1; // Always have ICH\n  // No placeholder needed - only show LVO card when FAST-ED > 3\n  if (showLVORiskCard) {\n    cardCount++;\n  }\n  if (showVolumeCard) {\n    cardCount++;\n  }\n\n  const layoutClass = cardCount === 1 ? 'risk-results-single'\n    : cardCount === 2 ? 'risk-results-dual'\n      : 'risk-results-triple';\n\n  // Add differential diagnoses for stroke modules\n  const strokeDifferentialHtml = renderStrokeDifferentialDiagnoses(ich.probability);\n\n  return `\n    <div class=\"container\">\n      ${renderProgressIndicator(3)}\n      <h2>${t('resultsTitle')}</h2>\n      ${criticalAlert}\n      \n      <!-- Risk Assessment Display -->\n      <div class=\"${layoutClass}\">\n        ${renderRiskCard('ich', ich, results)}\n        ${showLVORiskCard ? renderRiskCard('lvo', lvo, results) : ''}\n        ${showVolumeCard ? renderVolumeCard(ich) : ''}\n      </div>\n      \n      <!-- Treatment Decision Gauge (when strong signal) -->\n      ${debugShowTachometer ? renderTachometerGauge(ichPercent, lvoPercent) : ''}\n      ${!debugShowTachometer && showDominanceBanner ? renderDominanceBanner(ichPercent, lvoPercent, ratio) : ''}\n      \n      <!-- Differential Diagnoses for Stroke Modules -->\n      ${strokeDifferentialHtml}\n      \n      <!-- Research Model Comparison (hidden unless research mode) -->\n      ${researchComparisonHtml}\n      \n      <!-- Risk Factor Drivers -->\n      <div class=\"enhanced-drivers-section\">\n        <h3>${t('riskFactorsTitle') || 'Risikofaktoren / Risk Factors'}</h3>\n        ${showLVORiskCard ? renderDriversSection(ich, lvo) : renderICHDriversOnly(ich)}\n      </div>\n      \n      <!-- Collapsible Additional Information -->\n      <div class=\"additional-info-section\">\n        <button class=\"info-toggle\" data-target=\"input-summary\">\n          <span class=\"toggle-icon\">📋</span>\n          <span class=\"toggle-text\">${t('inputSummaryTitle')}</span>\n          <span class=\"toggle-arrow\">▼</span>\n        </button>\n        <div class=\"collapsible-content\" id=\"input-summary\" style=\"display: none;\">\n          ${inputSummaryHtml}\n        </div>\n        \n        <button class=\"info-toggle\" data-target=\"stroke-centers\">\n          <span class=\"toggle-icon\">🏥</span>\n          <span class=\"toggle-text\">${t('nearestCentersTitle')}</span>\n          <span class=\"toggle-arrow\">▼</span>\n        </button>\n        <div class=\"collapsible-content\" id=\"stroke-centers\" style=\"display: none;\">\n          ${strokeCenterHtml}\n        </div>\n      </div>\n      \n      <div class=\"results-actions\">\n        ${isKioskMode ? `\n          <!-- Kiosk Mode: Simple navigation back to case list -->\n          <div class=\"primary-actions\">\n            <button type=\"button\" class=\"primary\" data-action=\"kiosk-home\">\n              🏠 Zurück zur Fallliste / Back to Case List\n            </button>\n            <button type=\"button\" class=\"secondary\" id=\"printResults\"> 📄 ${t('printResults')} </button>\n          </div>\n        ` : `\n          <!-- Normal Mode: Full actions -->\n          <div class=\"primary-actions\">\n            <button type=\"button\" class=\"primary\" id=\"shareToKiosk\"> 🚀 ${t('sendToHospital')} </button>\n            <button type=\"button\" class=\"primary\" id=\"printResults\"> 📄 ${t('printResults')} </button>\n            <button type=\"button\" class=\"secondary\" data-action=\"reset\"> ${t('newAssessment')} </button>\n          </div>\n          <div class=\"navigation-actions\">\n            <button type=\"button\" class=\"tertiary\" data-action=\"goBack\"> ← ${t('goBack')} </button>\n            <button type=\"button\" class=\"tertiary\" data-action=\"goHome\"> 🏠 ${t('goHome')} </button>\n          </div>\n        `}\n      </div>\n      \n      <div class=\"disclaimer\">\n        <strong>⚠️ ${t('importantNote')}:</strong> ${t('importantText')} Results generated at ${new Date().toLocaleTimeString()}.\n      </div>\n      \n      ${renderBibliography(ich)}\n      ${researchToggleHtml}\n    </div>\n  `;\n}\n\nfunction renderLVONotification() {\n  return `\n    <div class=\"secondary-notification\">\n      <p class=\"lvo-possible\">\n        ⚡ ${t('lvoMayBePossible') || 'Großgefäßverschluss möglich / Large vessel occlusion possible'}\n      </p>\n    </div>\n  `;\n}\n\nfunction renderDominanceBanner(ichPercent, lvoPercent, ratio) {\n  const dominant = ratio > 1 ? 'LVO' : 'ICH';\n  const icon = dominant === 'LVO' ? '🧠' : '🩸';\n  const dominantText = i18n.getCurrentLanguage() === 'de'\n    ? (dominant === 'LVO' ? 'LVO-dominant' : 'ICH-dominant')\n    : (dominant === 'LVO' ? 'LVO dominant' : 'ICH dominant');\n  const subtitle = i18n.getCurrentLanguage() === 'de'\n    ? `Verhältnis LVO/ICH: ${ratio.toFixed(2)}`\n    : `LVO/ICH ratio: ${ratio.toFixed(2)}`;\n  return `\n    <div class=\"tachometer-section\">\n      <div class=\"tachometer-card\">\n        <div class=\"treatment-recommendation ${dominant === 'LVO' ? 'lvo-dominant' : 'ich-dominant'}\">\n          <div class=\"recommendation-icon\">${icon}</div>\n          <div class=\"recommendation-text\">\n            <h4>${dominantText}</h4>\n            <p>${subtitle}</p>\n          </div>\n          <div class=\"probability-summary\">\n            ICH: ${ichPercent}% | LVO: ${lvoPercent}%\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\nfunction renderICHDriversOnly(ich) {\n  if (!ich || !ich.drivers) {\n    return '<p class=\"no-drivers\">No driver data available</p>';\n  }\n\n  // Drivers are already formatted from API with positive/negative arrays\n  const driversData = ich.drivers;\n\n  // Check if drivers have the correct structure\n  if (!driversData.positive && !driversData.negative) {\n    // Fallback for unexpected format\n    return '<p class=\"no-drivers\">Driver format error</p>';\n  }\n\n  const positiveDrivers = driversData.positive || [];\n  const negativeDrivers = driversData.negative || [];\n\n  return `\n    <div class=\"drivers-split-view\">\n      <div class=\"drivers-column positive-column\">\n        <div class=\"column-header\">\n          <span class=\"column-icon\">⬆</span>\n          <span class=\"column-title\">${t('increasingRisk') || 'Risikoerhöhend / Increasing Risk'}</span>\n        </div>\n        <div class=\"compact-drivers\">\n          ${positiveDrivers.length > 0\n    ? positiveDrivers.slice(0, 5).map((d) => renderCompactDriver(d, 'positive')).join('')\n    : `<p class=\"no-factors\">${t('noFactors') || 'Keine Faktoren / No factors'}</p>`\n}\n        </div>\n      </div>\n      \n      <div class=\"drivers-column negative-column\">\n        <div class=\"column-header\">\n          <span class=\"column-icon\">⬇</span>\n          <span class=\"column-title\">${t('decreasingRisk') || 'Risikomindernd / Decreasing Risk'}</span>\n        </div>\n        <div class=\"compact-drivers\">\n          ${negativeDrivers.length > 0\n    ? negativeDrivers.slice(0, 5).map((d) => renderCompactDriver(d, 'negative')).join('')\n    : `<p class=\"no-factors\">${t('noFactors') || 'Keine Faktoren / No factors'}</p>`\n}\n        </div>\n      </div>\n    </div>\n  `;\n}\n\nfunction renderCompactDriver(driver, type) {\n  // Driver object has 'label' and 'weight' properties\n  const percentage = Math.abs(driver.weight * 100);\n  const width = Math.min(percentage * 2, 100); // Scale for display\n\n  return `\n    <div class=\"compact-driver-item\">\n      <div class=\"compact-driver-label\">${formatDriverName(driver.label)}</div>\n      <div class=\"compact-driver-bar ${type}\" style=\"width: ${width}%;\">\n        <span class=\"compact-driver-value\">${percentage.toFixed(1)}%</span>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Render bibliography footer with research citations\n * @param {object} ichData - ICH risk data containing probability\n * @returns {string} HTML for bibliography section\n */\nfunction renderBibliography(ichData) {\n  // Only show bibliography if ICH risk is >= 50%\n  if (!ichData || !ichData.probability) {\n    return '';\n  }\n\n  const ichPercent = Math.round((ichData.probability || 0) * 100);\n  if (ichPercent < 50) {\n    return '';\n  }\n\n  const gfapValue = getCurrentGfapValue();\n  if (!gfapValue || gfapValue <= 0) {\n    return '';\n  }\n\n  return `\n    <div class=\"bibliography-section\">\n      <h4>${t('references')}</h4>\n      <div class=\"citations\">\n        <div class=\"citation\">\n          <span class=\"citation-number\">¹</span>\n          <span class=\"citation-text\">Broderick et al. (1993). Volume of intracerebral hemorrhage. A powerful and easy-to-use predictor of 30-day mortality. Stroke, 24(7), 987-993.</span>\n        </div>\n        <div class=\"citation\">\n          <span class=\"citation-number\">²</span>\n          <span class=\"citation-text\">Krishnan et al. (2013). Hematoma expansion in intracerebral hemorrhage: Predictors and outcomes. Neurology, 81(19), 1660-1666.</span>\n        </div>\n        <div class=\"citation\">\n          <span class=\"citation-number\">³</span>\n          <span class=\"citation-text\">Putra et al. (2020). Functional outcomes and mortality in patients with intracerebral hemorrhage. Critical Care Medicine, 48(3), 347-354.</span>\n        </div>\n        <div class=\"citation\">\n          <span class=\"citation-number\">⁴</span>\n          <span class=\"citation-text\">Tangella et al. (2020). Early prediction of mortality in intracerebral hemorrhage using clinical markers. Journal of Neurocritical Care, 13(2), 89-97.</span>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\n/**\n * Calculate legacy model results from current results data (background, non-breaking)\n * @param {object} results - Main model results\n * @returns {object|null} - Legacy model results or null if not possible\n */\nfunction calculateLegacyFromResults(results) {\n  try {\n    const patientInputs = getPatientInputs();\n\n    if (!patientInputs.age || !patientInputs.gfap) {\n      // console.log('🔍 Missing required inputs for legacy model:', {\n      //  age: patientInputs.age,\n      //  gfap: patientInputs.gfap,\n      // });\n      return null;\n    }\n\n    const legacyResult = calculateLegacyICH(patientInputs);\n\n    return legacyResult;\n  } catch (error) {\n    // console.log('Legacy model calculation failed (non-critical):', error);\n    return null;\n  }\n}\n\n/**\n * Get patient input data from store for research logging\n * @returns {object} - Patient input data\n */\nfunction getPatientInputs() {\n  const state = store.getState();\n  const { formData } = state;\n\n  // Extract age and GFAP from any module\n  let age = null;\n  let gfap = null;\n\n  for (const module of ['coma', 'limited', 'full']) {\n    if (formData[module]) {\n      age = age || formData[module].age_years;\n      gfap = gfap || formData[module].gfap_value;\n    }\n  }\n\n  const result = {\n    age: parseInt(age) || null,\n    gfap: parseFloat(gfap) || null,\n  };\n\n  return result;\n}\n\n/**\n * Render alternative diagnoses for coma module\n * @param {number} probability - ICH probability (0-1)\n * @returns {string} HTML for alternative diagnoses\n */\nfunction renderStrokeDifferentialDiagnoses(probability) {\n  const percent = Math.round(probability * 100);\n\n  if (percent > 25) {\n    return `\n      <div class=\"alternative-diagnosis-card\">\n        <div class=\"diagnosis-header\">\n          <span class=\"lightning-icon\">⚡</span>\n          <h3>${t('differentialDiagnoses')}</h3>\n        </div>\n        <div class=\"diagnosis-content\">\n          <!-- Time Window Confirmation - Clinical Action -->\n          <h4 class=\"clinical-action-heading\">${t('reconfirmTimeWindow')}</h4>\n          \n          <!-- Actual Differential Diagnoses -->\n          <ul class=\"diagnosis-list\">\n            <li>${t('unclearTimeWindow')}</li>\n            <li>${t('rareDiagnoses')}</li>\n          </ul>\n        </div>\n      </div>\n    `;\n  }\n\n  return '';\n}\n\nfunction renderComaAlternativeDiagnoses(probability) {\n  const percent = Math.round(probability * 100);\n  const isDE = i18n.getCurrentLanguage() === 'de';\n\n  if (percent > 25) {\n    // High probability - show SAB, SDH, EDH\n    return `\n      <div class=\"alternative-diagnosis-card\">\n        <div class=\"diagnosis-header\">\n          <span class=\"lightning-icon\">⚡</span>\n          <h3>${isDE ? 'Differentialdiagnosen' : 'Differential Diagnoses'}</h3>\n        </div>\n        <div class=\"diagnosis-content\">\n          <ul class=\"diagnosis-list\">\n            <li>\n              ${isDE\n    ? 'Alternative Diagnosen sind SAB, SDH, EDH (Subarachnoidalblutung, Subduralhämatom, Epiduralhämatom)'\n    : 'Alternative diagnoses include SAH, SDH, EDH (Subarachnoid Hemorrhage, Subdural Hematoma, Epidural Hematoma)'\n}\n            </li>\n            <li>\n              ${isDE\n    ? 'Bei unklarem Zeitfenster seit Symptombeginn oder im erweiterten Zeitfenster kommen auch ein demarkierter Infarkt oder hypoxischer Hirnschaden in Frage'\n    : 'In cases of unclear time window since symptom onset or extended time window, demarcated infarction or hypoxic brain injury should also be considered'\n}\n            </li>\n          </ul>\n        </div>\n      </div>\n    `;\n  }\n  // Low probability - other causes of altered consciousness\n  return `\n      <div class=\"alternative-diagnosis-card\">\n        <div class=\"diagnosis-header\">\n          <span class=\"lightning-icon\">⚡</span>\n          <h3>${isDE ? 'Differentialdiagnosen' : 'Differential Diagnoses'}</h3>\n        </div>\n        <div class=\"diagnosis-content\">\n          <ul class=\"diagnosis-list\">\n            <li>\n              ${isDE\n    ? 'Alternative Diagnose von Vigilanzminderung wahrscheinlich'\n    : 'Alternative diagnosis for reduced consciousness likely'\n}\n            </li>\n            <li>\n              ${isDE\n    ? 'Ein Verschluss der Arteria Basilaris ist nicht ausgeschlossen'\n    : 'Basilar artery occlusion cannot be excluded'\n}\n            </li>\n          </ul>\n        </div>\n      </div>\n    `;\n}\n\n/**\n * Get current module name from results\n * @param {object} ich - ICH results containing module information\n * @returns {string} - Module name ('coma', 'limited', 'full')\n */\nfunction getCurrentModuleName(ich) {\n  if (!ich?.module) {\n    return 'unknown';\n  }\n\n  const module = ich.module.toLowerCase();\n  if (module.includes('coma')) {\n    return 'coma';\n  }\n  if (module.includes('limited')) {\n    return 'limited';\n  }\n  if (module.includes('full')) {\n    return 'full';\n  }\n\n  return 'unknown';\n}\n\n/**\n * Render volume as a standalone risk card (for horizontal layout)\n * @param {object} ichData - ICH data containing volume information\n * @returns {string} HTML for volume risk card\n */\nfunction renderVolumeCard(ichData) {\n  const gfapValue = getCurrentGfapValue();\n  if (!gfapValue || gfapValue <= 0) {\n    return '';\n  }\n\n  // Use fast estimate for immediate UI and mortality band\n  const estVolume = estimateVolumeFromGFAP(gfapValue);\n  const mortality = estimateMortalityFromVolume(estVolume);\n  const percent = Math.round((ichData?.probability || 0) * 100);\n\n  return `\n    <div class=\"enhanced-risk-card volume-card normal\">\n      <div class=\"risk-header\">\n        <div class=\"risk-icon\">🧮</div>\n        <div class=\"risk-title\">\n          <h3>${t('ichVolumeLabel')}</h3>\n        </div>\n      </div>\n      \n      <div class=\"risk-probability\">\n        <div class=\"circles-container\">\n          <div class=\"rings-row\">\n            <div class=\"circle-item\">\n              ${renderICHVolumeDisplay(ichData)}\n              <div class=\"circle-label\">${t('ichVolumeLabel')}</div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"risk-assessment\">\n          <div class=\"mortality-assessment\">\n            ${t('predictedMortality')}: ${mortality}\n          </div>\n      </div>\n    </div>\n  </div>\n  `;\n}\n\n/**\n * Render tachometer gauge for treatment decision when high risk\n * @param {number} ichPercent - ICH probability percentage\n * @param {number} lvoPercent - LVO probability percentage\n * @returns {string} HTML for tachometer gauge\n */\nfunction renderTachometerGauge(ichPercent, lvoPercent) {\n  const ratio = lvoPercent / Math.max(ichPercent, 1);\n\n  return `\n    <div class=\"tachometer-section\">\n      <div class=\"tachometer-card\">\n        <div class=\"tachometer-header\">\n          <h3>🎯 ${i18n.getCurrentLanguage() === 'de' ? 'Entscheidungshilfe – LVO/ICH' : 'Decision Support – LVO/ICH'}</h3>\n          <div class=\"ratio-display\">LVO/ICH Ratio: ${ratio.toFixed(2)}</div>\n        </div>\n        \n        <div class=\"tachometer-gauge\" id=\"tachometer-canvas-container\">\n          <div data-react-tachometer data-ich=\"${ichPercent}\" data-lvo=\"${lvoPercent}\" data-title=\"${i18n.getCurrentLanguage() === 'de' ? 'Entscheidungshilfe – LVO/ICH' : 'Decision Support – LVO/ICH'}\"></div>\n        </div>\n\n        <!-- Legend chips for zones -->\n        <div class=\"tachometer-legend\" aria-hidden=\"true\">\n          <span class=\"legend-chip ich\">ICH</span>\n          <span class=\"legend-chip uncertain\">${i18n.getCurrentLanguage() === 'de' ? 'Unsicher' : 'Uncertain'}</span>\n          <span class=\"legend-chip lvo\">LVO</span>\n        </div>\n\n        <!-- Metrics row: ratio, confidence, absolute difference -->\n        <div class=\"metrics-row\" role=\"group\" aria-label=\"Tachometer metrics\">\n          <div class=\"metric-card\">\n            <div class=\"metric-label\">Ratio</div>\n            <div class=\"metric-value\">${ratio.toFixed(2)}</div>\n            <div class=\"metric-unit\">LVO/ICH</div>\n          </div>\n          <div class=\"metric-card\">\n            <div class=\"metric-label\">Confidence</div>\n            <div class=\"metric-value\">${(() => {\n    const diff = Math.abs(lvoPercent - ichPercent);\n    const maxP = Math.max(lvoPercent, ichPercent);\n    let c = diff < 10 ? Math.round(30 + maxP * 0.3) : diff < 20 ? Math.round(50 + maxP * 0.4) : Math.round(70 + maxP * 0.3);\n    c = Math.max(0, Math.min(100, c));\n    return c;\n  })()}%</div>\n            <div class=\"metric-unit\">percent</div>\n          </div>\n          <div class=\"metric-card\">\n            <div class=\"metric-label\">Difference</div>\n            <div class=\"metric-value\">${Math.abs(lvoPercent - ichPercent).toFixed(0)}%</div>\n            <div class=\"metric-unit\">|LVO − ICH|</div>\n          </div>\n        </div>\n        \n        <div class=\"probability-summary\">\n          ICH: ${ichPercent}% | LVO: ${lvoPercent}%\n        </div>\n        \n        <!-- Hidden probability summary for initialization -->\n        <div class=\"probability-summary\" style=\"display: none;\">\n          ICH: ${ichPercent}% | LVO: ${lvoPercent}%\n        </div>\n      </div>\n    </div>\n  `;\n}\n\n// Premium (vanilla) tachometer disabled in favor of React island gauge\n","/**\n * Login Screen for Research Preview Access\n * iGFAP Stroke Triage Assistant\n */\n\nimport { t } from '../../localization/i18n.js';\nimport { authManager } from '../../auth/authentication.js';\nimport { store } from '../../state/store.js';\n\nexport function renderLoginScreen() {\n  return `\n    <div class=\"login-container\">\n      <div class=\"login-card\">\n        <div class=\"login-header\">\n          <div class=\"app-logo\">\n            <svg class=\"logo-icon-svg\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" aria-label=\"iGFAP Brain Logo\">\n              <!-- Brain icon with GFAP molecular structure -->\n              <defs>\n                <linearGradient id=\"brainGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                  <stop offset=\"0%\" style=\"stop-color:#60a5fa;stop-opacity:1\" />\n                  <stop offset=\"100%\" style=\"stop-color:#3b82f6;stop-opacity:1\" />\n                </linearGradient>\n              </defs>\n              <!-- Brain outline -->\n              <path d=\"M50,15 C30,15 15,30 15,50 C15,55 16,60 18,64 C20,68 25,75 30,80 C35,85 45,90 50,90 C55,90 65,85 70,80 C75,75 80,68 82,64 C84,60 85,55 85,50 C85,30 70,15 50,15 Z\"\n                    fill=\"url(#brainGradient)\" stroke=\"white\" stroke-width=\"2\"/>\n              <!-- Neural pathways (simplified GFAP structure) -->\n              <path d=\"M35,35 L42,45 M48,30 L48,50 M58,35 L65,45 M42,55 L42,70 M58,55 L58,70\"\n                    stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" opacity=\"0.8\"/>\n              <!-- Center nucleus -->\n              <circle cx=\"50\" cy=\"50\" r=\"6\" fill=\"white\" opacity=\"0.9\"/>\n            </svg>\n            <h1>iGFAP Stroke Triage</h1>\n            <div class=\"version-badge\">Research Preview v2.1</div>\n          </div>\n        </div>\n\n        <div class=\"login-content\">\n          <div class=\"access-notice\">\n            <h2>🔬 ${t('researchAccessRequired')}</h2>\n            <p>${t('researchPreviewDescription')}</p>\n\n            <div class=\"research-disclaimer\">\n              <h3>⚠️ ${t('importantNotice')}</h3>\n              <ul>\n                <li><strong>${t('researchUseOnly')}</strong> - ${t('researchUseOnlyDesc')}</li>\n                <li><strong>${t('noPatientDataStorage')}</strong> - ${t('noPatientDataStorageDesc')}</li>\n                <li><strong>${t('clinicalAdvisory')}</strong> - ${t('clinicalAdvisoryDesc')}</li>\n                <li><strong>${t('contact')}:</strong> Deepak Bos (bosdeepak@gmail.com)</li>\n              </ul>\n            </div>\n          </div>\n\n          <form id=\"loginForm\" class=\"login-form\">\n            <div class=\"form-group\">\n              <label for=\"researchPassword\">${t('researchAccessCode')}</label>\n              <input\n                type=\"password\"\n                id=\"researchPassword\"\n                name=\"password\"\n                required\n                autocomplete=\"off\"\n                placeholder=\"${t('enterResearchAccessCode')}\"\n                class=\"password-input\"\n              >\n            </div>\n\n            <div id=\"loginError\" class=\"error-message\" style=\"display: none;\"></div>\n\n            <button type=\"submit\" class=\"login-button primary\">\n              <span class=\"button-text\">${t('accessResearchSystem')}</span>\n              <span class=\"loading-spinner\" style=\"display: none;\">⏳</span>\n            </button>\n          </form>\n\n          <div class=\"login-footer\">\n            <details class=\"regulatory-details\">\n              <summary class=\"regulatory-summary\">\n                <span class=\"regulatory-icon\">ℹ️</span>\n                <span>${t('regulatoryInformation') || 'Regulatory Information'}</span>\n                <span class=\"toggle-icon\">▼</span>\n              </summary>\n              <div class=\"regulatory-notice\">\n                <p><strong>${t('regulatoryStatus')}:</strong> ${t('regulatoryStatusDesc')}</p>\n                <p><strong>${t('dataProtection')}:</strong> ${t('dataProtectionDesc')}</p>\n                <p><strong>${t('clinicalOversight')}:</strong> ${t('clinicalOversightDesc')}</p>\n              </div>\n            </details>\n          </div>\n        </div>\n      </div>\n    </div>\n  `;\n}\n\nexport function initializeLoginScreen() {\n  const loginForm = document.getElementById('loginForm');\n\n  if (!loginForm) {\n    return;\n  }\n\n  const passwordInput = document.getElementById('researchPassword');\n  const loginError = document.getElementById('loginError');\n  const loginButton = loginForm.querySelector('.login-button');\n\n  // Focus password input on load\n  passwordInput.focus();\n\n  loginForm.addEventListener('submit', async (e) => {\n    e.preventDefault();\n\n    const password = passwordInput.value.trim();\n\n    if (!password) {\n      showLoginError('Please enter the research access code');\n      return;\n    }\n\n    // Show loading state\n    setLoginLoading(true);\n    hideLoginError();\n\n    try {\n      const authResult = await authManager.authenticate(password);\n\n      if (authResult.success) {\n        // Log successful authentication\n        store.logEvent('auth_success', {\n          timestamp: new Date().toISOString(),\n          userAgent: navigator.userAgent.substring(0, 100), // Limited info\n        });\n\n        // Navigate to main application\n        store.navigate('triage1');\n      } else {\n        // Handle authentication failure\n        const errorMessage = authResult.message;\n\n        showLoginError(errorMessage);\n        passwordInput.value = '';\n        passwordInput.focus();\n\n        // Log failed attempt (no sensitive data)\n        store.logEvent('auth_failed', {\n          timestamp: new Date().toISOString(),\n          errorCode: authResult.errorCode,\n        });\n      }\n    } catch (error) {\n      showLoginError('Authentication system error. Please try again.');\n      // Remove // for production\n    } finally {\n      setLoginLoading(false);\n    }\n  });\n\n  // Hide error on input\n  passwordInput.addEventListener('input', () => {\n    hideLoginError();\n  });\n\n  function showLoginError(message) {\n    loginError.textContent = message;\n    loginError.style.display = 'block';\n    passwordInput.classList.add('error');\n  }\n\n  function hideLoginError() {\n    loginError.style.display = 'none';\n    passwordInput.classList.remove('error');\n  }\n\n  function setLoginLoading(isLoading) {\n    const buttonText = loginButton.querySelector('.button-text');\n    const loadingSpinner = loginButton.querySelector('.loading-spinner');\n\n    if (isLoading) {\n      buttonText.style.display = 'none';\n      loadingSpinner.style.display = 'inline';\n      loginButton.disabled = true;\n    } else {\n      buttonText.style.display = 'inline';\n      loadingSpinner.style.display = 'none';\n      loginButton.disabled = false;\n    }\n  }\n}\n","/**\n * Accessibility utilities for the Stroke Triage Assistant\n */\n\nexport function announceScreenChange(screen) {\n  const announcement = document.createElement('div');\n  announcement.className = 'sr-only';\n  announcement.setAttribute('role', 'status');\n  announcement.setAttribute('aria-live', 'polite');\n\n  const screenNames = {\n    triage1: 'Coma assessment',\n    triage2: 'Examination capability assessment',\n    coma: 'Coma module',\n    limited: 'Limited data module',\n    full: 'Full stroke assessment',\n    results: 'Assessment results',\n  };\n\n  announcement.textContent = `Navigated to ${screenNames[screen] || screen}`;\n  document.body.appendChild(announcement);\n\n  setTimeout(() => announcement.remove(), 1000);\n}\n\nexport function setPageTitle(screen) {\n  const appName = 'iGFAP';\n  const titles = {\n    triage1: 'Initial Assessment',\n    triage2: 'Examination Capability',\n    coma: 'Coma Module',\n    limited: 'Limited Data Module',\n    full: 'Full Stroke Module',\n    results: 'Assessment Results',\n  };\n\n  const section = titles[screen];\n  // Brand-first to ensure the tab shows iGFAP even when truncated\n  document.title = section ? `${appName} — ${section}` : appName;\n}\n\nexport function focusMainHeading() {\n  // Focus on the main heading for screen readers\n  setTimeout(() => {\n    const heading = document.querySelector('h2');\n    if (heading) {\n      heading.setAttribute('tabindex', '-1');\n      heading.focus();\n      // Remove tabindex after focus for proper tab order\n      setTimeout(() => heading.removeAttribute('tabindex'), 100);\n    }\n  }, 100);\n}\n","import { t } from '../../localization/i18n.js';\n\nexport class FastEdCalculator {\n  constructor() {\n    this.scores = {\n      facial_palsy: 0,\n      arm_weakness: 0,\n      speech_changes: 0,\n      eye_deviation: 0,\n      denial_neglect: 0,\n    };\n    this.onApply = null;\n    this.modal = null;\n  }\n\n  getTotal() {\n    return Object.values(this.scores).reduce((sum, score) => sum + score, 0);\n  }\n\n  getRiskLevel() {\n    const total = this.getTotal();\n    return total >= 4 ? 'high' : 'low';\n  }\n\n  render() {\n    const total = this.getTotal();\n    const riskLevel = this.getRiskLevel();\n\n    return `\n      <div id=\"fastEdModal\" class=\"modal\" role=\"dialog\" aria-labelledby=\"fastEdModalTitle\" aria-hidden=\"true\" style=\"display: none !important;\">\n        <div class=\"modal-content fast-ed-modal\">\n          <div class=\"modal-header\">\n            <h2 id=\"fastEdModalTitle\">${t('fastEdCalculatorTitle')}</h2>\n            <button class=\"modal-close\" aria-label=\"Close\">&times;</button>\n          </div>\n          <div class=\"modal-body\">\n            \n            <!-- Facial Palsy -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('facialPalsyTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"facial_palsy\" value=\"0\" ${this.scores.facial_palsy === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('facialPalsyNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"facial_palsy\" value=\"1\" ${this.scores.facial_palsy === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('facialPalsyMild')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Arm Weakness -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('armWeaknessTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"arm_weakness\" value=\"0\" ${this.scores.arm_weakness === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('armWeaknessNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"arm_weakness\" value=\"1\" ${this.scores.arm_weakness === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('armWeaknessMild')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"arm_weakness\" value=\"2\" ${this.scores.arm_weakness === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('armWeaknessSevere')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Speech Changes -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('speechChangesTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"speech_changes\" value=\"0\" ${this.scores.speech_changes === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('speechChangesNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"speech_changes\" value=\"1\" ${this.scores.speech_changes === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('speechChangesMild')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"speech_changes\" value=\"2\" ${this.scores.speech_changes === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('speechChangesSevere')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Eye Deviation -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('eyeDeviationTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"eye_deviation\" value=\"0\" ${this.scores.eye_deviation === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('eyeDeviationNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"eye_deviation\" value=\"1\" ${this.scores.eye_deviation === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('eyeDeviationPartial')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"eye_deviation\" value=\"2\" ${this.scores.eye_deviation === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('eyeDeviationForced')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Denial/Neglect -->\n            <div class=\"fast-ed-component\">\n              <h3>${t('denialNeglectTitle')}</h3>\n              <div class=\"radio-group\">\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"denial_neglect\" value=\"0\" ${this.scores.denial_neglect === 0 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('denialNeglectNormal')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"denial_neglect\" value=\"1\" ${this.scores.denial_neglect === 1 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('denialNeglectPartial')}</span>\n                </label>\n                <label class=\"radio-option\">\n                  <input type=\"radio\" name=\"denial_neglect\" value=\"2\" ${this.scores.denial_neglect === 2 ? 'checked' : ''}>\n                  <span class=\"radio-label\">${t('denialNeglectComplete')}</span>\n                </label>\n              </div>\n            </div>\n\n            <!-- Total Score Display -->\n            <div class=\"fast-ed-total\">\n              <div class=\"score-display\">\n                <h3>${t('totalScoreTitle')}: <span class=\"total-score\">${total}/9</span></h3>\n                <div class=\"risk-indicator ${riskLevel}\">\n                  ${t('riskLevel')}: ${riskLevel === 'high' ? t('riskLevelHigh') : t('riskLevelLow')}\n                </div>\n              </div>\n            </div>\n\n          </div>\n          <div class=\"modal-footer\">\n            <div class=\"button-group\">\n              <button class=\"secondary\" data-action=\"cancel-fast-ed\">${t('cancel')}</button>\n              <button class=\"primary\" data-action=\"apply-fast-ed\">${t('applyScore')}</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  setupEventListeners() {\n    this.modal = document.getElementById('fastEdModal');\n    if (!this.modal) {\n      return;\n    }\n\n    // Radio button changes\n    this.modal.addEventListener('change', (e) => {\n      if (e.target.type === 'radio') {\n        const component = e.target.name;\n        const value = parseInt(e.target.value);\n        this.scores[component] = value;\n        this.updateDisplay();\n      }\n    });\n\n    // Close button\n    const closeBtn = this.modal.querySelector('.modal-close');\n    closeBtn?.addEventListener('click', () => this.close());\n\n    // Cancel button\n    const cancelBtn = this.modal.querySelector('[data-action=\"cancel-fast-ed\"]');\n    cancelBtn?.addEventListener('click', () => this.close());\n\n    // Apply button\n    const applyBtn = this.modal.querySelector('[data-action=\"apply-fast-ed\"]');\n    applyBtn?.addEventListener('click', () => this.apply());\n\n    // Disable backdrop click-to-close to prevent accidental dismissal\n    // Users must explicitly Cancel or Apply\n    this.modal.addEventListener('click', (e) => {\n      if (e.target === this.modal) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    });\n\n    // Keyboard navigation\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape' && this.modal?.classList.contains('show')) {\n        this.close();\n      }\n    });\n  }\n\n  updateDisplay() {\n    const totalElement = this.modal?.querySelector('.total-score');\n    const riskElement = this.modal?.querySelector('.risk-indicator');\n\n    if (totalElement) {\n      totalElement.textContent = `${this.getTotal()}/9`;\n    }\n\n    if (riskElement) {\n      const riskLevel = this.getRiskLevel();\n      riskElement.className = `risk-indicator ${riskLevel}`;\n      riskElement.textContent = `${t('riskLevel')}: ${riskLevel === 'high' ? t('riskLevelHigh') : t('riskLevelLow')}`;\n    }\n  }\n\n  show(currentScore = 0, onApplyCallback = null) {\n    this.onApply = onApplyCallback;\n\n    // If we have a current score, try to reverse engineer it (basic approximation)\n    if (currentScore > 0 && currentScore <= 9) {\n      this.approximateFromTotal(currentScore);\n    }\n\n    // Inject modal HTML if not already present\n    if (!document.getElementById('fastEdModal')) {\n      document.body.insertAdjacentHTML('beforeend', this.render());\n    } else {\n      // Re-render the modal with current state\n      this.modal.remove();\n      document.body.insertAdjacentHTML('beforeend', this.render());\n      this.modal = document.getElementById('fastEdModal');\n    }\n\n    this.setupEventListeners();\n\n    this.modal.setAttribute('aria-hidden', 'false');\n    this.modal.style.display = 'flex';\n    this.modal.classList.add('show');\n\n    // Focus first radio button\n    const firstRadio = this.modal.querySelector('input[type=\"radio\"]');\n    firstRadio?.focus();\n  }\n\n  close() {\n    if (this.modal) {\n      this.modal.classList.remove('show');\n      this.modal.style.display = 'none';\n      this.modal.setAttribute('aria-hidden', 'true');\n    }\n  }\n\n  apply() {\n    const total = this.getTotal();\n    const armWeaknessBoolean = this.scores.arm_weakness > 0;\n    const eyeDeviationBoolean = this.scores.eye_deviation > 0;\n\n    if (this.onApply) {\n      this.onApply({\n        total,\n        components: { ...this.scores },\n        armWeaknessBoolean,\n        eyeDeviationBoolean,\n      });\n    }\n\n    this.close();\n  }\n\n  approximateFromTotal(total) {\n    // Simple approximation - distribute points across components\n    // This is basic but gives users a starting point\n    this.scores = {\n      facial_palsy: 0,\n      arm_weakness: 0,\n      speech_changes: 0,\n      eye_deviation: 0,\n      denial_neglect: 0,\n    };\n\n    let remaining = total;\n    const components = Object.keys(this.scores);\n\n    for (const component of components) {\n      if (remaining <= 0) {\n        break;\n      }\n\n      const maxForComponent = (component === 'facial_palsy') ? 1 : 2;\n      const assignToThis = Math.min(remaining, maxForComponent);\n      this.scores[component] = assignToThis;\n      remaining -= assignToThis;\n    }\n  }\n}\n\n// Create singleton instance\nexport const fastEdCalculator = new FastEdCalculator();\n","import { store } from '../state/store.js';\nimport {\n  handleTriage1, handleTriage2, handleSubmit, reset, goBack, goHome,\n} from '../logic/handlers.js';\nimport { clearValidationErrors, clearAllValidation } from '../logic/validate.js';\nimport { initializeResearchMode } from '../research/comparison-ui.js';\nimport { authManager } from '../auth/authentication.js';\nimport { safeSetInnerHTML } from '../security/html-sanitizer.js';\nimport { detectKioskMode, getKioskHomeUrl } from '../logic/kiosk-loader.js';\nimport { mountIslands } from '../react/mountIslands.jsx';\n\nimport { renderTriage1 } from './screens/triage1.js';\nimport { renderTriage2 } from './screens/triage2.js';\nimport { renderComa } from './screens/coma.js';\nimport { renderLimited } from './screens/limited.js';\nimport { renderFull } from './screens/full.js';\nimport { renderResults } from './screens/results.js';\nimport { renderLoginScreen, initializeLoginScreen } from './screens/login.js';\nimport { announceScreenChange, setPageTitle, focusMainHeading } from './a11y.js';\nimport { initializeStrokeCenterMap } from './components/stroke-center-map.js';\nimport { fastEdCalculator } from './components/fastEdModal.js';\n\nexport function render(container) {\n  const state = store.getState();\n  const {\n    currentScreen, results, startTime, screenHistory,\n  } = state;\n\n  // Check if we're in kiosk mode - skip authentication\n  const kioskMode = detectKioskMode();\n  const isKioskMode = kioskMode.isKioskMode;\n\n  console.log('[Render] Rendering screen:', currentScreen, 'Has results:', !!results, 'Kiosk mode:', isKioskMode);\n\n  // Optimize DOM updates to prevent CLS\n  const tempContainer = document.createElement('div');\n\n  // Show/hide back button based on navigation history (hide in kiosk mode)\n  const backButton = document.getElementById('backButton');\n  if (backButton) {\n    backButton.style.display = (screenHistory && screenHistory.length > 0 && !isKioskMode) ? 'flex' : 'none';\n  }\n\n  // Render the appropriate screen\n  let html = '';\n  switch (currentScreen) {\n    case 'login':\n      // Skip login screen in kiosk mode\n      if (isKioskMode) {\n        html = renderResults(results, startTime);\n      } else {\n        html = renderLoginScreen();\n      }\n      break;\n    case 'triage1':\n      // Verify authentication for all clinical screens (skip in kiosk mode)\n      if (!isKioskMode && !authManager.isValidSession()) {\n        store.navigate('login');\n        return;\n      }\n      html = renderTriage1();\n      break;\n    case 'triage2':\n      html = renderTriage2();\n      break;\n    case 'coma':\n      html = renderComa();\n      break;\n    case 'limited':\n      html = renderLimited();\n      break;\n    case 'full':\n      html = renderFull();\n      break;\n    case 'results':\n      html = renderResults(results, startTime);\n      break;\n    default:\n      html = renderTriage1();\n  }\n\n  // Use secure DOM update to minimize reflows and prevent XSS\n  try {\n    safeSetInnerHTML(tempContainer, html);\n  } catch (error) {\n    // Fallback to text content on sanitization error\n    tempContainer.textContent = 'Error loading content. Please refresh.';\n  }\n\n  // Single DOM replacement to minimize CLS\n  // Clear container safely without using innerHTML\n  while (container.firstChild) {\n    container.removeChild(container.firstChild);\n  }\n  while (tempContainer.firstChild) {\n    container.appendChild(tempContainer.firstChild);\n  }\n\n  // Restore form data if available\n  const form = container.querySelector('form[data-module]');\n  if (form) {\n    const { module } = form.dataset;\n    restoreFormData(form, module);\n  }\n\n  // Attach event listeners\n  attachEvents(container);\n\n  // Initialize login screen if needed\n  if (currentScreen === 'login') {\n    setTimeout(() => {\n      initializeLoginScreen();\n    }, 100);\n  }\n\n  // Initialize stroke center map and React islands if on results screen\n  if (currentScreen === 'results' && results) {\n    setTimeout(() => {\n      try {\n        console.log('[Render] Initializing stroke center map with results:', results);\n        initializeStrokeCenterMap(results);\n\n        // Mount React islands (tachometer, probability rings)\n        console.log('[Render] Mounting React islands...');\n        mountIslands();\n      } catch (error) {\n        console.error('[Render] Results initialization failed:', error);\n      }\n    }, 100);\n  }\n\n  // Initialize research mode components\n  setTimeout(() => {\n    try {\n      initializeResearchMode();\n    } catch {}\n  }, 150);\n\n  // Accessibility updates\n  announceScreenChange(currentScreen);\n  setPageTitle(currentScreen);\n  focusMainHeading();\n}\n\nfunction restoreFormData(form, module) {\n  const formData = store.getFormData(module);\n  if (!formData || Object.keys(formData).length === 0) {\n    return;\n  }\n\n  Object.entries(formData).forEach(([key, value]) => {\n    const input = form.elements[key];\n    if (input) {\n      if (input.type === 'checkbox') {\n        input.checked = value === true || value === 'on' || value === 'true';\n      } else {\n        input.value = value;\n      }\n    }\n  });\n}\n\nfunction attachEvents(container) {\n  // Clear validation errors when user starts typing in a field\n  container.querySelectorAll('input[type=\"number\"]').forEach((input) => {\n    input.addEventListener('input', () => {\n      // Only clear errors for the specific field being edited\n      const group = input.closest('.input-group');\n      if (group && group.classList.contains('error')) {\n        group.classList.remove('error');\n        group.querySelectorAll('.error-message').forEach((el) => el.remove());\n      }\n    });\n  });\n\n  // Triage button handlers\n  container.querySelectorAll('[data-action]').forEach((button) => {\n    button.addEventListener('click', (e) => {\n      const { action, value } = e.currentTarget.dataset;\n      const boolVal = value === 'true';\n\n      switch (action) {\n        case 'triage1':\n          handleTriage1(boolVal);\n          break;\n        case 'triage2':\n          handleTriage2(boolVal);\n          break;\n        case 'reset':\n          reset();\n          break;\n        case 'goBack':\n          goBack();\n          break;\n        case 'goHome':\n          goHome();\n          break;\n        case 'reload':\n          window.location.reload();\n          break;\n        case 'kiosk-home':\n          window.location.href = getKioskHomeUrl();\n          break;\n      }\n    });\n  });\n\n  // Form submission handlers\n  container.querySelectorAll('form[data-module]').forEach((form) => {\n    form.addEventListener('submit', (e) => {\n      handleSubmit(e, container);\n    });\n  });\n\n  // Print button handler\n  const printButton = container.querySelector('#printResults');\n  if (printButton) {\n    printButton.addEventListener('click', () => window.print());\n  }\n\n  // FAST-ED calculator handler\n  const fastEdInput = container.querySelector('#fast_ed_score');\n  if (fastEdInput) {\n    fastEdInput.addEventListener('click', (e) => {\n      e.preventDefault();\n      const currentValue = parseInt(fastEdInput.value) || 0;\n\n      fastEdCalculator.show(currentValue, (result) => {\n        // Update FAST-ED score\n        fastEdInput.value = result.total;\n\n        // Update hidden arm weakness field\n        const armPareseField = container.querySelector('#armparese_hidden');\n        if (armPareseField) {\n          armPareseField.value = result.armWeaknessBoolean ? 'true' : 'false';\n        }\n\n        // Update eye deviation hidden field if exists\n        const eyeDeviationField = container.querySelector('#eye_deviation_hidden');\n        if (eyeDeviationField) {\n          eyeDeviationField.value = result.eyeDeviationBoolean ? 'true' : 'false';\n        }\n\n        // Trigger change event to save form data\n        fastEdInput.dispatchEvent(new Event('change', { bubbles: true }));\n      });\n    });\n    // Prevent manual typing (baseline behavior)\n    fastEdInput.addEventListener('keydown', (e) => {\n      e.preventDefault();\n    });\n  }\n\n  // Collapsible info toggles handler\n  const infoToggles = container.querySelectorAll('.info-toggle');\n  infoToggles.forEach((toggle) => {\n    toggle.addEventListener('click', (e) => {\n      const targetId = toggle.dataset.target;\n      const targetContent = container.querySelector(`#${targetId}`);\n      const arrow = toggle.querySelector('.toggle-arrow');\n\n      if (targetContent) {\n        const isVisible = targetContent.style.display !== 'none';\n\n        if (isVisible) {\n          // Hide content\n          targetContent.style.display = 'none';\n          targetContent.classList.remove('show');\n          toggle.classList.remove('active');\n          arrow.style.transform = 'rotate(0deg)';\n        } else {\n          // Show content\n          targetContent.style.display = 'block';\n          targetContent.classList.add('show');\n          toggle.classList.add('active');\n          arrow.style.transform = 'rotate(180deg)';\n        }\n      }\n    });\n  });\n}\n","/**\n * UI Management System\n * iGFAP Stroke Triage Assistant - UI Coordination\n *\n * Handles all UI interactions, event listeners, and component management\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { store } from '../state/store.js';\nimport { i18n, t } from '../localization/i18n.js';\nimport { safeAsync, ERROR_CATEGORIES } from '../utils/error-handler.js';\nimport { safeSetInnerHTML } from '../security/html-sanitizer.js';\nimport { render } from '../ui/render.js';\n\n/**\n * Manages all UI interactions and components\n */\nexport class UIManager {\n  constructor() {\n    this.container = null;\n    this.eventListeners = new Map();\n    this.isInitialized = false;\n  }\n\n  /**\n   * Initialize UI management system\n   * @param {HTMLElement} container - Main app container\n   */\n  initialize(container) {\n    this.container = container;\n    this.setupGlobalEventListeners();\n    this.setupHelpModal();\n    this.setupFooterLinks();\n    this.initializeApiModeToggle();\n    this.initializeResearchMode();\n    this.setCurrentYear();\n    this.isInitialized = true;\n  }\n\n  /**\n   * Setup global event listeners\n   */\n  setupGlobalEventListeners() {\n    this.addEventListenerSafe('backButton', 'click', () => {\n      store.goBack();\n      render(this.container);\n    });\n\n    this.addEventListenerSafe('homeButton', 'click', () => {\n      store.goHome();\n      render(this.container);\n    });\n\n    this.addEventListenerSafe('languageToggle', 'click', () => {\n      this.toggleLanguage();\n    });\n\n    this.addEventListenerSafe('darkModeToggle', 'click', () => {\n      this.toggleDarkMode();\n    });\n\n    this.addEventListenerSafe('apiModeToggle', 'click', (e) => {\n      e.preventDefault();\n      this.toggleApiMode();\n    });\n\n    this.addEventListenerSafe('researchModeToggle', 'click', (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      this.toggleResearchMode();\n    });\n\n    // Keyboard navigation\n    this.addGlobalEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        this.closeModal('helpModal');\n      }\n    });\n\n    // Before unload warning\n    this.addGlobalEventListener('beforeunload', (e) => {\n      if (store.hasUnsavedData()) {\n        e.preventDefault();\n        e.returnValue = 'You have unsaved data. Are you sure you want to leave?';\n      }\n    });\n  }\n\n  /**\n   * Initialize API mode toggle (Mock vs API)\n   */\n  initializeApiModeToggle() {\n    const btn = document.getElementById('apiModeToggle');\n    if (!btn) {\n      return;\n    }\n\n    // Default to mock on localhost preview; API in other cases\n    const isLocal = ['localhost', '127.0.0.1', '0.0.0.0'].includes(window.location.hostname);\n    const stored = localStorage.getItem('use_mock_api');\n    if (stored === null && isLocal && !(import.meta && import.meta.env && import.meta.env.DEV)) {\n      localStorage.setItem('use_mock_api', 'true');\n    }\n    this.updateApiModeButton();\n  }\n\n  /** Toggle API mode and update UI */\n  toggleApiMode() {\n    const current = localStorage.getItem('use_mock_api');\n    const next = current === 'true' ? 'false' : 'true';\n    localStorage.setItem('use_mock_api', next);\n    this.updateApiModeButton();\n\n    // Announce change for a11y\n    try {\n      const sr = document.createElement('div');\n      sr.className = 'sr-only';\n      sr.setAttribute('role', 'status');\n      sr.setAttribute('aria-live', 'polite');\n      sr.textContent = next === 'true' ? 'Mock data enabled' : 'Live API enabled';\n      document.body.appendChild(sr);\n      setTimeout(() => sr.remove(), 1200);\n    } catch {}\n  }\n\n  /** Update the button label/title for API mode */\n  updateApiModeButton() {\n    const btn = document.getElementById('apiModeToggle');\n    if (!btn) {\n      return;\n    }\n    const useMock = localStorage.getItem('use_mock_api') !== 'false';\n    if (useMock) {\n      btn.textContent = '🧪';\n      btn.title = 'Mock data: ON (click to use API)';\n      btn.setAttribute('aria-label', 'Mock data enabled');\n    } else {\n      btn.textContent = '☁️';\n      btn.title = 'Live API: ON (click to use mock)';\n      btn.setAttribute('aria-label', 'Live API enabled');\n    }\n  }\n\n  /**\n   * Safely add event listener to element\n   * @param {string} elementId - Element ID\n   * @param {string} event - Event type\n   * @param {Function} handler - Event handler\n   */\n  addEventListenerSafe(elementId, event, handler) {\n    const element = document.getElementById(elementId);\n    if (element) {\n      const wrappedHandler = (e) => {\n        try {\n          handler(e);\n        } catch (error) {\n          this.handleUIError(error, `${elementId}_${event}`);\n        }\n      };\n\n      element.addEventListener(event, wrappedHandler);\n      this.eventListeners.set(`${elementId}_${event}`, { element, handler: wrappedHandler });\n    }\n  }\n\n  /**\n   * Add global event listener\n   * @param {string} event - Event type\n   * @param {Function} handler - Event handler\n   */\n  addGlobalEventListener(event, handler) {\n    const wrappedHandler = (e) => {\n      try {\n        handler(e);\n      } catch (error) {\n        this.handleUIError(error, `global_${event}`);\n      }\n    };\n\n    if (event === 'keydown' || event === 'beforeunload') {\n      const target = event === 'beforeunload' ? window : document;\n      target.addEventListener(event, wrappedHandler);\n      this.eventListeners.set(`global_${event}`, { element: target, handler: wrappedHandler });\n    }\n  }\n\n  /**\n   * Setup help modal functionality\n   */\n  setupHelpModal() {\n    safeAsync(\n      async () => {\n        const helpButton = document.getElementById('helpButton');\n        const helpModal = document.getElementById('helpModal');\n        const modalClose = helpModal?.querySelector('.modal-close');\n\n        if (helpButton && helpModal) {\n          // Ensure modal starts hidden\n          this.closeModal('helpModal');\n\n          this.addEventListenerSafe('helpButton', 'click', () => {\n            this.openModal('helpModal');\n          });\n\n          if (modalClose) {\n            modalClose.addEventListener('click', () => {\n              this.closeModal('helpModal');\n            });\n          }\n\n          helpModal.addEventListener('click', (e) => {\n            if (e.target === helpModal) {\n              this.closeModal('helpModal');\n            }\n          });\n        }\n      },\n      (error) => {\n        // Help modal setup is non-critical\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: 'help_modal_setup' },\n      },\n    );\n  }\n\n  /**\n   * Setup footer links\n   */\n  setupFooterLinks() {\n    this.addEventListenerSafe('privacyLink', 'click', (e) => {\n      e.preventDefault();\n      this.showPrivacyPolicy();\n    });\n\n    this.addEventListenerSafe('disclaimerLink', 'click', (e) => {\n      e.preventDefault();\n      this.showDisclaimer();\n    });\n  }\n\n  /**\n   * Toggle language\n   */\n  toggleLanguage() {\n    safeAsync(\n      async () => {\n        i18n.toggleLanguage();\n        this.updateLanguage();\n      },\n      (error) => {\n        // Language toggle failure is non-critical\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: 'language_toggle' },\n      },\n    );\n  }\n\n  /**\n   * Update UI language\n   */\n  updateLanguage() {\n    // Update HTML lang attribute\n    document.documentElement.lang = i18n.getCurrentLanguage();\n\n    // Update header elements\n    this.updateElementText('.app-header h1', t('appTitle'));\n    this.updateElementText('.emergency-badge', t('emergencyBadge'));\n\n    // Update button tooltips and aria-labels\n    this.updateButtonAttributes('languageToggle', t('languageToggle'));\n    this.updateButtonAttributes('helpButton', t('helpButton'));\n    this.updateButtonAttributes('darkModeToggle', t('darkModeButton'));\n\n    // Update help modal\n    this.updateElementText('#modalTitle', t('helpTitle'));\n\n    // Update language toggle icon\n    const languageToggle = document.getElementById('languageToggle');\n    if (languageToggle) {\n      const currentLang = i18n.getCurrentLanguage();\n      languageToggle.textContent = currentLang === 'en' ? '🇬🇧' : '🇩🇪';\n      languageToggle.dataset.lang = currentLang;\n    }\n  }\n\n  /**\n   * Update element text safely\n   * @param {string} selector - Element selector\n   * @param {string} text - New text content\n   */\n  updateElementText(selector, text) {\n    const element = document.querySelector(selector);\n    if (element && text) {\n      element.textContent = text;\n    }\n  }\n\n  /**\n   * Update button attributes safely\n   * @param {string} elementId - Button element ID\n   * @param {string} text - Tooltip text\n   */\n  updateButtonAttributes(elementId, text) {\n    const element = document.getElementById(elementId);\n    if (element && text) {\n      element.title = text;\n      element.setAttribute('aria-label', text);\n    }\n  }\n\n  /**\n   * Toggle dark mode\n   */\n  toggleDarkMode() {\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    document.body.classList.toggle('dark-mode');\n    const isDark = document.body.classList.contains('dark-mode');\n\n    if (darkModeToggle) {\n      darkModeToggle.textContent = isDark ? '☀️' : '🌙';\n    }\n\n    localStorage.setItem('theme', isDark ? 'dark' : 'light');\n  }\n\n  /**\n   * Research mode management\n   */\n  initializeResearchMode() {\n    const researchModeToggle = document.getElementById('researchModeToggle');\n    if (researchModeToggle) {\n      this.updateResearchMode();\n    }\n  }\n\n  /**\n   * Update research mode visibility\n   */\n  updateResearchMode() {\n    const researchModeToggle = document.getElementById('researchModeToggle');\n    if (researchModeToggle) {\n      const currentModule = this.getCurrentModuleFromResults();\n      const shouldShow = currentModule === 'limited' || currentModule === 'full';\n\n      researchModeToggle.style.display = shouldShow ? 'flex' : 'none';\n      researchModeToggle.style.opacity = shouldShow ? '1' : '0.5';\n    }\n  }\n\n  /**\n   * Get current module from results\n   */\n  getCurrentModuleFromResults() {\n    const state = store.getState();\n    if (state.currentScreen !== 'results' || !state.results?.ich?.module) {\n      return null;\n    }\n\n    const module = state.results.ich.module.toLowerCase();\n    if (module.includes('coma')) {\n      return 'coma';\n    }\n    if (module.includes('limited')) {\n      return 'limited';\n    }\n    if (module.includes('full')) {\n      return 'full';\n    }\n    return null;\n  }\n\n  /**\n   * Toggle research mode\n   */\n  toggleResearchMode() {\n    const researchPanel = document.getElementById('researchPanel');\n    if (!researchPanel) {\n      return;\n    }\n\n    const isVisible = researchPanel.style.display !== 'none';\n    researchPanel.style.display = isVisible ? 'none' : 'block';\n\n    // Update button visual state\n    const researchModeToggle = document.getElementById('researchModeToggle');\n    if (researchModeToggle) {\n      researchModeToggle.style.background = isVisible\n        ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 102, 204, 0.2)';\n    }\n\n    return false;\n  }\n\n  /**\n   * Show research activation message\n   */\n  showResearchActivationMessage() {\n    safeAsync(\n      async () => {\n        const message = document.createElement('div');\n        message.className = 'research-activation-toast';\n\n        try {\n          safeSetInnerHTML(message, `\n            <div class=\"toast-content\">\n              🔬 <strong>Research Mode Activated</strong><br>\n              <small>Model comparison features enabled</small>\n            </div>\n          `);\n        } catch (error) {\n          message.textContent = '🔬 Research Mode Activated - Model comparison features enabled';\n        }\n\n        document.body.appendChild(message);\n\n        setTimeout(() => {\n          if (document.body.contains(message)) {\n            document.body.removeChild(message);\n          }\n        }, 3000);\n      },\n      (error) => {\n        // Research message failure is non-critical\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: 'research_activation_message' },\n      },\n    );\n  }\n\n  /**\n   * Open modal safely\n   * @param {string} modalId - Modal element ID\n   */\n  openModal(modalId) {\n    const modal = document.getElementById(modalId);\n    if (modal) {\n      modal.style.display = 'flex';\n      modal.classList.add('show');\n      modal.setAttribute('aria-hidden', 'false');\n    }\n  }\n\n  /**\n   * Close modal safely\n   * @param {string} modalId - Modal element ID\n   */\n  closeModal(modalId) {\n    const modal = document.getElementById(modalId);\n    if (modal) {\n      modal.classList.remove('show');\n      modal.style.display = 'none';\n      modal.setAttribute('aria-hidden', 'true');\n    }\n  }\n\n  /**\n   * Show privacy policy\n   */\n  showPrivacyPolicy() {\n    alert('Privacy Policy: This tool processes data locally. No patient data is stored or transmitted.');\n  }\n\n  /**\n   * Show disclaimer\n   */\n  showDisclaimer() {\n    alert('Medical Disclaimer: This tool is for clinical decision support only. Always use clinical judgment and follow local protocols.');\n  }\n\n  /**\n   * Set current year in footer\n   */\n  setCurrentYear() {\n    const yearElement = document.getElementById('currentYear');\n    if (yearElement) {\n      yearElement.textContent = new Date().getFullYear();\n    }\n  }\n\n  /**\n   * Handle UI errors gracefully\n   * @param {Error} error - Error object\n   * @param {string} context - Error context\n   */\n  handleUIError(error, context) {\n    // Log error without crashing the UI\n    try {\n      const errorEvent = new CustomEvent('uiError', {\n        detail: { error, context, timestamp: Date.now() },\n      });\n      document.dispatchEvent(errorEvent);\n    } catch (e) {\n      // Even error reporting failed - continue silently\n    }\n  }\n\n  /**\n   * Preload critical UI components\n   */\n  async preloadCriticalComponents() {\n    return safeAsync(\n      async () => {\n        // Preload critical UI elements and validate they exist\n        const criticalElements = [\n          'appContainer',\n          'helpModal',\n          'languageToggle',\n          'darkModeToggle',\n        ];\n\n        const missingElements = criticalElements.filter((id) => !document.getElementById(id));\n\n        if (missingElements.length > 0) {\n          throw new Error(`Missing critical UI elements: ${missingElements.join(', ')}`);\n        }\n\n        return true;\n      },\n      (error) => false,\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: 'preload_critical_components' },\n      },\n    );\n  }\n\n  /**\n   * Get UI manager status\n   */\n  getStatus() {\n    return {\n      isInitialized: this.isInitialized,\n      hasContainer: !!this.container,\n      eventListenersCount: this.eventListeners.size,\n      currentLanguage: i18n.getCurrentLanguage(),\n      isDarkMode: document.body.classList.contains('dark-mode'),\n    };\n  }\n\n  /**\n   * Cleanup when destroyed\n   */\n  destroy() {\n    // Remove all event listeners\n    this.eventListeners.forEach(({ element, handler }, key) => {\n      const [, event] = key.split('_');\n      if (element && handler) {\n        element.removeEventListener(event, handler);\n      }\n    });\n\n    this.eventListeners.clear();\n    this.container = null;\n    this.isInitialized = false;\n  }\n}\n","/**\n * Theme Management System\n * iGFAP Stroke Triage Assistant - Theme & Styling Coordination\n *\n * Handles theme switching, dark mode, and styling preferences\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { safeAsync, ERROR_CATEGORIES } from '../utils/error-handler.js';\n\n/**\n * Manages application themes and styling\n */\nexport class ThemeManager {\n  constructor() {\n    this.currentTheme = 'light';\n    this.isInitialized = false;\n    this.storageKey = 'theme';\n  }\n\n  /**\n   * Initialize theme management\n   */\n  initialize() {\n    this.loadSavedTheme();\n    this.setupThemeDetection();\n    this.isInitialized = true;\n  }\n\n  /**\n   * Load saved theme from storage\n   */\n  async loadSavedTheme() {\n    return safeAsync(\n      async () => {\n        const savedTheme = localStorage.getItem(this.storageKey);\n        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n        // Determine theme to use\n        let themeToApply;\n        if (savedTheme === 'dark' || savedTheme === 'light') {\n          themeToApply = savedTheme;\n        } else if (prefersDark) {\n          themeToApply = 'dark';\n        } else {\n          themeToApply = 'light';\n        }\n\n        this.applyTheme(themeToApply);\n        this.updateThemeButton();\n\n        return themeToApply;\n      },\n      (error) => {\n        // Fallback to light theme\n        this.applyTheme('light');\n        this.updateThemeButton();\n        return 'light';\n      },\n      {\n        category: ERROR_CATEGORIES.STORAGE,\n        context: { operation: 'load_saved_theme' },\n      },\n    );\n  }\n\n  /**\n   * Setup system theme detection\n   */\n  setupThemeDetection() {\n    // Listen for system theme changes\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n    const handleSystemThemeChange = (e) => {\n      // Only auto-switch if user hasn't explicitly set a preference\n      const savedTheme = localStorage.getItem(this.storageKey);\n      if (!savedTheme) {\n        const newTheme = e.matches ? 'dark' : 'light';\n        this.applyTheme(newTheme);\n        this.updateThemeButton();\n      }\n    };\n\n    // Use the newer addEventListener if available\n    if (mediaQuery.addEventListener) {\n      mediaQuery.addEventListener('change', handleSystemThemeChange);\n    } else {\n      // Fallback for older browsers\n      mediaQuery.addListener(handleSystemThemeChange);\n    }\n  }\n\n  /**\n   * Apply theme to the application\n   * @param {string} theme - Theme name ('light' or 'dark')\n   */\n  applyTheme(theme) {\n    if (theme !== 'light' && theme !== 'dark') {\n      theme = 'light';\n    }\n\n    this.currentTheme = theme;\n\n    // Apply theme class to body\n    if (theme === 'dark') {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n\n    // Update meta theme-color for mobile browsers\n    this.updateMetaThemeColor(theme);\n\n    // Dispatch theme change event\n    this.dispatchThemeChangeEvent(theme);\n  }\n\n  /**\n   * Toggle between light and dark themes\n   */\n  toggleTheme() {\n    const newTheme = this.currentTheme === 'dark' ? 'light' : 'dark';\n    this.setTheme(newTheme);\n  }\n\n  /**\n   * Set specific theme\n   * @param {string} theme - Theme to set\n   */\n  setTheme(theme) {\n    return safeAsync(\n      async () => {\n        this.applyTheme(theme);\n        this.saveTheme(theme);\n        this.updateThemeButton();\n        return theme;\n      },\n      (error) =>\n        // Theme setting failed, keep current theme\n        this.currentTheme,\n      {\n        category: ERROR_CATEGORIES.STORAGE,\n        context: { operation: 'set_theme', theme },\n      },\n    );\n  }\n\n  /**\n   * Save theme preference to storage\n   * @param {string} theme - Theme to save\n   */\n  saveTheme(theme) {\n    try {\n      localStorage.setItem(this.storageKey, theme);\n    } catch (error) {\n      // Storage failed - continue without saving\n    }\n  }\n\n  /**\n   * Update theme toggle button\n   */\n  updateThemeButton() {\n    const darkModeToggle = document.getElementById('darkModeToggle');\n    if (darkModeToggle) {\n      const isDark = this.currentTheme === 'dark';\n      darkModeToggle.textContent = isDark ? '☀️' : '🌙';\n\n      // Update aria-label for accessibility\n      const label = isDark ? 'Switch to light mode' : 'Switch to dark mode';\n      darkModeToggle.setAttribute('aria-label', label);\n      darkModeToggle.title = label;\n    }\n  }\n\n  /**\n   * Update meta theme-color for mobile browsers\n   * @param {string} theme - Current theme\n   */\n  updateMetaThemeColor(theme) {\n    let metaThemeColor = document.querySelector('meta[name=\"theme-color\"]');\n\n    if (!metaThemeColor) {\n      metaThemeColor = document.createElement('meta');\n      metaThemeColor.name = 'theme-color';\n      document.head.appendChild(metaThemeColor);\n    }\n\n    // Set appropriate theme color\n    const themeColors = {\n      light: '#ffffff',\n      dark: '#1a1a1a',\n    };\n\n    metaThemeColor.content = themeColors[theme] || themeColors.light;\n  }\n\n  /**\n   * Dispatch theme change event\n   * @param {string} theme - New theme\n   */\n  dispatchThemeChangeEvent(theme) {\n    try {\n      const event = new CustomEvent('themeChanged', {\n        detail: {\n          theme,\n          timestamp: Date.now(),\n        },\n      });\n      document.dispatchEvent(event);\n    } catch (error) {\n      // Event dispatch failed - continue silently\n    }\n  }\n\n  /**\n   * Get current theme\n   * @returns {string} - Current theme name\n   */\n  getCurrentTheme() {\n    return this.currentTheme;\n  }\n\n  /**\n   * Check if dark mode is active\n   * @returns {boolean} - True if dark mode is active\n   */\n  isDarkMode() {\n    return this.currentTheme === 'dark';\n  }\n\n  /**\n   * Get system preferred theme\n   * @returns {string} - System preferred theme\n   */\n  getSystemPreferredTheme() {\n    try {\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      return prefersDark ? 'dark' : 'light';\n    } catch (error) {\n      return 'light';\n    }\n  }\n\n  /**\n   * Reset theme to system preference\n   */\n  resetToSystemTheme() {\n    const systemTheme = this.getSystemPreferredTheme();\n    this.setTheme(systemTheme);\n\n    // Remove explicit preference so it follows system changes\n    try {\n      localStorage.removeItem(this.storageKey);\n    } catch (error) {\n      // Storage operation failed - continue\n    }\n  }\n\n  /**\n   * Get theme status information\n   */\n  getStatus() {\n    return {\n      isInitialized: this.isInitialized,\n      currentTheme: this.currentTheme,\n      isDarkMode: this.isDarkMode(),\n      systemPreferred: this.getSystemPreferredTheme(),\n      hasExplicitPreference: !!localStorage.getItem(this.storageKey),\n    };\n  }\n\n  /**\n   * Cleanup when destroyed\n   */\n  destroy() {\n    this.isInitialized = false;\n  }\n}\n","/**\n * Session Management System\n * iGFAP Stroke Triage Assistant - Session & Data Persistence\n *\n * Handles session management, auto-save, and data persistence\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { store } from '../state/store.js';\nimport { APP_CONFIG } from '../config.js';\nimport { authManager } from '../auth/authentication.js';\nimport { safeAsync, ERROR_CATEGORIES, ERROR_SEVERITY } from '../utils/error-handler.js';\nimport { secureStore, secureRetrieve, secureRemove } from '../security/data-encryption.js';\nimport { medicalLogger, LOG_CATEGORIES } from '../utils/medical-logger.js';\n\n/**\n * Manages session lifecycle and data persistence\n */\nexport class SessionManager {\n  constructor() {\n    this.autoSaveInterval = null;\n    this.sessionCheckInterval = null;\n    this.isInitialized = false;\n    this.lastAutoSave = 0;\n  }\n\n  /**\n   * Initialize session management\n   */\n  initialize() {\n    this.validateStoredSession();\n    this.startAutoSave();\n    this.setupSessionTimeout();\n    this.setupSessionValidation();\n    this.isInitialized = true;\n  }\n\n  /**\n   * Validate stored session data\n   */\n  async validateStoredSession() {\n    return safeAsync(\n      async () => {\n        if (!authManager.isValidSession()) {\n          // Session invalid - clear any stored data\n          this.clearSessionData();\n          return false;\n        }\n\n        // Session valid - restore any saved form data\n        this.restoreFormData();\n        return true;\n      },\n      (error) => {\n        // Session validation failed - clear data for safety\n        this.clearSessionData();\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.AUTHENTICATION,\n        severity: ERROR_SEVERITY.MEDIUM,\n        context: { operation: 'validate_stored_session' },\n      },\n    );\n  }\n\n  /**\n   * Start auto-save functionality\n   */\n  startAutoSave() {\n    if (this.autoSaveInterval) {\n      clearInterval(this.autoSaveInterval);\n    }\n\n    this.autoSaveInterval = setInterval(() => {\n      this.performAutoSave();\n    }, APP_CONFIG.autoSaveInterval);\n  }\n\n  /**\n   * Perform auto-save of current form data\n   */\n  async performAutoSave() {\n    return safeAsync(\n      async () => {\n        const container = document.getElementById('appContainer');\n        if (!container) {\n          return false;\n        }\n\n        const forms = container.querySelectorAll('form[data-module]');\n        let savedCount = 0;\n\n        for (const form of forms) {\n          try {\n            const { module } = form.dataset;\n            if (module) {\n              const formData = this.extractFormData(form);\n              const hasChanges = this.hasFormDataChanged(module, formData);\n\n              if (hasChanges) {\n                store.setFormData(module, formData);\n                savedCount++;\n              }\n            }\n          } catch (error) {\n            // Continue with other forms if one fails\n          }\n        }\n\n        this.lastAutoSave = Date.now();\n        return savedCount > 0;\n      },\n      (error) =>\n        // Auto-save failure is non-critical\n        false,\n      {\n        category: ERROR_CATEGORIES.STORAGE,\n        severity: ERROR_SEVERITY.LOW,\n        context: { operation: 'auto_save' },\n      },\n    );\n  }\n\n  /**\n   * Extract form data safely\n   * @param {HTMLFormElement} form - Form element\n   * @returns {Object} - Form data object\n   */\n  extractFormData(form) {\n    const formData = new FormData(form);\n    const data = {};\n\n    formData.forEach((value, key) => {\n      const element = form.elements[key];\n      if (element) {\n        if (element.type === 'checkbox') {\n          data[key] = element.checked;\n        } else if (element.type === 'number') {\n          const numValue = parseFloat(value);\n          data[key] = isNaN(numValue) ? value : numValue;\n        } else {\n          data[key] = value;\n        }\n      }\n    });\n\n    return data;\n  }\n\n  /**\n   * Check if form data has changed\n   * @param {string} module - Module name\n   * @param {Object} newData - New form data\n   * @returns {boolean} - True if data has changed\n   */\n  hasFormDataChanged(module, newData) {\n    try {\n      const currentData = store.getFormData(module);\n      return JSON.stringify(currentData) !== JSON.stringify(newData);\n    } catch (error) {\n      // If comparison fails, assume data has changed\n      return true;\n    }\n  }\n\n  /**\n   * Restore saved form data\n   */\n  restoreFormData() {\n    safeAsync(\n      async () => {\n        const container = document.getElementById('appContainer');\n        if (!container) {\n          return;\n        }\n\n        const forms = container.querySelectorAll('form[data-module]');\n\n        forms.forEach((form) => {\n          try {\n            const { module } = form.dataset;\n            if (module) {\n              const savedData = store.getFormData(module);\n              if (savedData && Object.keys(savedData).length > 0) {\n                this.populateForm(form, savedData);\n              }\n            }\n          } catch (error) {\n            // Continue with other forms if one fails\n          }\n        });\n      },\n      (error) => {\n        // Form restoration failure is non-critical\n      },\n      {\n        category: ERROR_CATEGORIES.STORAGE,\n        context: { operation: 'restore_form_data' },\n      },\n    );\n  }\n\n  /**\n   * Populate form with saved data\n   * @param {HTMLFormElement} form - Form to populate\n   * @param {Object} data - Data to populate with\n   */\n  populateForm(form, data) {\n    Object.entries(data).forEach(([key, value]) => {\n      const element = form.elements[key];\n      if (element) {\n        try {\n          if (element.type === 'checkbox') {\n            element.checked = Boolean(value);\n          } else if (element.type === 'radio') {\n            if (element.value === value) {\n              element.checked = true;\n            }\n          } else {\n            element.value = value;\n          }\n\n          // Trigger input event for any listeners\n          element.dispatchEvent(new Event('input', { bubbles: true }));\n        } catch (error) {\n          // Skip this field if population fails\n        }\n      }\n    });\n  }\n\n  /**\n   * Setup session timeout monitoring\n   */\n  setupSessionTimeout() {\n    // Setup session timeout warning\n    setTimeout(() => {\n      this.showSessionTimeoutWarning();\n    }, APP_CONFIG.sessionTimeout - 60000); // Warn 1 minute before timeout\n  }\n\n  /**\n   * Setup periodic session validation\n   */\n  setupSessionValidation() {\n    // Check session validity every 5 minutes\n    this.sessionCheckInterval = setInterval(() => {\n      this.validateCurrentSession();\n    }, 5 * 60 * 1000);\n  }\n\n  /**\n   * Validate current session\n   */\n  async validateCurrentSession() {\n    return safeAsync(\n      async () => {\n        if (!authManager.isValidSession()) {\n          this.handleSessionExpiry();\n          return false;\n        }\n\n        // Optionally validate with server\n        const isValid = await authManager.validateSessionWithServer();\n        if (!isValid) {\n          this.handleSessionExpiry();\n          return false;\n        }\n\n        return true;\n      },\n      (error) =>\n        // Session validation failed - continue with local session\n        authManager.isValidSession(),\n      {\n        category: ERROR_CATEGORIES.AUTHENTICATION,\n        context: { operation: 'validate_current_session' },\n      },\n    );\n  }\n\n  /**\n   * Show session timeout warning\n   */\n  showSessionTimeoutWarning() {\n    safeAsync(\n      async () => {\n        const shouldContinue = confirm(\n          'Your session will expire in 1 minute. Would you like to continue?',\n        );\n\n        if (shouldContinue) {\n          // Extend session\n          authManager.updateActivity();\n          // Setup another timeout warning\n          this.setupSessionTimeout();\n        } else {\n          // User chose to end session\n          this.endSession();\n        }\n      },\n      (error) => {\n        // If warning fails, continue session\n      },\n      {\n        category: ERROR_CATEGORIES.AUTHENTICATION,\n        context: { operation: 'session_timeout_warning' },\n      },\n    );\n  }\n\n  /**\n   * Handle session expiry\n   */\n  handleSessionExpiry() {\n    this.clearSessionData();\n    store.navigate('login');\n\n    // Show expiry message\n    this.showSessionExpiredMessage();\n  }\n\n  /**\n   * Show session expired message\n   */\n  showSessionExpiredMessage() {\n    // Create a temporary message\n    const message = document.createElement('div');\n    message.style.cssText = `\n      position: fixed;\n      top: 20px;\n      left: 50%;\n      transform: translateX(-50%);\n      background: #ff9800;\n      color: white;\n      padding: 15px 20px;\n      border-radius: 8px;\n      z-index: 10000;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.3);\n    `;\n    message.textContent = '⏰ Session expired. Please log in again.';\n\n    document.body.appendChild(message);\n\n    setTimeout(() => {\n      if (document.body.contains(message)) {\n        document.body.removeChild(message);\n      }\n    }, 5000);\n  }\n\n  /**\n   * End session manually\n   */\n  endSession() {\n    authManager.logout();\n    this.clearSessionData();\n    store.reset();\n    store.navigate('login');\n  }\n\n  /**\n   * Clear all session data\n   */\n  async clearSessionData() {\n    try {\n      medicalLogger.info('Clearing session data', {\n        category: LOG_CATEGORIES.SECURITY,\n      });\n\n      // Clear form data from store\n      store.clearAllFormData();\n\n      // Clear encrypted temporary data\n      await secureRemove('temp_data', true); // Use sessionStorage\n      await secureRemove('research_data', true);\n\n      // Clear any legacy unencrypted data\n      sessionStorage.removeItem('temp_data');\n      sessionStorage.removeItem('research_data');\n\n      medicalLogger.info('Session data cleared successfully', {\n        category: LOG_CATEGORIES.SECURITY,\n      });\n    } catch (error) {\n      medicalLogger.warn('Failed to clear some session data', {\n        category: LOG_CATEGORIES.SECURITY,\n        error: error.message,\n      });\n    }\n  }\n\n  /**\n   * Force save current state\n   */\n  async forceSave() {\n    return this.performAutoSave();\n  }\n\n  /**\n   * Get session status\n   */\n  getStatus() {\n    return {\n      isInitialized: this.isInitialized,\n      isAuthenticated: authManager.isValidSession(),\n      lastAutoSave: this.lastAutoSave,\n      autoSaveActive: !!this.autoSaveInterval,\n      sessionCheckActive: !!this.sessionCheckInterval,\n      sessionInfo: authManager.getSessionInfo?.() || {},\n    };\n  }\n\n  /**\n   * Cleanup when destroyed\n   */\n  destroy() {\n    if (this.autoSaveInterval) {\n      clearInterval(this.autoSaveInterval);\n      this.autoSaveInterval = null;\n    }\n\n    if (this.sessionCheckInterval) {\n      clearInterval(this.sessionCheckInterval);\n      this.sessionCheckInterval = null;\n    }\n\n    this.isInitialized = false;\n  }\n}\n","/**\n * Progressive Loading and Lazy Component System\n * iGFAP Stroke Triage Assistant - Phase 3 Advanced Features\n *\n * Provides intelligent component loading for optimal performance\n */\n\nimport { medicalEventObserver, MEDICAL_EVENTS } from '../patterns/observer.js';\nimport { medicalPerformanceMonitor, PerformanceMetricType } from '../performance/medical-performance-monitor.js';\n\n/**\n * Component loading priorities\n */\nexport const LoadPriority = {\n  CRITICAL: 'critical', // Load immediately\n  HIGH: 'high', // Load on interaction\n  NORMAL: 'normal', // Load on viewport\n  LOW: 'low', // Load on idle\n};\n\n/**\n * Component loading states\n */\nexport const LoadState = {\n  PENDING: 'pending',\n  LOADING: 'loading',\n  LOADED: 'loaded',\n  ERROR: 'error',\n};\n\n/**\n * Lazy component definition\n */\nclass LazyComponent {\n  constructor(name, loader, options = {}) {\n    this.name = name;\n    this.loader = loader;\n    this.priority = options.priority || LoadPriority.NORMAL;\n    this.state = LoadState.PENDING;\n    this.component = null;\n    this.error = null;\n    this.loadTime = null;\n    this.dependencies = options.dependencies || [];\n    this.retryCount = 0;\n    this.maxRetries = options.maxRetries || 3;\n    this.loadPromise = null;\n  }\n\n  /**\n   * Load the component\n   */\n  async load() {\n    if (this.state === LoadState.LOADED) {\n      return this.component;\n    }\n\n    if (this.loadPromise) {\n      return this.loadPromise;\n    }\n\n    const metricId = medicalPerformanceMonitor.startMeasurement(\n      PerformanceMetricType.USER_INTERACTION,\n      `lazy_load_${this.name}`,\n      { priority: this.priority },\n    );\n\n    this.state = LoadState.LOADING;\n    this.loadPromise = this.executeLoad(metricId);\n\n    return this.loadPromise;\n  }\n\n  /**\n   * Execute component loading with error handling\n   */\n  async executeLoad(metricId) {\n    try {\n      const startTime = performance.now();\n\n      // Load dependencies first\n      await this.loadDependencies();\n\n      // Load the component\n      this.component = await this.loader();\n      this.loadTime = performance.now() - startTime;\n      this.state = LoadState.LOADED;\n\n      medicalPerformanceMonitor.endMeasurement(metricId, {\n        success: true,\n        loadTime: this.loadTime,\n        retryCount: this.retryCount,\n      });\n\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: 'lazy_component_loaded',\n        component: this.name,\n        loadTime: this.loadTime,\n        priority: this.priority,\n      });\n\n      return this.component;\n    } catch (error) {\n      this.error = error;\n      this.retryCount++;\n\n      medicalPerformanceMonitor.endMeasurement(metricId, {\n        success: false,\n        error: error.message,\n        retryCount: this.retryCount,\n      });\n\n      if (this.retryCount < this.maxRetries) {\n        // (`⚠️ Component ${this.name} load failed, retrying (${this.retryCount}/${this.maxRetries}):`, error);\n\n        // Exponential backoff\n        const delay = Math.min(1000 * 2 ** (this.retryCount - 1), 5000);\n        await new Promise((resolve) => setTimeout(resolve, delay));\n\n        this.loadPromise = null;\n        return this.load();\n      }\n      this.state = LoadState.ERROR;\n      // (`❌ Component ${this.name} failed to load after ${this.maxRetries} attempts:`, error);\n\n      medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n        action: 'lazy_component_load_failed',\n        component: this.name,\n        error: error.message,\n        retryCount: this.retryCount,\n      });\n\n      throw error;\n    }\n  }\n\n  /**\n   * Load component dependencies\n   */\n  async loadDependencies() {\n    if (this.dependencies.length === 0) {\n      return;\n    }\n\n    const dependencyPromises = this.dependencies.map((dep) => {\n      if (typeof dep === 'string') {\n        // Load dependency by name\n        return LazyLoader.load(dep);\n      } if (typeof dep === 'function') {\n        // Load dependency function\n        return dep();\n      }\n      // Assume it's a lazy component\n      return dep.load();\n    });\n\n    await Promise.all(dependencyPromises);\n  }\n\n  /**\n   * Get component status\n   */\n  getStatus() {\n    return {\n      name: this.name,\n      state: this.state,\n      priority: this.priority,\n      loadTime: this.loadTime,\n      error: this.error?.message,\n      retryCount: this.retryCount,\n    };\n  }\n}\n\n/**\n * Progressive component loader with intelligent scheduling\n */\nexport class LazyLoader {\n  constructor() {\n    this.components = new Map();\n    this.intersectionObserver = null;\n    this.idleCallback = null;\n    this.loadQueue = {\n      [LoadPriority.CRITICAL]: [],\n      [LoadPriority.HIGH]: [],\n      [LoadPriority.NORMAL]: [],\n      [LoadPriority.LOW]: [],\n    };\n    this.isProcessingQueue = false;\n\n    this.initializeObservers();\n  }\n\n  /**\n   * Initialize viewport and idle observers\n   */\n  initializeObservers() {\n    // Intersection Observer for viewport-based loading\n    if ('IntersectionObserver' in window) {\n      this.intersectionObserver = new IntersectionObserver(\n        (entries) => this.handleIntersectionChanges(entries),\n        {\n          rootMargin: '50px',\n          threshold: 0.1,\n        },\n      );\n    }\n\n    // Idle callback for low-priority loading\n    this.scheduleIdleLoading();\n  }\n\n  /**\n   * Register a lazy component\n   */\n  register(name, loader, options = {}) {\n    const component = new LazyComponent(name, loader, options);\n    this.components.set(name, component);\n\n    // Add to appropriate load queue\n    this.loadQueue[component.priority].push(component);\n\n    // Start loading critical components immediately\n    if (component.priority === LoadPriority.CRITICAL) {\n      this.processLoadQueue();\n    }\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n      action: 'lazy_component_registered',\n      component: name,\n      priority: component.priority,\n    });\n\n    return component;\n  }\n\n  /**\n   * Load a component by name\n   */\n  async load(name) {\n    const component = this.components.get(name);\n    if (!component) {\n      throw new Error(`Component '${name}' not registered`);\n    }\n\n    return component.load();\n  }\n\n  /**\n   * Preload components based on priority\n   */\n  async preload(priority = LoadPriority.HIGH) {\n    const priorities = [LoadPriority.CRITICAL, LoadPriority.HIGH, LoadPriority.NORMAL, LoadPriority.LOW];\n    const targetPriorities = priorities.slice(0, priorities.indexOf(priority) + 1);\n\n    const preloadPromises = [];\n\n    targetPriorities.forEach((pri) => {\n      this.loadQueue[pri].forEach((component) => {\n        if (component.state === LoadState.PENDING) {\n          preloadPromises.push(component.load());\n        }\n      });\n    });\n\n    await Promise.allSettled(preloadPromises);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n      action: 'lazy_components_preloaded',\n      priority,\n      count: preloadPromises.length,\n    });\n  }\n\n  /**\n   * Observe element for viewport-based loading\n   */\n  observeElement(element, componentName) {\n    if (!this.intersectionObserver) {\n      return;\n    }\n\n    element.dataset.lazyComponent = componentName;\n    this.intersectionObserver.observe(element);\n  }\n\n  /**\n   * Handle intersection observer changes\n   */\n  handleIntersectionChanges(entries) {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        const componentName = entry.target.dataset.lazyComponent;\n        if (componentName) {\n          this.load(componentName).catch((error) => {\n            // (`Failed to load component ${componentName}:`, error);\n          });\n\n          // Stop observing once loaded\n          this.intersectionObserver.unobserve(entry.target);\n        }\n      }\n    });\n  }\n\n  /**\n   * Process load queue based on priority\n   */\n  async processLoadQueue() {\n    if (this.isProcessingQueue) {\n      return;\n    }\n\n    this.isProcessingQueue = true;\n\n    try {\n      // Process critical components first\n      await this.processQueueByPriority(LoadPriority.CRITICAL);\n\n      // Process high priority components\n      await this.processQueueByPriority(LoadPriority.HIGH);\n    } catch (error) {\n      // ('Error processing load queue:', error);\n    } finally {\n      this.isProcessingQueue = false;\n    }\n  }\n\n  /**\n   * Process components of specific priority\n   */\n  async processQueueByPriority(priority) {\n    const queue = this.loadQueue[priority];\n    const pendingComponents = queue.filter((comp) => comp.state === LoadState.PENDING);\n\n    if (pendingComponents.length === 0) {\n      return;\n    }\n\n    const loadPromises = pendingComponents.map((component) => component.load().catch((error) =>\n      // (`Component ${component.name} failed to load:`, error);\n      null));\n\n    await Promise.allSettled(loadPromises);\n  }\n\n  /**\n   * Schedule idle loading for low-priority components\n   */\n  scheduleIdleLoading() {\n    const scheduleNext = () => {\n      if ('requestIdleCallback' in window) {\n        this.idleCallback = requestIdleCallback((deadline) => {\n          this.processIdleQueue(deadline);\n          scheduleNext();\n        }, { timeout: 5000 });\n      } else {\n        // Fallback for browsers without requestIdleCallback\n        setTimeout(() => {\n          this.processIdleQueue({ timeRemaining: () => 50 });\n          scheduleNext();\n        }, 100);\n      }\n    };\n\n    scheduleNext();\n  }\n\n  /**\n   * Process low-priority components during idle time\n   */\n  async processIdleQueue(deadline) {\n    const normalQueue = this.loadQueue[LoadPriority.NORMAL];\n    const lowQueue = this.loadQueue[LoadPriority.LOW];\n\n    // Process normal priority first, then low priority\n    const pendingComponents = [\n      ...normalQueue.filter((comp) => comp.state === LoadState.PENDING),\n      ...lowQueue.filter((comp) => comp.state === LoadState.PENDING),\n    ];\n\n    for (const component of pendingComponents) {\n      if (deadline.timeRemaining() > 10) { // Need at least 10ms\n        try {\n          await component.load();\n        } catch (error) {\n          // (`Idle loading failed for ${component.name}:`, error);\n        }\n      } else {\n        break; // No more time available\n      }\n    }\n  }\n\n  /**\n   * Get loader statistics\n   */\n  getStats() {\n    const stats = {\n      total: this.components.size,\n      byState: {\n        pending: 0, loading: 0, loaded: 0, error: 0,\n      },\n      byPriority: {\n        critical: 0, high: 0, normal: 0, low: 0,\n      },\n      totalLoadTime: 0,\n      averageLoadTime: 0,\n    };\n\n    let totalLoadTime = 0;\n    let loadedCount = 0;\n\n    this.components.forEach((component) => {\n      stats.byState[component.state]++;\n      stats.byPriority[component.priority]++;\n\n      if (component.loadTime) {\n        totalLoadTime += component.loadTime;\n        loadedCount++;\n      }\n    });\n\n    stats.totalLoadTime = totalLoadTime;\n    stats.averageLoadTime = loadedCount > 0 ? totalLoadTime / loadedCount : 0;\n\n    return stats;\n  }\n\n  /**\n   * Force reload a component\n   */\n  async reload(name) {\n    const component = this.components.get(name);\n    if (!component) {\n      throw new Error(`Component '${name}' not registered`);\n    }\n\n    // Reset component state\n    component.state = LoadState.PENDING;\n    component.component = null;\n    component.error = null;\n    component.loadTime = null;\n    component.retryCount = 0;\n    component.loadPromise = null;\n\n    return component.load();\n  }\n\n  /**\n   * Dispose and cleanup\n   */\n  dispose() {\n    if (this.intersectionObserver) {\n      this.intersectionObserver.disconnect();\n    }\n\n    if (this.idleCallback) {\n      cancelIdleCallback(this.idleCallback);\n    }\n\n    this.components.clear();\n    Object.values(this.loadQueue).forEach((queue) => queue.length = 0);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n      action: 'lazy_loader_disposed',\n    });\n  }\n}\n\n/**\n * Medical component lazy loaders\n */\nexport class MedicalComponentLoader {\n  constructor(lazyLoader) {\n    this.lazyLoader = lazyLoader;\n    this.registerMedicalComponents();\n  }\n\n  /**\n   * Register all medical components (only for truly lazy-loaded modules)\n   */\n  registerMedicalComponents() {\n    // Only register components that are NOT statically imported elsewhere\n    // This prevents the build warnings about mixed static/dynamic imports\n\n    // Advanced features chunk (only loaded when research mode is activated)\n    this.lazyLoader.register(\n      'advanced-analytics',\n      () => import('../analytics/quality-metrics.js'),\n      { priority: LoadPriority.LOW },\n    );\n\n    this.lazyLoader.register(\n      'clinical-reporting',\n      () => import('../analytics/clinical-reporting.js'),\n      { priority: LoadPriority.LOW },\n    );\n\n    this.lazyLoader.register(\n      'audit-trail',\n      () => import('../analytics/audit-trail.js'),\n      { priority: LoadPriority.LOW },\n    );\n\n    // Service workers and background features\n    this.lazyLoader.register(\n      'medical-service-worker',\n      () => import('../workers/medical-service-worker.js'),\n      { priority: LoadPriority.LOW },\n    );\n\n    this.lazyLoader.register(\n      'sw-manager',\n      () => import('../workers/sw-manager.js'),\n      { priority: LoadPriority.LOW },\n    );\n\n    // Advanced architectural patterns (loaded only when needed)\n    this.lazyLoader.register(\n      'command-pattern',\n      () => import('../patterns/command.js'),\n      { priority: LoadPriority.NORMAL },\n    );\n\n    this.lazyLoader.register(\n      'prediction-strategy',\n      () => import('../patterns/prediction-strategy.js'),\n      { priority: LoadPriority.NORMAL },\n    );\n\n    this.lazyLoader.register(\n      'validation-factory',\n      () => import('../patterns/validation-factory.js'),\n      { priority: LoadPriority.NORMAL },\n    );\n  }\n\n  /**\n   * Load medical component by clinical priority\n   */\n  async loadByClinicalPriority(clinicalSituation) {\n    switch (clinicalSituation) {\n      case 'emergency':\n        // Load high-priority architectural patterns\n        await this.lazyLoader.preload(LoadPriority.HIGH);\n        break;\n\n      case 'routine':\n        // Load normal priority patterns and command structures\n        await this.lazyLoader.preload(LoadPriority.NORMAL);\n        break;\n\n      case 'research':\n        // Load research and analytics tools\n        await this.lazyLoader.load('advanced-analytics');\n        await this.lazyLoader.load('clinical-reporting');\n        await this.lazyLoader.load('audit-trail');\n        break;\n\n      case 'background':\n        // Load service workers and background features\n        await this.lazyLoader.load('medical-service-worker');\n        await this.lazyLoader.load('sw-manager');\n        break;\n\n      default:\n        await this.lazyLoader.preload(LoadPriority.NORMAL);\n    }\n  }\n\n  /**\n   * Preload components for specific medical module\n   */\n  async preloadForModule(moduleType) {\n    // Since core components are now statically imported,\n    // we only need to load advanced features\n    const moduleComponents = {\n      coma: ['command-pattern'],\n      limited: ['prediction-strategy'],\n      full: ['command-pattern', 'prediction-strategy', 'validation-factory'],\n      research: ['advanced-analytics', 'clinical-reporting', 'audit-trail'],\n    };\n\n    const components = moduleComponents[moduleType] || [];\n    const loadPromises = components.map((comp) => this.lazyLoader.load(comp));\n\n    await Promise.allSettled(loadPromises);\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n      action: 'medical_components_preloaded',\n      moduleType,\n      components,\n    });\n  }\n\n  /**\n   * Load enterprise features for production deployment\n   */\n  async loadEnterpriseFeatures() {\n    const enterpriseComponents = [\n      'medical-service-worker',\n      'sw-manager',\n      'advanced-analytics',\n      'clinical-reporting',\n      'audit-trail',\n    ];\n\n    const loadPromises = enterpriseComponents.map((comp) => this.lazyLoader.load(comp).catch((error) => {\n      console.warn(`Enterprise feature ${comp} failed to load:`, error);\n      return null;\n    }));\n\n    const results = await Promise.allSettled(loadPromises);\n    const loadedCount = results.filter((r) => r.status === 'fulfilled' && r.value !== null).length;\n\n    medicalEventObserver.publish(MEDICAL_EVENTS.AUDIT_EVENT, {\n      action: 'enterprise_features_loaded',\n      requested: enterpriseComponents.length,\n      loaded: loadedCount,\n    });\n\n    return loadedCount;\n  }\n}\n\n// Export singleton instances\nexport const lazyLoader = new LazyLoader();\nexport const medicalComponentLoader = new MedicalComponentLoader(lazyLoader);\n","/**\n * Advanced Features Management System\n * iGFAP Stroke Triage Assistant - Phase 3 & 4 Feature Coordination\n *\n * Handles initialization and management of advanced features\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { safeAsync, ERROR_CATEGORIES, ERROR_SEVERITY } from '../utils/error-handler.js';\n\n// Phase 3: Advanced offline capabilities\nimport { medicalSWManager } from '../workers/sw-manager.js';\nimport { medicalPerformanceMonitor } from '../performance/medical-performance-monitor.js';\nimport { medicalSyncManager } from '../sync/medical-sync-manager.js';\nimport { lazyLoader } from '../components/lazy-loader.js';\n\n// Phase 4: Medical Intelligence & Analytics - Selected Features\nimport { clinicalReportingSystem } from '../analytics/clinical-reporting.js';\nimport { qualityMetricsTracker } from '../analytics/quality-metrics.js';\nimport { clinicalAuditTrail } from '../analytics/audit-trail.js';\n\n/**\n * Manages advanced features initialization and coordination\n */\nexport class AdvancedFeaturesManager {\n  constructor() {\n    this.isInitialized = false;\n    this.phase3Status = {\n      serviceWorker: false,\n      performanceMonitor: false,\n      syncManager: false,\n      lazyLoader: false,\n    };\n    this.phase4Status = {\n      reportingSystem: false,\n      qualityMetrics: false,\n      auditTrail: false,\n    };\n  }\n\n  /**\n   * Initialize all advanced features\n   */\n  async initialize() {\n    return safeAsync(\n      async () => {\n        // Initialize Phase 3 features\n        await this.initializePhase3Features();\n\n        // Initialize Phase 4 features\n        await this.initializePhase4Features();\n\n        this.isInitialized = true;\n        return true;\n      },\n      (error) =>\n        // Advanced features failure doesn't block core functionality\n        false,\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        severity: ERROR_SEVERITY.MEDIUM,\n        timeout: 60000, // Allow more time for advanced features\n        context: {\n          operation: 'initialize_advanced_features',\n        },\n      },\n    );\n  }\n\n  /**\n   * Initialize Phase 3 Advanced Features\n   */\n  async initializePhase3Features() {\n    return safeAsync(\n      async () => {\n        // Start performance monitoring first\n        await this.initializePerformanceMonitor();\n\n        // Initialize service worker (non-blocking)\n        this.initializeServiceWorker();\n\n        // Initialize sync manager\n        await this.initializeSyncManager();\n\n        // Initialize progressive loading\n        await this.initializeProgressiveLoading();\n\n        return true;\n      },\n      (error) =>\n        // Phase 3 failure is non-critical\n        false,\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: 'initialize_phase3_features' },\n      },\n    );\n  }\n\n  /**\n   * Initialize performance monitoring\n   */\n  async initializePerformanceMonitor() {\n    return safeAsync(\n      async () => {\n        medicalPerformanceMonitor.start();\n        this.phase3Status.performanceMonitor = true;\n        return true;\n      },\n      (error) => {\n        this.phase3Status.performanceMonitor = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: 'initialize_performance_monitor' },\n      },\n    );\n  }\n\n  /**\n   * Initialize service worker\n   */\n  async initializeServiceWorker() {\n    // Run in background without blocking\n    safeAsync(\n      async () => {\n        const swInitialized = await medicalSWManager.initialize();\n        this.phase3Status.serviceWorker = swInitialized;\n\n        if (swInitialized) {\n          // Prefetch critical medical resources\n          await this.prefetchCriticalResources();\n        }\n\n        return swInitialized;\n      },\n      (error) => {\n        this.phase3Status.serviceWorker = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.NETWORK,\n        context: { operation: 'initialize_service_worker' },\n      },\n    );\n  }\n\n  /**\n   * Initialize sync manager\n   */\n  async initializeSyncManager() {\n    return safeAsync(\n      async () => {\n        const syncInitialized = await medicalSyncManager.initialize();\n        this.phase3Status.syncManager = syncInitialized;\n        return syncInitialized;\n      },\n      (error) => {\n        this.phase3Status.syncManager = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.NETWORK,\n        context: { operation: 'initialize_sync_manager' },\n      },\n    );\n  }\n\n  /**\n   * Initialize progressive loading\n   */\n  async initializeProgressiveLoading() {\n    return safeAsync(\n      async () => {\n        // Preload critical components immediately\n        await lazyLoader.preload('critical');\n\n        // Setup viewport-based loading for result visualizations\n        setTimeout(() => this.setupViewportLoading(), 100);\n\n        this.phase3Status.lazyLoader = true;\n        return true;\n      },\n      (error) => {\n        this.phase3Status.lazyLoader = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: 'initialize_progressive_loading' },\n      },\n    );\n  }\n\n  /**\n   * Setup viewport-based loading\n   */\n  setupViewportLoading() {\n    try {\n      const brainVizElements = document.querySelectorAll('.brain-visualization-placeholder');\n      brainVizElements.forEach((element) => {\n        lazyLoader.observeElement(element, 'brain-visualization');\n      });\n\n      const mapElements = document.querySelectorAll('.stroke-center-map-placeholder');\n      mapElements.forEach((element) => {\n        lazyLoader.observeElement(element, 'stroke-center-map');\n      });\n    } catch (error) {\n      // Viewport loading setup failed - continue without it\n    }\n  }\n\n  /**\n   * Prefetch critical resources for offline use\n   */\n  async prefetchCriticalResources() {\n    return safeAsync(\n      async () => {\n        const criticalResources = [\n          '/0925/src/logic/lvo-local-model.js',\n          '/0925/src/logic/ich-volume-calculator.js',\n          '/0925/src/patterns/prediction-strategy.js',\n          '/0925/src/performance/medical-cache.js',\n        ];\n\n        await medicalSWManager.prefetchResources(criticalResources);\n        return true;\n      },\n      (error) =>\n        // Prefetch failure is non-critical\n        false,\n      {\n        category: ERROR_CATEGORIES.NETWORK,\n        context: { operation: 'prefetch_critical_resources' },\n      },\n    );\n  }\n\n  /**\n   * Initialize Phase 4 Selected Features\n   */\n  async initializePhase4Features() {\n    return safeAsync(\n      async () => {\n        // Initialize clinical audit trail first (for compliance)\n        await this.initializeAuditTrail();\n\n        // Start clinical reporting system\n        await this.initializeReportingSystem();\n\n        // Initialize quality metrics tracking\n        await this.initializeQualityMetrics();\n\n        // Setup integration event handlers\n        this.setupPhase4EventHandlers();\n\n        return true;\n      },\n      (error) =>\n        // Phase 4 failure is non-critical\n        false,\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        context: { operation: 'initialize_phase4_features' },\n      },\n    );\n  }\n\n  /**\n   * Initialize audit trail\n   */\n  async initializeAuditTrail() {\n    return safeAsync(\n      async () => {\n        await clinicalAuditTrail.initialize();\n        this.phase4Status.auditTrail = true;\n        return true;\n      },\n      (error) => {\n        this.phase4Status.auditTrail = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.MEDICAL,\n        context: { operation: 'initialize_audit_trail' },\n      },\n    );\n  }\n\n  /**\n   * Initialize reporting system\n   */\n  async initializeReportingSystem() {\n    return safeAsync(\n      async () => {\n        clinicalReportingSystem.start();\n        this.phase4Status.reportingSystem = true;\n        return true;\n      },\n      (error) => {\n        this.phase4Status.reportingSystem = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.MEDICAL,\n        context: { operation: 'initialize_reporting_system' },\n      },\n    );\n  }\n\n  /**\n   * Initialize quality metrics\n   */\n  async initializeQualityMetrics() {\n    return safeAsync(\n      async () => {\n        await qualityMetricsTracker.initialize();\n        this.phase4Status.qualityMetrics = true;\n        return true;\n      },\n      (error) => {\n        this.phase4Status.qualityMetrics = false;\n        return false;\n      },\n      {\n        category: ERROR_CATEGORIES.MEDICAL,\n        context: { operation: 'initialize_quality_metrics' },\n      },\n    );\n  }\n\n  /**\n   * Setup Phase 4 event handlers\n   */\n  setupPhase4EventHandlers() {\n    // Listen for form submissions to trigger quality metrics and audit logging\n    document.addEventListener('submit', async (event) => {\n      const form = event.target;\n      if (form.dataset.module) {\n        await safeAsync(\n          async () => {\n            const formData = new FormData(form);\n            const patientData = Object.fromEntries(formData.entries());\n\n            // Log audit trail\n            if (this.phase4Status.auditTrail) {\n              clinicalAuditTrail.logEvent('data_entry', {\n                module: form.dataset.module,\n                timestamp: new Date().toISOString(),\n                data_points: Object.keys(patientData).length,\n              });\n            }\n\n            // Record quality metrics\n            if (this.phase4Status.qualityMetrics) {\n              qualityMetricsTracker.recordMetric('form_completion', 'count', 1);\n              qualityMetricsTracker.recordMetric(\n                'data_quality',\n                'completeness',\n                Object.values(patientData).filter((v) => v && v.trim()).length / Object.keys(patientData).length * 100,\n              );\n            }\n\n            return true;\n          },\n          (error) =>\n            // Phase 4 event handling failed - continue silently\n            false,\n          {\n            category: ERROR_CATEGORIES.MEDICAL,\n            context: { operation: 'phase4_event_handling' },\n          },\n        );\n      }\n    });\n  }\n\n  /**\n   * Get comprehensive status of all advanced features\n   */\n  getStatus() {\n    return {\n      isInitialized: this.isInitialized,\n      phase3: {\n        ...this.phase3Status,\n        overall: Object.values(this.phase3Status).some((status) => status),\n      },\n      phase4: {\n        ...this.phase4Status,\n        overall: Object.values(this.phase4Status).some((status) => status),\n      },\n      systemStatus: this.getSystemStatus(),\n    };\n  }\n\n  /**\n   * Get detailed system status\n   */\n  getSystemStatus() {\n    return {\n      serviceWorkerSupported: 'serviceWorker' in navigator,\n      indexedDBSupported: 'indexedDB' in window,\n      notificationSupported: 'Notification' in window,\n      cacheSupported: 'caches' in window,\n      webLockSupported: 'locks' in navigator,\n      performanceSupported: 'performance' in window,\n    };\n  }\n\n  /**\n   * Restart advanced features\n   */\n  async restart() {\n    this.destroy();\n    return this.initialize();\n  }\n\n  /**\n   * Cleanup when destroyed\n   */\n  destroy() {\n    // Cleanup Phase 3 features\n    if (this.phase3Status.performanceMonitor) {\n      try {\n        medicalPerformanceMonitor.stop?.();\n      } catch (error) {\n        // Cleanup error - continue\n      }\n    }\n\n    if (this.phase3Status.syncManager) {\n      try {\n        medicalSyncManager.destroy?.();\n      } catch (error) {\n        // Cleanup error - continue\n      }\n    }\n\n    // Cleanup Phase 4 features\n    if (this.phase4Status.reportingSystem) {\n      try {\n        clinicalReportingSystem.stop?.();\n      } catch (error) {\n        // Cleanup error - continue\n      }\n    }\n\n    // Reset status\n    this.phase3Status = {\n      serviceWorker: false,\n      performanceMonitor: false,\n      syncManager: false,\n      lazyLoader: false,\n    };\n\n    this.phase4Status = {\n      reportingSystem: false,\n      qualityMetrics: false,\n      auditTrail: false,\n    };\n\n    this.isInitialized = false;\n  }\n}\n","/**\n * Main Application Controller\n * iGFAP Stroke Triage Assistant - Modular Architecture\n *\n * Handles core application lifecycle and coordination\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport { store } from '../state/store.js';\nimport { render } from '../ui/render.js';\nimport { authManager } from '../auth/authentication.js';\nimport { warmUpFunctions } from '../api/client.js';\nimport { safeAsync, ERROR_CATEGORIES, ERROR_SEVERITY } from '../utils/error-handler.js';\nimport { medicalLogger, LOG_CATEGORIES } from '../utils/medical-logger.js';\n\nimport { UIManager } from './ui-manager.js';\nimport { ThemeManager } from './theme-manager.js';\nimport { SessionManager } from './session-manager.js';\nimport { AdvancedFeaturesManager } from './advanced-features-manager.js';\n\n/**\n * Main application controller - coordinates all subsystems\n */\nexport class AppController {\n  constructor() {\n    this.container = null;\n    this.unsubscribe = null;\n    this.isInitialized = false;\n\n    // Initialize managers\n    this.uiManager = new UIManager();\n    this.themeManager = new ThemeManager();\n    this.sessionManager = new SessionManager();\n    this.advancedFeaturesManager = new AdvancedFeaturesManager();\n  }\n\n  /**\n   * Initialize the application\n   * @returns {Promise<boolean>} - Initialization success\n   */\n  async init() {\n    return safeAsync(\n      async () => {\n        medicalLogger.info('Application initialization started', {\n          category: LOG_CATEGORIES.SYSTEM,\n          version: '2.1.0',\n          userAgent: navigator.userAgent.substring(0, 100),\n        });\n\n        // Wait for DOM to be ready\n        if (document.readyState === 'loading') {\n          medicalLogger.debug('Waiting for DOM ready', { category: LOG_CATEGORIES.SYSTEM });\n          return new Promise((resolve) => {\n            document.addEventListener('DOMContentLoaded', () => resolve(this.init()));\n          });\n        }\n\n        // Find app container\n        this.container = document.getElementById('appContainer');\n        if (!this.container) {\n          medicalLogger.critical('App container not found', {\n            category: LOG_CATEGORIES.SYSTEM,\n            containerId: 'appContainer',\n          });\n          throw new Error('Critical initialization failure: App container not found');\n        }\n\n        medicalLogger.debug('App container found', { category: LOG_CATEGORIES.SYSTEM });\n\n        // Check authentication before proceeding\n        if (!authManager.isValidSession()) {\n          medicalLogger.info('No valid session, redirecting to login', {\n            category: LOG_CATEGORIES.AUTHENTICATION,\n          });\n          store.navigate('login');\n        }\n\n        // Initialize core systems\n        medicalLogger.info('Initializing core features', { category: LOG_CATEGORIES.SYSTEM });\n        await this.initializeCoreFeatures();\n\n        // Advanced features disabled to prevent sync manager errors\n        medicalLogger.info('Skipping advanced features initialization', {\n          category: LOG_CATEGORIES.SYSTEM,\n        });\n        // this.initializeAdvancedFeatures();\n\n        // Setup rendering system FIRST so navigation works\n        this.setupRenderingSystem();\n\n        // Initialize UI components\n        medicalLogger.debug('Initializing UI manager', { category: LOG_CATEGORIES.SYSTEM });\n        this.uiManager.initialize(this.container);\n\n        // Initialize theme system\n        medicalLogger.debug('Initializing theme manager', { category: LOG_CATEGORIES.SYSTEM });\n        this.themeManager.initialize();\n\n        // Setup session management\n        medicalLogger.debug('Initializing session manager', { category: LOG_CATEGORIES.SYSTEM });\n        this.sessionManager.initialize();\n\n        // Warm up Cloud Functions in background (dev only)\n        if (import.meta && import.meta.env && import.meta.env.DEV) {\n          medicalLogger.info('Starting Cloud Functions warm-up (dev only)', {\n            category: LOG_CATEGORIES.NETWORK,\n          });\n          warmUpFunctions();\n        }\n\n        // Initial render (store subscription is now active)\n        render(this.container);\n\n        this.isInitialized = true;\n        medicalLogger.info('Application initialization completed successfully', {\n          category: LOG_CATEGORIES.SYSTEM,\n          initializationTime: performance.now(),\n        });\n\n        return true;\n      },\n      (error) => {\n        medicalLogger.critical('Application initialization failed', {\n          category: LOG_CATEGORIES.SYSTEM,\n          error: error.message,\n          stack: error.stack,\n        });\n        throw new Error(`App initialization failed: ${error.message}`);\n      },\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        severity: ERROR_SEVERITY.CRITICAL,\n        timeout: 30000,\n        context: {\n          operation: 'app_initialization',\n        },\n      },\n    );\n  }\n\n  /**\n   * Initialize core application features\n   */\n  async initializeCoreFeatures() {\n    return safeAsync(\n      async () => {\n        // Core features that must be available immediately\n        const coreInitTasks = [\n          this.uiManager.preloadCriticalComponents(),\n          this.themeManager.loadSavedTheme(),\n          this.sessionManager.validateStoredSession(),\n        ];\n\n        const results = await Promise.allSettled(coreInitTasks);\n\n        // Check if any critical feature failed\n        const failures = results.filter((result) => result.status === 'rejected');\n        if (failures.length > 0) {\n          throw new Error(`${failures.length} core features failed to initialize`);\n        }\n\n        return true;\n      },\n      (error) =>\n        // Continue with degraded functionality on core feature failure\n        false,\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        severity: ERROR_SEVERITY.HIGH,\n        context: {\n          operation: 'core_features_init',\n        },\n      },\n    );\n  }\n\n  /**\n   * Initialize advanced features (non-blocking)\n   */\n  async initializeAdvancedFeatures() {\n    // Run in background without blocking main app\n    safeAsync(\n      async () => {\n        await this.advancedFeaturesManager.initialize();\n        return true;\n      },\n      (error) =>\n        // Advanced features failure doesn't block core functionality\n        false,\n      {\n        category: ERROR_CATEGORIES.RENDERING,\n        severity: ERROR_SEVERITY.MEDIUM,\n        context: {\n          operation: 'advanced_features_init',\n        },\n      },\n    );\n  }\n\n  /**\n   * Setup the rendering system\n   */\n  setupRenderingSystem() {\n    // Subscribe to store changes\n    this.unsubscribe = store.subscribe(() => {\n      render(this.container);\n      // Update research button visibility after each render\n      setTimeout(() => this.uiManager.updateResearchMode(), 200);\n    });\n\n    // Subscribe to language changes\n    window.addEventListener('languageChanged', () => {\n      this.uiManager.updateLanguage();\n      render(this.container);\n    });\n  }\n\n  /**\n   * Get application status\n   * @returns {Object} - Application status information\n   */\n  getStatus() {\n    return {\n      isInitialized: this.isInitialized,\n      hasContainer: !!this.container,\n      isAuthenticated: authManager.isValidSession(),\n      ui: this.uiManager.getStatus(),\n      theme: this.themeManager.getStatus(),\n      session: this.sessionManager.getStatus(),\n      advancedFeatures: this.advancedFeaturesManager.getStatus(),\n    };\n  }\n\n  /**\n   * Cleanup when app is destroyed\n   */\n  destroy() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n\n    this.uiManager.destroy();\n    this.themeManager.destroy();\n    this.sessionManager.destroy();\n    this.advancedFeaturesManager.destroy();\n\n    this.isInitialized = false;\n  }\n}\n\n/**\n * Create and initialize the main application\n */\nexport async function createApp() {\n  const app = new AppController();\n\n  try {\n    await app.init();\n    return app;\n  } catch (error) {\n    throw new Error(`Failed to create application: ${error.message}`);\n  }\n}\n","/**\n * API Warm-up Service\n * Prevents cold start delays by warming up Cloud Functions on app initialization\n */\n\nimport { medicalLogger } from '../utils/medical-logger.js';\n\n// Cloud Function endpoints that need warming up\n// NOTE: Authentication endpoint removed - warming it up causes rate limiting issues\nconst API_ENDPOINTS = {\n  comaIch: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_coma_ich',\n  limitedIch: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_limited_data_ich',\n  fullStroke: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_full_stroke',\n  lvo: 'https://europe-west3-igfap-452720.cloudfunctions.net/predict_lvo',\n};\n\n// Lightweight test payloads to warm up APIs\nconst WARMUP_PAYLOADS = {\n  comaIch: {\n    gfap_value: 100,\n  },\n  limitedIch: {\n    age_years: 65,\n    systolic_bp: 140,\n    diastolic_bp: 80,\n    gfap_value: 100,\n    vigilanzminderung: 0,\n  },\n  fullStroke: {\n    age_years: 65,\n    systolic_bp: 140,\n    diastolic_bp: 80,\n    gfap_value: 100,\n    fast_ed_score: 4,\n    headache: 0,\n    vigilanzminderung: 0,\n    armparese: 0,\n    beinparese: 0,\n    eye_deviation: 0,\n    atrial_fibrillation: 0,\n    anticoagulated_noak: 0,\n    antiplatelets: 0,\n  },\n  lvo: {\n    gfap_value: 100,\n    fast_ed_score: 4,\n  },\n};\n\nclass APIWarmupService {\n  constructor() {\n    this.warmupAttempts = 0;\n    this.successfulWarmups = 0;\n    this.warmupResults = {};\n    this.isWarming = false;\n  }\n\n  /**\n   * Start warming up all APIs\n   * @param {boolean} background - Whether to run in background (default: true)\n   * @returns {Promise<Object>} Results of warmup attempts\n   */\n  async warmupAllAPIs(background = true) {\n    if (this.isWarming) {\n      medicalLogger.info('API warmup already in progress', { category: 'WARMUP' });\n      return this.warmupResults;\n    }\n\n    this.isWarming = true;\n    this.warmupAttempts = 0;\n    this.successfulWarmups = 0;\n    this.warmupResults = {};\n\n    medicalLogger.info('Starting API warmup process', {\n      category: 'WARMUP',\n      endpoints: Object.keys(API_ENDPOINTS).length,\n    });\n\n    const warmupPromises = Object.entries(API_ENDPOINTS).map(async ([name, url]) => {\n      try {\n        const result = await this.warmupSingleAPI(name, url, WARMUP_PAYLOADS[name]);\n        this.warmupResults[name] = result;\n        if (result.success) {\n          this.successfulWarmups++;\n        }\n        return result;\n      } catch (error) {\n        const errorResult = {\n          success: false,\n          error: error.message,\n          duration: 0,\n          timestamp: new Date().toISOString(),\n        };\n        this.warmupResults[name] = errorResult;\n        return errorResult;\n      }\n    });\n\n    if (background) {\n      // Don't await in background mode - let it run asynchronously\n      Promise.all(warmupPromises).then(() => {\n        this.completeWarmup();\n      }).catch((error) => {\n        medicalLogger.error('Background API warmup failed', {\n          category: 'WARMUP',\n          error: error.message,\n        });\n        this.isWarming = false;\n      });\n\n      return { status: 'warming', message: 'APIs warming up in background' };\n    }\n    // Wait for all warmups to complete\n    await Promise.all(warmupPromises);\n    this.completeWarmup();\n    return this.warmupResults;\n  }\n\n  /**\n   * Warm up a single API endpoint\n   * @param {string} name - API name\n   * @param {string} url - API URL\n   * @param {Object} payload - Test payload\n   * @returns {Promise<Object>} Warmup result\n   */\n  async warmupSingleAPI(name, url, payload) {\n    const startTime = Date.now();\n    this.warmupAttempts++;\n\n    try {\n      medicalLogger.info(`Warming up ${name} API`, { category: 'WARMUP', url });\n\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'User-Agent': 'iGFAP-Warmup/2.1.0',\n        },\n        body: JSON.stringify(payload),\n        signal: AbortSignal.timeout(10000), // 10 second timeout\n      });\n\n      const duration = Date.now() - startTime;\n\n      // We expect most warmup calls to return errors (since they're test data)\n      // The important thing is that the function responds, not that it succeeds\n      const result = {\n        success: true,\n        status: response.status,\n        duration,\n        message: `${name} API warmed up`,\n        timestamp: new Date().toISOString(),\n      };\n\n      medicalLogger.info(`Successfully warmed up ${name} API`, {\n        category: 'WARMUP',\n        duration,\n        status: response.status,\n      });\n\n      return result;\n    } catch (error) {\n      const duration = Date.now() - startTime;\n\n      // Network errors are expected for CORS issues, but the function still gets warmed up\n      if (error.name === 'TypeError' && error.message.includes('Failed to fetch')) {\n        medicalLogger.info(`${name} API warmup encountered CORS (expected), function still warmed`, {\n          category: 'WARMUP',\n          duration,\n        });\n\n        return {\n          success: true, // Consider CORS as successful warmup\n          status: 'cors-blocked',\n          duration,\n          message: `${name} API warmed (CORS blocked but function activated)`,\n          timestamp: new Date().toISOString(),\n        };\n      }\n\n      medicalLogger.warn(`Failed to warm up ${name} API`, {\n        category: 'WARMUP',\n        error: error.message,\n        duration,\n      });\n\n      return {\n        success: false,\n        error: error.message,\n        duration,\n        timestamp: new Date().toISOString(),\n      };\n    }\n  }\n\n  /**\n   * Complete the warmup process and log results\n   */\n  completeWarmup() {\n    this.isWarming = false;\n\n    const summary = {\n      total: this.warmupAttempts,\n      successful: this.successfulWarmups,\n      failed: this.warmupAttempts - this.successfulWarmups,\n      results: this.warmupResults,\n    };\n\n    medicalLogger.info('API warmup process completed', {\n      category: 'WARMUP',\n      summary,\n    });\n\n    // Dispatch custom event for UI feedback\n    if (typeof window !== 'undefined') {\n      window.dispatchEvent(new CustomEvent('api-warmup-complete', {\n        detail: summary,\n      }));\n    }\n  }\n\n  /**\n   * Get current warmup status\n   * @returns {Object} Current status and results\n   */\n  getWarmupStatus() {\n    return {\n      isWarming: this.isWarming,\n      attempts: this.warmupAttempts,\n      successful: this.successfulWarmups,\n      results: this.warmupResults,\n    };\n  }\n\n  /**\n   * Quick warmup for critical APIs only (ICH prediction endpoints)\n   * @returns {Promise<Object>} Results of critical API warmup\n   */\n  async warmupCriticalAPIs() {\n    const criticalAPIs = ['comaIch', 'limitedIch'];\n\n    medicalLogger.info('Starting critical API warmup', {\n      category: 'WARMUP',\n      apis: criticalAPIs,\n    });\n\n    const results = {};\n\n    for (const apiName of criticalAPIs) {\n      if (API_ENDPOINTS[apiName]) {\n        results[apiName] = await this.warmupSingleAPI(\n          apiName,\n          API_ENDPOINTS[apiName],\n          WARMUP_PAYLOADS[apiName],\n        );\n      }\n    }\n\n    medicalLogger.info('Critical API warmup completed', {\n      category: 'WARMUP',\n      results,\n    });\n\n    return results;\n  }\n}\n\n// Create singleton instance\nexport const apiWarmupService = new APIWarmupService();\n\n/**\n * Initialize API warmup on app startup\n * @param {Object} options - Warmup options\n * @param {boolean} options.background - Run in background (default: true)\n * @param {boolean} options.criticalOnly - Only warm critical APIs (default: false)\n * @returns {Promise<Object>} Warmup results\n */\nexport async function initializeAPIWarmup(options = {}) {\n  const { background = true, criticalOnly = false } = options;\n\n  try {\n    if (criticalOnly) {\n      return await apiWarmupService.warmupCriticalAPIs();\n    }\n    return await apiWarmupService.warmupAllAPIs(background);\n  } catch (error) {\n    medicalLogger.error('API warmup initialization failed', {\n      category: 'WARMUP',\n      error: error.message,\n    });\n    return { error: error.message };\n  }\n}\n\n/**\n * Warm up APIs before making actual requests (for better UX)\n * @param {Array<string>} apiNames - Names of APIs to warm up\n * @returns {Promise<Object>} Warmup results\n */\nexport async function warmupSpecificAPIs(apiNames) {\n  const results = {};\n\n  for (const apiName of apiNames) {\n    if (API_ENDPOINTS[apiName]) {\n      results[apiName] = await apiWarmupService.warmupSingleAPI(\n        apiName,\n        API_ENDPOINTS[apiName],\n        WARMUP_PAYLOADS[apiName],\n      );\n    } else {\n      results[apiName] = {\n        success: false,\n        error: `Unknown API: ${apiName}`,\n        timestamp: new Date().toISOString(),\n      };\n    }\n  }\n\n  return results;\n}\n\n// Auto-start warmup when module loads (background mode)\nif (typeof window !== 'undefined') {\n  // Only in browser environment\n  setTimeout(() => {\n    initializeAPIWarmup({ background: true, criticalOnly: false });\n  }, 1000); // Start warmup 1 second after page load\n}\n","/**\n * GPS Tracking Service\n * Handles continuous location tracking for ambulance with robust error handling\n */\nimport { KIOSK_CONFIG } from '../config.js';\n\nexport class GPSTracker {\n  constructor() {\n    this.watchId = null;\n    this.isTracking = false;\n    this.lastLocation = null;\n    this.onLocationUpdate = null;\n    this.onError = null;\n    this.updateInterval = KIOSK_CONFIG.gpsUpdateInterval;\n    this.lastUpdateTime = null;\n  }\n\n  /**\n   * Check if geolocation is available\n   */\n  isAvailable() {\n    return 'geolocation' in navigator;\n  }\n\n  /**\n   * Get current location once\n   * @returns {Promise<{latitude, longitude, accuracy, timestamp}>}\n   */\n  async getCurrentLocation() {\n    if (!this.isAvailable()) {\n      throw new Error('Geolocation not available in this browser');\n    }\n\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const location = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n            accuracy: position.coords.accuracy,\n            timestamp: new Date(position.timestamp).toISOString(),\n          };\n\n          this.lastLocation = location;\n          resolve(location);\n        },\n        (error) => {\n          reject(this.handleGeolocationError(error));\n        },\n        {\n          enableHighAccuracy: KIOSK_CONFIG.gpsHighAccuracy,\n          timeout: KIOSK_CONFIG.gpsTimeout,\n          maximumAge: KIOSK_CONFIG.gpsMaxAge,\n        },\n      );\n    });\n  }\n\n  /**\n   * Start continuous location tracking\n   * @param {Function} onUpdate - Callback for location updates\n   * @param {Function} onErrorCallback - Callback for errors\n   */\n  start(onUpdate, onErrorCallback) {\n    if (!this.isAvailable()) {\n      const error = new Error('Geolocation not available');\n      if (onErrorCallback) {\n        onErrorCallback(error);\n      }\n      return false;\n    }\n\n    if (this.isTracking) {\n      console.warn('[GPSTracker] Already tracking');\n      return true;\n    }\n\n    this.onLocationUpdate = onUpdate;\n    this.onError = onErrorCallback;\n\n    // Start watching position\n    this.watchId = navigator.geolocation.watchPosition(\n      (position) => {\n        const now = Date.now();\n\n        // Throttle updates to configured interval\n        if (this.lastUpdateTime && now - this.lastUpdateTime < this.updateInterval) {\n          return;\n        }\n\n        this.lastUpdateTime = now;\n\n        const location = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n          accuracy: position.coords.accuracy,\n          timestamp: new Date(position.timestamp).toISOString(),\n        };\n\n        this.lastLocation = location;\n\n        console.log('[GPSTracker] Location update:', {\n          lat: location.latitude.toFixed(6),\n          lng: location.longitude.toFixed(6),\n          accuracy: `${location.accuracy.toFixed(0)}m`,\n        });\n\n        if (this.onLocationUpdate) {\n          this.onLocationUpdate(location);\n        }\n      },\n      (error) => {\n        const errorInfo = this.handleGeolocationError(error);\n        console.error('[GPSTracker] Error:', errorInfo);\n\n        if (this.onError) {\n          this.onError(errorInfo);\n        }\n      },\n      {\n        enableHighAccuracy: KIOSK_CONFIG.gpsHighAccuracy,\n        timeout: KIOSK_CONFIG.gpsTimeout,\n        maximumAge: KIOSK_CONFIG.gpsMaxAge,\n      },\n    );\n\n    this.isTracking = true;\n    console.log('[GPSTracker] Started tracking');\n    return true;\n  }\n\n  /**\n   * Stop tracking\n   */\n  stop() {\n    if (this.watchId !== null) {\n      navigator.geolocation.clearWatch(this.watchId);\n      this.watchId = null;\n      this.isTracking = false;\n      console.log('[GPSTracker] Stopped tracking');\n    }\n  }\n\n  /**\n   * Get tracking status\n   */\n  getStatus() {\n    return {\n      isTracking: this.isTracking,\n      hasLocation: this.lastLocation !== null,\n      lastLocation: this.lastLocation,\n      lastUpdateTime: this.lastUpdateTime ? new Date(this.lastUpdateTime).toISOString() : null,\n    };\n  }\n\n  /**\n   * Handle geolocation errors\n   */\n  handleGeolocationError(error) {\n    const errorMap = {\n      [error.PERMISSION_DENIED]: {\n        code: 'PERMISSION_DENIED',\n        message: 'Location permission denied. Please enable location access.',\n        userMessage: 'Bitte aktivieren Sie die Standortfreigabe / Please enable location access',\n        recoverable: false,\n      },\n      [error.POSITION_UNAVAILABLE]: {\n        code: 'POSITION_UNAVAILABLE',\n        message: 'Location information unavailable.',\n        userMessage: 'Standort nicht verfügbar / Location unavailable',\n        recoverable: true,\n      },\n      [error.TIMEOUT]: {\n        code: 'TIMEOUT',\n        message: 'Location request timed out.',\n        userMessage: 'Standortabfrage Zeitüberschreitung / Location timeout',\n        recoverable: true,\n      },\n    };\n\n    return (\n      errorMap[error.code] || {\n        code: 'UNKNOWN',\n        message: error.message || 'Unknown GPS error',\n        userMessage: 'GPS-Fehler / GPS error',\n        recoverable: true,\n      }\n    );\n  }\n\n  /**\n   * Request permission (modern browsers)\n   */\n  async requestPermission() {\n    if (!('permissions' in navigator)) {\n      // Fallback: try to get location (which triggers permission prompt)\n      try {\n        await this.getCurrentLocation();\n        return 'granted';\n      } catch (error) {\n        return 'denied';\n      }\n    }\n\n    try {\n      const result = await navigator.permissions.query({ name: 'geolocation' });\n      return result.state; // 'granted', 'denied', 'prompt'\n    } catch (error) {\n      console.warn('[GPSTracker] Permission query not supported');\n      return 'prompt';\n    }\n  }\n}\n\n// Export singleton instance\nexport const gpsTracker = new GPSTracker();\n","/**\n * Hospital Selector Component\n * Shows nearby hospitals for case transmission\n */\nimport { COMPREHENSIVE_HOSPITAL_DATABASE } from '../../data/comprehensive-stroke-centers.js';\nimport { gpsTracker } from '../../services/gps-tracker.js';\n\nexport class HospitalSelector {\n  constructor() {\n    this.currentLocation = null;\n    this.hospitals = [];\n    this.selectedHospital = null;\n    this.onSelect = null;\n  }\n\n  /**\n   * Show hospital selector modal\n   * @param {Function} onSelectCallback - Callback when hospital is selected\n   * @returns {Promise<void>}\n   */\n  async show(onSelectCallback) {\n    this.onSelect = onSelectCallback;\n\n    try {\n      // Get current location\n      this.currentLocation = await gpsTracker.getCurrentLocation();\n\n      // Get nearby hospitals\n      this.hospitals = this.getNearbyHospitals(this.currentLocation, 50); // 50km radius\n\n      // Render modal\n      this.render();\n\n      // Add event listeners\n      this.attachEventListeners();\n    } catch (error) {\n      console.error('[HospitalSelector] Error:', error);\n      this.showError(error.message);\n    }\n  }\n\n  /**\n   * Get hospitals within radius\n   */\n  getNearbyHospitals(location, radiusKm) {\n    const allHospitals = [];\n\n    // Collect all hospitals from all states\n    Object.values(COMPREHENSIVE_HOSPITAL_DATABASE).forEach((state) => {\n      if (state.neurosurgicalCenters) {\n        allHospitals.push(...state.neurosurgicalCenters);\n      }\n      if (state.comprehensiveStrokeCenters) {\n        allHospitals.push(...state.comprehensiveStrokeCenters);\n      }\n      if (state.regionalStrokeUnits) {\n        allHospitals.push(...state.regionalStrokeUnits);\n      }\n    });\n\n    // Calculate distance and filter\n    const hospitalsWithDistance = allHospitals\n      .map((hospital) => ({\n        ...hospital,\n        distance: this.calculateDistance(\n          location.latitude,\n          location.longitude,\n          hospital.coordinates.lat,\n          hospital.coordinates.lng,\n        ),\n      }))\n      .filter((h) => h.distance <= radiusKm)\n      .sort((a, b) => {\n        // Sort by capability first, then distance\n        const capabilityScore = (h) => {\n          let score = 0;\n          if (h.neurosurgery) {\n            score += 100;\n          }\n          if (h.thrombectomy) {\n            score += 50;\n          }\n          if (h.thrombolysis) {\n            score += 25;\n          }\n          return score;\n        };\n\n        const scoreDiff = capabilityScore(b) - capabilityScore(a);\n        if (scoreDiff !== 0) {\n          return scoreDiff;\n        }\n\n        return a.distance - b.distance;\n      });\n\n    return hospitalsWithDistance.slice(0, 10); // Top 10\n  }\n\n  /**\n   * Calculate distance (Haversine)\n   */\n  calculateDistance(lat1, lon1, lat2, lon2) {\n    const R = 6371; // Earth radius in km\n    const dLat = this.toRad(lat2 - lat1);\n    const dLon = this.toRad(lon2 - lon1);\n\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2)\n      + Math.cos(this.toRad(lat1))\n        * Math.cos(this.toRad(lat2))\n        * Math.sin(dLon / 2)\n        * Math.sin(dLon / 2);\n\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return Math.round(R * c * 10) / 10; // Round to 1 decimal\n  }\n\n  toRad(degrees) {\n    return (degrees * Math.PI) / 180;\n  }\n\n  /**\n   * Render the modal\n   */\n  render() {\n    const modalHTML = `\n      <div class=\"hospital-selector-overlay\" id=\"hospitalSelectorModal\">\n        <div class=\"hospital-selector-modal\">\n          <div class=\"modal-header\">\n            <h2>🏥 Zielkrankenhaus auswählen / Select Hospital</h2>\n            <button class=\"close-button\" id=\"closeHospitalSelector\">✕</button>\n          </div>\n\n          <div class=\"current-location\">\n            <p>📍 Aktueller Standort / Current Location:</p>\n            <p class=\"location-coords\">\n              ${this.currentLocation.latitude.toFixed(6)}, ${this.currentLocation.longitude.toFixed(6)}\n            </p>\n          </div>\n\n          <div class=\"hospital-list\">\n            ${this.hospitals.length > 0\n    ? this.hospitals.map((hospital, index) => this.renderHospitalCard(hospital, index)).join('')\n    : '<p class=\"no-hospitals\">Keine Krankenhäuser in der Nähe gefunden / No nearby hospitals found</p>'\n}\n          </div>\n\n          <div class=\"modal-footer\">\n            <button class=\"secondary\" id=\"cancelHospitalSelect\">Abbrechen / Cancel</button>\n          </div>\n        </div>\n      </div>\n    `;\n\n    // Add to body\n    const container = document.createElement('div');\n    container.innerHTML = modalHTML;\n    document.body.appendChild(container.firstElementChild);\n  }\n\n  /**\n   * Render individual hospital card\n   */\n  renderHospitalCard(hospital, index) {\n    const capabilities = [];\n    if (hospital.neurosurgery) {\n      capabilities.push('<span class=\"capability-badge neurosurgery\" title=\"Neurosurgery\">🧠 NS</span>');\n    }\n    if (hospital.thrombectomy) {\n      capabilities.push('<span class=\"capability-badge thrombectomy\" title=\"Thrombectomy\">🩸 TE</span>');\n    }\n    if (hospital.thrombolysis) {\n      capabilities.push('<span class=\"capability-badge thrombolysis\" title=\"Thrombolysis\">💉 TL</span>');\n    }\n\n    return `\n      <div class=\"hospital-card ${index === 0 ? 'recommended' : ''}\" data-hospital-index=\"${index}\">\n        <div class=\"hospital-header\">\n          <div class=\"hospital-name-section\">\n            <h3>${hospital.name}</h3>\n            ${index === 0 ? '<span class=\"recommended-badge\">Empfohlen / Recommended</span>' : ''}\n          </div>\n          <div class=\"hospital-distance\">\n            <span class=\"distance-value\">${hospital.distance}</span>\n            <span class=\"distance-unit\">km</span>\n          </div>\n        </div>\n\n        <div class=\"hospital-details\">\n          <p class=\"address\">📍 ${hospital.address}</p>\n          <p class=\"phone\">📞 ${hospital.emergency || hospital.phone}</p>\n\n          <div class=\"capabilities\">\n            ${capabilities.join('')}\n            ${hospital.network ? `<span class=\"network-badge\">${hospital.network}</span>` : ''}\n          </div>\n\n          <div class=\"hospital-meta\">\n            <span>${hospital.beds} Betten / Beds</span>\n          </div>\n        </div>\n\n        <button class=\"select-hospital-button\" data-hospital-index=\"${index}\">\n          Auswählen / Select →\n        </button>\n      </div>\n    `;\n  }\n\n  /**\n   * Attach event listeners\n   */\n  attachEventListeners() {\n    const modal = document.getElementById('hospitalSelectorModal');\n    if (!modal) {\n      return;\n    }\n\n    // Close button\n    const closeButton = document.getElementById('closeHospitalSelector');\n    if (closeButton) {\n      closeButton.addEventListener('click', () => this.close());\n    }\n\n    // Cancel button\n    const cancelButton = document.getElementById('cancelHospitalSelect');\n    if (cancelButton) {\n      cancelButton.addEventListener('click', () => this.close());\n    }\n\n    // Select hospital buttons\n    const selectButtons = modal.querySelectorAll('.select-hospital-button');\n    selectButtons.forEach((button) => {\n      button.addEventListener('click', (e) => {\n        const index = parseInt(e.target.dataset.hospitalIndex);\n        this.selectHospital(index);\n      });\n    });\n\n    // Click outside to close\n    modal.addEventListener('click', (e) => {\n      if (e.target === modal) {\n        this.close();\n      }\n    });\n\n    // ESC key to close\n    document.addEventListener('keydown', this.handleEscKey);\n  }\n\n  /**\n   * Handle ESC key\n   */\n  handleEscKey = (e) => {\n    if (e.key === 'Escape') {\n      this.close();\n    }\n  };\n\n  /**\n   * Select hospital\n   */\n  selectHospital(index) {\n    this.selectedHospital = this.hospitals[index];\n\n    console.log('[HospitalSelector] Hospital selected:', this.selectedHospital.name);\n\n    // Call callback\n    if (this.onSelect) {\n      this.onSelect(this.selectedHospital);\n    }\n\n    // Close modal\n    this.close();\n  }\n\n  /**\n   * Show error\n   */\n  showError(message) {\n    const errorHTML = `\n      <div class=\"hospital-selector-overlay\" id=\"hospitalSelectorModal\">\n        <div class=\"hospital-selector-modal error\">\n          <div class=\"modal-header\">\n            <h2>⚠️ Fehler / Error</h2>\n            <button class=\"close-button\" id=\"closeHospitalSelector\">✕</button>\n          </div>\n\n          <div class=\"error-message\">\n            <p>${message}</p>\n            <p class=\"error-hint\">Bitte überprüfen Sie Ihre Standortfreigabe / Please check your location permissions</p>\n          </div>\n\n          <div class=\"modal-footer\">\n            <button class=\"secondary\" id=\"closeHospitalSelector\">Schließen / Close</button>\n          </div>\n        </div>\n      </div>\n    `;\n\n    const container = document.createElement('div');\n    container.innerHTML = errorHTML;\n    document.body.appendChild(container.firstElementChild);\n\n    // Attach close listener\n    document.getElementById('closeHospitalSelector')?.addEventListener('click', () => this.close());\n  }\n\n  /**\n   * Close modal\n   */\n  close() {\n    const modal = document.getElementById('hospitalSelectorModal');\n    if (modal) {\n      modal.remove();\n    }\n\n    // Remove ESC listener\n    document.removeEventListener('keydown', this.handleEscKey);\n  }\n}\n\n// Export singleton\nexport const hospitalSelector = new HospitalSelector();\n","/**\n * ETA Calculator Service\n * Uses Google Maps Directions API to calculate accurate ETA with traffic\n */\nimport { KIOSK_CONFIG } from '../config.js';\n\nexport class ETACalculator {\n  constructor() {\n    this.apiKey = KIOSK_CONFIG.googleMapsApiKey;\n    this.directionsService = null;\n    this.mapsLoaded = false;\n  }\n\n  /**\n   * Load Google Maps API\n   */\n  async loadGoogleMaps() {\n    if (this.mapsLoaded && window.google && window.google.maps) {\n      return true;\n    }\n\n    if (this.apiKey === 'YOUR_GOOGLE_MAPS_API_KEY_HERE') {\n      console.warn('[ETACalculator] Google Maps API key not configured, using fallback');\n      return false;\n    }\n\n    return new Promise((resolve) => {\n      // Check if already loaded\n      if (window.google && window.google.maps) {\n        this.mapsLoaded = true;\n        this.directionsService = new google.maps.DirectionsService();\n        resolve(true);\n        return;\n      }\n\n      // Load script\n      const script = document.createElement('script');\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${this.apiKey}&libraries=geometry`;\n      script.async = true;\n      script.defer = true;\n\n      script.onload = () => {\n        this.mapsLoaded = true;\n        this.directionsService = new google.maps.DirectionsService();\n        console.log('[ETACalculator] Google Maps loaded');\n        resolve(true);\n      };\n\n      script.onerror = () => {\n        console.error('[ETACalculator] Failed to load Google Maps');\n        resolve(false);\n      };\n\n      document.head.appendChild(script);\n    });\n  }\n\n  /**\n   * Calculate ETA using Google Maps Directions API\n   * @param {Object} origin - {lat, lng}\n   * @param {Object} destination - {lat, lng}\n   * @returns {Promise<{duration, distance, arrivalTime, route}>}\n   */\n  async calculateETA(origin, destination) {\n    // Try Google Maps first\n    if (await this.loadGoogleMaps()) {\n      try {\n        return await this.calculateGoogleMapsETA(origin, destination);\n      } catch (error) {\n        console.warn('[ETACalculator] Google Maps failed, falling back:', error);\n      }\n    }\n\n    // Fallback to simple calculation\n    return this.calculateSimpleETA(origin, destination);\n  }\n\n  /**\n   * Calculate ETA using Google Maps Directions API\n   */\n  async calculateGoogleMapsETA(origin, destination) {\n    return new Promise((resolve, reject) => {\n      this.directionsService.route(\n        {\n          origin: new google.maps.LatLng(origin.lat, origin.lng),\n          destination: new google.maps.LatLng(destination.lat, destination.lng),\n          travelMode: google.maps.TravelMode.DRIVING,\n          drivingOptions: {\n            departureTime: new Date(),\n            trafficModel: google.maps.TrafficModel.PESSIMISTIC, // Account for traffic\n          },\n        },\n        (result, status) => {\n          if (status === google.maps.DirectionsStatus.OK) {\n            const route = result.routes[0];\n            const leg = route.legs[0];\n\n            // Base duration from Google Maps\n            const baseDuration = leg.duration.value; // seconds\n\n            // Emergency vehicles are typically 30% faster than normal traffic\n            const emergencyMultiplier = 0.7;\n            const emergencyDuration = Math.round(baseDuration * emergencyMultiplier);\n\n            const eta = {\n              duration: Math.round(emergencyDuration / 60), // minutes\n              distance: Math.round(leg.distance.value / 1000), // km\n              arrivalTime: new Date(Date.now() + emergencyDuration * 1000).toISOString(),\n              route: this.encodeRoute(route),\n              source: 'google_maps',\n            };\n\n            console.log('[ETACalculator] Google Maps ETA:', {\n              duration: `${eta.duration} min`,\n              distance: `${eta.distance} km`,\n            });\n\n            resolve(eta);\n          } else {\n            reject(new Error(`Google Maps Directions failed: ${status}`));\n          }\n        },\n      );\n    });\n  }\n\n  /**\n   * Fallback: Simple distance-based ETA calculation\n   */\n  calculateSimpleETA(origin, destination) {\n    const distance = this.calculateDistance(origin.lat, origin.lng, destination.lat, destination.lng);\n\n    // Emergency vehicle average speed: 80 km/h in urban, 100 km/h highway\n    // Use conservative 80 km/h\n    const averageSpeed = 80; // km/h\n    const duration = Math.round((distance / averageSpeed) * 60); // minutes\n\n    const eta = {\n      duration,\n      distance: Math.round(distance * 10) / 10, // Round to 1 decimal\n      arrivalTime: new Date(Date.now() + duration * 60 * 1000).toISOString(),\n      route: null,\n      source: 'estimated',\n    };\n\n    console.log('[ETACalculator] Simple ETA:', {\n      duration: `${eta.duration} min`,\n      distance: `${eta.distance} km`,\n    });\n\n    return eta;\n  }\n\n  /**\n   * Calculate distance using Haversine formula\n   * @returns {number} Distance in kilometers\n   */\n  calculateDistance(lat1, lon1, lat2, lon2) {\n    const R = 6371; // Earth's radius in km\n    const dLat = this.toRad(lat2 - lat1);\n    const dLon = this.toRad(lon2 - lon1);\n\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2)\n      + Math.cos(this.toRad(lat1)) * Math.cos(this.toRad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  }\n\n  /**\n   * Convert degrees to radians\n   */\n  toRad(degrees) {\n    return (degrees * Math.PI) / 180;\n  }\n\n  /**\n   * Encode route for transmission (simplified polyline)\n   */\n  encodeRoute(route) {\n    if (!route || !route.overview_path) {\n      return null;\n    }\n\n    // Sample the route (every 10th point to keep payload small)\n    const path = route.overview_path;\n    const sampledPath = [];\n\n    for (let i = 0; i < path.length; i += 10) {\n      sampledPath.push({\n        lat: path[i].lat(),\n        lng: path[i].lng(),\n      });\n    }\n\n    // Always include the last point\n    if (path.length > 0) {\n      const lastPoint = path[path.length - 1];\n      sampledPath.push({\n        lat: lastPoint.lat(),\n        lng: lastPoint.lng(),\n      });\n    }\n\n    return sampledPath;\n  }\n\n  /**\n   * Update ETA based on new location\n   * @param {Object} currentLocation - {lat, lng}\n   * @param {Object} destination - {lat, lng}\n   * @param {Object} previousETA - Previous ETA object\n   * @returns {Promise<Object>} Updated ETA\n   */\n  async updateETA(currentLocation, destination, previousETA) {\n    // Recalculate ETA\n    const newETA = await this.calculateETA(currentLocation, destination);\n\n    // Check if significantly different (>2 minutes)\n    if (previousETA && Math.abs(newETA.duration - previousETA.duration) > 2) {\n      console.log('[ETACalculator] ETA changed significantly:', {\n        previous: `${previousETA.duration} min`,\n        new: `${newETA.duration} min`,\n      });\n    }\n\n    return newETA;\n  }\n}\n\n// Export singleton instance\nexport const etaCalculator = new ETACalculator();\n","/**\n * Case Transmitter Service\n * Handles sending cases to hospital kiosk and continuous location updates\n */\nimport { KIOSK_CONFIG } from '../config.js';\nimport { gpsTracker } from './gps-tracker.js';\nimport { etaCalculator } from './eta-calculator.js';\n\nexport class CaseTransmitter {\n  constructor() {\n    this.baseUrl = KIOSK_CONFIG.caseSharingUrl;\n    this.activeCase = null;\n    this.updateInterval = null;\n    this.retryCount = 0;\n    this.maxRetries = 3;\n  }\n\n  /**\n   * Create and send case to hospital\n   * @param {Object} results - Assessment results\n   * @param {Object} formData - Patient form data\n   * @param {string} moduleType - Module type (coma, limited, full)\n   * @param {Object} hospital - Selected hospital\n   * @returns {Promise<{success, caseId}>}\n   */\n  async sendCase(results, formData, moduleType, hospital) {\n    try {\n      console.log('[CaseTransmitter] Sending case to hospital:', hospital.name);\n\n      // Get current location\n      const currentLocation = await gpsTracker.getCurrentLocation();\n\n      // Calculate ETA to hospital\n      const eta = await etaCalculator.calculateETA(\n        { lat: currentLocation.latitude, lng: currentLocation.longitude },\n        { lat: hospital.coordinates.lat, lng: hospital.coordinates.lng },\n      );\n\n      // Prepare case data\n      const caseData = {\n        results,\n        formData: this.sanitizeFormData(formData),\n        moduleType,\n        location: {\n          lat: currentLocation.latitude,\n          lng: currentLocation.longitude,\n          accuracy: currentLocation.accuracy,\n          timestamp: currentLocation.timestamp,\n        },\n        destination: {\n          lat: hospital.coordinates.lat,\n          lng: hospital.coordinates.lng,\n        },\n        hospitalId: hospital.id,\n        hospitalName: hospital.name,\n        estimatedArrival: eta.arrivalTime,\n        distance: eta.distance,\n        duration: eta.duration,\n        ambulanceId: this.generateAmbulanceId(),\n      };\n\n      // Send to cloud function\n      const response = await this.sendWithRetry(`${this.baseUrl}/store-case`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(caseData),\n      });\n\n      if (!response.success) {\n        throw new Error(response.error || 'Failed to store case');\n      }\n\n      console.log('[CaseTransmitter] Case created:', response.caseId);\n\n      // Store active case ID\n      this.activeCase = {\n        caseId: response.caseId,\n        hospital,\n        startTime: Date.now(),\n      };\n\n      // Start GPS tracking\n      this.startLocationTracking();\n\n      return {\n        success: true,\n        caseId: response.caseId,\n        eta: eta.duration,\n      };\n    } catch (error) {\n      console.error('[CaseTransmitter] Failed to send case:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Start continuous location tracking\n   */\n  startLocationTracking() {\n    if (!this.activeCase) {\n      return;\n    }\n\n    console.log('[CaseTransmitter] Starting location tracking for case:', this.activeCase.caseId);\n\n    // Start GPS tracking with callback\n    gpsTracker.start(\n      async (location) => {\n        await this.updateLocation(location);\n      },\n      (error) => {\n        console.error('[CaseTransmitter] GPS error:', error);\n        // Continue tracking even with errors (will use last known location)\n      },\n    );\n  }\n\n  /**\n   * Update location to cloud\n   */\n  async updateLocation(location) {\n    if (!this.activeCase) {\n      return;\n    }\n\n    try {\n      // Recalculate ETA\n      const eta = await etaCalculator.calculateETA(\n        { lat: location.latitude, lng: location.longitude },\n        { lat: this.activeCase.hospital.coordinates.lat, lng: this.activeCase.hospital.coordinates.lng },\n      );\n\n      // Send update to cloud\n      const updateData = {\n        caseId: this.activeCase.caseId,\n        location: {\n          lat: location.latitude,\n          lng: location.longitude,\n          accuracy: location.accuracy,\n          timestamp: location.timestamp,\n        },\n        estimatedArrival: eta.arrivalTime,\n        distance: eta.distance,\n        duration: eta.duration,\n      };\n\n      const response = await this.sendWithRetry(`${this.baseUrl}/update-location`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(updateData),\n      });\n\n      if (response.success) {\n        console.log('[CaseTransmitter] Location updated:', {\n          eta: `${eta.duration} min`,\n          distance: `${eta.distance} km`,\n        });\n        this.retryCount = 0; // Reset retry counter on success\n      }\n    } catch (error) {\n      console.error('[CaseTransmitter] Failed to update location:', error);\n      // Don't throw - continue tracking even if update fails\n    }\n  }\n\n  /**\n   * Stop tracking (when arrived)\n   */\n  stopTracking() {\n    if (this.activeCase) {\n      console.log('[CaseTransmitter] Stopping tracking for case:', this.activeCase.caseId);\n\n      // Stop GPS\n      gpsTracker.stop();\n\n      // Mark as arrived\n      this.markArrived(this.activeCase.caseId).catch((error) => {\n        console.error('[CaseTransmitter] Failed to mark arrived:', error);\n      });\n\n      // Clear active case\n      this.activeCase = null;\n    }\n  }\n\n  /**\n   * Mark case as arrived\n   */\n  async markArrived(caseId) {\n    try {\n      const response = await this.sendWithRetry(`${this.baseUrl}/mark-arrived`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ caseId }),\n      });\n\n      console.log('[CaseTransmitter] Case marked as arrived');\n      return response;\n    } catch (error) {\n      console.error('[CaseTransmitter] Failed to mark arrived:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Send request with retry logic\n   */\n  async sendWithRetry(url, options, attempt = 1) {\n    try {\n      const response = await fetch(url, {\n        ...options,\n        timeout: 10000, // 10 second timeout\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      if (attempt < this.maxRetries) {\n        console.warn(`[CaseTransmitter] Retry ${attempt}/${this.maxRetries}:`, error.message);\n\n        // Exponential backoff: 1s, 2s, 4s\n        await this.sleep(1000 * Math.pow(2, attempt - 1));\n\n        return this.sendWithRetry(url, options, attempt + 1);\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * Sanitize form data (remove any PII if present)\n   */\n  sanitizeFormData(formData) {\n    // Create a copy\n    const sanitized = { ...formData };\n\n    // Remove any fields that might contain PII\n    const piiFields = ['name', 'patientName', 'id', 'patientId', 'ssn', 'insurance'];\n\n    piiFields.forEach((field) => {\n      if (sanitized[field]) {\n        delete sanitized[field];\n      }\n    });\n\n    return sanitized;\n  }\n\n  /**\n   * Generate random ambulance ID\n   */\n  generateAmbulanceId() {\n    const prefix = 'RTW';\n    const region = ['M', 'K', 'S', 'B'][Math.floor(Math.random() * 4)]; // München, Köln, Stuttgart, Berlin\n    const number = Math.floor(1000 + Math.random() * 9000);\n    return `${prefix}-${region}-${number}`;\n  }\n\n  /**\n   * Get current tracking status\n   */\n  getStatus() {\n    if (!this.activeCase) {\n      return { isTracking: false };\n    }\n\n    const gpsStatus = gpsTracker.getStatus();\n\n    return {\n      isTracking: true,\n      caseId: this.activeCase.caseId,\n      hospital: this.activeCase.hospital.name,\n      startTime: new Date(this.activeCase.startTime).toISOString(),\n      duration: Math.floor((Date.now() - this.activeCase.startTime) / 1000 / 60), // minutes\n      gpsActive: gpsStatus.isTracking,\n      hasLocation: gpsStatus.hasLocation,\n      lastUpdate: gpsStatus.lastUpdateTime,\n    };\n  }\n\n  /**\n   * Utility: sleep\n   */\n  sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n}\n\n// Export singleton instance\nexport const caseTransmitter = new CaseTransmitter();\n","/**\n * Kiosk Integration Handlers\n * Handles sending cases to hospital kiosk and GPS tracking\n */\nimport { hospitalSelector } from '../ui/components/hospital-selector.js';\nimport { caseTransmitter } from '../services/case-transmitter.js';\nimport { store } from '../state/store.js';\n\n/**\n * Initialize kiosk handlers\n */\nexport function initializeKioskHandlers() {\n  // Listen for send to hospital button\n  document.addEventListener('click', async (e) => {\n    // Use closest() to handle clicks on button content (emoji, text)\n    const kioskButton = e.target.closest('#shareToKiosk');\n    if (kioskButton) {\n      await handleSendToHospital(kioskButton);\n    }\n\n    // Stop tracking button\n    const stopButton = e.target.closest('#stopTracking');\n    if (stopButton) {\n      handleStopTracking();\n    }\n  });\n\n  console.log('[KioskHandlers] Kiosk handlers initialized');\n}\n\n/**\n * Handle send to hospital button click\n */\nasync function handleSendToHospital(button) {\n  try {\n    // Check if already tracking\n    const status = caseTransmitter.getStatus();\n    if (status.isTracking) {\n      const confirmStop = confirm(\n        'Ein Case wird bereits verfolgt. Möchten Sie diesen stoppen und einen neuen senden?\\n\\n' +\n        'A case is already being tracked. Do you want to stop it and send a new one?',\n      );\n\n      if (!confirmStop) {\n        return;\n      }\n\n      caseTransmitter.stopTracking();\n      // Remove old tracking status if present\n      document.getElementById('trackingStatus')?.remove();\n    }\n\n    // Disable button\n    button.disabled = true;\n    button.classList.add('sending');\n    const originalText = button.textContent;\n    button.textContent = '⏳ Krankenhaus auswählen... / Selecting Hospital...';\n\n    // Show hospital selector\n    hospitalSelector.show(async (hospital) => {\n      try {\n        button.textContent = '📡 Sende Case... / Sending Case...';\n\n        const state = store.getState();\n        const { results, formData } = state;\n\n        // Validate results exist\n        if (!results || !results.ich) {\n          throw new Error('No assessment results available');\n        }\n\n        // Detect module type\n        const moduleType = detectModuleType(results);\n\n        console.log('[KioskHandlers] Sending case:', {\n          moduleType,\n          hospital: hospital.name,\n          ichRisk: Math.round(results.ich.probability * 100),\n        });\n\n        // Send case\n        const response = await caseTransmitter.sendCase(results, formData, moduleType, hospital);\n\n        // Success - update button\n        button.classList.remove('sending');\n        button.classList.add('success');\n        button.textContent = `✓ Gesendet an / Sent to ${hospital.name}`;\n        button.disabled = false;\n\n        // Show tracking status\n        showTrackingStatus(response.caseId, hospital, response.eta);\n\n        // Reset button after 5 seconds\n        setTimeout(() => {\n          button.classList.remove('success');\n          button.textContent = originalText;\n        }, 5000);\n      } catch (error) {\n        console.error('[KioskHandlers] Failed to send case:', error);\n        handleSendError(button, originalText, error);\n      }\n    });\n  } catch (error) {\n    console.error('[KioskHandlers] Hospital selection error:', error);\n    button.classList.remove('sending');\n    button.textContent = '❌ Fehler / Error - Try Again';\n    button.disabled = false;\n  }\n}\n\n/**\n * Detect module type from results\n */\nfunction detectModuleType(results) {\n  if (!results.ich || !results.ich.module) {\n    return 'unknown';\n  }\n\n  const moduleName = results.ich.module.toLowerCase();\n\n  if (moduleName.includes('coma')) {\n    return 'coma';\n  }\n  if (moduleName.includes('limited')) {\n    return 'limited';\n  }\n  if (moduleName.includes('full')) {\n    return 'full';\n  }\n\n  return 'unknown';\n}\n\n/**\n * Show tracking status indicator\n */\nfunction showTrackingStatus(caseId, hospital, eta) {\n  // Remove old tracking status if exists\n  const oldStatus = document.getElementById('trackingStatus');\n  if (oldStatus) {\n    oldStatus.remove();\n  }\n\n  const statusHTML = `\n    <div class=\"tracking-status\" id=\"trackingStatus\">\n      <div class=\"tracking-header\">\n        <div class=\"tracking-title\">\n          <strong>📡 Live-Tracking aktiv / Live Tracking Active</strong>\n          <span class=\"tracking-badge\">GPS aktiv / GPS Active</span>\n        </div>\n        <button class=\"stop-tracking\" id=\"stopTracking\">Stoppen / Stop</button>\n      </div>\n\n      <div class=\"tracking-info\">\n        <div class=\"tracking-detail\">\n          <span class=\"detail-label\">Case ID:</span>\n          <span class=\"detail-value\">${caseId}</span>\n        </div>\n        <div class=\"tracking-detail\">\n          <span class=\"detail-label\">Ziel / Destination:</span>\n          <span class=\"detail-value\">${hospital.name}</span>\n        </div>\n        <div class=\"tracking-detail\">\n          <span class=\"detail-label\">Entfernung / Distance:</span>\n          <span class=\"detail-value\">${hospital.distance} km</span>\n        </div>\n        <div class=\"tracking-detail\">\n          <span class=\"detail-label\">ETA:</span>\n          <span class=\"detail-value\">${eta} Minuten / Minutes</span>\n        </div>\n      </div>\n\n      <div class=\"tracking-note\">\n        <p>📍 GPS-Position wird alle 30 Sekunden aktualisiert</p>\n        <p>📍 GPS position updates every 30 seconds</p>\n      </div>\n    </div>\n  `;\n\n  // Insert after results actions\n  const resultsActions = document.querySelector('.results-actions');\n  if (resultsActions) {\n    resultsActions.insertAdjacentHTML('afterend', statusHTML);\n\n    // Scroll to tracking status\n    setTimeout(() => {\n      document.getElementById('trackingStatus')?.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n    }, 100);\n  }\n}\n\n/**\n * Handle stop tracking\n */\nfunction handleStopTracking() {\n  const confirmStop = confirm(\n    'Möchten Sie das Live-Tracking beenden?\\n\\n' +\n    'Do you want to stop live tracking?',\n  );\n\n  if (confirmStop) {\n    caseTransmitter.stopTracking();\n\n    const trackingStatus = document.getElementById('trackingStatus');\n    if (trackingStatus) {\n      trackingStatus.style.transition = 'opacity 0.3s ease';\n      trackingStatus.style.opacity = '0';\n\n      setTimeout(() => {\n        trackingStatus.remove();\n      }, 300);\n    }\n\n    console.log('[KioskHandlers] Tracking stopped by user');\n  }\n}\n\n/**\n * Handle send error\n */\nfunction handleSendError(button, originalText, error) {\n  button.classList.remove('sending');\n  button.classList.add('error');\n\n  // Specific error messages\n  let errorMsg = '❌ Fehler / Error';\n\n  if (error.message.includes('GPS') || error.message.includes('location')) {\n    errorMsg = '❌ GPS-Fehler / GPS Error';\n  } else if (error.message.includes('network') || error.message.includes('fetch')) {\n    errorMsg = '❌ Netzwerkfehler / Network Error';\n  }\n\n  button.textContent = errorMsg;\n  button.disabled = false;\n\n  // Reset after 3 seconds\n  setTimeout(() => {\n    button.classList.remove('error');\n    button.textContent = originalText;\n  }, 3000);\n}\n","/**\n * Main Application Entry Point - Clean Modular Architecture\n * iGFAP Stroke Triage Assistant - Production Ready\n *\n * Uses the new modular app-controller.js system for better maintainability\n *\n * @author iGFAP Project Team\n * @contact Deepak Bos <bosdeepak@gmail.com>\n */\n\nimport './styles/app.css';\nimport { createApp } from './core/app-controller.js';\nimport { store } from './state/store.js';\nimport { render } from './ui/render.js';\nimport { safeAsync, ERROR_CATEGORIES, ERROR_SEVERITY } from './utils/error-handler.js';\nimport { initializeAPIWarmup } from './core/api-warmup.js';\nimport { initializeKioskHandlers } from './handlers/kiosk-handlers.js';\nimport { detectKioskMode, loadKioskCase } from './logic/kiosk-loader.js';\n\n/**\n * Application instance\n */\nlet app = null;\n\n/**\n * Initialize the iGFAP Stroke Triage Assistant\n */\nasync function initializeApplication() {\n  return safeAsync(\n    async () => {\n      // Create and initialize the main application\n      app = await createApp();\n\n      // Start API warmup in background to prevent cold starts\n      setTimeout(() => {\n        initializeAPIWarmup({ background: true, criticalOnly: false })\n          .then((result) => {\n            console.info('[Main] API warmup started:', result.status || 'completed');\n          })\n          .catch((error) => {\n            console.warn('[Main] API warmup failed:', error.message);\n          });\n      }, 2000); // Start warmup 2 seconds after app initialization\n\n      // Log successful initialization\n      const status = app.getStatus();\n      const startupEvent = new CustomEvent('appInitialized', {\n        detail: {\n          timestamp: new Date().toISOString(),\n          status,\n          version: '2.1.0',\n          build: 'production',\n        },\n      });\n      document.dispatchEvent(startupEvent);\n\n      return app;\n    },\n    (error) => {\n      // Critical initialization failure\n      handleInitializationFailure(error);\n      throw error;\n    },\n    {\n      category: ERROR_CATEGORIES.RENDERING,\n      severity: ERROR_SEVERITY.CRITICAL,\n      timeout: 30000,\n      context: {\n        operation: 'application_initialization',\n        version: '2.1.0',\n      },\n    },\n  );\n}\n\n/**\n * Handle initialization failure gracefully\n * @param {Error} error - Initialization error\n */\nfunction handleInitializationFailure(error) {\n  // Create emergency fallback UI\n  const container = document.getElementById('appContainer');\n  if (container) {\n    container.innerHTML = `\n      <div style=\"\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        min-height: 50vh;\n        padding: 20px;\n        text-align: center;\n        font-family: system-ui, -apple-system, sans-serif;\n      \">\n        <div style=\"\n          background: #fff3cd;\n          border: 1px solid #ffeaa7;\n          border-radius: 8px;\n          padding: 24px;\n          max-width: 500px;\n          box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n        \">\n          <h2 style=\"color: #856404; margin: 0 0 16px 0;\">\n            ⚠️ Application Initialization Failed\n          </h2>\n          <p style=\"color: #856404; margin: 0 0 16px 0; line-height: 1.5;\">\n            The medical triage system could not start properly.\n            This may be due to a network issue or browser compatibility problem.\n          </p>\n          <button\n            onclick=\"window.location.reload()\"\n            style=\"\n              background: #007bff;\n              color: white;\n              border: none;\n              padding: 12px 24px;\n              border-radius: 6px;\n              font-size: 16px;\n              cursor: pointer;\n              margin-right: 12px;\n            \"\n          >\n            🔄 Reload Application\n          </button>\n          <button\n            onclick=\"window.open('mailto:bosdeepak@gmail.com?subject=iGFAP App Error', '_blank')\"\n            style=\"\n              background: #6c757d;\n              color: white;\n              border: none;\n              padding: 12px 24px;\n              border-radius: 6px;\n              font-size: 16px;\n              cursor: pointer;\n            \"\n          >\n            📧 Report Issue\n          </button>\n        </div>\n        <small style=\"color: #6c757d; margin-top: 20px;\">\n          Error: ${error.message || 'Unknown initialization error'}\n        </small>\n      </div>\n    `;\n  }\n\n  // Log error for debugging\n  const errorEvent = new CustomEvent('appInitializationFailed', {\n    detail: {\n      error: error.message,\n      timestamp: new Date().toISOString(),\n      userAgent: navigator.userAgent.substring(0, 100),\n    },\n  });\n  document.dispatchEvent(errorEvent);\n}\n\n/**\n * Cleanup on page unload\n */\nfunction handlePageUnload() {\n  if (app) {\n    try {\n      app.destroy();\n    } catch (error) {\n      // Cleanup error - continue with unload\n    }\n  }\n}\n\n/**\n * Setup global error handlers\n */\nfunction setupGlobalErrorHandlers() {\n  // Handle page visibility changes (mobile apps, tab switching)\n  document.addEventListener('visibilitychange', () => {\n    if (app && document.visibilityState === 'visible') {\n      // App became visible - validate session\n      const status = app.getStatus();\n      if (!status.isAuthenticated) {\n        window.location.reload();\n      }\n    }\n  });\n\n  // Handle page unload\n  window.addEventListener('beforeunload', handlePageUnload);\n  window.addEventListener('unload', handlePageUnload);\n}\n\n/**\n * Main application startup\n */\nasync function main() {\n  try {\n    // In local preview, make sure no service worker is controlling (avoids stale assets)\n    try {\n      const isLocalPreview = ['localhost', '127.0.0.1', '0.0.0.0'].includes(window.location.hostname) && !(import.meta && import.meta.env && import.meta.env.DEV);\n      if (isLocalPreview && 'serviceWorker' in navigator) {\n        const regs = await navigator.serviceWorker.getRegistrations();\n        for (const reg of regs) {\n          try {\n            await reg.unregister();\n          } catch {}\n        }\n        // Also clear any pending beforeinstallprompt side-effects\n        window.addEventListener('beforeinstallprompt', (e) => {\n          e.preventDefault();\n        });\n      }\n    } catch {}\n\n    // Setup global error handling\n    setupGlobalErrorHandlers();\n\n    // Initialize the application\n    await initializeApplication();\n\n    // Check for kiosk mode and load case data if needed\n    const kioskMode = detectKioskMode();\n    if (kioskMode.isKioskMode) {\n      console.log('[Main] Kiosk mode detected - loading case:', kioskMode.caseId);\n      try {\n        await loadKioskCase(kioskMode.caseId);\n        // Re-render to show the loaded case\n        const container = document.getElementById('appContainer');\n        if (container) {\n          render(container);\n        }\n      } catch (error) {\n        console.error('[Main] Failed to load kiosk case:', error);\n        // Show error message\n        const container = document.getElementById('appContainer');\n        if (container) {\n          container.innerHTML = `\n            <div class=\"container\" style=\"text-align: center; padding: 40px;\">\n              <h2>⚠️ Case Not Found</h2>\n              <p>The requested case could not be loaded.</p>\n              <button onclick=\"window.location.href='https://igfap.eu/kiosk/'\" class=\"primary\">\n                🏠 Return to Case List\n              </button>\n            </div>\n          `;\n        }\n        return; // Don't continue with normal initialization\n      }\n    }\n\n    // Initialize kiosk integration handlers\n    initializeKioskHandlers();\n\n    // Application started successfully\n    const event = new CustomEvent('appReady', {\n      detail: {\n        timestamp: new Date().toISOString(),\n        version: '2.1.0',\n      },\n    });\n    document.dispatchEvent(event);\n  } catch (error) {\n    // Main initialization failed - already handled by handleInitializationFailure\n  }\n}\n\n/**\n * Start the application when DOM is ready\n */\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', main);\n} else {\n  main();\n}\n\n/**\n * Export for debugging and testing\n */\nif (typeof window !== 'undefined') {\n  window.iGFAPApp = {\n    getApp: () => app,\n    getStatus: () => app?.getStatus() || { error: 'App not initialized' },\n    restart: async () => {\n      if (app) {\n        app.destroy();\n      }\n      return initializeApplication();\n    },\n    // Debug helpers\n    getCurrentScreen: () => {\n      try {\n        return store.getState().currentScreen;\n      } catch {\n        return 'unknown';\n      }\n    },\n    forceResults: () => {\n      try {\n        store.navigate('results');\n        const container = document.getElementById('appContainer');\n        if (container) {\n          render(container);\n        }\n        return true;\n      } catch {\n        return false;\n      }\n    },\n  };\n}\n\n/**\n * Export for module systems\n */\nexport { app, initializeApplication, handleInitializationFailure };\n"],"file":"assets/index-BumpFyEC.js"}